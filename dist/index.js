/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 212:
/***/ (function(module, __unused_webpack_exports, __nccwpck_require__) {

(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', 'process', 'path', 'stream', 'events', 'net', 'tty', '@js-joda/core', '@actions/core', 'fs'], factory);
  else if (true)
    factory(module.exports, __nccwpck_require__(765), __nccwpck_require__(622), __nccwpck_require__(413), __nccwpck_require__(614), __nccwpck_require__(631), __nccwpck_require__(867), __nccwpck_require__(112), __nccwpck_require__(127), __nccwpck_require__(747));
  else {}
}(this, function (_, process_0, path, internal, $module$events, $module$net, $module$tty, $module$_js_joda_core, $module$_actions_core, $module$fs) {
  var EventEmitter_1 = $module$events.EventEmitter;
  var Socket_1 = $module$net.Socket;
  var WriteStream_1 = $module$tty.WriteStream;
  var ReadStream_1 = $module$tty.ReadStream;
  var Instant_2 = $module$_js_joda_core.Instant;
  var Duration_1 = $module$_js_joda_core.Duration;
  var Clock_2 = $module$_js_joda_core.Clock;
  var OffsetDateTime_1 = $module$_js_joda_core.OffsetDateTime;
  var ZonedDateTime_1 = $module$_js_joda_core.ZonedDateTime;
  var ZoneId_1 = $module$_js_joda_core.ZoneId;
  var ZoneOffset_2 = $module$_js_joda_core.ZoneOffset;
  var LocalDateTime_1 = $module$_js_joda_core.LocalDateTime;
  var Temporal_1 = $module$_js_joda_core.Temporal;
  var TemporalField_1 = $module$_js_joda_core.TemporalField;
  var TemporalUnit_1 = $module$_js_joda_core.TemporalUnit;
  var TemporalAmount_1 = $module$_js_joda_core.TemporalAmount;
  var TemporalAdjuster_1 = $module$_js_joda_core.TemporalAdjuster;
  var TemporalQuery_1 = $module$_js_joda_core.TemporalQuery;
  var TemporalAccessor_1 = $module$_js_joda_core.TemporalAccessor;
  var DateTimeFormatter_1 = $module$_js_joda_core.DateTimeFormatter;
  var DayOfWeek_1 = $module$_js_joda_core.DayOfWeek;
  var Month_2 = $module$_js_joda_core.Month;
  var ValueRange_1 = $module$_js_joda_core.ValueRange;
  var LocalDate_1 = $module$_js_joda_core.LocalDate;
  var LocalTime_1 = $module$_js_joda_core.LocalTime;
  var OffsetTime_1 = $module$_js_joda_core.OffsetTime;
  var ChronoZonedDateTime_1 = $module$_js_joda_core.ChronoZonedDateTime;
  var ZoneRules_1 = $module$_js_joda_core.ZoneRules;
  var ChronoLocalDateTime_1 = $module$_js_joda_core.ChronoLocalDateTime;
  var IsoChronology_1 = $module$_js_joda_core.IsoChronology;
  var DecimalStyle_1 = $module$_js_joda_core.DecimalStyle;
  var ParsePosition_1 = $module$_js_joda_core.ParsePosition;
  var ResolverStyle_1 = $module$_js_joda_core.ResolverStyle;
  var Period_1 = $module$_js_joda_core.Period;
  var TextStyle_1 = $module$_js_joda_core.TextStyle;
  var ChronoLocalDate_1 = $module$_js_joda_core.ChronoLocalDate;
  var ChronoField_1 = $module$_js_joda_core.ChronoField;
  var ChronoUnit_1 = $module$_js_joda_core.ChronoUnit;
  var ZoneOffsetTransition_1 = $module$_js_joda_core.ZoneOffsetTransition;
  var setOutput_1 = $module$_actions_core.setOutput;
  var getInput_1 = $module$_actions_core.getInput;
  var setFailed_1 = $module$_actions_core.setFailed;
  var debug_1 = $module$_actions_core.debug;
  var startGroup_1 = $module$_actions_core.startGroup;
  var endGroup_1 = $module$_actions_core.endGroup;
  var info_1 = $module$_actions_core.info;
  var readFileAsync_0 = $module$fs.promises.readFile;
  'use strict';
  AbstractSet.prototype = Object.create(AbstractCollection.prototype);
  AbstractSet.prototype.constructor = AbstractSet;
  _no_name_provided__5.prototype = Object.create(AbstractSet.prototype);
  _no_name_provided__5.prototype.constructor = _no_name_provided__5;
  _no_name_provided__7.prototype = Object.create(AbstractCollection.prototype);
  _no_name_provided__7.prototype.constructor = _no_name_provided__7;
  CoroutineSingletons.prototype = Object.create(Enum.prototype);
  CoroutineSingletons.prototype.constructor = CoroutineSingletons;
  KVariance.prototype = Object.create(Enum.prototype);
  KVariance.prototype.constructor = KVariance;
  LazyThreadSafetyMode.prototype = Object.create(Enum.prototype);
  LazyThreadSafetyMode.prototype.constructor = LazyThreadSafetyMode;
  IntProgressionIterator.prototype = Object.create(IntIterator.prototype);
  IntProgressionIterator.prototype.constructor = IntProgressionIterator;
  CharProgressionIterator.prototype = Object.create(CharIterator.prototype);
  CharProgressionIterator.prototype.constructor = CharProgressionIterator;
  IntRange.prototype = Object.create(IntProgression.prototype);
  IntRange.prototype.constructor = IntRange;
  CharRange.prototype = Object.create(CharProgression.prototype);
  CharRange.prototype.constructor = CharRange;
  AbstractMutableCollection.prototype = Object.create(AbstractCollection.prototype);
  AbstractMutableCollection.prototype.constructor = AbstractMutableCollection;
  ListIteratorImpl.prototype = Object.create(IteratorImpl.prototype);
  ListIteratorImpl.prototype.constructor = ListIteratorImpl;
  AbstractMutableList.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableList.prototype.constructor = AbstractMutableList;
  AbstractMutableSet.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableSet.prototype.constructor = AbstractMutableSet;
  AbstractEntrySet.prototype = Object.create(AbstractMutableSet.prototype);
  AbstractEntrySet.prototype.constructor = AbstractEntrySet;
  _no_name_provided__19.prototype = Object.create(AbstractMutableSet.prototype);
  _no_name_provided__19.prototype.constructor = _no_name_provided__19;
  _no_name_provided__20.prototype = Object.create(AbstractMutableCollection.prototype);
  _no_name_provided__20.prototype.constructor = _no_name_provided__20;
  AbstractMutableMap.prototype = Object.create(AbstractMap.prototype);
  AbstractMutableMap.prototype.constructor = AbstractMutableMap;
  ArrayList.prototype = Object.create(AbstractMutableList.prototype);
  ArrayList.prototype.constructor = ArrayList;
  EntrySet.prototype = Object.create(AbstractEntrySet.prototype);
  EntrySet.prototype.constructor = EntrySet;
  HashMap.prototype = Object.create(AbstractMutableMap.prototype);
  HashMap.prototype.constructor = HashMap;
  HashSet.prototype = Object.create(AbstractMutableSet.prototype);
  HashSet.prototype.constructor = HashSet;
  ChainEntry.prototype = Object.create(SimpleEntry.prototype);
  ChainEntry.prototype.constructor = ChainEntry;
  EntrySet_0.prototype = Object.create(AbstractEntrySet.prototype);
  EntrySet_0.prototype.constructor = EntrySet_0;
  LinkedHashMap.prototype = Object.create(HashMap.prototype);
  LinkedHashMap.prototype.constructor = LinkedHashMap;
  LinkedHashSet.prototype = Object.create(HashSet.prototype);
  LinkedHashSet.prototype.constructor = LinkedHashSet;
  NodeJsOutput_0.prototype = Object.create(BaseOutput.prototype);
  NodeJsOutput_0.prototype.constructor = NodeJsOutput_0;
  BufferedOutput_0.prototype = Object.create(BaseOutput.prototype);
  BufferedOutput_0.prototype.constructor = BufferedOutput_0;
  BufferedOutputToConsoleLog_0.prototype = Object.create(BufferedOutput_0.prototype);
  BufferedOutputToConsoleLog_0.prototype.constructor = BufferedOutputToConsoleLog_0;
  PrimitiveKClassImpl.prototype = Object.create(KClassImpl.prototype);
  PrimitiveKClassImpl.prototype.constructor = PrimitiveKClassImpl;
  NothingKClassImpl.prototype = Object.create(KClassImpl.prototype);
  NothingKClassImpl.prototype.constructor = NothingKClassImpl;
  SimpleKClassImpl.prototype = Object.create(KClassImpl.prototype);
  SimpleKClassImpl.prototype.constructor = SimpleKClassImpl;
  Exception.prototype = Object.create(Error.prototype);
  Exception.prototype.constructor = Exception;
  CharacterCodingException.prototype = Object.create(Exception.prototype);
  CharacterCodingException.prototype.constructor = CharacterCodingException;
  RegexOption.prototype = Object.create(Enum.prototype);
  RegexOption.prototype.constructor = RegexOption;
  Long.prototype = Object.create(Number_0.prototype);
  Long.prototype.constructor = Long;
  _no_name_provided__1_2.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__1_2.prototype.constructor = _no_name_provided__1_2;
  Error_0.prototype = Object.create(Error.prototype);
  Error_0.prototype.constructor = Error_0;
  RuntimeException.prototype = Object.create(Exception.prototype);
  RuntimeException.prototype.constructor = RuntimeException;
  IllegalArgumentException.prototype = Object.create(RuntimeException.prototype);
  IllegalArgumentException.prototype.constructor = IllegalArgumentException;
  NoSuchElementException.prototype = Object.create(RuntimeException.prototype);
  NoSuchElementException.prototype.constructor = NoSuchElementException;
  IllegalStateException.prototype = Object.create(RuntimeException.prototype);
  IllegalStateException.prototype.constructor = IllegalStateException;
  UnsupportedOperationException.prototype = Object.create(RuntimeException.prototype);
  UnsupportedOperationException.prototype.constructor = UnsupportedOperationException;
  IndexOutOfBoundsException.prototype = Object.create(RuntimeException.prototype);
  IndexOutOfBoundsException.prototype.constructor = IndexOutOfBoundsException;
  ArithmeticException.prototype = Object.create(RuntimeException.prototype);
  ArithmeticException.prototype.constructor = ArithmeticException;
  NumberFormatException.prototype = Object.create(IllegalArgumentException.prototype);
  NumberFormatException.prototype.constructor = NumberFormatException;
  NullPointerException.prototype = Object.create(RuntimeException.prototype);
  NullPointerException.prototype.constructor = NullPointerException;
  NoWhenBranchMatchedException.prototype = Object.create(RuntimeException.prototype);
  NoWhenBranchMatchedException.prototype.constructor = NoWhenBranchMatchedException;
  ClassCastException.prototype = Object.create(RuntimeException.prototype);
  ClassCastException.prototype.constructor = ClassCastException;
  UninitializedPropertyAccessException.prototype = Object.create(RuntimeException.prototype);
  UninitializedPropertyAccessException.prototype.constructor = UninitializedPropertyAccessException;
  None.prototype = Object.create(TraceBase.prototype);
  None.prototype.constructor = None;
  AbstractCoroutine.prototype = Object.create(JobSupport.prototype);
  AbstractCoroutine.prototype.constructor = AbstractCoroutine;
  CancelHandler.prototype = Object.create(CancelHandlerBase.prototype);
  CancelHandler.prototype.constructor = CancelHandler;
  DisposeHandlersOnCancel.prototype = Object.create(CancelHandler.prototype);
  DisposeHandlersOnCancel.prototype.constructor = DisposeHandlersOnCancel;
  CompletionHandlerBase.prototype = Object.create(LinkedListNode.prototype);
  CompletionHandlerBase.prototype.constructor = CompletionHandlerBase;
  JobNode.prototype = Object.create(CompletionHandlerBase.prototype);
  JobNode.prototype.constructor = JobNode;
  AwaitAllNode.prototype = Object.create(JobNode.prototype);
  AwaitAllNode.prototype.constructor = AwaitAllNode;
  $awaitAllCOROUTINE$0.prototype = Object.create(CoroutineImpl_0.prototype);
  $awaitAllCOROUTINE$0.prototype.constructor = $awaitAllCOROUTINE$0;
  StandaloneCoroutine.prototype = Object.create(AbstractCoroutine.prototype);
  StandaloneCoroutine.prototype.constructor = StandaloneCoroutine;
  LazyStandaloneCoroutine.prototype = Object.create(StandaloneCoroutine.prototype);
  LazyStandaloneCoroutine.prototype.constructor = LazyStandaloneCoroutine;
  $awaitCOROUTINE$1.prototype = Object.create(CoroutineImpl_0.prototype);
  $awaitCOROUTINE$1.prototype.constructor = $awaitCOROUTINE$1;
  DeferredCoroutine.prototype = Object.create(AbstractCoroutine.prototype);
  DeferredCoroutine.prototype.constructor = DeferredCoroutine;
  LazyDeferredCoroutine.prototype = Object.create(DeferredCoroutine.prototype);
  LazyDeferredCoroutine.prototype.constructor = LazyDeferredCoroutine;
  DisposeOnCancel.prototype = Object.create(CancelHandler.prototype);
  DisposeOnCancel.prototype.constructor = DisposeOnCancel;
  BeforeResumeCancelHandler.prototype = Object.create(CancelHandler.prototype);
  BeforeResumeCancelHandler.prototype.constructor = BeforeResumeCancelHandler;
  RemoveOnCancel.prototype = Object.create(BeforeResumeCancelHandler.prototype);
  RemoveOnCancel.prototype.constructor = RemoveOnCancel;
  DispatchedTask.prototype = Object.create(SchedulerTask.prototype);
  DispatchedTask.prototype.constructor = DispatchedTask;
  CancellableContinuationImpl.prototype = Object.create(DispatchedTask.prototype);
  CancellableContinuationImpl.prototype.constructor = CancellableContinuationImpl;
  InvokeOnCancel.prototype = Object.create(CancelHandler.prototype);
  InvokeOnCancel.prototype.constructor = InvokeOnCancel;
  $awaitCOROUTINE$2.prototype = Object.create(CoroutineImpl_0.prototype);
  $awaitCOROUTINE$2.prototype.constructor = $awaitCOROUTINE$2;
  CompletableDeferredImpl.prototype = Object.create(JobSupport.prototype);
  CompletableDeferredImpl.prototype.constructor = CompletableDeferredImpl;
  CancelledContinuation.prototype = Object.create(CompletedExceptionally.prototype);
  CancelledContinuation.prototype.constructor = CancelledContinuation;
  Key_1.prototype = Object.create(AbstractCoroutineContextKey.prototype);
  Key_1.prototype.constructor = Key_1;
  CoroutineDispatcher.prototype = Object.create(AbstractCoroutineContextElement.prototype);
  CoroutineDispatcher.prototype.constructor = CoroutineDispatcher;
  CoroutineName.prototype = Object.create(AbstractCoroutineContextElement.prototype);
  CoroutineName.prototype.constructor = CoroutineName;
  CoroutineStart.prototype = Object.create(Enum.prototype);
  CoroutineStart.prototype.constructor = CoroutineStart;
  EventLoop.prototype = Object.create(CoroutineDispatcher.prototype);
  EventLoop.prototype.constructor = EventLoop;
  CompletionHandlerException.prototype = Object.create(RuntimeException.prototype);
  CompletionHandlerException.prototype.constructor = CompletionHandlerException;
  CoroutinesInternalError.prototype = Object.create(Error_0.prototype);
  CoroutinesInternalError.prototype.constructor = CoroutinesInternalError;
  LinkedListHead.prototype = Object.create(LinkedListNode.prototype);
  LinkedListHead.prototype.constructor = LinkedListHead;
  NodeList_0.prototype = Object.create(LinkedListHead.prototype);
  NodeList_0.prototype.constructor = NodeList_0;
  ChildCompletion.prototype = Object.create(JobNode.prototype);
  ChildCompletion.prototype.constructor = ChildCompletion;
  AwaitContinuation.prototype = Object.create(CancellableContinuationImpl.prototype);
  AwaitContinuation.prototype.constructor = AwaitContinuation;
  JobCancellingNode.prototype = Object.create(JobNode.prototype);
  JobCancellingNode.prototype.constructor = JobCancellingNode;
  ChildHandleNode.prototype = Object.create(JobCancellingNode.prototype);
  ChildHandleNode.prototype.constructor = ChildHandleNode;
  InvokeOnCancelling.prototype = Object.create(JobCancellingNode.prototype);
  InvokeOnCancelling.prototype.constructor = InvokeOnCancelling;
  InvokeOnCompletion.prototype = Object.create(JobNode.prototype);
  InvokeOnCompletion.prototype.constructor = InvokeOnCompletion;
  ResumeOnCompletion.prototype = Object.create(JobNode.prototype);
  ResumeOnCompletion.prototype.constructor = ResumeOnCompletion;
  ResumeAwaitOnCompletion.prototype = Object.create(JobNode.prototype);
  ResumeAwaitOnCompletion.prototype.constructor = ResumeAwaitOnCompletion;
  ChildContinuation.prototype = Object.create(JobCancellingNode.prototype);
  ChildContinuation.prototype.constructor = ChildContinuation;
  JobImpl.prototype = Object.create(JobSupport.prototype);
  JobImpl.prototype.constructor = JobImpl;
  MainCoroutineDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  MainCoroutineDispatcher.prototype.constructor = MainCoroutineDispatcher;
  SupervisorJobImpl.prototype = Object.create(JobImpl.prototype);
  SupervisorJobImpl.prototype.constructor = SupervisorJobImpl;
  ScopeCoroutine.prototype = Object.create(AbstractCoroutine.prototype);
  ScopeCoroutine.prototype.constructor = ScopeCoroutine;
  SupervisorCoroutine.prototype = Object.create(ScopeCoroutine.prototype);
  SupervisorCoroutine.prototype.constructor = SupervisorCoroutine;
  CancellationException.prototype = Object.create(IllegalStateException.prototype);
  CancellationException.prototype.constructor = CancellationException;
  TimeoutCancellationException.prototype = Object.create(CancellationException.prototype);
  TimeoutCancellationException.prototype.constructor = TimeoutCancellationException;
  Unconfined.prototype = Object.create(CoroutineDispatcher.prototype);
  Unconfined.prototype.constructor = Unconfined;
  RemoveReceiveOnCancel.prototype = Object.create(BeforeResumeCancelHandler.prototype);
  RemoveReceiveOnCancel.prototype.constructor = RemoveReceiveOnCancel;
  Receive.prototype = Object.create(LinkedListNode.prototype);
  Receive.prototype.constructor = Receive;
  ReceiveHasNext.prototype = Object.create(Receive.prototype);
  ReceiveHasNext.prototype.constructor = ReceiveHasNext;
  AbstractChannel.prototype = Object.create(AbstractSendChannel.prototype);
  AbstractChannel.prototype.constructor = AbstractChannel;
  Send.prototype = Object.create(LinkedListNode.prototype);
  Send.prototype.constructor = Send;
  SendBuffered.prototype = Object.create(Send.prototype);
  SendBuffered.prototype.constructor = SendBuffered;
  Closed.prototype = Object.create(Send.prototype);
  Closed.prototype.constructor = Closed;
  SendElement.prototype = Object.create(Send.prototype);
  SendElement.prototype.constructor = SendElement;
  SendElementWithUndeliveredHandler.prototype = Object.create(SendElement.prototype);
  SendElementWithUndeliveredHandler.prototype.constructor = SendElementWithUndeliveredHandler;
  ArrayChannel.prototype = Object.create(AbstractChannel.prototype);
  ArrayChannel.prototype.constructor = ArrayChannel;
  BufferOverflow.prototype = Object.create(Enum.prototype);
  BufferOverflow.prototype.constructor = BufferOverflow;
  ClosedReceiveChannelException.prototype = Object.create(NoSuchElementException.prototype);
  ClosedReceiveChannelException.prototype.constructor = ClosedReceiveChannelException;
  ClosedSendChannelException.prototype = Object.create(IllegalStateException.prototype);
  ClosedSendChannelException.prototype.constructor = ClosedSendChannelException;
  ConflatedChannel.prototype = Object.create(AbstractChannel.prototype);
  ConflatedChannel.prototype.constructor = ConflatedChannel;
  LinkedListChannel.prototype = Object.create(AbstractChannel.prototype);
  LinkedListChannel.prototype.constructor = LinkedListChannel;
  RendezvousChannel.prototype = Object.create(AbstractChannel.prototype);
  RendezvousChannel.prototype.constructor = RendezvousChannel;
  AtomicOp.prototype = Object.create(OpDescriptor.prototype);
  AtomicOp.prototype.constructor = AtomicOp;
  DispatchedContinuation.prototype = Object.create(DispatchedTask.prototype);
  DispatchedContinuation.prototype.constructor = DispatchedContinuation;
  UndeliveredElementException.prototype = Object.create(RuntimeException.prototype);
  UndeliveredElementException.prototype.constructor = UndeliveredElementException;
  LockedQueue.prototype = Object.create(LinkedListHead.prototype);
  LockedQueue.prototype.constructor = LockedQueue;
  LockWaiter.prototype = Object.create(LinkedListNode.prototype);
  LockWaiter.prototype.constructor = LockWaiter;
  LockCont.prototype = Object.create(LockWaiter.prototype);
  LockCont.prototype.constructor = LockCont;
  UnlockOp.prototype = Object.create(AtomicOp.prototype);
  UnlockOp.prototype.constructor = UnlockOp;
  JsMainDispatcher.prototype = Object.create(MainCoroutineDispatcher.prototype);
  JsMainDispatcher.prototype.constructor = JsMainDispatcher;
  UnconfinedEventLoop.prototype = Object.create(EventLoop.prototype);
  UnconfinedEventLoop.prototype.constructor = UnconfinedEventLoop;
  JobCancellationException.prototype = Object.create(CancellationException.prototype);
  JobCancellationException.prototype.constructor = JobCancellationException;
  SetTimeoutBasedDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  SetTimeoutBasedDispatcher.prototype.constructor = SetTimeoutBasedDispatcher;
  NodeDispatcher.prototype = Object.create(SetTimeoutBasedDispatcher.prototype);
  NodeDispatcher.prototype.constructor = NodeDispatcher;
  SetTimeoutDispatcher.prototype = Object.create(SetTimeoutBasedDispatcher.prototype);
  SetTimeoutDispatcher.prototype.constructor = SetTimeoutDispatcher;
  MessageQueue.prototype = Object.create(ArrayQueue.prototype);
  MessageQueue.prototype.constructor = MessageQueue;
  ScheduledMessageQueue.prototype = Object.create(MessageQueue.prototype);
  ScheduledMessageQueue.prototype.constructor = ScheduledMessageQueue;
  ClearTimeout.prototype = Object.create(CancelHandler.prototype);
  ClearTimeout.prototype.constructor = ClearTimeout;
  WindowDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  WindowDispatcher.prototype.constructor = WindowDispatcher;
  WindowMessageQueue.prototype = Object.create(MessageQueue.prototype);
  WindowMessageQueue.prototype.constructor = WindowMessageQueue;
  _no_name_provided__3_0.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_0.prototype.constructor = _no_name_provided__3_0;
  _no_name_provided__3_1.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_1.prototype.constructor = _no_name_provided__3_1;
  $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0.prototype = Object.create(CoroutineImpl_0.prototype);
  $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0.prototype.constructor = $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0;
  $awaitAtLeastNBytesAvailableForReadCOROUTINE$1.prototype = Object.create(CoroutineImpl_0.prototype);
  $awaitAtLeastNBytesAvailableForReadCOROUTINE$1.prototype.constructor = $awaitAtLeastNBytesAvailableForReadCOROUTINE$1;
  $writePacketCOROUTINE$8.prototype = Object.create(CoroutineImpl_0.prototype);
  $writePacketCOROUTINE$8.prototype.constructor = $writePacketCOROUTINE$8;
  $writeFullyCOROUTINE$9.prototype = Object.create(CoroutineImpl_0.prototype);
  $writeFullyCOROUTINE$9.prototype.constructor = $writeFullyCOROUTINE$9;
  $writeFullyCOROUTINE$10.prototype = Object.create(CoroutineImpl_0.prototype);
  $writeFullyCOROUTINE$10.prototype.constructor = $writeFullyCOROUTINE$10;
  $readRemainingCOROUTINE$26.prototype = Object.create(CoroutineImpl_0.prototype);
  $readRemainingCOROUTINE$26.prototype.constructor = $readRemainingCOROUTINE$26;
  $readRemainingSuspendCOROUTINE$27.prototype = Object.create(CoroutineImpl_0.prototype);
  $readRemainingSuspendCOROUTINE$27.prototype.constructor = $readRemainingSuspendCOROUTINE$27;
  $readAvailableCOROUTINE$30.prototype = Object.create(CoroutineImpl_0.prototype);
  $readAvailableCOROUTINE$30.prototype.constructor = $readAvailableCOROUTINE$30;
  $readAvailableSuspendCOROUTINE$31.prototype = Object.create(CoroutineImpl_0.prototype);
  $readAvailableSuspendCOROUTINE$31.prototype.constructor = $readAvailableSuspendCOROUTINE$31;
  $awaitInternalAtLeast1COROUTINE$40.prototype = Object.create(CoroutineImpl_0.prototype);
  $awaitInternalAtLeast1COROUTINE$40.prototype.constructor = $awaitInternalAtLeast1COROUTINE$40;
  $awaitSuspendCOROUTINE$41.prototype = Object.create(CoroutineImpl_0.prototype);
  $awaitSuspendCOROUTINE$41.prototype.constructor = $awaitSuspendCOROUTINE$41;
  $discardCOROUTINE$42.prototype = Object.create(CoroutineImpl_0.prototype);
  $discardCOROUTINE$42.prototype.constructor = $discardCOROUTINE$42;
  $discardSuspendCOROUTINE$43.prototype = Object.create(CoroutineImpl_0.prototype);
  $discardSuspendCOROUTINE$43.prototype.constructor = $discardSuspendCOROUTINE$43;
  ClosedWriteChannelException.prototype = Object.create(CancellationException.prototype);
  ClosedWriteChannelException.prototype.constructor = ClosedWriteChannelException;
  _no_name_provided__59.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__59.prototype.constructor = _no_name_provided__59;
  _no_name_provided__3_2.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_2.prototype.constructor = _no_name_provided__3_2;
  _no_name_provided__3_3.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_3.prototype.constructor = _no_name_provided__3_3;
  _no_name_provided__3_4.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_4.prototype.constructor = _no_name_provided__3_4;
  _no_name_provided__3_5.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_5.prototype.constructor = _no_name_provided__3_5;
  _no_name_provided__3_6.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_6.prototype.constructor = _no_name_provided__3_6;
  _no_name_provided__3_7.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_7.prototype.constructor = _no_name_provided__3_7;
  _no_name_provided__3_8.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_8.prototype.constructor = _no_name_provided__3_8;
  InsufficientSpaceException.prototype = Object.create(Exception.prototype);
  InsufficientSpaceException.prototype.constructor = InsufficientSpaceException;
  DefaultBufferPool.prototype = Object.create(DefaultPool.prototype);
  DefaultBufferPool.prototype.constructor = DefaultBufferPool;
  _no_name_provided__3_5_0.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_5_0.prototype.constructor = _no_name_provided__3_5_0;
  _no_name_provided__3_5_1.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_5_1.prototype.constructor = _no_name_provided__3_5_1;
  _no_name_provided__3_5_2.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_5_2.prototype.constructor = _no_name_provided__3_5_2;
  _no_name_provided__3_9.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_9.prototype.constructor = _no_name_provided__3_9;
  _no_name_provided__3_10.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_10.prototype.constructor = _no_name_provided__3_10;
  _no_name_provided__3_11.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_11.prototype.constructor = _no_name_provided__3_11;
  EmptyBufferPoolImpl.prototype = Object.create(NoPoolImpl.prototype);
  EmptyBufferPoolImpl.prototype.constructor = EmptyBufferPoolImpl;
  BufferLimitExceededException.prototype = Object.create(Exception.prototype);
  BufferLimitExceededException.prototype.constructor = BufferLimitExceededException;
  BytePacketBuilderBase.prototype = Object.create(AbstractOutput.prototype);
  BytePacketBuilderBase.prototype.constructor = BytePacketBuilderBase;
  BytePacketBuilderPlatformBase.prototype = Object.create(BytePacketBuilderBase.prototype);
  BytePacketBuilderPlatformBase.prototype.constructor = BytePacketBuilderPlatformBase;
  _no_name_provided__3_12.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_12.prototype.constructor = _no_name_provided__3_12;
  BytePacketBuilder.prototype = Object.create(BytePacketBuilderPlatformBase.prototype);
  BytePacketBuilder.prototype.constructor = BytePacketBuilder;
  ByteReadPacketBase.prototype = Object.create(AbstractInput.prototype);
  ByteReadPacketBase.prototype.constructor = ByteReadPacketBase;
  ByteReadPacketPlatformBase.prototype = Object.create(ByteReadPacketBase.prototype);
  ByteReadPacketPlatformBase.prototype.constructor = ByteReadPacketPlatformBase;
  ByteReadPacket.prototype = Object.create(ByteReadPacketPlatformBase.prototype);
  ByteReadPacket.prototype.constructor = ByteReadPacket;
  _no_name_provided__3_13.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_13.prototype.constructor = _no_name_provided__3_13;
  _no_name_provided__63.prototype = Object.create(NoPoolImpl.prototype);
  _no_name_provided__63.prototype.constructor = _no_name_provided__63;
  _no_name_provided__64.prototype = Object.create(NoPoolImpl.prototype);
  _no_name_provided__64.prototype.constructor = _no_name_provided__64;
  _no_name_provided__3_14.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_14.prototype.constructor = _no_name_provided__3_14;
  _no_name_provided__3_15.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__3_15.prototype.constructor = _no_name_provided__3_15;
  ChunkBuffer.prototype = Object.create(Buffer_0.prototype);
  ChunkBuffer.prototype.constructor = ChunkBuffer;
  MalformedUTF8InputException.prototype = Object.create(Exception.prototype);
  MalformedUTF8InputException.prototype.constructor = MalformedUTF8InputException;
  _no_name_provided__2_0.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__2_0.prototype.constructor = _no_name_provided__2_0;
  _no_name_provided__2_1.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__2_1.prototype.constructor = _no_name_provided__2_1;
  _no_name_provided__2_2.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__2_2.prototype.constructor = _no_name_provided__2_2;
  _no_name_provided__2_3.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__2_3.prototype.constructor = _no_name_provided__2_3;
  $sleepCOROUTINE$54.prototype = Object.create(CoroutineImpl_0.prototype);
  $sleepCOROUTINE$54.prototype.constructor = $sleepCOROUTINE$54;
  $trySuspendCOROUTINE$55.prototype = Object.create(CoroutineImpl_0.prototype);
  $trySuspendCOROUTINE$55.prototype.constructor = $trySuspendCOROUTINE$55;
  $copyToSequentialImplCOROUTINE$56.prototype = Object.create(CoroutineImpl_0.prototype);
  $copyToSequentialImplCOROUTINE$56.prototype.constructor = $copyToSequentialImplCOROUTINE$56;
  $copyToTailCOROUTINE$57.prototype = Object.create(CoroutineImpl_0.prototype);
  $copyToTailCOROUTINE$57.prototype.constructor = $copyToTailCOROUTINE$57;
  ByteChannelJS.prototype = Object.create(ByteChannelSequentialBase.prototype);
  ByteChannelJS.prototype.constructor = ByteChannelJS;
  CharsetImpl.prototype = Object.create(Charset.prototype);
  CharsetImpl.prototype.constructor = CharsetImpl;
  CharsetEncoderImpl.prototype = Object.create(CharsetEncoder.prototype);
  CharsetEncoderImpl.prototype.constructor = CharsetEncoderImpl;
  CharsetDecoderImpl.prototype = Object.create(CharsetDecoder.prototype);
  CharsetDecoderImpl.prototype.constructor = CharsetDecoderImpl;
  MalformedInputException.prototype = Object.create(Error.prototype);
  MalformedInputException.prototype.constructor = MalformedInputException;
  ByteOrder.prototype = Object.create(Enum.prototype);
  ByteOrder.prototype.constructor = ByteOrder;
  _no_name_provided__2_4.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__2_4.prototype.constructor = _no_name_provided__2_4;
  _no_name_provided__2_5.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__2_5.prototype.constructor = _no_name_provided__2_5;
  _no_name_provided__69.prototype = Object.create(DefaultPool.prototype);
  _no_name_provided__69.prototype.constructor = _no_name_provided__69;
  _no_name_provided__70.prototype = Object.create(NoPoolImpl.prototype);
  _no_name_provided__70.prototype.constructor = _no_name_provided__70;
  IoBuffer.prototype = Object.create(ChunkBuffer.prototype);
  IoBuffer.prototype.constructor = IoBuffer;
  IOException.prototype = Object.create(Exception.prototype);
  IOException.prototype.constructor = IOException;
  EOFException.prototype = Object.create(IOException.prototype);
  EOFException.prototype.constructor = EOFException;
  _no_name_provided__72.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__72.prototype.constructor = _no_name_provided__72;
  _no_name_provided__74.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__74.prototype.constructor = _no_name_provided__74;
  _no_name_provided__75.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__75.prototype.constructor = _no_name_provided__75;
  _no_name_provided__76.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__76.prototype.constructor = _no_name_provided__76;
  $toByteArrayCOROUTINE$0.prototype = Object.create(CoroutineImpl_0.prototype);
  $toByteArrayCOROUTINE$0.prototype.constructor = $toByteArrayCOROUTINE$0;
  _no_name_provided__1_3.prototype = Object.create(AbstractCoroutineContextElement.prototype);
  _no_name_provided__1_3.prototype.constructor = _no_name_provided__1_3;
  WeekDay.prototype = Object.create(Enum.prototype);
  WeekDay.prototype.constructor = WeekDay;
  Month_0.prototype = Object.create(Enum.prototype);
  Month_0.prototype.constructor = Month_0;
  $proceedLoopCOROUTINE$1.prototype = Object.create(CoroutineImpl_0.prototype);
  $proceedLoopCOROUTINE$1.prototype.constructor = $proceedLoopCOROUTINE$1;
  InvalidPhaseException.prototype = Object.create(Error.prototype);
  InvalidPhaseException.prototype.constructor = InvalidPhaseException;
  Before.prototype = Object.create(PipelinePhaseRelation.prototype);
  Before.prototype.constructor = Before;
  Last.prototype = Object.create(PipelinePhaseRelation.prototype);
  Last.prototype.constructor = Last;
  _no_name_provided__100.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__100.prototype.constructor = _no_name_provided__100;
  InvalidTimestampException.prototype = Object.create(IllegalStateException.prototype);
  InvalidTimestampException.prototype.constructor = InvalidTimestampException;
  URLDecodeException.prototype = Object.create(Exception.prototype);
  URLDecodeException.prototype.constructor = URLDecodeException;
  ContentType.prototype = Object.create(HeaderValueWithParameters.prototype);
  ContentType.prototype.constructor = ContentType;
  BadContentTypeFormatException.prototype = Object.create(Exception.prototype);
  BadContentTypeFormatException.prototype.constructor = BadContentTypeFormatException;
  HeadersBuilder.prototype = Object.create(StringValuesBuilder.prototype);
  HeadersBuilder.prototype.constructor = HeadersBuilder;
  HeadersImpl.prototype = Object.create(StringValuesImpl.prototype);
  HeadersImpl.prototype.constructor = HeadersImpl;
  UnsafeHeaderException.prototype = Object.create(IllegalArgumentException.prototype);
  UnsafeHeaderException.prototype.constructor = UnsafeHeaderException;
  IllegalHeaderNameException.prototype = Object.create(IllegalArgumentException.prototype);
  IllegalHeaderNameException.prototype.constructor = IllegalHeaderNameException;
  IllegalHeaderValueException.prototype = Object.create(IllegalArgumentException.prototype);
  IllegalHeaderValueException.prototype.constructor = IllegalHeaderValueException;
  ParametersBuilder.prototype = Object.create(StringValuesBuilder.prototype);
  ParametersBuilder.prototype.constructor = ParametersBuilder;
  ParametersImpl.prototype = Object.create(StringValuesImpl.prototype);
  ParametersImpl.prototype.constructor = ParametersImpl;
  URLParserException.prototype = Object.create(IllegalStateException.prototype);
  URLParserException.prototype.constructor = URLParserException;
  NoContent.prototype = Object.create(OutgoingContent.prototype);
  NoContent.prototype.constructor = NoContent;
  ReadChannelContent.prototype = Object.create(OutgoingContent.prototype);
  ReadChannelContent.prototype.constructor = ReadChannelContent;
  WriteChannelContent.prototype = Object.create(OutgoingContent.prototype);
  WriteChannelContent.prototype.constructor = WriteChannelContent;
  ByteArrayContent.prototype = Object.create(OutgoingContent.prototype);
  ByteArrayContent.prototype.constructor = ByteArrayContent;
  TextContent.prototype = Object.create(ByteArrayContent.prototype);
  TextContent.prototype.constructor = TextContent;
  SequenceGrammar.prototype = Object.create(Grammar.prototype);
  SequenceGrammar.prototype.constructor = SequenceGrammar;
  StringGrammar.prototype = Object.create(Grammar.prototype);
  StringGrammar.prototype.constructor = StringGrammar;
  AtLeastOne.prototype = Object.create(Grammar.prototype);
  AtLeastOne.prototype.constructor = AtLeastOne;
  OrGrammar.prototype = Object.create(Grammar.prototype);
  OrGrammar.prototype.constructor = OrGrammar;
  RawGrammar.prototype = Object.create(Grammar.prototype);
  RawGrammar.prototype.constructor = RawGrammar;
  NamedGrammar.prototype = Object.create(Grammar.prototype);
  NamedGrammar.prototype.constructor = NamedGrammar;
  MaybeGrammar.prototype = Object.create(Grammar.prototype);
  MaybeGrammar.prototype.constructor = MaybeGrammar;
  ManyGrammar.prototype = Object.create(Grammar.prototype);
  ManyGrammar.prototype.constructor = ManyGrammar;
  AnyOfGrammar.prototype = Object.create(Grammar.prototype);
  AnyOfGrammar.prototype.constructor = AnyOfGrammar;
  RangeGrammar.prototype = Object.create(Grammar.prototype);
  RangeGrammar.prototype.constructor = RangeGrammar;
  _no_name_provided__114.prototype = Object.create(DefaultPool.prototype);
  _no_name_provided__114.prototype.constructor = _no_name_provided__114;
  _no_name_provided__115.prototype = Object.create(DefaultPool.prototype);
  _no_name_provided__115.prototype.constructor = _no_name_provided__115;
  _no_name_provided__118.prototype = Object.create(DefaultPool.prototype);
  _no_name_provided__118.prototype.constructor = _no_name_provided__118;
  Codes.prototype = Object.create(Enum.prototype);
  Codes.prototype.constructor = Codes;
  FrameType.prototype = Object.create(Enum.prototype);
  FrameType.prototype.constructor = FrameType;
  Binary.prototype = Object.create(Frame.prototype);
  Binary.prototype.constructor = Binary;
  Text_1.prototype = Object.create(Frame.prototype);
  Text_1.prototype.constructor = Text_1;
  Close.prototype = Object.create(Frame.prototype);
  Close.prototype.constructor = Close;
  _no_name_provided__122.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__122.prototype.constructor = _no_name_provided__122;
  $executeCOROUTINE$0.prototype = Object.create(CoroutineImpl_0.prototype);
  $executeCOROUTINE$0.prototype.constructor = $executeCOROUTINE$0;
  $receiveCOROUTINE$1.prototype = Object.create(CoroutineImpl_0.prototype);
  $receiveCOROUTINE$1.prototype.constructor = $receiveCOROUTINE$1;
  DoubleReceiveException.prototype = Object.create(IllegalStateException.prototype);
  DoubleReceiveException.prototype.constructor = DoubleReceiveException;
  NoTransformationFoundException.prototype = Object.create(UnsupportedOperationException.prototype);
  NoTransformationFoundException.prototype.constructor = NoTransformationFoundException;
  $getResponseContentCOROUTINE$3.prototype = Object.create(CoroutineImpl_0.prototype);
  $getResponseContentCOROUTINE$3.prototype.constructor = $getResponseContentCOROUTINE$3;
  SavedHttpCall.prototype = Object.create(HttpClientCall.prototype);
  SavedHttpCall.prototype.constructor = SavedHttpCall;
  SavedHttpResponse.prototype = Object.create(HttpResponse.prototype);
  SavedHttpResponse.prototype.constructor = SavedHttpResponse;
  $saveCOROUTINE$2.prototype = Object.create(CoroutineImpl_0.prototype);
  $saveCOROUTINE$2.prototype.constructor = $saveCOROUTINE$2;
  _no_name_provided__131.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__131.prototype.constructor = _no_name_provided__131;
  _no_name_provided__132.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__132.prototype.constructor = _no_name_provided__132;
  $executeWithinCallContextCOROUTINE$4.prototype = Object.create(CoroutineImpl_0.prototype);
  $executeWithinCallContextCOROUTINE$4.prototype.constructor = $executeWithinCallContextCOROUTINE$4;
  ClientEngineClosedException.prototype = Object.create(IllegalStateException.prototype);
  ClientEngineClosedException.prototype.constructor = ClientEngineClosedException;
  ResponseException.prototype = Object.create(IllegalStateException.prototype);
  ResponseException.prototype.constructor = ResponseException;
  RedirectResponseException.prototype = Object.create(ResponseException.prototype);
  RedirectResponseException.prototype.constructor = RedirectResponseException;
  ClientRequestException.prototype = Object.create(ResponseException.prototype);
  ClientRequestException.prototype.constructor = ClientRequestException;
  ServerResponseException.prototype = Object.create(ResponseException.prototype);
  ServerResponseException.prototype.constructor = ServerResponseException;
  _no_name_provided__137.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__137.prototype.constructor = _no_name_provided__137;
  _no_name_provided__139.prototype = Object.create(ByteArrayContent.prototype);
  _no_name_provided__139.prototype.constructor = _no_name_provided__139;
  _no_name_provided__140.prototype = Object.create(ReadChannelContent.prototype);
  _no_name_provided__140.prototype.constructor = _no_name_provided__140;
  _no_name_provided__141.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__141.prototype.constructor = _no_name_provided__141;
  _no_name_provided__142.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__142.prototype.constructor = _no_name_provided__142;
  _no_name_provided__144.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__144.prototype.constructor = _no_name_provided__144;
  _no_name_provided__146.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__146.prototype.constructor = _no_name_provided__146;
  _no_name_provided__147.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__147.prototype.constructor = _no_name_provided__147;
  _no_name_provided__148.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__148.prototype.constructor = _no_name_provided__148;
  $validateResponseCOROUTINE$5.prototype = Object.create(CoroutineImpl_0.prototype);
  $validateResponseCOROUTINE$5.prototype.constructor = $validateResponseCOROUTINE$5;
  $processExceptionCOROUTINE$6.prototype = Object.create(CoroutineImpl_0.prototype);
  $processExceptionCOROUTINE$6.prototype.constructor = $processExceptionCOROUTINE$6;
  _no_name_provided__149.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__149.prototype.constructor = _no_name_provided__149;
  _no_name_provided__150.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__150.prototype.constructor = _no_name_provided__150;
  _no_name_provided__153.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__153.prototype.constructor = _no_name_provided__153;
  $handleCallCOROUTINE$7.prototype = Object.create(CoroutineImpl_0.prototype);
  $handleCallCOROUTINE$7.prototype.constructor = $handleCallCOROUTINE$7;
  _no_name_provided__154.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__154.prototype.constructor = _no_name_provided__154;
  _no_name_provided__157.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__157.prototype.constructor = _no_name_provided__157;
  $executeCOROUTINE$8.prototype = Object.create(CoroutineImpl_0.prototype);
  $executeCOROUTINE$8.prototype.constructor = $executeCOROUTINE$8;
  SendCountExceedException.prototype = Object.create(IllegalStateException.prototype);
  SendCountExceedException.prototype.constructor = SendCountExceedException;
  _no_name_provided__158.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__158.prototype.constructor = _no_name_provided__158;
  _no_name_provided__160.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__160.prototype.constructor = _no_name_provided__160;
  HttpRequestTimeoutException.prototype = Object.create(CancellationException.prototype);
  HttpRequestTimeoutException.prototype.constructor = HttpRequestTimeoutException;
  DelegatedCall.prototype = Object.create(HttpClientCall.prototype);
  DelegatedCall.prototype.constructor = DelegatedCall;
  DelegatedResponse.prototype = Object.create(HttpResponse.prototype);
  DelegatedResponse.prototype.constructor = DelegatedResponse;
  _no_name_provided__161.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__161.prototype.constructor = _no_name_provided__161;
  _no_name_provided__162.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__162.prototype.constructor = _no_name_provided__162;
  _no_name_provided__163.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__163.prototype.constructor = _no_name_provided__163;
  WebSocketException.prototype = Object.create(IllegalStateException.prototype);
  WebSocketException.prototype.constructor = WebSocketException;
  ClientUpgradeContent.prototype = Object.create(NoContent.prototype);
  ClientUpgradeContent.prototype.constructor = ClientUpgradeContent;
  HttpRequestPipeline.prototype = Object.create(Pipeline.prototype);
  HttpRequestPipeline.prototype.constructor = HttpRequestPipeline;
  HttpSendPipeline.prototype = Object.create(Pipeline.prototype);
  HttpSendPipeline.prototype.constructor = HttpSendPipeline;
  DefaultHttpResponse.prototype = Object.create(HttpResponse.prototype);
  DefaultHttpResponse.prototype.constructor = DefaultHttpResponse;
  HttpResponsePipeline.prototype = Object.create(Pipeline.prototype);
  HttpResponsePipeline.prototype.constructor = HttpResponsePipeline;
  HttpReceivePipeline.prototype = Object.create(Pipeline.prototype);
  HttpReceivePipeline.prototype.constructor = HttpReceivePipeline;
  _no_name_provided__166.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__166.prototype.constructor = _no_name_provided__166;
  $executeCOROUTINE$11.prototype = Object.create(CoroutineImpl_0.prototype);
  $executeCOROUTINE$11.prototype.constructor = $executeCOROUTINE$11;
  $executeUnsafeCOROUTINE$12.prototype = Object.create(CoroutineImpl_0.prototype);
  $executeUnsafeCOROUTINE$12.prototype.constructor = $executeUnsafeCOROUTINE$12;
  $cleanupCOROUTINE$13.prototype = Object.create(CoroutineImpl_0.prototype);
  $cleanupCOROUTINE$13.prototype.constructor = $cleanupCOROUTINE$13;
  $readTextCOROUTINE$10.prototype = Object.create(CoroutineImpl_0.prototype);
  $readTextCOROUTINE$10.prototype.constructor = $readTextCOROUTINE$10;
  EmptyContent.prototype = Object.create(NoContent.prototype);
  EmptyContent.prototype.constructor = EmptyContent;
  $executeCOROUTINE$14.prototype = Object.create(CoroutineImpl_0.prototype);
  $executeCOROUTINE$14.prototype.constructor = $executeCOROUTINE$14;
  $executeWebSocketRequestCOROUTINE$15.prototype = Object.create(CoroutineImpl_0.prototype);
  $executeWebSocketRequestCOROUTINE$15.prototype.constructor = $executeWebSocketRequestCOROUTINE$15;
  JsClientEngine.prototype = Object.create(HttpClientEngineBase.prototype);
  JsClientEngine.prototype.constructor = JsClientEngine;
  JsError.prototype = Object.create(Error.prototype);
  JsError.prototype.constructor = JsError;
  _no_name_provided__174.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__174.prototype.constructor = _no_name_provided__174;
  $toRawCOROUTINE$16.prototype = Object.create(CoroutineImpl_0.prototype);
  $toRawCOROUTINE$16.prototype.constructor = $toRawCOROUTINE$16;
  _no_name_provided__178.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__178.prototype.constructor = _no_name_provided__178;
  _no_name_provided__185.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__185.prototype.constructor = _no_name_provided__185;
  _no_name_provided__186.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__186.prototype.constructor = _no_name_provided__186;
  _no_name_provided__187.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__187.prototype.constructor = _no_name_provided__187;
  _no_name_provided__191.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__191.prototype.constructor = _no_name_provided__191;
  LogLevel.prototype = Object.create(Enum.prototype);
  LogLevel.prototype.constructor = LogLevel;
  LoggedContent.prototype = Object.create(ReadChannelContent.prototype);
  LoggedContent.prototype.constructor = LoggedContent;
  _no_name_provided__193.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__193.prototype.constructor = _no_name_provided__193;
  _no_name_provided__194.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__194.prototype.constructor = _no_name_provided__194;
  _no_name_provided__195.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__195.prototype.constructor = _no_name_provided__195;
  _no_name_provided__196.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__196.prototype.constructor = _no_name_provided__196;
  _no_name_provided__198.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__198.prototype.constructor = _no_name_provided__198;
  $logRequestCOROUTINE$0.prototype = Object.create(CoroutineImpl_0.prototype);
  $logRequestCOROUTINE$0.prototype.constructor = $logRequestCOROUTINE$0;
  $logResponseBodyCOROUTINE$1.prototype = Object.create(CoroutineImpl_0.prototype);
  $logResponseBodyCOROUTINE$1.prototype.constructor = $logResponseBodyCOROUTINE$1;
  _no_name_provided__199.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__199.prototype.constructor = _no_name_provided__199;
  $observeCOROUTINE$3.prototype = Object.create(CoroutineImpl_0.prototype);
  $observeCOROUTINE$3.prototype.constructor = $observeCOROUTINE$3;
  _no_name_provided__200.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__200.prototype.constructor = _no_name_provided__200;
  _no_name_provided__201.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__201.prototype.constructor = _no_name_provided__201;
  PolymorphicSerializer.prototype = Object.create(AbstractPolymorphicSerializer.prototype);
  PolymorphicSerializer.prototype.constructor = PolymorphicSerializer;
  SealedClassSerializer.prototype = Object.create(AbstractPolymorphicSerializer.prototype);
  SealedClassSerializer.prototype.constructor = SealedClassSerializer;
  SerializationException.prototype = Object.create(IllegalArgumentException.prototype);
  SerializationException.prototype.constructor = SerializationException;
  UnknownFieldException.prototype = Object.create(SerializationException.prototype);
  UnknownFieldException.prototype.constructor = UnknownFieldException;
  MissingFieldException.prototype = Object.create(SerializationException.prototype);
  MissingFieldException.prototype.constructor = MissingFieldException;
  ENUM.prototype = Object.create(SerialKind.prototype);
  ENUM.prototype.constructor = ENUM;
  CONTEXTUAL.prototype = Object.create(SerialKind.prototype);
  CONTEXTUAL.prototype.constructor = CONTEXTUAL;
  PrimitiveKind.prototype = Object.create(SerialKind.prototype);
  PrimitiveKind.prototype.constructor = PrimitiveKind;
  BOOLEAN.prototype = Object.create(PrimitiveKind.prototype);
  BOOLEAN.prototype.constructor = BOOLEAN;
  BYTE.prototype = Object.create(PrimitiveKind.prototype);
  BYTE.prototype.constructor = BYTE;
  CHAR.prototype = Object.create(PrimitiveKind.prototype);
  CHAR.prototype.constructor = CHAR;
  SHORT.prototype = Object.create(PrimitiveKind.prototype);
  SHORT.prototype.constructor = SHORT;
  INT.prototype = Object.create(PrimitiveKind.prototype);
  INT.prototype.constructor = INT;
  LONG.prototype = Object.create(PrimitiveKind.prototype);
  LONG.prototype.constructor = LONG;
  FLOAT.prototype = Object.create(PrimitiveKind.prototype);
  FLOAT.prototype.constructor = FLOAT;
  DOUBLE.prototype = Object.create(PrimitiveKind.prototype);
  DOUBLE.prototype.constructor = DOUBLE;
  STRING.prototype = Object.create(PrimitiveKind.prototype);
  STRING.prototype.constructor = STRING;
  StructureKind.prototype = Object.create(SerialKind.prototype);
  StructureKind.prototype.constructor = StructureKind;
  CLASS.prototype = Object.create(StructureKind.prototype);
  CLASS.prototype.constructor = CLASS;
  LIST.prototype = Object.create(StructureKind.prototype);
  LIST.prototype.constructor = LIST;
  MAP.prototype = Object.create(StructureKind.prototype);
  MAP.prototype.constructor = MAP;
  OBJECT.prototype = Object.create(StructureKind.prototype);
  OBJECT.prototype.constructor = OBJECT;
  PolymorphicKind.prototype = Object.create(SerialKind.prototype);
  PolymorphicKind.prototype.constructor = PolymorphicKind;
  SEALED_0.prototype = Object.create(PolymorphicKind.prototype);
  SEALED_0.prototype.constructor = SEALED_0;
  OPEN.prototype = Object.create(PolymorphicKind.prototype);
  OPEN.prototype.constructor = OPEN;
  PrimitiveArrayDescriptor.prototype = Object.create(ListLikeDescriptor.prototype);
  PrimitiveArrayDescriptor.prototype.constructor = PrimitiveArrayDescriptor;
  ArrayListClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  ArrayListClassDesc.prototype.constructor = ArrayListClassDesc;
  LinkedHashSetClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  LinkedHashSetClassDesc.prototype.constructor = LinkedHashSetClassDesc;
  LinkedHashMapClassDesc.prototype = Object.create(MapLikeDescriptor.prototype);
  LinkedHashMapClassDesc.prototype.constructor = LinkedHashMapClassDesc;
  HashSetClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  HashSetClassDesc.prototype.constructor = HashSetClassDesc;
  HashMapClassDesc.prototype = Object.create(MapLikeDescriptor.prototype);
  HashMapClassDesc.prototype.constructor = HashMapClassDesc;
  ArrayClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  ArrayClassDesc.prototype.constructor = ArrayClassDesc;
  ListLikeSerializer.prototype = Object.create(AbstractCollectionSerializer.prototype);
  ListLikeSerializer.prototype.constructor = ListLikeSerializer;
  PrimitiveArraySerializer.prototype = Object.create(ListLikeSerializer.prototype);
  PrimitiveArraySerializer.prototype.constructor = PrimitiveArraySerializer;
  ArrayListSerializer.prototype = Object.create(ListLikeSerializer.prototype);
  ArrayListSerializer.prototype.constructor = ArrayListSerializer;
  LinkedHashSetSerializer.prototype = Object.create(ListLikeSerializer.prototype);
  LinkedHashSetSerializer.prototype.constructor = LinkedHashSetSerializer;
  MapLikeSerializer.prototype = Object.create(AbstractCollectionSerializer.prototype);
  MapLikeSerializer.prototype.constructor = MapLikeSerializer;
  LinkedHashMapSerializer.prototype = Object.create(MapLikeSerializer.prototype);
  LinkedHashMapSerializer.prototype.constructor = LinkedHashMapSerializer;
  HashSetSerializer.prototype = Object.create(ListLikeSerializer.prototype);
  HashSetSerializer.prototype.constructor = HashSetSerializer;
  HashMapSerializer.prototype = Object.create(MapLikeSerializer.prototype);
  HashMapSerializer.prototype.constructor = HashMapSerializer;
  ReferenceArraySerializer.prototype = Object.create(ListLikeSerializer.prototype);
  ReferenceArraySerializer.prototype.constructor = ReferenceArraySerializer;
  InlineClassDescriptor.prototype = Object.create(PluginGeneratedSerialDescriptor.prototype);
  InlineClassDescriptor.prototype.constructor = InlineClassDescriptor;
  CharArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  CharArraySerializer_0.prototype.constructor = CharArraySerializer_0;
  DoubleArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  DoubleArraySerializer_0.prototype.constructor = DoubleArraySerializer_0;
  FloatArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  FloatArraySerializer_0.prototype.constructor = FloatArraySerializer_0;
  LongArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  LongArraySerializer_0.prototype.constructor = LongArraySerializer_0;
  IntArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  IntArraySerializer_0.prototype.constructor = IntArraySerializer_0;
  ShortArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  ShortArraySerializer_0.prototype.constructor = ShortArraySerializer_0;
  ByteArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  ByteArraySerializer_0.prototype.constructor = ByteArraySerializer_0;
  BooleanArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  BooleanArraySerializer_0.prototype.constructor = BooleanArraySerializer_0;
  CharArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  CharArrayBuilder.prototype.constructor = CharArrayBuilder;
  DoubleArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  DoubleArrayBuilder.prototype.constructor = DoubleArrayBuilder;
  FloatArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  FloatArrayBuilder.prototype.constructor = FloatArrayBuilder;
  LongArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  LongArrayBuilder.prototype.constructor = LongArrayBuilder;
  IntArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  IntArrayBuilder.prototype.constructor = IntArrayBuilder;
  ShortArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  ShortArrayBuilder.prototype.constructor = ShortArrayBuilder;
  ByteArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  ByteArrayBuilder.prototype.constructor = ByteArrayBuilder;
  BooleanArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  BooleanArrayBuilder.prototype.constructor = BooleanArrayBuilder;
  NamedValueDecoder.prototype = Object.create(TaggedDecoder.prototype);
  NamedValueDecoder.prototype.constructor = NamedValueDecoder;
  MapEntrySerializer_0.prototype = Object.create(KeyValueSerializer.prototype);
  MapEntrySerializer_0.prototype.constructor = MapEntrySerializer_0;
  PairSerializer_0.prototype = Object.create(KeyValueSerializer.prototype);
  PairSerializer_0.prototype.constructor = PairSerializer_0;
  SerialModuleImpl.prototype = Object.create(SerializersModule.prototype);
  SerialModuleImpl.prototype.constructor = SerialModuleImpl;
  Argless.prototype = Object.create(ContextualProvider.prototype);
  Argless.prototype.constructor = Argless;
  WithTypeArguments.prototype = Object.create(ContextualProvider.prototype);
  WithTypeArguments.prototype.constructor = WithTypeArguments;
  Default.prototype = Object.create(Json_0.prototype);
  Default.prototype.constructor = Default;
  JsonImpl.prototype = Object.create(Json_0.prototype);
  JsonImpl.prototype.constructor = JsonImpl;
  JsonObject.prototype = Object.create(JsonElement.prototype);
  JsonObject.prototype.constructor = JsonObject;
  JsonPrimitive.prototype = Object.create(JsonElement.prototype);
  JsonPrimitive.prototype.constructor = JsonPrimitive;
  JsonNull.prototype = Object.create(JsonPrimitive.prototype);
  JsonNull.prototype.constructor = JsonNull;
  JsonLiteral.prototype = Object.create(JsonPrimitive.prototype);
  JsonLiteral.prototype.constructor = JsonLiteral;
  JsonArray.prototype = Object.create(JsonElement.prototype);
  JsonArray.prototype.constructor = JsonArray;
  ComposerForUnsignedNumbers.prototype = Object.create(Composer.prototype);
  ComposerForUnsignedNumbers.prototype.constructor = ComposerForUnsignedNumbers;
  JsonException.prototype = Object.create(SerializationException.prototype);
  JsonException.prototype.constructor = JsonException;
  JsonEncodingException.prototype = Object.create(JsonException.prototype);
  JsonEncodingException.prototype.constructor = JsonEncodingException;
  JsonDecodingException.prototype = Object.create(JsonException.prototype);
  JsonDecodingException.prototype.constructor = JsonDecodingException;
  StreamingJsonDecoder.prototype = Object.create(AbstractDecoder.prototype);
  StreamingJsonDecoder.prototype.constructor = StreamingJsonDecoder;
  JsonDecoderForUnsignedTypes.prototype = Object.create(AbstractDecoder.prototype);
  JsonDecoderForUnsignedTypes.prototype.constructor = JsonDecoderForUnsignedTypes;
  StreamingJsonEncoder.prototype = Object.create(AbstractEncoder.prototype);
  StreamingJsonEncoder.prototype.constructor = StreamingJsonEncoder;
  AbstractJsonTreeDecoder.prototype = Object.create(NamedValueDecoder.prototype);
  AbstractJsonTreeDecoder.prototype.constructor = AbstractJsonTreeDecoder;
  JsonTreeDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonTreeDecoder.prototype.constructor = JsonTreeDecoder;
  JsonTreeListDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonTreeListDecoder.prototype.constructor = JsonTreeListDecoder;
  JsonTreeMapDecoder.prototype = Object.create(JsonTreeDecoder.prototype);
  JsonTreeMapDecoder.prototype.constructor = JsonTreeMapDecoder;
  WriteMode.prototype = Object.create(Enum.prototype);
  WriteMode.prototype.constructor = WriteMode;
  DateBased.prototype = Object.create(DateTimeUnit.prototype);
  DateBased.prototype.constructor = DateBased;
  DayBased.prototype = Object.create(DateBased.prototype);
  DayBased.prototype.constructor = DayBased;
  MonthBased.prototype = Object.create(DateBased.prototype);
  MonthBased.prototype.constructor = MonthBased;
  TimeBased.prototype = Object.create(DateTimeUnit.prototype);
  TimeBased.prototype.constructor = TimeBased;
  DateTimeFormatException.prototype = Object.create(IllegalArgumentException.prototype);
  DateTimeFormatException.prototype.constructor = DateTimeFormatException;
  DateTimeArithmeticException.prototype = Object.create(RuntimeException.prototype);
  DateTimeArithmeticException.prototype.constructor = DateTimeArithmeticException;
  IllegalTimeZoneException.prototype = Object.create(IllegalArgumentException.prototype);
  IllegalTimeZoneException.prototype.constructor = IllegalTimeZoneException;
  DateBasedDateTimeUnitSerializer.prototype = Object.create(AbstractPolymorphicSerializer.prototype);
  DateBasedDateTimeUnitSerializer.prototype.constructor = DateBasedDateTimeUnitSerializer;
  DateTimeUnitSerializer.prototype = Object.create(AbstractPolymorphicSerializer.prototype);
  DateTimeUnitSerializer.prototype.constructor = DateTimeUnitSerializer;
  ZoneOffset_0.prototype = Object.create(TimeZone.prototype);
  ZoneOffset_0.prototype.constructor = ZoneOffset_0;
  $buildCOROUTINE$0.prototype = Object.create(CoroutineImpl_0.prototype);
  $buildCOROUTINE$0.prototype.constructor = $buildCOROUTINE$0;
  $fetchMilestoneCOROUTINE$1.prototype = Object.create(CoroutineImpl_0.prototype);
  $fetchMilestoneCOROUTINE$1.prototype.constructor = $fetchMilestoneCOROUTINE$1;
  _no_name_provided__240.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__240.prototype.constructor = _no_name_provided__240;
  $milestonesCOROUTINE$2.prototype = Object.create(CoroutineImpl_0.prototype);
  $milestonesCOROUTINE$2.prototype.constructor = $milestonesCOROUTINE$2;
  $pullRequestsCOROUTINE$3.prototype = Object.create(CoroutineImpl_0.prototype);
  $pullRequestsCOROUTINE$3.prototype.constructor = $pullRequestsCOROUTINE$3;
  $resolveConfigurationCOROUTINE$4.prototype = Object.create(CoroutineImpl_0.prototype);
  $resolveConfigurationCOROUTINE$4.prototype.constructor = $resolveConfigurationCOROUTINE$4;
  $readJsonFileCOROUTINE$5.prototype = Object.create(CoroutineImpl_0.prototype);
  $readJsonFileCOROUTINE$5.prototype.constructor = $readJsonFileCOROUTINE$5;
  _no_name_provided__250.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__250.prototype.constructor = _no_name_provided__250;
  _no_name_provided__252.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__252.prototype.constructor = _no_name_provided__252;
  _no_name_provided__253.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__253.prototype.constructor = _no_name_provided__253;
  _no_name_provided__256.prototype = Object.create(CoroutineImpl_0.prototype);
  _no_name_provided__256.prototype.constructor = _no_name_provided__256;
  ActionFailedException.prototype = Object.create(Error.prototype);
  ActionFailedException.prototype.constructor = ActionFailedException;
  $mainCOROUTINE$0.prototype = Object.create(CoroutineImpl_0.prototype);
  $mainCOROUTINE$0.prototype.constructor = $mainCOROUTINE$0;
  function toList(_this_) {
    var tmp0_subject = _this_.length;
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this_[0]);
      default:return toMutableList(_this_);
    }
  }
  function withIndex(_this_) {
    return new IndexingIterable(_no_name_provided_$factory(_this_));
  }
  function _get_indices_(_this_) {
    return new IntRange(0, _get_lastIndex_(_this_));
  }
  function firstOrNull(_this_) {
    var tmp;
    if (_this_.length === 0) {
      tmp = null;
    } else {
      {
        tmp = _this_[0];
      }
    }
    return tmp;
  }
  function indexOf(_this_, element) {
    if (element == null) {
      var inductionVariable = 0;
      var last_1 = _this_.length - 1 | 0;
      if (inductionVariable <= last_1)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (_this_[index] == null) {
            return index;
          }}
         while (inductionVariable <= last_1);
    } else {
      var inductionVariable_0 = 0;
      var last_2 = _this_.length - 1 | 0;
      if (inductionVariable_0 <= last_2)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          if (equals_1(element, _this_[index_0])) {
            return index_0;
          }}
         while (inductionVariable_0 <= last_2);
    }
    return -1;
  }
  function toSet(_this_) {
    var tmp0_subject = _this_.length;
    switch (tmp0_subject) {
      case 0:
        return emptySet();
      case 1:
        return setOf_0(_this_[0]);
      default:return toCollection(_this_, LinkedHashSet_init_$Create$_1(mapCapacity(_this_.length)));
    }
  }
  function single(_this_) {
    var tmp0_subject = _this_.length;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Array is empty.');
      case 1:
        tmp = _this_[0];
        break;
      default:throw IllegalArgumentException_init_$Create$_0('Array has more than one element.');
    }
    return tmp;
  }
  function toMutableList(_this_) {
    return ArrayList_init_$Create$_1(asCollection(_this_));
  }
  function _get_lastIndex_(_this_) {
    return _this_.length - 1 | 0;
  }
  function toCollection(_this_, destination) {
    var indexedObject = _this_;
    var inductionVariable = 0;
    var last_1 = indexedObject.length;
    while (inductionVariable < last_1) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.add_32(item);
      Unit_getInstance();
    }
    return destination;
  }
  function joinToString(_this_, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo(_this_, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default(_this_, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString(_this_, separator, prefix, postfix, limit, truncated, transform);
  }
  function contains(_this_, element) {
    return indexOf(_this_, element) >= 0;
  }
  function joinTo(_this_, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.append_22(prefix);
    Unit_getInstance();
    var count_0 = 0;
    var indexedObject = _this_;
    var inductionVariable = 0;
    var last_1 = indexedObject.length;
    $l$break: while (inductionVariable < last_1) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      count_0 = count_0 + 1 | 0;
      if (count_0 > 1) {
        buffer.append_22(separator);
        Unit_getInstance();
      } else {
      }
      if (limit < 0 ? true : count_0 <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$break;
    }
    if (limit >= 0 ? count_0 > limit : false) {
      buffer.append_22(truncated);
      Unit_getInstance();
    }buffer.append_22(postfix);
    Unit_getInstance();
    return buffer;
  }
  function zip(_this_, other) {
    var tmp0_minOf_0 = _this_.length;
    var tmp1_minOf_0 = other.length;
    var size_1 = function () {
      var $externalVarargReceiverTmp = Math;
      return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_minOf_0, tmp1_minOf_0]))));
    }.call(this);
    var list_2 = ArrayList_init_$Create$_0(size_1);
    var inductionVariable = 0;
    if (inductionVariable < size_1)
      do {
        var i_4 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp2__anonymous__5 = _this_[i_4];
        var tmp3__anonymous__5 = other[i_4];
        list_2.add_32(to(tmp2__anonymous__5, tmp3__anonymous__5));
        Unit_getInstance();
      }
       while (inductionVariable < size_1);
    return list_2;
  }
  function _no_name_provided_($this_withIndex) {
    this._$this_withIndex = $this_withIndex;
  }
  _no_name_provided_.prototype.invoke_411 = function () {
    return arrayIterator(this._$this_withIndex);
  };
  _no_name_provided_.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory($this_withIndex) {
    var i = new _no_name_provided_($this_withIndex);
    return function () {
      return i.invoke_411();
    };
  }
  function plus(_this_, elements) {
    if (isInterface(elements, Collection)) {
      var result = ArrayList_init_$Create$_0(_this_._get_size__48() + elements._get_size__48() | 0);
      result.addAll_23(_this_);
      Unit_getInstance();
      result.addAll_23(elements);
      Unit_getInstance();
      return result;
    } else {
      {
        var result_0 = ArrayList_init_$Create$_1(_this_);
        addAll(result_0, elements);
        Unit_getInstance();
        return result_0;
      }
    }
  }
  function plus_0(_this_, elements) {
    if (isInterface(_this_, Collection))
      return plus(_this_, elements);
    else {
    }
    var result = ArrayList_init_$Create$();
    addAll(result, _this_);
    Unit_getInstance();
    addAll(result, elements);
    Unit_getInstance();
    return result;
  }
  function toSet_0(_this_) {
    if (isInterface(_this_, Collection)) {
      var tmp0_subject = _this_._get_size__48();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptySet();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this_, List)) {
            tmp_0 = _this_.get_77(0);
          } else {
            {
              tmp_0 = _this_.iterator_62().next_31();
            }
          }

          tmp = setOf_0(tmp_0);
          break;
        default:tmp = toCollection_0(_this_, LinkedHashSet_init_$Create$_1(mapCapacity(_this_._get_size__48())));
          break;
      }
      return tmp;
    } else {
    }
    return optimizeReadOnlySet(toCollection_0(_this_, LinkedHashSet_init_$Create$()));
  }
  function asSequence(_this_) {
    return new _no_name_provided__1(_this_);
  }
  function firstOrNull_0(_this_) {
    return _this_.isEmpty_50() ? null : _this_.get_77(0);
  }
  function plus_1(_this_, element) {
    var result = ArrayList_init_$Create$_0(_this_._get_size__48() + 1 | 0);
    result.addAll_23(_this_);
    Unit_getInstance();
    result.add_32(element);
    Unit_getInstance();
    return result;
  }
  function joinToString_0(_this_, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo_0(_this_, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default_0(_this_, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString_0(_this_, separator, prefix, postfix, limit, truncated, transform);
  }
  function single_0(_this_) {
    var tmp0_subject = _this_._get_size__48();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('List is empty.');
      case 1:
        tmp = _this_.get_77(0);
        break;
      default:throw IllegalArgumentException_init_$Create$_0('List has more than one element.');
    }
    return tmp;
  }
  function toLongArray(_this_) {
    var result = longArray(_this_._get_size__48());
    var index = 0;
    var tmp0_iterator = _this_.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var element = tmp0_iterator.next_31();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function toByteArray(_this_) {
    var result = new Int8Array(_this_._get_size__48());
    var index = 0;
    var tmp0_iterator = _this_.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var element = tmp0_iterator.next_31();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function reversed(_this_) {
    var tmp;
    if (isInterface(_this_, Collection)) {
      tmp = _this_._get_size__48() <= 1;
    } else {
      {
        tmp = false;
      }
    }
    if (tmp)
      return toList_0(_this_);
    else {
    }
    var list = toMutableList_0(_this_);
    reverse(list);
    return list;
  }
  function toHashSet(_this_) {
    return toCollection_0(_this_, HashSet_init_$Create$_1(mapCapacity(collectionSizeOrDefault(_this_, 12))));
  }
  function toBooleanArray(_this_) {
    var result = booleanArray(_this_._get_size__48());
    var index = 0;
    var tmp0_iterator = _this_.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var element = tmp0_iterator.next_31();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function filterNotNull(_this_) {
    return filterNotNullTo(_this_, ArrayList_init_$Create$());
  }
  function singleOrNull(_this_) {
    return _this_._get_size__48() === 1 ? _this_.get_77(0) : null;
  }
  function first(_this_) {
    if (_this_.isEmpty_50())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this_.get_77(0);
  }
  function toCollection_0(_this_, destination) {
    var tmp0_iterator = _this_.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var item = tmp0_iterator.next_31();
      destination.add_32(item);
      Unit_getInstance();
    }
    return destination;
  }
  function joinTo_0(_this_, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.append_22(prefix);
    Unit_getInstance();
    var count_0 = 0;
    var tmp0_iterator = _this_.iterator_62();
    $l$break: while (tmp0_iterator.hasNext_29()) {
      var element = tmp0_iterator.next_31();
      count_0 = count_0 + 1 | 0;
      if (count_0 > 1) {
        buffer.append_22(separator);
        Unit_getInstance();
      } else {
      }
      if (limit < 0 ? true : count_0 <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$break;
    }
    if (limit >= 0 ? count_0 > limit : false) {
      buffer.append_22(truncated);
      Unit_getInstance();
    }buffer.append_22(postfix);
    Unit_getInstance();
    return buffer;
  }
  function joinTo$default(_this_, buffer, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      separator = ', ';
    if (!(($mask0 & 4) === 0))
      prefix = '';
    if (!(($mask0 & 8) === 0))
      postfix = '';
    if (!(($mask0 & 16) === 0))
      limit = -1;
    if (!(($mask0 & 32) === 0))
      truncated = '...';
    if (!(($mask0 & 64) === 0))
      transform = null;
    return joinTo_0(_this_, buffer, separator, prefix, postfix, limit, truncated, transform);
  }
  function sortedWith(_this_, comparator) {
    if (isInterface(_this_, Collection)) {
      if (_this_._get_size__48() <= 1)
        return toList_0(_this_);
      var tmp0_toTypedArray_0 = _this_;
      var tmp = copyToArray_0(tmp0_toTypedArray_0);
      var tmp1_apply_0 = isArray(tmp) ? tmp : THROW_CCE();
      sortWith_0(tmp1_apply_0, comparator);
      return asList(tmp1_apply_0);
    } else {
    }
    var tmp2_apply_0 = toMutableList_0(_this_);
    sortWith(tmp2_apply_0, comparator);
    return tmp2_apply_0;
  }
  function toList_0(_this_) {
    if (isInterface(_this_, Collection)) {
      var tmp0_subject = _this_._get_size__48();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyList();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this_, List)) {
            tmp_0 = _this_.get_77(0);
          } else {
            {
              tmp_0 = _this_.iterator_62().next_31();
            }
          }

          tmp = listOf_0(tmp_0);
          break;
        default:tmp = toMutableList_1(_this_);
          break;
      }
      return tmp;
    } else {
    }
    return optimizeReadOnlyList(toMutableList_0(_this_));
  }
  function toMutableList_0(_this_) {
    if (isInterface(_this_, Collection))
      return toMutableList_1(_this_);
    else {
    }
    return toCollection_0(_this_, ArrayList_init_$Create$());
  }
  function filterNotNullTo(_this_, destination) {
    var tmp0_iterator = _this_.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var element = tmp0_iterator.next_31();
      if (!(element == null)) {
        destination.add_32(element);
        Unit_getInstance();
      }}
    return destination;
  }
  function toMutableList_1(_this_) {
    return ArrayList_init_$Create$_1(_this_);
  }
  function single_1(_this_) {
    var tmp0_subject = _this_;
    if (isInterface(tmp0_subject, List))
      return single_0(_this_);
    else {
      {
        var iterator = _this_.iterator_62();
        if (!iterator.hasNext_29())
          throw NoSuchElementException_init_$Create$_0('Collection is empty.');
        var single_3 = iterator.next_31();
        if (iterator.hasNext_29())
          throw IllegalArgumentException_init_$Create$_0('Collection has more than one element.');
        return single_3;
      }
    }
  }
  function last(_this_) {
    if (_this_.isEmpty_50())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this_.get_77(_get_lastIndex__0(_this_));
  }
  function lastOrNull(_this_) {
    return _this_.isEmpty_50() ? null : _this_.get_77(_this_._get_size__48() - 1 | 0);
  }
  function minOrNull(_this_) {
    var iterator = _this_.iterator_62();
    if (!iterator.hasNext_29())
      return null;
    var min = iterator.next_31();
    while (iterator.hasNext_29()) {
      var e = iterator.next_31();
      if (compareTo(min, e) > 0)
        min = e;
    }
    return min;
  }
  function _no_name_provided__1($this_asSequence) {
    this._$this_asSequence = $this_asSequence;
  }
  _no_name_provided__1.prototype.iterator_2_1 = function () {
    return this._$this_asSequence.iterator_62();
  };
  _no_name_provided__1.prototype.iterator_62 = function () {
    return this.iterator_2_1();
  };
  _no_name_provided__1.$metadata$ = {
    simpleName: '<no name provided>_1',
    kind: 'class',
    interfaces: [Sequence]
  };
  function toList_1(_this_) {
    if (_this_._get_size__48() === 0)
      return emptyList();
    var iterator = _this_._get_entries__8().iterator_62();
    if (!iterator.hasNext_29())
      return emptyList();
    var first_1 = iterator.next_31();
    if (!iterator.hasNext_29()) {
      return listOf_0(new Pair(first_1._get_key__52(), first_1._get_value__27()));
    }var result = ArrayList_init_$Create$_0(_this_._get_size__48());
    result.add_32(new Pair(first_1._get_key__52(), first_1._get_value__27()));
    Unit_getInstance();
    do {
      var tmp0_toPair_0 = iterator.next_31();
      result.add_32(new Pair(tmp0_toPair_0._get_key__52(), tmp0_toPair_0._get_value__27()));
      Unit_getInstance();
    }
     while (iterator.hasNext_29());
    return result;
  }
  function until(_this_, to_1) {
    if (to_1 <= IntCompanionObject_getInstance()._MIN_VALUE_5)
      return Companion_getInstance_10()._EMPTY;
    return numberRangeToNumber(_this_, to_1 - 1 | 0);
  }
  function coerceAtMost(_this_, maximumValue) {
    return _this_ > maximumValue ? maximumValue : _this_;
  }
  function step(_this_, step_0) {
    checkStepIsPositive(step_0 > 0, step_0);
    return Companion_getInstance_8().fromClosedRange(_this_._first_1, _this_._last, _this_._step_1 > 0 ? step_0 : -step_0 | 0);
  }
  function coerceAtLeast(_this_, minimumValue) {
    return _this_ < minimumValue ? minimumValue : _this_;
  }
  function coerceIn(_this_, minimumValue, maximumValue) {
    if (minimumValue > maximumValue)
      throw IllegalArgumentException_init_$Create$_0('' + 'Cannot coerce value to an empty range: maximum ' + maximumValue + ' is less than minimum ' + minimumValue + '.');
    if (_this_ < minimumValue)
      return minimumValue;
    if (_this_ > maximumValue)
      return maximumValue;
    return _this_;
  }
  function downTo(_this_, to_1) {
    return Companion_getInstance_8().fromClosedRange(_this_, to_1, -1);
  }
  function coerceIn_0(_this_, minimumValue, maximumValue) {
    if (minimumValue.compareTo_59(maximumValue) > 0)
      throw IllegalArgumentException_init_$Create$_0('' + 'Cannot coerce value to an empty range: maximum ' + maximumValue + ' is less than minimum ' + minimumValue + '.');
    if (_this_.compareTo_59(minimumValue) < 0)
      return minimumValue;
    if (_this_.compareTo_59(maximumValue) > 0)
      return maximumValue;
    return _this_;
  }
  function coerceAtMost_0(_this_, maximumValue) {
    return _this_.compareTo_59(maximumValue) > 0 ? maximumValue : _this_;
  }
  function map(_this_, transform) {
    return new TransformingSequence(_this_, transform);
  }
  function toList_2(_this_) {
    return optimizeReadOnlyList(toMutableList_2(_this_));
  }
  function mapNotNull(_this_, transform) {
    return filterNotNull_0(new TransformingSequence(_this_, transform));
  }
  function asIterable(_this_) {
    return new _no_name_provided__1_0(_this_);
  }
  function toMutableList_2(_this_) {
    return toCollection_1(_this_, ArrayList_init_$Create$());
  }
  function filterNotNull_0(_this_) {
    var tmp = filterNot(_this_, _no_name_provided_$factory_0());
    return isInterface(tmp, Sequence) ? tmp : THROW_CCE();
  }
  function toCollection_1(_this_, destination) {
    var tmp0_iterator = _this_.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var item = tmp0_iterator.next_31();
      destination.add_32(item);
      Unit_getInstance();
    }
    return destination;
  }
  function filterNot(_this_, predicate) {
    return new FilteringSequence(_this_, false, predicate);
  }
  function _no_name_provided__1_0($this_asIterable) {
    this._$this_asIterable = $this_asIterable;
  }
  _no_name_provided__1_0.prototype.iterator_2_1 = function () {
    return this._$this_asIterable.iterator_62();
  };
  _no_name_provided__1_0.prototype.iterator_62 = function () {
    return this.iterator_2_1();
  };
  _no_name_provided__1_0.$metadata$ = {
    simpleName: '<no name provided>_1',
    kind: 'class',
    interfaces: [Iterable_0]
  };
  function _no_name_provided__0() {
  }
  _no_name_provided__0.prototype.invoke_1 = function (it) {
    return it == null;
  };
  _no_name_provided__0.prototype.invoke_420 = function (p1) {
    return this.invoke_1((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__0.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_0() {
    var i = new _no_name_provided__0();
    return function (p1) {
      return i.invoke_1(p1);
    };
  }
  function plus_2(_this_, elements) {
    var tmp0_safe_receiver = collectionSizeOrNull(elements);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = _this_._get_size__48() + tmp0_safe_receiver | 0;
    }
    var tmp1_elvis_lhs = tmp;
    var result = LinkedHashSet_init_$Create$_1(mapCapacity(tmp1_elvis_lhs == null ? imul(_this_._get_size__48(), 2) : tmp1_elvis_lhs));
    result.addAll_23(_this_);
    Unit_getInstance();
    addAll(result, elements);
    Unit_getInstance();
    return result;
  }
  function first_0(_this_) {
    if (charSequenceLength(_this_) === 0)
      throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
    else {
    }
    return charSequenceGet(_this_, 0);
  }
  function last_0(_this_) {
    if (charSequenceLength(_this_) === 0)
      throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
    else {
    }
    return charSequenceGet(_this_, _get_lastIndex__1(_this_));
  }
  function take(_this_, n) {
    var tmp0_require_0 = n >= 0;
    if (!tmp0_require_0) {
      var message_2 = '' + 'Requested character count ' + n + ' is less than zero.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2));
    }var tmp1_substring_0 = 0;
    var tmp2_substring_0 = coerceAtMost(n, _this_.length);
    return _this_.substring(tmp1_substring_0, tmp2_substring_0);
  }
  function single_2(_this_) {
    var tmp0_subject = charSequenceLength(_this_);
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
      case 1:
        tmp = charSequenceGet(_this_, 0);
        break;
      default:throw IllegalArgumentException_init_$Create$_0('Char sequence has more than one element.');
    }
    return tmp;
  }
  function dropLast(_this_, n) {
    var tmp0_require_0 = n >= 0;
    if (!tmp0_require_0) {
      var message_2 = '' + 'Requested character count ' + n + ' is less than zero.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2));
    }return take(_this_, coerceAtLeast(_this_.length - n | 0, 0));
  }
  function drop(_this_, n) {
    var tmp0_require_0 = n >= 0;
    if (!tmp0_require_0) {
      var message_2 = '' + 'Requested character count ' + n + ' is less than zero.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2));
    }var tmp1_substring_0 = coerceAtMost(n, _this_.length);
    return _this_.substring(tmp1_substring_0);
  }
  function _no_name_provided__2(this$0) {
    this._this$0 = this$0;
  }
  _no_name_provided__2.prototype.invoke_3 = function (it) {
    return it === this._this$0 ? '(this Collection)' : toString_0(it);
  };
  _no_name_provided__2.prototype.invoke_420 = function (p1) {
    return this.invoke_3((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__2.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function AbstractCollection() {
  }
  AbstractCollection.prototype.contains_48 = function (element) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (isInterface(this, Collection)) {
        tmp = this.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = this.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (equals_1(element_2, element)) {
          tmp$ret$0 = true;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = false;
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractCollection.prototype.containsAll_37 = function (elements) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = true;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = elements.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (!this.contains_48(element_2)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractCollection.prototype.isEmpty_50 = function () {
    return this._get_size__48() === 0;
  };
  AbstractCollection.prototype.toString = function () {
    return joinToString$default_0(this, ', ', '[', ']', 0, null, _no_name_provided_$factory_1(this), 24, null);
  };
  AbstractCollection.prototype.toArray = function () {
    return copyToArrayImpl_0(this);
  };
  AbstractCollection.$metadata$ = {
    simpleName: 'AbstractCollection',
    kind: 'class',
    interfaces: [Collection]
  };
  function _no_name_provided_$factory_1(this$0) {
    var i = new _no_name_provided__2(this$0);
    return function (p1) {
      return i.invoke_3(p1);
    };
  }
  function Companion_0() {
    Companion_instance = this;
  }
  Companion_0.prototype.checkElementIndex = function (index, size_0) {
    if (index < 0 ? true : index >= size_0) {
      throw IndexOutOfBoundsException_init_$Create$_0('' + 'index: ' + index + ', size: ' + size_0);
    }};
  Companion_0.prototype.checkPositionIndex = function (index, size_0) {
    if (index < 0 ? true : index > size_0) {
      throw IndexOutOfBoundsException_init_$Create$_0('' + 'index: ' + index + ', size: ' + size_0);
    }};
  Companion_0.prototype.checkRangeIndexes = function (fromIndex, toIndex, size_0) {
    if (fromIndex < 0 ? true : toIndex > size_0) {
      throw IndexOutOfBoundsException_init_$Create$_0('' + 'fromIndex: ' + fromIndex + ', toIndex: ' + toIndex + ', size: ' + size_0);
    }if (fromIndex > toIndex) {
      throw IllegalArgumentException_init_$Create$_0('' + 'fromIndex: ' + fromIndex + ' > toIndex: ' + toIndex);
    }};
  Companion_0.prototype.checkBoundsIndexes = function (startIndex, endIndex, size_0) {
    if (startIndex < 0 ? true : endIndex > size_0) {
      throw IndexOutOfBoundsException_init_$Create$_0('' + 'startIndex: ' + startIndex + ', endIndex: ' + endIndex + ', size: ' + size_0);
    }if (startIndex > endIndex) {
      throw IllegalArgumentException_init_$Create$_0('' + 'startIndex: ' + startIndex + ' > endIndex: ' + endIndex);
    }};
  Companion_0.prototype.orderedHashCode = function (c) {
    var hashCode_1 = 1;
    var tmp0_iterator = c.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var e = tmp0_iterator.next_31();
      var tmp = imul(31, hashCode_1);
      var tmp1_safe_receiver = e;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode(tmp1_safe_receiver);
      hashCode_1 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode_1;
  };
  Companion_0.prototype.orderedEquals = function (c, other) {
    if (!(c._get_size__48() === other._get_size__48()))
      return false;
    var otherIterator = other.iterator_62();
    var tmp0_iterator = c.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var elem = tmp0_iterator.next_31();
      var elemOther = otherIterator.next_31();
      if (!equals_1(elem, elemOther)) {
        return false;
      }}
    return true;
  };
  Companion_0.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance;
  function Companion_getInstance() {
    if (Companion_instance == null)
      new Companion_0();
    return Companion_instance;
  }
  function _no_name_provided__3($entryIterator) {
    this._$entryIterator = $entryIterator;
  }
  _no_name_provided__3.prototype.hasNext_29 = function () {
    return this._$entryIterator.hasNext_29();
  };
  _no_name_provided__3.prototype.next_31 = function () {
    return this._$entryIterator.next_31()._get_key__52();
  };
  _no_name_provided__3.$metadata$ = {
    kind: 'class',
    interfaces: [Iterator_0]
  };
  function _no_name_provided__4($entryIterator) {
    this._$entryIterator_0 = $entryIterator;
  }
  _no_name_provided__4.prototype.hasNext_29 = function () {
    return this._$entryIterator_0.hasNext_29();
  };
  _no_name_provided__4.prototype.next_31 = function () {
    return this._$entryIterator_0.next_31()._get_value__27();
  };
  _no_name_provided__4.$metadata$ = {
    kind: 'class',
    interfaces: [Iterator_0]
  };
  function toString($this, o) {
    return o === $this ? '(this Map)' : toString_0(o);
  }
  function implFindEntry($this, key) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_firstOrNull_0 = $this._get_entries__8();
      var tmp0_iterator_1 = tmp0_firstOrNull_0.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (equals_1(element_2._get_key__52(), key)) {
          tmp$ret$0 = element_2;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = null;
    }
     while (false);
    return tmp$ret$0;
  }
  function Companion_1() {
    Companion_instance_0 = this;
  }
  Companion_1.prototype.entryHashCode = function (e) {
    var tmp2_safe_receiver_4 = e._get_key__52();
    var tmp3_elvis_lhs_3 = tmp2_safe_receiver_4 == null ? null : hashCode(tmp2_safe_receiver_4);
    var tmp = tmp3_elvis_lhs_3 == null ? 0 : tmp3_elvis_lhs_3;
    var tmp0_safe_receiver_6 = e._get_value__27();
    var tmp1_elvis_lhs_5 = tmp0_safe_receiver_6 == null ? null : hashCode(tmp0_safe_receiver_6);
    return tmp ^ (tmp1_elvis_lhs_5 == null ? 0 : tmp1_elvis_lhs_5);
  };
  Companion_1.prototype.entryToString = function (e) {
    return '' + e._get_key__52() + '=' + e._get_value__27();
  };
  Companion_1.prototype.entryEquals = function (e, other) {
    if (!(!(other == null) ? isInterface(other, Entry) : false))
      return false;
    else {
    }
    return equals_1(e._get_key__52(), other._get_key__52()) ? equals_1(e._get_value__27(), other._get_value__27()) : false;
  };
  Companion_1.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_0;
  function Companion_getInstance_0() {
    if (Companion_instance_0 == null)
      new Companion_1();
    return Companion_instance_0;
  }
  function _no_name_provided__5(this$0) {
    this._this$0_0 = this$0;
    AbstractSet.call(this);
  }
  _no_name_provided__5.prototype.contains_26 = function (element) {
    return this._this$0_0.containsKey_12(element);
  };
  _no_name_provided__5.prototype.contains_48 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    else {
    }
    return this.contains_26((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  _no_name_provided__5.prototype.iterator_62 = function () {
    var entryIterator = this._this$0_0._get_entries__8().iterator_62();
    return new _no_name_provided__3(entryIterator);
  };
  _no_name_provided__5.prototype._get_size__48 = function () {
    return this._this$0_0._get_size__48();
  };
  _no_name_provided__5.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__6(this$0) {
    this._this$0_1 = this$0;
  }
  _no_name_provided__6.prototype.invoke_5 = function (it) {
    return this._this$0_1.toString_0(it);
  };
  _no_name_provided__6.prototype.invoke_420 = function (p1) {
    return this.invoke_5((!(p1 == null) ? isInterface(p1, Entry) : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__6.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__7(this$0) {
    this._this$0_2 = this$0;
    AbstractCollection.call(this);
  }
  _no_name_provided__7.prototype.contains_19 = function (element) {
    return this._this$0_2.containsValue_2(element);
  };
  _no_name_provided__7.prototype.contains_48 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    else {
    }
    return this.contains_19((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  _no_name_provided__7.prototype.iterator_62 = function () {
    var entryIterator = this._this$0_2._get_entries__8().iterator_62();
    return new _no_name_provided__4(entryIterator);
  };
  _no_name_provided__7.prototype._get_size__48 = function () {
    return this._this$0_2._get_size__48();
  };
  _no_name_provided__7.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function AbstractMap() {
    Companion_getInstance_0();
    this.__keys = null;
    this.__values = null;
  }
  AbstractMap.prototype.containsKey_12 = function (key) {
    return !(implFindEntry(this, key) == null);
  };
  AbstractMap.prototype.containsValue_2 = function (value) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_any_0 = this._get_entries__8();
      var tmp;
      if (isInterface(tmp0_any_0, Collection)) {
        tmp = tmp0_any_0.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = tmp0_any_0.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (equals_1(element_2._get_value__27(), value)) {
          tmp$ret$0 = true;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = false;
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractMap.prototype.containsEntry_5 = function (entry) {
    if (!(!(entry == null) ? isInterface(entry, Entry) : false))
      return false;
    else {
    }
    var key = entry._get_key__52();
    var value = entry._get_value__27();
    var ourValue = (isInterface(this, Map_0) ? this : THROW_CCE()).get_65(key);
    if (!equals_1(value, ourValue)) {
      return false;
    }var tmp;
    if (ourValue == null) {
      tmp = !(isInterface(this, Map_0) ? this : THROW_CCE()).containsKey_12(key);
    } else {
      tmp = false;
    }
    if (tmp) {
      return false;
    } else {
    }
    return true;
  };
  AbstractMap.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Map_0) : false))
      return false;
    else {
    }
    if (!(this._get_size__48() === other._get_size__48()))
      return false;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_all_0 = other._get_entries__8();
      var tmp;
      if (isInterface(tmp0_all_0, Collection)) {
        tmp = tmp0_all_0.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = true;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = tmp0_all_0.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (!this.containsEntry_5(element_2)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractMap.prototype.get_65 = function (key) {
    var tmp0_safe_receiver = implFindEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_value__27();
  };
  AbstractMap.prototype.hashCode = function () {
    return hashCode(this._get_entries__8());
  };
  AbstractMap.prototype.isEmpty_50 = function () {
    return this._get_size__48() === 0;
  };
  AbstractMap.prototype._get_size__48 = function () {
    return this._get_entries__8()._get_size__48();
  };
  AbstractMap.prototype._get_keys__8 = function () {
    if (this.__keys == null) {
      var tmp = this;
      tmp.__keys = new _no_name_provided__5(this);
    }return ensureNotNull(this.__keys);
  };
  AbstractMap.prototype.toString = function () {
    var tmp = this._get_entries__8();
    return joinToString$default_0(tmp, ', ', '{', '}', 0, null, _no_name_provided_$factory_2(this), 24, null);
  };
  AbstractMap.prototype.toString_0 = function (entry) {
    return toString(this, entry._get_key__52()) + '=' + toString(this, entry._get_value__27());
  };
  AbstractMap.prototype._get_values__14 = function () {
    if (this.__values == null) {
      var tmp = this;
      tmp.__values = new _no_name_provided__7(this);
    }return ensureNotNull(this.__values);
  };
  AbstractMap.$metadata$ = {
    simpleName: 'AbstractMap',
    kind: 'class',
    interfaces: [Map_0]
  };
  function _no_name_provided_$factory_2(this$0) {
    var i = new _no_name_provided__6(this$0);
    return function (p1) {
      return i.invoke_5(p1);
    };
  }
  function Companion_2() {
    Companion_instance_1 = this;
  }
  Companion_2.prototype.unorderedHashCode = function (c) {
    var hashCode_1 = 0;
    var tmp0_iterator = c.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var element = tmp0_iterator.next_31();
      var tmp = hashCode_1;
      var tmp1_safe_receiver = element;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode(tmp1_safe_receiver);
      hashCode_1 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode_1;
  };
  Companion_2.prototype.setEquals = function (c, other) {
    if (!(c._get_size__48() === other._get_size__48()))
      return false;
    return c.containsAll_37(other);
  };
  Companion_2.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_1;
  function Companion_getInstance_1() {
    if (Companion_instance_1 == null)
      new Companion_2();
    return Companion_instance_1;
  }
  function AbstractSet() {
    Companion_getInstance_1();
    AbstractCollection.call(this);
  }
  AbstractSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    else {
    }
    return Companion_getInstance_1().setEquals(this, other);
  };
  AbstractSet.prototype.hashCode = function () {
    return Companion_getInstance_1().unorderedHashCode(this);
  };
  AbstractSet.$metadata$ = {
    simpleName: 'AbstractSet',
    kind: 'class',
    interfaces: [Set]
  };
  function listOf(elements) {
    return elements.length > 0 ? asList(elements) : emptyList();
  }
  function emptyList() {
    return EmptyList_getInstance();
  }
  function optimizeReadOnlyList(_this_) {
    var tmp0_subject = _this_._get_size__48();
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this_.get_77(0));
      default:return _this_;
    }
  }
  function _get_lastIndex__0(_this_) {
    return _this_._get_size__48() - 1 | 0;
  }
  function EmptyIterator() {
    EmptyIterator_instance = this;
  }
  EmptyIterator.prototype.hasNext_29 = function () {
    return false;
  };
  EmptyIterator.prototype.next_31 = function () {
    throw NoSuchElementException_init_$Create$();
  };
  EmptyIterator.$metadata$ = {
    simpleName: 'EmptyIterator',
    kind: 'object',
    interfaces: [ListIterator]
  };
  var EmptyIterator_instance;
  function EmptyIterator_getInstance() {
    if (EmptyIterator_instance == null)
      new EmptyIterator();
    return EmptyIterator_instance;
  }
  function EmptyList() {
    EmptyList_instance = this;
    this._serialVersionUID = new Long(-1478467534, -1720727600);
  }
  EmptyList.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, List) : false) {
      tmp = other.isEmpty_50();
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  EmptyList.prototype.hashCode = function () {
    return 1;
  };
  EmptyList.prototype.toString = function () {
    return '[]';
  };
  EmptyList.prototype._get_size__48 = function () {
    return 0;
  };
  EmptyList.prototype.isEmpty_50 = function () {
    return true;
  };
  EmptyList.prototype.contains_9 = function (element) {
    return false;
  };
  EmptyList.prototype.contains_48 = function (element) {
    if (true)
      return false;
    else {}
    var tmp;
    if (false) {} else {
      {
        tmp = THROW_CCE();
      }
    }
    return this.contains_9(tmp);
  };
  EmptyList.prototype.containsAll_7 = function (elements) {
    return elements.isEmpty_50();
  };
  EmptyList.prototype.containsAll_37 = function (elements) {
    return this.containsAll_7(elements);
  };
  EmptyList.prototype.get_77 = function (index) {
    throw IndexOutOfBoundsException_init_$Create$_0('' + "Empty list doesn't contain element at index " + index + '.');
  };
  EmptyList.prototype.iterator_62 = function () {
    return EmptyIterator_getInstance();
  };
  EmptyList.$metadata$ = {
    simpleName: 'EmptyList',
    kind: 'object',
    interfaces: [List, Serializable, RandomAccess]
  };
  var EmptyList_instance;
  function EmptyList_getInstance() {
    if (EmptyList_instance == null)
      new EmptyList();
    return EmptyList_instance;
  }
  function throwIndexOverflow() {
    throw ArithmeticException_init_$Create$('Index overflow has happened.');
  }
  function arrayListOf(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function asCollection(_this_) {
    return new ArrayAsCollection(_this_, false);
  }
  function ArrayAsCollection(values_4, isVarargs) {
    this._values = values_4;
    this._isVarargs = isVarargs;
  }
  ArrayAsCollection.prototype._get_size__48 = function () {
    return this._values.length;
  };
  ArrayAsCollection.prototype.isEmpty_50 = function () {
    var tmp0_isEmpty_0 = this._values;
    return tmp0_isEmpty_0.length === 0;
  };
  ArrayAsCollection.prototype.contains_35 = function (element) {
    return contains(this._values, element);
  };
  ArrayAsCollection.prototype.containsAll_26 = function (elements) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = true;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = elements.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (!this.contains_35(element_2)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.containsAll_37 = function (elements) {
    return this.containsAll_26(elements);
  };
  ArrayAsCollection.prototype.iterator_62 = function () {
    return arrayIterator(this._values);
  };
  ArrayAsCollection.$metadata$ = {
    simpleName: 'ArrayAsCollection',
    kind: 'class',
    interfaces: [Collection]
  };
  function mutableListOf(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function Grouping() {
  }
  Grouping.$metadata$ = {
    simpleName: 'Grouping',
    kind: 'interface',
    interfaces: []
  };
  function IndexedValue(index, value) {
    this._index = index;
    this._value = value;
  }
  IndexedValue.prototype.toString = function () {
    return '' + 'IndexedValue(index=' + this._index + ', value=' + this._value + ')';
  };
  IndexedValue.prototype.hashCode = function () {
    var result = this._index;
    result = imul(result, 31) + (this._value == null ? 0 : hashCode(this._value)) | 0;
    return result;
  };
  IndexedValue.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof IndexedValue))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof IndexedValue ? other : THROW_CCE();
    if (!(this._index === tmp0_other_with_cast._index))
      return false;
    if (!equals_1(this._value, tmp0_other_with_cast._value))
      return false;
    return true;
  };
  IndexedValue.$metadata$ = {
    simpleName: 'IndexedValue',
    kind: 'class',
    interfaces: []
  };
  function collectionSizeOrDefault(_this_, default_0) {
    var tmp;
    if (isInterface(_this_, Collection)) {
      tmp = _this_._get_size__48();
    } else {
      {
        tmp = default_0;
      }
    }
    return tmp;
  }
  function collectionSizeOrNull(_this_) {
    var tmp;
    if (isInterface(_this_, Collection)) {
      tmp = _this_._get_size__48();
    } else {
      {
        tmp = null;
      }
    }
    return tmp;
  }
  function IndexingIterable(iteratorFactory) {
    this._iteratorFactory = iteratorFactory;
  }
  IndexingIterable.prototype.iterator_62 = function () {
    return new IndexingIterator(this._iteratorFactory());
  };
  IndexingIterable.$metadata$ = {
    simpleName: 'IndexingIterable',
    kind: 'class',
    interfaces: [Iterable_0]
  };
  function IndexingIterator(iterator) {
    this._iterator = iterator;
    this._index_0 = 0;
  }
  IndexingIterator.prototype.hasNext_29 = function () {
    return this._iterator.hasNext_29();
  };
  IndexingIterator.prototype.next_31 = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this._index_0;
    tmp0_this._index_0 = tmp1 + 1 | 0;
    return new IndexedValue(checkIndexOverflow(tmp1), this._iterator.next_31());
  };
  IndexingIterator.$metadata$ = {
    simpleName: 'IndexingIterator',
    kind: 'class',
    interfaces: [Iterator_0]
  };
  function getOrImplicitDefault(_this_, key) {
    if (isInterface(_this_, MapWithDefault))
      return _this_.getOrImplicitDefault(key);
    else {
    }
    var tmp$ret$0;
    l$ret$1: do {
      var value_1 = _this_.get_65(key);
      if (value_1 == null ? !_this_.containsKey_12(key) : false) {
        throw NoSuchElementException_init_$Create$_0('' + 'Key ' + key + ' is missing in the map.');
      } else {
        tmp$ret$0 = (value_1 == null ? true : isObject(value_1)) ? value_1 : THROW_CCE();
        break l$ret$1;
      }
    }
     while (false);
    return tmp$ret$0;
  }
  function MapWithDefault() {
  }
  MapWithDefault.$metadata$ = {
    simpleName: 'MapWithDefault',
    kind: 'interface',
    interfaces: [Map_0]
  };
  function mapOf(pairs) {
    return pairs.length > 0 ? toMap_0(pairs, LinkedHashMap_init_$Create$_1(mapCapacity(pairs.length))) : emptyMap();
  }
  function emptyMap() {
    var tmp = EmptyMap_getInstance();
    return isInterface(tmp, Map_0) ? tmp : THROW_CCE();
  }
  function toMap(_this_) {
    if (isInterface(_this_, Collection)) {
      var tmp0_subject = _this_._get_size__48();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyMap();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this_, List)) {
            tmp_0 = _this_.get_77(0);
          } else {
            {
              tmp_0 = _this_.iterator_62().next_31();
            }
          }

          tmp = mapOf_0(tmp_0);
          break;
        default:tmp = toMap_1(_this_, LinkedHashMap_init_$Create$_1(mapCapacity(_this_._get_size__48())));
          break;
      }
      return tmp;
    } else {
    }
    return optimizeReadOnlyMap(toMap_1(_this_, LinkedHashMap_init_$Create$()));
  }
  function toMap_0(_this_, destination) {
    putAll(destination, _this_);
    return destination;
  }
  function EmptyMap() {
    EmptyMap_instance = this;
    this._serialVersionUID_0 = new Long(-888910638, 1920087921);
  }
  EmptyMap.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Map_0) : false) {
      tmp = other.isEmpty_50();
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  EmptyMap.prototype.hashCode = function () {
    return 0;
  };
  EmptyMap.prototype.toString = function () {
    return '{}';
  };
  EmptyMap.prototype._get_size__48 = function () {
    return 0;
  };
  EmptyMap.prototype.isEmpty_50 = function () {
    return true;
  };
  EmptyMap.prototype.containsKey_0 = function (key) {
    return false;
  };
  EmptyMap.prototype.containsKey_12 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return false;
    else {
    }
    return this.containsKey_0((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.get_2 = function (key) {
    return null;
  };
  EmptyMap.prototype.get_65 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return null;
    else {
    }
    return this.get_2((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype._get_entries__8 = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.prototype._get_keys__8 = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.prototype._get_values__14 = function () {
    return EmptyList_getInstance();
  };
  EmptyMap.$metadata$ = {
    simpleName: 'EmptyMap',
    kind: 'object',
    interfaces: [Map_0, Serializable]
  };
  var EmptyMap_instance;
  function EmptyMap_getInstance() {
    if (EmptyMap_instance == null)
      new EmptyMap();
    return EmptyMap_instance;
  }
  function toMap_1(_this_, destination) {
    putAll_0(destination, _this_);
    return destination;
  }
  function optimizeReadOnlyMap(_this_) {
    var tmp0_subject = _this_._get_size__48();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = emptyMap();
        break;
      case 1:
        tmp = _this_;
        break;
      default:tmp = _this_;
        break;
    }
    return tmp;
  }
  function putAll(_this_, pairs) {
    var indexedObject = pairs;
    var inductionVariable = 0;
    var last_1 = indexedObject.length;
    while (inductionVariable < last_1) {
      var tmp1_loop_parameter = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var key = tmp1_loop_parameter.component1_2();
      var value = tmp1_loop_parameter.component2_2();
      _this_.put_10(key, value);
      Unit_getInstance();
    }
  }
  function putAll_0(_this_, pairs) {
    var tmp0_iterator = pairs.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var tmp1_loop_parameter = tmp0_iterator.next_31();
      var key = tmp1_loop_parameter.component1_2();
      var value = tmp1_loop_parameter.component2_2();
      _this_.put_10(key, value);
      Unit_getInstance();
    }
  }
  function hashMapOf(pairs) {
    var tmp0_apply_0 = HashMap_init_$Create$_1(mapCapacity(pairs.length));
    putAll(tmp0_apply_0, pairs);
    return tmp0_apply_0;
  }
  function toMap_2(_this_) {
    var tmp0_subject = _this_._get_size__48();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = emptyMap();
        break;
      case 1:
        tmp = toMutableMap(_this_);
        break;
      default:tmp = toMutableMap(_this_);
        break;
    }
    return tmp;
  }
  function getValue(_this_, key) {
    return getOrImplicitDefault(_this_, key);
  }
  function toMutableMap(_this_) {
    return LinkedHashMap_init_$Create$_2(_this_);
  }
  function addAll(_this_, elements) {
    var tmp0_subject = elements;
    if (isInterface(tmp0_subject, Collection))
      return _this_.addAll_23(elements);
    else {
      {
        var result = false;
        var tmp1_iterator = elements.iterator_62();
        while (tmp1_iterator.hasNext_29()) {
          var item = tmp1_iterator.next_31();
          if (_this_.add_32(item))
            result = true;
        }
        return result;
      }
    }
  }
  function addAll_0(_this_, elements) {
    return _this_.addAll_23(asList(elements));
  }
  function Sequence() {
  }
  Sequence.$metadata$ = {
    simpleName: 'Sequence',
    kind: 'interface',
    interfaces: []
  };
  function _no_name_provided__8(this$0) {
    this._this$0_3 = this$0;
    this._iterator_0 = this._this$0_3._sequence.iterator_62();
  }
  _no_name_provided__8.prototype.next_31 = function () {
    return this._this$0_3._transformer(this._iterator_0.next_31());
  };
  _no_name_provided__8.prototype.hasNext_29 = function () {
    return this._iterator_0.hasNext_29();
  };
  _no_name_provided__8.$metadata$ = {
    kind: 'class',
    interfaces: [Iterator_0]
  };
  function TransformingSequence(sequence, transformer) {
    this._sequence = sequence;
    this._transformer = transformer;
  }
  TransformingSequence.prototype.iterator_62 = function () {
    return new _no_name_provided__8(this);
  };
  TransformingSequence.$metadata$ = {
    simpleName: 'TransformingSequence',
    kind: 'class',
    interfaces: [Sequence]
  };
  function calcNext($this) {
    while ($this._iterator_1.hasNext_29()) {
      var item = $this._iterator_1.next_31();
      if ($this._this$0_4._predicate(item) === $this._this$0_4._sendWhen) {
        $this._nextItem = item;
        $this._nextState = 1;
        return Unit_getInstance();
      }}
    $this._nextState = 0;
  }
  function _no_name_provided__9(this$0) {
    this._this$0_4 = this$0;
    this._iterator_1 = this._this$0_4._sequence_0.iterator_62();
    this._nextState = -1;
    this._nextItem = null;
  }
  _no_name_provided__9.prototype.next_31 = function () {
    if (this._nextState === -1)
      calcNext(this);
    if (this._nextState === 0)
      throw NoSuchElementException_init_$Create$();
    var result = this._nextItem;
    this._nextItem = null;
    this._nextState = -1;
    return (result == null ? true : isObject(result)) ? result : THROW_CCE();
  };
  _no_name_provided__9.prototype.hasNext_29 = function () {
    if (this._nextState === -1)
      calcNext(this);
    return this._nextState === 1;
  };
  _no_name_provided__9.$metadata$ = {
    kind: 'class',
    interfaces: [Iterator_0]
  };
  function FilteringSequence(sequence, sendWhen, predicate) {
    this._sequence_0 = sequence;
    this._sendWhen = sendWhen;
    this._predicate = predicate;
  }
  FilteringSequence.prototype.iterator_62 = function () {
    return new _no_name_provided__9(this);
  };
  FilteringSequence.$metadata$ = {
    simpleName: 'FilteringSequence',
    kind: 'class',
    interfaces: [Sequence]
  };
  function setOf(elements) {
    return elements.length > 0 ? toSet(elements) : emptySet();
  }
  function emptySet() {
    return EmptySet_getInstance();
  }
  function optimizeReadOnlySet(_this_) {
    var tmp0_subject = _this_._get_size__48();
    switch (tmp0_subject) {
      case 0:
        return emptySet();
      case 1:
        return setOf_0(_this_.iterator_62().next_31());
      default:return _this_;
    }
  }
  function EmptySet() {
    EmptySet_instance = this;
    this._serialVersionUID_1 = new Long(1993859828, 793161749);
  }
  EmptySet.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Set) : false) {
      tmp = other.isEmpty_50();
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  EmptySet.prototype.hashCode = function () {
    return 0;
  };
  EmptySet.prototype.toString = function () {
    return '[]';
  };
  EmptySet.prototype._get_size__48 = function () {
    return 0;
  };
  EmptySet.prototype.isEmpty_50 = function () {
    return true;
  };
  EmptySet.prototype.contains_9 = function (element) {
    return false;
  };
  EmptySet.prototype.contains_48 = function (element) {
    if (true)
      return false;
    else {}
    var tmp;
    if (false) {} else {
      {
        tmp = THROW_CCE();
      }
    }
    return this.contains_9(tmp);
  };
  EmptySet.prototype.containsAll_7 = function (elements) {
    return elements.isEmpty_50();
  };
  EmptySet.prototype.containsAll_37 = function (elements) {
    return this.containsAll_7(elements);
  };
  EmptySet.prototype.iterator_62 = function () {
    return EmptyIterator_getInstance();
  };
  EmptySet.$metadata$ = {
    simpleName: 'EmptySet',
    kind: 'object',
    interfaces: [Set, Serializable]
  };
  var EmptySet_instance;
  function EmptySet_getInstance() {
    if (EmptySet_instance == null)
      new EmptySet();
    return EmptySet_instance;
  }
  function hashSetOf(elements) {
    return toCollection(elements, HashSet_init_$Create$_1(mapCapacity(elements.length)));
  }
  function compareValues(a, b) {
    if (a === b)
      return 0;
    if (a == null)
      return -1;
    if (b == null)
      return 1;
    return compareTo((!(a == null) ? isComparable(a) : false) ? a : THROW_CCE(), b);
  }
  function Continuation() {
  }
  Continuation.$metadata$ = {
    simpleName: 'Continuation',
    kind: 'interface',
    interfaces: []
  };
  function startCoroutine(_this_, receiver, completion) {
    var tmp0_resume_0 = intercepted(createCoroutineUnintercepted(_this_, receiver, completion));
    var tmp1_resume_0 = Unit_getInstance();
    var tmp0_success_0_1 = Companion_getInstance_3();
    tmp0_resume_0.resumeWith_46(_Result___init__impl_(Unit_getInstance()));
  }
  function Key() {
    Key_instance = this;
  }
  Key.$metadata$ = {
    simpleName: 'Key',
    kind: 'object',
    interfaces: [Key_0]
  };
  var Key_instance;
  function Key_getInstance() {
    if (Key_instance == null)
      new Key();
    return Key_instance;
  }
  function ContinuationInterceptor() {
  }
  ContinuationInterceptor.prototype.releaseInterceptedContinuation_9 = function (continuation) {
  };
  ContinuationInterceptor.prototype.get_63 = function (key) {
    if (key instanceof AbstractCoroutineContextKey) {
      var tmp;
      if (key.isSubKey_0(this._get_key__52())) {
        var tmp_0 = key.tryCast_0(this);
        tmp = (!(tmp_0 == null) ? isInterface(tmp_0, Element_0) : false) ? tmp_0 : null;
      } else {
        tmp = null;
      }
      return tmp;
    } else {
    }
    var tmp_1;
    if (Key_getInstance() === key) {
      tmp_1 = isInterface(this, Element_0) ? this : THROW_CCE();
    } else {
      tmp_1 = null;
    }
    return tmp_1;
  };
  ContinuationInterceptor.prototype.minusKey_29 = function (key) {
    if (key instanceof AbstractCoroutineContextKey) {
      return (key.isSubKey_0(this._get_key__52()) ? !(key.tryCast_0(this) == null) : false) ? EmptyCoroutineContext_getInstance() : this;
    } else {
    }
    return Key_getInstance() === key ? EmptyCoroutineContext_getInstance() : this;
  };
  ContinuationInterceptor.$metadata$ = {
    simpleName: 'ContinuationInterceptor',
    kind: 'interface',
    interfaces: [Element_0]
  };
  function Key_0() {
  }
  Key_0.$metadata$ = {
    simpleName: 'Key',
    kind: 'interface',
    interfaces: []
  };
  function Element_0() {
  }
  Element_0.prototype.get_63 = function (key) {
    var tmp;
    if (equals_1(this._get_key__52(), key)) {
      tmp = isInterface(this, Element_0) ? this : THROW_CCE();
    } else {
      tmp = null;
    }
    return tmp;
  };
  Element_0.prototype.fold_28 = function (initial, operation) {
    return operation(initial, this);
  };
  Element_0.prototype.minusKey_29 = function (key) {
    return equals_1(this._get_key__52(), key) ? EmptyCoroutineContext_getInstance() : this;
  };
  Element_0.$metadata$ = {
    simpleName: 'Element',
    kind: 'interface',
    interfaces: [CoroutineContext]
  };
  function _no_name_provided__10() {
  }
  _no_name_provided__10.prototype.invoke_7 = function (acc, element) {
    var removed = acc.minusKey_29(element._get_key__52());
    var tmp;
    if (removed === EmptyCoroutineContext_getInstance()) {
      tmp = element;
    } else {
      var interceptor = removed.get_63(Key_getInstance());
      var tmp_0;
      if (interceptor == null) {
        tmp_0 = new CombinedContext(removed, element);
      } else {
        var left = removed.minusKey_29(Key_getInstance());
        tmp_0 = left === EmptyCoroutineContext_getInstance() ? new CombinedContext(element, interceptor) : new CombinedContext(new CombinedContext(left, element), interceptor);
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  _no_name_provided__10.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? isInterface(p1, CoroutineContext) : false) ? p1 : THROW_CCE();
    return this.invoke_7(tmp, (!(p2 == null) ? isInterface(p2, Element_0) : false) ? p2 : THROW_CCE());
  };
  _no_name_provided__10.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function CoroutineContext() {
  }
  CoroutineContext.prototype.plus_31 = function (context) {
    var tmp;
    if (context === EmptyCoroutineContext_getInstance()) {
      tmp = this;
    } else {
      tmp = context.fold_28(this, _no_name_provided_$factory_3());
    }
    return tmp;
  };
  CoroutineContext.$metadata$ = {
    simpleName: 'CoroutineContext',
    kind: 'interface',
    interfaces: []
  };
  function _no_name_provided_$factory_3() {
    var i = new _no_name_provided__10();
    return function (p1, p2) {
      return i.invoke_7(p1, p2);
    };
  }
  function EmptyCoroutineContext() {
    EmptyCoroutineContext_instance = this;
    this._serialVersionUID_2 = new Long(0, 0);
  }
  EmptyCoroutineContext.prototype.get_63 = function (key) {
    return null;
  };
  EmptyCoroutineContext.prototype.fold_28 = function (initial, operation) {
    return initial;
  };
  EmptyCoroutineContext.prototype.plus_31 = function (context) {
    return context;
  };
  EmptyCoroutineContext.prototype.minusKey_29 = function (key) {
    return this;
  };
  EmptyCoroutineContext.prototype.hashCode = function () {
    return 0;
  };
  EmptyCoroutineContext.prototype.toString = function () {
    return 'EmptyCoroutineContext';
  };
  EmptyCoroutineContext.$metadata$ = {
    simpleName: 'EmptyCoroutineContext',
    kind: 'object',
    interfaces: [CoroutineContext, Serializable]
  };
  var EmptyCoroutineContext_instance;
  function EmptyCoroutineContext_getInstance() {
    if (EmptyCoroutineContext_instance == null)
      new EmptyCoroutineContext();
    return EmptyCoroutineContext_instance;
  }
  function size($this) {
    var cur = $this;
    var size_0 = 2;
    while (true) {
      var tmp = cur._left;
      var tmp0_elvis_lhs = tmp instanceof CombinedContext ? tmp : null;
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        return size_0;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      cur = tmp_0;
      var tmp1 = size_0;
      size_0 = tmp1 + 1 | 0;
      Unit_getInstance();
    }
  }
  function contains_0($this, element) {
    return equals_1($this.get_63(element._get_key__52()), element);
  }
  function containsAll($this, context) {
    var cur = context;
    while (true) {
      if (!contains_0($this, cur._element))
        return false;
      var next = cur._left;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        {
          return contains_0($this, isInterface(next, Element_0) ? next : THROW_CCE());
        }
      }
    }
  }
  function _no_name_provided__11() {
  }
  _no_name_provided__11.prototype.invoke_9 = function (acc, element) {
    var tmp;
    if (charSequenceLength(acc) === 0) {
      tmp = toString_1(element);
    } else {
      {
        tmp = '' + acc + ', ' + element;
      }
    }
    return tmp;
  };
  _no_name_provided__11.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? typeof p1 === 'string' : false) ? p1 : THROW_CCE();
    return this.invoke_9(tmp, (!(p2 == null) ? isInterface(p2, Element_0) : false) ? p2 : THROW_CCE());
  };
  _no_name_provided__11.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function CombinedContext(left, element) {
    this._left = left;
    this._element = element;
  }
  CombinedContext.prototype.get_63 = function (key) {
    var cur = this;
    while (true) {
      var tmp0_safe_receiver = cur._element.get_63(key);
      if (tmp0_safe_receiver == null)
        null;
      else {
        return tmp0_safe_receiver;
      }
      Unit_getInstance();
      var next = cur._left;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        {
          return next.get_63(key);
        }
      }
    }
  };
  CombinedContext.prototype.fold_28 = function (initial, operation) {
    return operation(this._left.fold_28(initial, operation), this._element);
  };
  CombinedContext.prototype.minusKey_29 = function (key) {
    var tmp0_safe_receiver = this._element.get_63(key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      return this._left;
    }
    Unit_getInstance();
    var newLeft = this._left.minusKey_29(key);
    return newLeft === this._left ? this : newLeft === EmptyCoroutineContext_getInstance() ? this._element : new CombinedContext(newLeft, this._element);
  };
  CombinedContext.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      if (other instanceof CombinedContext) {
        tmp_1 = size(other) === size(this);
      } else {
        {
          tmp_1 = false;
        }
      }
      if (tmp_1) {
        tmp_0 = containsAll(other, this);
      } else {
        {
          tmp_0 = false;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  CombinedContext.prototype.hashCode = function () {
    return hashCode(this._left) + hashCode(this._element) | 0;
  };
  CombinedContext.prototype.toString = function () {
    return '[' + this.fold_28('', _no_name_provided_$factory_4()) + ']';
  };
  CombinedContext.$metadata$ = {
    simpleName: 'CombinedContext',
    kind: 'class',
    interfaces: [CoroutineContext, Serializable]
  };
  function AbstractCoroutineContextKey(baseKey, safeCast) {
    this._safeCast = safeCast;
    var tmp = this;
    var tmp_0;
    if (baseKey instanceof AbstractCoroutineContextKey) {
      tmp_0 = baseKey._topmostKey;
    } else {
      {
        tmp_0 = baseKey;
      }
    }
    tmp._topmostKey = tmp_0;
  }
  AbstractCoroutineContextKey.prototype.tryCast_0 = function (element) {
    return this._safeCast(element);
  };
  AbstractCoroutineContextKey.prototype.isSubKey_0 = function (key) {
    return key === this ? true : this._topmostKey === key;
  };
  AbstractCoroutineContextKey.$metadata$ = {
    simpleName: 'AbstractCoroutineContextKey',
    kind: 'class',
    interfaces: [Key_0]
  };
  function AbstractCoroutineContextElement(key) {
    this._key = key;
  }
  AbstractCoroutineContextElement.prototype._get_key__52 = function () {
    return this._key;
  };
  AbstractCoroutineContextElement.$metadata$ = {
    simpleName: 'AbstractCoroutineContextElement',
    kind: 'class',
    interfaces: [Element_0]
  };
  function _no_name_provided_$factory_4() {
    var i = new _no_name_provided__11();
    return function (p1, p2) {
      return i.invoke_9(p1, p2);
    };
  }
  function _get_COROUTINE_SUSPENDED_() {
    return CoroutineSingletons_COROUTINE_SUSPENDED_getInstance();
  }
  var CoroutineSingletons_COROUTINE_SUSPENDED_instance;
  var CoroutineSingletons_UNDECIDED_instance;
  var CoroutineSingletons_RESUMED_instance;
  var CoroutineSingletons_entriesInitialized;
  function CoroutineSingletons_initEntries() {
    if (CoroutineSingletons_entriesInitialized)
      return Unit_getInstance();
    CoroutineSingletons_entriesInitialized = true;
    CoroutineSingletons_COROUTINE_SUSPENDED_instance = new CoroutineSingletons('COROUTINE_SUSPENDED', 0);
    CoroutineSingletons_UNDECIDED_instance = new CoroutineSingletons('UNDECIDED', 1);
    CoroutineSingletons_RESUMED_instance = new CoroutineSingletons('RESUMED', 2);
  }
  function CoroutineSingletons(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CoroutineSingletons.$metadata$ = {
    simpleName: 'CoroutineSingletons',
    kind: 'class',
    interfaces: []
  };
  function CoroutineSingletons_COROUTINE_SUSPENDED_getInstance() {
    CoroutineSingletons_initEntries();
    return CoroutineSingletons_COROUTINE_SUSPENDED_instance;
  }
  function ReadWriteProperty() {
  }
  ReadWriteProperty.$metadata$ = {
    simpleName: 'ReadWriteProperty',
    kind: 'interface',
    interfaces: [ReadOnlyProperty]
  };
  function ReadOnlyProperty() {
  }
  ReadOnlyProperty.$metadata$ = {
    simpleName: 'ReadOnlyProperty',
    kind: 'interface',
    interfaces: []
  };
  function ClosedFloatingPointRange() {
  }
  ClosedFloatingPointRange.prototype.contains_35 = function (value) {
    return this.lessThanOrEquals_1(this._get_start__1(), value) ? this.lessThanOrEquals_1(value, this._get_endInclusive__1()) : false;
  };
  ClosedFloatingPointRange.$metadata$ = {
    simpleName: 'ClosedFloatingPointRange',
    kind: 'interface',
    interfaces: [ClosedRange]
  };
  function rangeTo(_this_, that) {
    return new ClosedDoubleRange(_this_, that);
  }
  function checkStepIsPositive(isPositive, step_0) {
    if (!isPositive)
      throw IllegalArgumentException_init_$Create$_0('' + 'Step must be positive, was: ' + step_0 + '.');
  }
  function ClosedDoubleRange(start, endInclusive) {
    this.__start = start;
    this.__endInclusive = endInclusive;
  }
  ClosedDoubleRange.prototype._get_start__1 = function () {
    return this.__start;
  };
  ClosedDoubleRange.prototype._get_endInclusive__1 = function () {
    return this.__endInclusive;
  };
  ClosedDoubleRange.prototype.lessThanOrEquals_0 = function (a, b) {
    return a <= b;
  };
  ClosedDoubleRange.prototype.lessThanOrEquals_1 = function (a, b) {
    var tmp = typeof a === 'number' ? a : THROW_CCE();
    return this.lessThanOrEquals_0(tmp, typeof b === 'number' ? b : THROW_CCE());
  };
  ClosedDoubleRange.prototype.contains_12 = function (value) {
    return value >= this.__start ? value <= this.__endInclusive : false;
  };
  ClosedDoubleRange.prototype.contains_35 = function (value) {
    return this.contains_12(typeof value === 'number' ? value : THROW_CCE());
  };
  ClosedDoubleRange.prototype.isEmpty_50 = function () {
    return !(this.__start <= this.__endInclusive);
  };
  ClosedDoubleRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof ClosedDoubleRange) {
      tmp = (this.isEmpty_50() ? other.isEmpty_50() : false) ? true : this.__start === other.__start ? this.__endInclusive === other.__endInclusive : false;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  ClosedDoubleRange.prototype.hashCode = function () {
    return this.isEmpty_50() ? -1 : imul(31, getNumberHashCode(this.__start)) + getNumberHashCode(this.__endInclusive) | 0;
  };
  ClosedDoubleRange.prototype.toString = function () {
    return '' + this.__start + '..' + this.__endInclusive;
  };
  ClosedDoubleRange.$metadata$ = {
    simpleName: 'ClosedDoubleRange',
    kind: 'class',
    interfaces: [ClosedFloatingPointRange]
  };
  function KClassifier() {
  }
  KClassifier.$metadata$ = {
    simpleName: 'KClassifier',
    kind: 'interface',
    interfaces: []
  };
  function Companion_3() {
    Companion_instance_2 = this;
    this._star = new KTypeProjection(null, null);
  }
  Companion_3.prototype.invariant = function (type) {
    return new KTypeProjection(KVariance_INVARIANT_getInstance(), type);
  };
  Companion_3.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_2;
  function Companion_getInstance_2() {
    if (Companion_instance_2 == null)
      new Companion_3();
    return Companion_instance_2;
  }
  function KTypeProjection(variance, type) {
    Companion_getInstance_2();
    this._variance = variance;
    this._type = type;
    var tmp0_require_0 = this._variance == null === (this._type == null);
    if (!tmp0_require_0) {
      var message_2 = this._variance == null ? 'Star projection must have no type specified.' : '' + 'The projection variance ' + this._variance + ' requires type to be specified.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2));
    }}
  KTypeProjection.prototype.toString = function () {
    var tmp0_subject = this._variance;
    var tmp;
    if (tmp0_subject == null) {
      tmp = '*';
    } else if (equals_1(tmp0_subject, KVariance_INVARIANT_getInstance())) {
      tmp = toString_0(this._type);
    } else if (equals_1(tmp0_subject, KVariance_IN_getInstance())) {
      tmp = '' + 'in ' + this._type;
    } else if (equals_1(tmp0_subject, KVariance_OUT_getInstance())) {
      tmp = '' + 'out ' + this._type;
    } else {
      noWhenBranchMatchedException();
    }
    return tmp;
  };
  KTypeProjection.prototype.hashCode = function () {
    var result = this._variance == null ? 0 : this._variance.hashCode();
    result = imul(result, 31) + (this._type == null ? 0 : hashCode(this._type)) | 0;
    return result;
  };
  KTypeProjection.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof KTypeProjection))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof KTypeProjection ? other : THROW_CCE();
    if (!equals_1(this._variance, tmp0_other_with_cast._variance))
      return false;
    if (!equals_1(this._type, tmp0_other_with_cast._type))
      return false;
    return true;
  };
  KTypeProjection.$metadata$ = {
    simpleName: 'KTypeProjection',
    kind: 'class',
    interfaces: []
  };
  var KVariance_INVARIANT_instance;
  var KVariance_IN_instance;
  var KVariance_OUT_instance;
  var KVariance_entriesInitialized;
  function KVariance_initEntries() {
    if (KVariance_entriesInitialized)
      return Unit_getInstance();
    KVariance_entriesInitialized = true;
    KVariance_INVARIANT_instance = new KVariance('INVARIANT', 0);
    KVariance_IN_instance = new KVariance('IN', 1);
    KVariance_OUT_instance = new KVariance('OUT', 2);
  }
  function KVariance(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  KVariance.$metadata$ = {
    simpleName: 'KVariance',
    kind: 'class',
    interfaces: []
  };
  function KVariance_INVARIANT_getInstance() {
    KVariance_initEntries();
    return KVariance_INVARIANT_instance;
  }
  function KVariance_IN_getInstance() {
    KVariance_initEntries();
    return KVariance_IN_instance;
  }
  function KVariance_OUT_getInstance() {
    KVariance_initEntries();
    return KVariance_OUT_instance;
  }
  function appendElement(_this_, element, transform) {
    if (!(transform == null)) {
      _this_.append_22(transform(element));
      Unit_getInstance();
    } else {
      if (element == null ? true : isCharSequence(element)) {
        _this_.append_22(element);
        Unit_getInstance();
      } else {
        if (element instanceof Char) {
          _this_.append_23(element);
          Unit_getInstance();
        } else {
          {
            _this_.append_22(toString_0(element));
            Unit_getInstance();
          }
        }
      }
    }
  }
  function equals(_this_, other, ignoreCase) {
    if (_this_.equals(other))
      return true;
    if (!ignoreCase)
      return false;
    var thisUpper = uppercaseChar(_this_);
    var otherUpper = uppercaseChar(other);
    var tmp;
    if (thisUpper.equals(otherUpper)) {
      tmp = true;
    } else {
      var tmp0_asDynamic_0 = thisUpper.toString();
      var tmp1_unsafeCast_0 = tmp0_asDynamic_0.toLowerCase();
      var tmp_0 = charSequenceGet(tmp1_unsafeCast_0, 0);
      var tmp2_asDynamic_0 = otherUpper.toString();
      var tmp3_unsafeCast_0 = tmp2_asDynamic_0.toLowerCase();
      tmp = tmp_0.equals(charSequenceGet(tmp3_unsafeCast_0, 0));
    }
    return tmp;
  }
  function isSurrogate(_this_) {
    Companion_getInstance_13();
    var containsLower = new Char(55296);
    var tmp;
    Companion_getInstance_13();
    if (_this_ <= new Char(57343)) {
      tmp = containsLower <= _this_;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  }
  function trimMargin(_this_, marginPrefix) {
    return replaceIndentByMargin(_this_, '', marginPrefix);
  }
  function trimMargin$default(_this_, marginPrefix, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      marginPrefix = '|';
    return trimMargin(_this_, marginPrefix);
  }
  function replaceIndentByMargin(_this_, newIndent, marginPrefix) {
    var tmp0_require_0 = !isBlank(marginPrefix);
    if (!tmp0_require_0) {
      var message_2 = 'marginPrefix must be non-blank string.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2));
    }var lines_0 = lines(_this_);
    var tmp1_reindent_0 = _this_.length + imul(newIndent.length, lines_0._get_size__48()) | 0;
    var tmp2_reindent_0 = getIndentFunction(newIndent);
    var lastIndex_1 = _get_lastIndex__0(lines_0);
    var tmp1_mapIndexedNotNullTo_0_1 = ArrayList_init_$Create$();
    var index_1_2 = 0;
    var tmp0_iterator_2_3 = lines_0.iterator_62();
    while (tmp0_iterator_2_3.hasNext_29()) {
      var item_3_4 = tmp0_iterator_2_3.next_31();
      var tmp1_4_6 = index_1_2;
      index_1_2 = tmp1_4_6 + 1 | 0;
      var tmp0__anonymous__1_5_5 = checkIndexOverflow(tmp1_4_6);
      var tmp;
      if ((tmp0__anonymous__1_5_5 === 0 ? true : tmp0__anonymous__1_5_5 === lastIndex_1) ? isBlank(item_3_4) : false) {
        tmp = null;
      } else {
        var tmp$ret$0;
        l$ret$1: do {
          var inductionVariable = 0;
          var last_1 = charSequenceLength(item_3_4) - 1 | 0;
          if (inductionVariable <= last_1)
            do {
              var index_2_8 = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var tmp0__anonymous__3_9 = charSequenceGet(item_3_4, index_2_8);
              if (!isWhitespace(tmp0__anonymous__3_9)) {
                tmp$ret$0 = index_2_8;
                break l$ret$1;
              } else {
              }
            }
             while (inductionVariable <= last_1);
          tmp$ret$0 = -1;
        }
         while (false);
        var firstNonWhitespaceIndex_6 = tmp$ret$0;
        var tmp_0;
        if (firstNonWhitespaceIndex_6 === -1) {
          tmp_0 = null;
        } else {
          if (startsWith$default_1(item_3_4, marginPrefix, firstNonWhitespaceIndex_6, false, 4, null)) {
            var tmp1_substring_0_10 = firstNonWhitespaceIndex_6 + marginPrefix.length | 0;
            tmp_0 = item_3_4.substring(tmp1_substring_0_10);
          } else {
            {
              tmp_0 = null;
            }
          }
        }
        var tmp0_safe_receiver_4_10 = tmp_0;
        var tmp_1;
        if (tmp0_safe_receiver_4_10 == null) {
          tmp_1 = null;
        } else {
          tmp_1 = tmp2_reindent_0(tmp0_safe_receiver_4_10);
        }
        var tmp1_elvis_lhs_3_9 = tmp_1;
        tmp = tmp1_elvis_lhs_3_9 == null ? item_3_4 : tmp1_elvis_lhs_3_9;
      }
      var tmp0_safe_receiver_2_6_7 = tmp;
      if (tmp0_safe_receiver_2_6_7 == null)
        null;
      else {
        tmp1_mapIndexedNotNullTo_0_1.add_32(tmp0_safe_receiver_2_6_7);
        Unit_getInstance();
      }
      Unit_getInstance();
    }
    var tmp_2 = StringBuilder_init_$Create$(tmp1_reindent_0);
    return joinTo$default(tmp1_mapIndexedNotNullTo_0_1, tmp_2, '\n', null, null, 0, null, null, 124, null).toString();
  }
  function getIndentFunction(indent) {
    var tmp;
    if (charSequenceLength(indent) === 0) {
      tmp = _no_name_provided_$factory_5();
    } else {
      {
        tmp = _no_name_provided_$factory_6(indent);
      }
    }
    return tmp;
  }
  function trimIndent(_this_) {
    return replaceIndent(_this_, '');
  }
  function replaceIndent(_this_, newIndent) {
    var lines_0 = lines(_this_);
    var tmp0_filterTo_0_1 = ArrayList_init_$Create$();
    var tmp0_iterator_1_2 = lines_0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var element_2_3 = tmp0_iterator_1_2.next_31();
      if (isNotBlank(element_2_3)) {
        tmp0_filterTo_0_1.add_32(element_2_3);
        Unit_getInstance();
      }}
    var tmp0_map_0 = tmp0_filterTo_0_1;
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
    var tmp0_iterator_1_2_0 = tmp0_map_0.iterator_62();
    while (tmp0_iterator_1_2_0.hasNext_29()) {
      var item_2_3 = tmp0_iterator_1_2_0.next_31();
      tmp0_mapTo_0_1.add_32(indentWidth(item_2_3));
      Unit_getInstance();
    }
    var tmp0_elvis_lhs = minOrNull(tmp0_mapTo_0_1);
    var minCommonIndent = tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs;
    var tmp1_reindent_0 = _this_.length + imul(newIndent.length, lines_0._get_size__48()) | 0;
    var tmp2_reindent_0 = getIndentFunction(newIndent);
    var lastIndex_1 = _get_lastIndex__0(lines_0);
    var tmp1_mapIndexedNotNullTo_0_1_2 = ArrayList_init_$Create$();
    var index_1_2_3 = 0;
    var tmp0_iterator_2_3_4 = lines_0.iterator_62();
    while (tmp0_iterator_2_3_4.hasNext_29()) {
      var item_3_4_5 = tmp0_iterator_2_3_4.next_31();
      var tmp1_4_6_7 = index_1_2_3;
      index_1_2_3 = tmp1_4_6_7 + 1 | 0;
      var tmp0__anonymous__1_5_5_6 = checkIndexOverflow(tmp1_4_6_7);
      var tmp;
      if ((tmp0__anonymous__1_5_5_6 === 0 ? true : tmp0__anonymous__1_5_5_6 === lastIndex_1) ? isBlank(item_3_4_5) : false) {
        tmp = null;
      } else {
        var tmp0_safe_receiver_10_10 = drop(item_3_4_5, minCommonIndent);
        var tmp_0;
        if (tmp0_safe_receiver_10_10 == null) {
          tmp_0 = null;
        } else {
          tmp_0 = tmp2_reindent_0(tmp0_safe_receiver_10_10);
        }
        var tmp1_elvis_lhs_9_9 = tmp_0;
        tmp = tmp1_elvis_lhs_9_9 == null ? item_3_4_5 : tmp1_elvis_lhs_9_9;
      }
      var tmp0_safe_receiver_2_6_7_8 = tmp;
      if (tmp0_safe_receiver_2_6_7_8 == null)
        null;
      else {
        tmp1_mapIndexedNotNullTo_0_1_2.add_32(tmp0_safe_receiver_2_6_7_8);
        Unit_getInstance();
      }
      Unit_getInstance();
    }
    var tmp_1 = StringBuilder_init_$Create$(tmp1_reindent_0);
    return joinTo$default(tmp1_mapIndexedNotNullTo_0_1_2, tmp_1, '\n', null, null, 0, null, null, 124, null).toString();
  }
  function indentWidth(_this_) {
    var tmp$ret$0;
    l$ret$1: do {
      var inductionVariable = 0;
      var last_1 = charSequenceLength(_this_) - 1 | 0;
      if (inductionVariable <= last_1)
        do {
          var index_2 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp0__anonymous__3 = charSequenceGet(_this_, index_2);
          if (!isWhitespace(tmp0__anonymous__3)) {
            tmp$ret$0 = index_2;
            break l$ret$1;
          } else {
          }
        }
         while (inductionVariable <= last_1);
      tmp$ret$0 = -1;
    }
     while (false);
    var tmp1_let_0 = tmp$ret$0;
    return tmp1_let_0 === -1 ? _this_.length : tmp1_let_0;
  }
  function _no_name_provided__12() {
  }
  _no_name_provided__12.prototype.invoke_414 = function (line) {
    return line;
  };
  _no_name_provided__12.prototype.invoke_420 = function (p1) {
    return this.invoke_414((!(p1 == null) ? typeof p1 === 'string' : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__12.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__13($indent) {
    this._$indent = $indent;
  }
  _no_name_provided__13.prototype.invoke_414 = function (line) {
    return this._$indent + line;
  };
  _no_name_provided__13.prototype.invoke_420 = function (p1) {
    return this.invoke_414((!(p1 == null) ? typeof p1 === 'string' : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__13.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_5() {
    var i = new _no_name_provided__12();
    return function (p1) {
      return i.invoke_414(p1);
    };
  }
  function _no_name_provided_$factory_6($indent) {
    var i = new _no_name_provided__13($indent);
    return function (p1) {
      return i.invoke_414(p1);
    };
  }
  function toLongOrNull(_this_) {
    return toLongOrNull_0(_this_, 10);
  }
  function toIntOrNull(_this_) {
    return toIntOrNull_0(_this_, 10);
  }
  function toLongOrNull_0(_this_, radix) {
    checkRadix(radix);
    Unit_getInstance();
    var length = _this_.length;
    if (length === 0)
      return null;
    var start;
    var isNegative_0;
    var limit;
    var firstChar = charSequenceGet(_this_, 0);
    if (firstChar.compareTo_12(new Char(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (firstChar.equals(new Char(45))) {
        isNegative_0 = true;
        Companion_getInstance_15();
        limit = new Long(0, -2147483648);
      } else if (firstChar.equals(new Char(43))) {
        isNegative_0 = false;
        Companion_getInstance_15();
        limit = (new Long(-1, 2147483647)).unaryMinus_4();
      } else
        return null;
    } else {
      start = 0;
      isNegative_0 = false;
      Companion_getInstance_15();
      limit = (new Long(-1, 2147483647)).unaryMinus_4();
    }
    Companion_getInstance_15();
    var tmp0_div_0 = (new Long(-1, 2147483647)).unaryMinus_4();
    var tmp1_div_0 = 36;
    var limitForMaxRadix = tmp0_div_0.div_27(toLong_0(tmp1_div_0));
    var limitBeforeMul = limitForMaxRadix;
    var result = new Long(0, 0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this_, i), radix);
        if (digit < 0)
          return null;
        if (result.compareTo_59(limitBeforeMul) < 0) {
          if (limitBeforeMul.equals(limitForMaxRadix)) {
            limitBeforeMul = limit.div_27(toLong_0(radix));
            if (result.compareTo_59(limitBeforeMul) < 0) {
              return null;
            }} else {
            return null;
          }
        }var tmp2_times_0 = result;
        result = tmp2_times_0.times_30(toLong_0(radix));
        var tmp = result;
        if (tmp.compareTo_59(limit.plus_59(toLong_0(digit))) < 0)
          return null;
        else {
        }
        var tmp3_minus_0 = result;
        result = tmp3_minus_0.minus_30(toLong_0(digit));
      }
       while (inductionVariable < length);
    return isNegative_0 ? result : result.unaryMinus_4();
  }
  function toIntOrNull_0(_this_, radix) {
    checkRadix(radix);
    Unit_getInstance();
    var length = _this_.length;
    if (length === 0)
      return null;
    var start;
    var isNegative_0;
    var limit;
    var firstChar = charSequenceGet(_this_, 0);
    if (firstChar.compareTo_12(new Char(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (firstChar.equals(new Char(45))) {
        isNegative_0 = true;
        limit = IntCompanionObject_getInstance()._MIN_VALUE_5;
      } else if (firstChar.equals(new Char(43))) {
        isNegative_0 = false;
        limit = -IntCompanionObject_getInstance()._MAX_VALUE_5 | 0;
      } else
        return null;
    } else {
      start = 0;
      isNegative_0 = false;
      limit = -IntCompanionObject_getInstance()._MAX_VALUE_5 | 0;
    }
    var limitForMaxRadix = (-IntCompanionObject_getInstance()._MAX_VALUE_5 | 0) / 36 | 0;
    var limitBeforeMul = limitForMaxRadix;
    var result = 0;
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this_, i), radix);
        if (digit < 0)
          return null;
        if (result < limitBeforeMul) {
          if (limitBeforeMul === limitForMaxRadix) {
            limitBeforeMul = limit / radix | 0;
            if (result < limitBeforeMul) {
              return null;
            }} else {
            return null;
          }
        }result = imul(result, radix);
        if (result < (limit + digit | 0))
          return null;
        result = result - digit | 0;
      }
       while (inductionVariable < length);
    return isNegative_0 ? result : -result | 0;
  }
  function numberFormatError(input) {
    throw NumberFormatException_init_$Create$('' + "Invalid number format: '" + input + "'");
  }
  function indexOf_0(_this_, char, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this_ === 'string');
    }
    if (tmp_0) {
      var tmp0_charArrayOf_0 = charArrayOf([char]);
      tmp = indexOfAny(_this_, tmp0_charArrayOf_0, startIndex, ignoreCase);
    } else {
      {
        var tmp2_nativeIndexOf_0 = _this_;
        var tmp1_nativeIndexOf_0 = char.toString();
        tmp = tmp2_nativeIndexOf_0.indexOf(tmp1_nativeIndexOf_0, startIndex);
      }
    }
    return tmp;
  }
  function indexOf$default(_this_, char, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_0(_this_, char, startIndex, ignoreCase);
  }
  function removePrefix(_this_, prefix) {
    if (startsWith$default(_this_, prefix, false, 2, null)) {
      var tmp0_substring_0 = charSequenceLength(prefix);
      return _this_.substring(tmp0_substring_0);
    } else {
    }
    return _this_;
  }
  function lineSequence(_this_) {
    var tmp = ['\r\n', '\n', '\r'];
    return splitToSequence$default(_this_, tmp, false, 0, 6, null);
  }
  function contains_1(_this_, char, ignoreCase) {
    return indexOf$default(_this_, char, 0, ignoreCase, 2, null) >= 0;
  }
  function contains$default(_this_, char, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return contains_1(_this_, char, ignoreCase);
  }
  function _get_lastIndex__1(_this_) {
    return charSequenceLength(_this_) - 1 | 0;
  }
  function isNotBlank(_this_) {
    return !isBlank(_this_);
  }
  function split(_this_, delimiters, ignoreCase, limit) {
    if (delimiters.length === 1) {
      var delimiter = delimiters[0];
      if (!(charSequenceLength(delimiter) === 0)) {
        return split_0(_this_, delimiter, ignoreCase, limit);
      } else {
      }
    }var tmp0_map_0 = asIterable(rangesDelimitedBy$default(_this_, delimiters, 0, ignoreCase, limit, 2, null));
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
    var tmp0_iterator_1_2 = tmp0_map_0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var item_2_3 = tmp0_iterator_1_2.next_31();
      tmp0_mapTo_0_1.add_32(substring(_this_, item_2_3));
      Unit_getInstance();
    }
    return tmp0_mapTo_0_1;
  }
  function split$default(_this_, delimiters, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    if (!(($mask0 & 4) === 0))
      limit = 0;
    return split(_this_, delimiters, ignoreCase, limit);
  }
  function trim(_this_) {
    var startIndex_1 = 0;
    var endIndex_2 = charSequenceLength(_this_) - 1 | 0;
    var startFound_3 = false;
    $l$break: while (startIndex_1 <= endIndex_2) {
      var index_4 = !startFound_3 ? startIndex_1 : endIndex_2;
      var match_5 = isWhitespace(charSequenceGet(_this_, index_4));
      if (!startFound_3) {
        if (!match_5)
          startFound_3 = true;
        else
          startIndex_1 = startIndex_1 + 1 | 0;
      } else {
        if (!match_5)
          break $l$break;
        else
          endIndex_2 = endIndex_2 - 1 | 0;
      }
    }
    return charSequenceSubSequence(_this_, startIndex_1, endIndex_2 + 1 | 0);
  }
  function indexOfAny(_this_, chars, startIndex, ignoreCase) {
    var tmp;
    if (!ignoreCase ? chars.length === 1 : false) {
      tmp = typeof _this_ === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var char = single(chars);
      var tmp1_nativeIndexOf_0 = _this_;
      var tmp0_nativeIndexOf_0 = char.toString();
      return tmp1_nativeIndexOf_0.indexOf(tmp0_nativeIndexOf_0, startIndex);
    } else {
    }
    var inductionVariable = coerceAtLeast(startIndex, 0);
    var last_1 = _get_lastIndex__1(_this_);
    if (inductionVariable <= last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var charAtIndex = charSequenceGet(_this_, index);
        var tmp$ret$0;
        l$ret$1: do {
          var indexedObject = chars;
          var inductionVariable_0 = 0;
          var last_2 = indexedObject.length;
          while (inductionVariable_0 < last_2) {
            var element_2 = indexedObject[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            if (equals(element_2, charAtIndex, ignoreCase)) {
              tmp$ret$0 = true;
              break l$ret$1;
            } else {
            }
          }
          tmp$ret$0 = false;
        }
         while (false);
        if (tmp$ret$0)
          return index;
        else {
        }
      }
       while (!(index === last_1));
    return -1;
  }
  function indexOfAny$default(_this_, chars, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOfAny(_this_, chars, startIndex, ignoreCase);
  }
  function startsWith(_this_, prefix, ignoreCase) {
    var tmp;
    var tmp_0;
    if (!ignoreCase) {
      tmp_0 = typeof _this_ === 'string';
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = typeof prefix === 'string';
    } else {
      {
        tmp = false;
      }
    }
    if (tmp) {
      var tmp_1 = _this_;
      var tmp_2 = prefix;
      return startsWith$default_0(tmp_1, tmp_2, false, 2, null);
    } else {
      return regionMatchesImpl(_this_, 0, prefix, 0, charSequenceLength(prefix), ignoreCase);
    }
  }
  function startsWith$default(_this_, prefix, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return startsWith(_this_, prefix, ignoreCase);
  }
  function splitToSequence(_this_, delimiters, ignoreCase, limit) {
    var tmp = rangesDelimitedBy$default(_this_, delimiters, 0, ignoreCase, limit, 2, null);
    return map(tmp, _no_name_provided_$factory_7(_this_));
  }
  function splitToSequence$default(_this_, delimiters, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    if (!(($mask0 & 4) === 0))
      limit = 0;
    return splitToSequence(_this_, delimiters, ignoreCase, limit);
  }
  function split_0(_this_, delimiter, ignoreCase, limit) {
    var tmp0_require_0 = limit >= 0;
    if (!tmp0_require_0) {
      var message_2 = '' + 'Limit must be non-negative, but was ' + limit + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2));
    }var currentOffset = 0;
    var nextIndex = indexOf_1(_this_, delimiter, currentOffset, ignoreCase);
    if (nextIndex === -1 ? true : limit === 1) {
      return listOf_0(toString_1(_this_));
    }var isLimited = limit > 0;
    var result = ArrayList_init_$Create$_0(isLimited ? coerceAtMost(limit, 10) : 10);
    $l$break: do {
      var tmp1_substring_0 = currentOffset;
      var tmp2_substring_0 = nextIndex;
      result.add_32(toString_1(charSequenceSubSequence(_this_, tmp1_substring_0, tmp2_substring_0)));
      Unit_getInstance();
      currentOffset = nextIndex + delimiter.length | 0;
      if (isLimited ? result._get_size__48() === (limit - 1 | 0) : false)
        break $l$break;
      nextIndex = indexOf_1(_this_, delimiter, currentOffset, ignoreCase);
    }
     while (!(nextIndex === -1));
    var tmp3_substring_0 = currentOffset;
    var tmp4_substring_0 = charSequenceLength(_this_);
    result.add_32(toString_1(charSequenceSubSequence(_this_, tmp3_substring_0, tmp4_substring_0)));
    Unit_getInstance();
    return result;
  }
  function substring(_this_, range) {
    return toString_1(charSequenceSubSequence(_this_, range._get_start__1(), range._get_endInclusive__1() + 1 | 0));
  }
  function rangesDelimitedBy(_this_, delimiters, startIndex, ignoreCase, limit) {
    var tmp0_require_0 = limit >= 0;
    if (!tmp0_require_0) {
      var message_2 = '' + 'Limit must be non-negative, but was ' + limit + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2));
    }var delimitersList = asList(delimiters);
    return new DelimitedRangesSequence(_this_, startIndex, limit, _no_name_provided_$factory_8(delimitersList, ignoreCase));
  }
  function rangesDelimitedBy$default(_this_, delimiters, startIndex, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    if (!(($mask0 & 8) === 0))
      limit = 0;
    return rangesDelimitedBy(_this_, delimiters, startIndex, ignoreCase, limit);
  }
  function regionMatchesImpl(_this_, thisOffset, other, otherOffset, length, ignoreCase) {
    if (((otherOffset < 0 ? true : thisOffset < 0) ? true : thisOffset > (charSequenceLength(_this_) - length | 0)) ? true : otherOffset > (charSequenceLength(other) - length | 0)) {
      return false;
    }var inductionVariable = 0;
    if (inductionVariable < length)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(charSequenceGet(_this_, thisOffset + index | 0), charSequenceGet(other, otherOffset + index | 0), ignoreCase))
          return false;
      }
       while (inductionVariable < length);
    return true;
  }
  function indexOf_1(_this_, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this_ === 'string');
    }
    if (tmp_0) {
      var tmp_1 = charSequenceLength(_this_);
      tmp = indexOf$default_1(_this_, string, startIndex, tmp_1, ignoreCase, false, 16, null);
    } else {
      {
        var tmp0_nativeIndexOf_0 = _this_;
        tmp = tmp0_nativeIndexOf_0.indexOf(string, startIndex);
      }
    }
    return tmp;
  }
  function indexOf$default_0(_this_, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_1(_this_, string, startIndex, ignoreCase);
  }
  function calcNext_0($this) {
    if ($this._nextSearchIndex < 0) {
      $this._nextState_0 = 0;
      $this._nextItem_0 = null;
    } else {
      var tmp;
      var tmp_0;
      if ($this._this$0_5._limit > 0) {
        var tmp0_this = $this;
        tmp0_this._counter = tmp0_this._counter + 1 | 0;
        tmp_0 = tmp0_this._counter >= $this._this$0_5._limit;
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = true;
      } else {
        {
          tmp = $this._nextSearchIndex > charSequenceLength($this._this$0_5._input);
        }
      }
      if (tmp) {
        $this._nextItem_0 = numberRangeToNumber($this._currentStartIndex, _get_lastIndex__1($this._this$0_5._input));
        $this._nextSearchIndex = -1;
      } else {
        {
          var match = $this._this$0_5._getNextMatch($this._this$0_5._input, $this._nextSearchIndex);
          if (match == null) {
            $this._nextItem_0 = numberRangeToNumber($this._currentStartIndex, _get_lastIndex__1($this._this$0_5._input));
            $this._nextSearchIndex = -1;
          } else {
            var tmp1_container = match;
            var index = tmp1_container.component1_2();
            var length = tmp1_container.component2_2();
            $this._nextItem_0 = until($this._currentStartIndex, index);
            $this._currentStartIndex = index + length | 0;
            $this._nextSearchIndex = $this._currentStartIndex + (length === 0 ? 1 : 0) | 0;
          }
        }
      }
      $this._nextState_0 = 1;
    }
  }
  function _no_name_provided__14(this$0) {
    this._this$0_5 = this$0;
    this._nextState_0 = -1;
    this._currentStartIndex = coerceIn(this._this$0_5._startIndex, 0, charSequenceLength(this._this$0_5._input));
    this._nextSearchIndex = this._currentStartIndex;
    this._nextItem_0 = null;
    this._counter = 0;
  }
  _no_name_provided__14.prototype.next_31 = function () {
    if (this._nextState_0 === -1)
      calcNext_0(this);
    if (this._nextState_0 === 0)
      throw NoSuchElementException_init_$Create$();
    var tmp = this._nextItem_0;
    var result = tmp instanceof IntRange ? tmp : THROW_CCE();
    this._nextItem_0 = null;
    this._nextState_0 = -1;
    return result;
  };
  _no_name_provided__14.prototype.hasNext_29 = function () {
    if (this._nextState_0 === -1)
      calcNext_0(this);
    return this._nextState_0 === 1;
  };
  _no_name_provided__14.$metadata$ = {
    kind: 'class',
    interfaces: [Iterator_0]
  };
  function DelimitedRangesSequence(input, startIndex, limit, getNextMatch) {
    this._input = input;
    this._startIndex = startIndex;
    this._limit = limit;
    this._getNextMatch = getNextMatch;
  }
  DelimitedRangesSequence.prototype.iterator_62 = function () {
    return new _no_name_provided__14(this);
  };
  DelimitedRangesSequence.$metadata$ = {
    simpleName: 'DelimitedRangesSequence',
    kind: 'class',
    interfaces: [Sequence]
  };
  function findAnyOf(_this_, strings, startIndex, ignoreCase, last_1) {
    if (!ignoreCase ? strings._get_size__48() === 1 : false) {
      var string = single_1(strings);
      var tmp;
      if (!last_1) {
        tmp = indexOf$default_0(_this_, string, startIndex, false, 4, null);
      } else {
        tmp = lastIndexOf$default(_this_, string, startIndex, false, 4, null);
      }
      var index = tmp;
      return index < 0 ? null : to(index, string);
    }var indices = !last_1 ? numberRangeToNumber(coerceAtLeast(startIndex, 0), charSequenceLength(_this_)) : downTo(coerceAtMost(startIndex, _get_lastIndex__1(_this_)), 0);
    if (typeof _this_ === 'string') {
      var inductionVariable = indices._first_1;
      var last_2 = indices._last;
      var step_0 = indices._step_1;
      if ((step_0 > 0 ? inductionVariable <= last_2 : false) ? true : step_0 < 0 ? last_2 <= inductionVariable : false)
        do {
          var index_0 = inductionVariable;
          inductionVariable = inductionVariable + step_0 | 0;
          var tmp$ret$0;
          l$ret$1: do {
            var tmp0_iterator_1 = strings.iterator_62();
            while (tmp0_iterator_1.hasNext_29()) {
              var element_2 = tmp0_iterator_1.next_31();
              if (regionMatches(element_2, 0, _this_, index_0, element_2.length, ignoreCase)) {
                tmp$ret$0 = element_2;
                break l$ret$1;
              } else {
              }
            }
            tmp$ret$0 = null;
          }
           while (false);
          var matchingString = tmp$ret$0;
          if (!(matchingString == null))
            return to(index_0, matchingString);
        }
         while (!(index_0 === last_2));
    } else {
      {
        var inductionVariable_0 = indices._first_1;
        var last_3 = indices._last;
        var step_1 = indices._step_1;
        if ((step_1 > 0 ? inductionVariable_0 <= last_3 : false) ? true : step_1 < 0 ? last_3 <= inductionVariable_0 : false)
          do {
            var index_1 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + step_1 | 0;
            var tmp$ret$2;
            l$ret$3: do {
              var tmp0_iterator_1_0 = strings.iterator_62();
              while (tmp0_iterator_1_0.hasNext_29()) {
                var element_2_0 = tmp0_iterator_1_0.next_31();
                if (regionMatchesImpl(element_2_0, 0, _this_, index_1, element_2_0.length, ignoreCase)) {
                  tmp$ret$2 = element_2_0;
                  break l$ret$3;
                } else {
                }
              }
              tmp$ret$2 = null;
            }
             while (false);
            var matchingString_0 = tmp$ret$2;
            if (!(matchingString_0 == null))
              return to(index_1, matchingString_0);
          }
           while (!(index_1 === last_3));
      }
    }
    return null;
  }
  function indexOf_2(_this_, other, startIndex, endIndex, ignoreCase, last_1) {
    var indices = !last_1 ? numberRangeToNumber(coerceAtLeast(startIndex, 0), coerceAtMost(endIndex, charSequenceLength(_this_))) : downTo(coerceAtMost(startIndex, _get_lastIndex__1(_this_)), coerceAtLeast(endIndex, 0));
    var tmp;
    if (typeof _this_ === 'string') {
      tmp = typeof other === 'string';
    } else {
      {
        tmp = false;
      }
    }
    if (tmp) {
      var inductionVariable = indices._first_1;
      var last_2 = indices._last;
      var step_0 = indices._step_1;
      if ((step_0 > 0 ? inductionVariable <= last_2 : false) ? true : step_0 < 0 ? last_2 <= inductionVariable : false)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + step_0 | 0;
          if (regionMatches(other, 0, _this_, index, charSequenceLength(other), ignoreCase))
            return index;
        }
         while (!(index === last_2));
    } else {
      {
        var inductionVariable_0 = indices._first_1;
        var last_3 = indices._last;
        var step_1 = indices._step_1;
        if ((step_1 > 0 ? inductionVariable_0 <= last_3 : false) ? true : step_1 < 0 ? last_3 <= inductionVariable_0 : false)
          do {
            var index_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + step_1 | 0;
            if (regionMatchesImpl(other, 0, _this_, index_0, charSequenceLength(other), ignoreCase))
              return index_0;
          }
           while (!(index_0 === last_3));
      }
    }
    return -1;
  }
  function indexOf$default_1(_this_, other, startIndex, endIndex, ignoreCase, last_1, $mask0, $handler) {
    if (!(($mask0 & 16) === 0))
      last_1 = false;
    return indexOf_2(_this_, other, startIndex, endIndex, ignoreCase, last_1);
  }
  function lastIndexOf(_this_, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this_ === 'string');
    }
    if (tmp_0) {
      tmp = indexOf_2(_this_, string, startIndex, 0, ignoreCase, true);
    } else {
      {
        var tmp0_nativeLastIndexOf_0 = _this_;
        tmp = tmp0_nativeLastIndexOf_0.lastIndexOf(string, startIndex);
      }
    }
    return tmp;
  }
  function lastIndexOf$default(_this_, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = _get_lastIndex__1(_this_);
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return lastIndexOf(_this_, string, startIndex, ignoreCase);
  }
  function lines(_this_) {
    return toList_2(lineSequence(_this_));
  }
  function lastIndexOf_0(_this_, char, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this_ === 'string');
    }
    if (tmp_0) {
      var tmp0_charArrayOf_0 = charArrayOf([char]);
      tmp = lastIndexOfAny(_this_, tmp0_charArrayOf_0, startIndex, ignoreCase);
    } else {
      {
        var tmp2_nativeLastIndexOf_0 = _this_;
        var tmp1_nativeLastIndexOf_0 = char.toString();
        tmp = tmp2_nativeLastIndexOf_0.lastIndexOf(tmp1_nativeLastIndexOf_0, startIndex);
      }
    }
    return tmp;
  }
  function lastIndexOf$default_0(_this_, char, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = _get_lastIndex__1(_this_);
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return lastIndexOf_0(_this_, char, startIndex, ignoreCase);
  }
  function lastIndexOfAny(_this_, chars, startIndex, ignoreCase) {
    var tmp;
    if (!ignoreCase ? chars.length === 1 : false) {
      tmp = typeof _this_ === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var char = single(chars);
      var tmp1_nativeLastIndexOf_0 = _this_;
      var tmp0_nativeLastIndexOf_0 = char.toString();
      return tmp1_nativeLastIndexOf_0.lastIndexOf(tmp0_nativeLastIndexOf_0, startIndex);
    } else {
    }
    var inductionVariable = coerceAtMost(startIndex, _get_lastIndex__1(_this_));
    if (0 <= inductionVariable)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var charAtIndex = charSequenceGet(_this_, index);
        var tmp$ret$0;
        l$ret$1: do {
          var indexedObject = chars;
          var inductionVariable_0 = 0;
          var last_1 = indexedObject.length;
          while (inductionVariable_0 < last_1) {
            var element_2 = indexedObject[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            if (equals(element_2, charAtIndex, ignoreCase)) {
              tmp$ret$0 = true;
              break l$ret$1;
            } else {
            }
          }
          tmp$ret$0 = false;
        }
         while (false);
        if (tmp$ret$0)
          return index;
        else {
        }
      }
       while (0 <= inductionVariable);
    return -1;
  }
  function _no_name_provided__15($this_splitToSequence) {
    this._$this_splitToSequence = $this_splitToSequence;
  }
  _no_name_provided__15.prototype.invoke_15 = function (it) {
    return substring(this._$this_splitToSequence, it);
  };
  _no_name_provided__15.prototype.invoke_420 = function (p1) {
    return this.invoke_15(p1 instanceof IntRange ? p1 : THROW_CCE());
  };
  _no_name_provided__15.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__16($delimitersList, $ignoreCase) {
    this._$delimitersList = $delimitersList;
    this._$ignoreCase = $ignoreCase;
  }
  _no_name_provided__16.prototype.invoke_17 = function ($this$$receiver, currentIndex) {
    var tmp0_safe_receiver = findAnyOf($this$$receiver, this._$delimitersList, currentIndex, this._$ignoreCase, false);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = to(tmp0_safe_receiver._first, tmp0_safe_receiver._second.length);
    }
    return tmp;
  };
  _no_name_provided__16.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? isCharSequence(p1) : false) ? p1 : THROW_CCE();
    return this.invoke_17(tmp, (!(p2 == null) ? typeof p2 === 'number' : false) ? p2 : THROW_CCE());
  };
  _no_name_provided__16.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_7($this_splitToSequence) {
    var i = new _no_name_provided__15($this_splitToSequence);
    return function (p1) {
      return i.invoke_15(p1);
    };
  }
  function _no_name_provided_$factory_8($delimitersList, $ignoreCase) {
    var i = new _no_name_provided__16($delimitersList, $ignoreCase);
    return function (p1, p2) {
      return i.invoke_17(p1, p2);
    };
  }
  function Lazy() {
  }
  Lazy.$metadata$ = {
    simpleName: 'Lazy',
    kind: 'interface',
    interfaces: []
  };
  var LazyThreadSafetyMode_SYNCHRONIZED_instance;
  var LazyThreadSafetyMode_PUBLICATION_instance;
  var LazyThreadSafetyMode_NONE_instance;
  var LazyThreadSafetyMode_entriesInitialized;
  function LazyThreadSafetyMode_initEntries() {
    if (LazyThreadSafetyMode_entriesInitialized)
      return Unit_getInstance();
    LazyThreadSafetyMode_entriesInitialized = true;
    LazyThreadSafetyMode_SYNCHRONIZED_instance = new LazyThreadSafetyMode('SYNCHRONIZED', 0);
    LazyThreadSafetyMode_PUBLICATION_instance = new LazyThreadSafetyMode('PUBLICATION', 1);
    LazyThreadSafetyMode_NONE_instance = new LazyThreadSafetyMode('NONE', 2);
  }
  function LazyThreadSafetyMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  LazyThreadSafetyMode.$metadata$ = {
    simpleName: 'LazyThreadSafetyMode',
    kind: 'class',
    interfaces: []
  };
  function UnsafeLazyImpl(initializer_0) {
    this._initializer = initializer_0;
    this.__value = UNINITIALIZED_VALUE_getInstance();
  }
  UnsafeLazyImpl.prototype._get_value__27 = function () {
    if (this.__value === UNINITIALIZED_VALUE_getInstance()) {
      this.__value = ensureNotNull(this._initializer)();
      this._initializer = null;
    }var tmp = this.__value;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  UnsafeLazyImpl.prototype.isInitialized_0 = function () {
    return !(this.__value === UNINITIALIZED_VALUE_getInstance());
  };
  UnsafeLazyImpl.prototype.toString = function () {
    return this.isInitialized_0() ? toString_0(this._get_value__27()) : 'Lazy value not initialized yet.';
  };
  UnsafeLazyImpl.$metadata$ = {
    simpleName: 'UnsafeLazyImpl',
    kind: 'class',
    interfaces: [Lazy, Serializable]
  };
  function UNINITIALIZED_VALUE() {
    UNINITIALIZED_VALUE_instance = this;
  }
  UNINITIALIZED_VALUE.$metadata$ = {
    simpleName: 'UNINITIALIZED_VALUE',
    kind: 'object',
    interfaces: []
  };
  var UNINITIALIZED_VALUE_instance;
  function UNINITIALIZED_VALUE_getInstance() {
    if (UNINITIALIZED_VALUE_instance == null)
      new UNINITIALIZED_VALUE();
    return UNINITIALIZED_VALUE_instance;
  }
  function LazyThreadSafetyMode_NONE_getInstance() {
    LazyThreadSafetyMode_initEntries();
    return LazyThreadSafetyMode_NONE_instance;
  }
  function _Result___init__impl_(value) {
    return value;
  }
  function _Result___get_value__impl_(this_0) {
    return this_0;
  }
  function _Result___get_isFailure__impl_(this_0) {
    var tmp = _Result___get_value__impl_(this_0);
    return tmp instanceof Failure;
  }
  function Result__exceptionOrNull_impl(this_0) {
    var tmp0_subject = _Result___get_value__impl_(this_0);
    var tmp;
    if (tmp0_subject instanceof Failure) {
      tmp = _Result___get_value__impl_(this_0)._exception;
    } else {
      {
        tmp = null;
      }
    }
    return tmp;
  }
  function Companion_4() {
    Companion_instance_3 = this;
  }
  Companion_4.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_3;
  function Companion_getInstance_3() {
    if (Companion_instance_3 == null)
      new Companion_4();
    return Companion_instance_3;
  }
  function Failure(exception) {
    this._exception = exception;
  }
  Failure.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Failure) {
      tmp = equals_1(this._exception, other._exception);
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  Failure.prototype.hashCode = function () {
    return hashCode(this._exception);
  };
  Failure.prototype.toString = function () {
    return '' + 'Failure(' + this._exception + ')';
  };
  Failure.$metadata$ = {
    simpleName: 'Failure',
    kind: 'class',
    interfaces: [Serializable]
  };
  function createFailure(exception) {
    return new Failure(exception);
  }
  function throwOnFailure(_this_) {
    var tmp = _Result___get_value__impl_(_this_);
    if (tmp instanceof Failure)
      throw _Result___get_value__impl_(_this_)._exception;
    else {
    }
  }
  function Pair(first_1, second) {
    this._first = first_1;
    this._second = second;
  }
  Pair.prototype.toString = function () {
    return '' + '(' + this._first + ', ' + this._second + ')';
  };
  Pair.prototype.component1_2 = function () {
    return this._first;
  };
  Pair.prototype.component2_2 = function () {
    return this._second;
  };
  Pair.prototype.hashCode = function () {
    var result = this._first == null ? 0 : hashCode(this._first);
    result = imul(result, 31) + (this._second == null ? 0 : hashCode(this._second)) | 0;
    return result;
  };
  Pair.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Pair))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Pair ? other : THROW_CCE();
    if (!equals_1(this._first, tmp0_other_with_cast._first))
      return false;
    if (!equals_1(this._second, tmp0_other_with_cast._second))
      return false;
    return true;
  };
  Pair.$metadata$ = {
    simpleName: 'Pair',
    kind: 'class',
    interfaces: [Serializable]
  };
  function to(_this_, that) {
    return new Pair(_this_, that);
  }
  function Triple(first_1, second, third) {
    this._first_0 = first_1;
    this._second_0 = second;
    this._third = third;
  }
  Triple.prototype.toString = function () {
    return '' + '(' + this._first_0 + ', ' + this._second_0 + ', ' + this._third + ')';
  };
  Triple.prototype.hashCode = function () {
    var result = this._first_0 == null ? 0 : hashCode(this._first_0);
    result = imul(result, 31) + (this._second_0 == null ? 0 : hashCode(this._second_0)) | 0;
    result = imul(result, 31) + (this._third == null ? 0 : hashCode(this._third)) | 0;
    return result;
  };
  Triple.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Triple))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Triple ? other : THROW_CCE();
    if (!equals_1(this._first_0, tmp0_other_with_cast._first_0))
      return false;
    if (!equals_1(this._second_0, tmp0_other_with_cast._second_0))
      return false;
    if (!equals_1(this._third, tmp0_other_with_cast._third))
      return false;
    return true;
  };
  Triple.$metadata$ = {
    simpleName: 'Triple',
    kind: 'class',
    interfaces: [Serializable]
  };
  function _UByte___init__impl_(data) {
    return data;
  }
  function _UByte___get_data__impl_(this_0) {
    return this_0;
  }
  function Companion_5() {
    Companion_instance_4 = this;
    this._MIN_VALUE = _UByte___init__impl_(0);
    this._MAX_VALUE = _UByte___init__impl_(-1);
    this._SIZE_BYTES = 1;
    this._SIZE_BITS = 8;
  }
  Companion_5.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_4;
  function Companion_getInstance_4() {
    if (Companion_instance_4 == null)
      new Companion_5();
    return Companion_instance_4;
  }
  function UByte__compareTo_impl(this_0, other) {
    var tmp = _UByte___get_data__impl_(this_0) & 255;
    return compareTo(tmp, _UByte___get_data__impl_(other) & 255);
  }
  function UByte__compareTo_impl_0(this_0, other) {
    var tmp = this_0._data;
    return UByte__compareTo_impl(tmp, other instanceof UByte ? other._data : THROW_CCE());
  }
  function UByte__toString_impl(this_0) {
    return (_UByte___get_data__impl_(this_0) & 255).toString();
  }
  function UByte__hashCode_impl(this_0) {
    return this_0;
  }
  function UByte__equals_impl(this_0, other) {
    if (!(other instanceof UByte))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof UByte ? other._data : THROW_CCE();
    if (!(this_0 === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UByte(data) {
    Companion_getInstance_4();
    this._data = data;
  }
  UByte.prototype.compareTo_3 = function (other) {
    return UByte__compareTo_impl(this._data, other);
  };
  UByte.prototype.compareTo_30 = function (other) {
    return UByte__compareTo_impl_0(this, other);
  };
  UByte.prototype.toString = function () {
    return UByte__toString_impl(this._data);
  };
  UByte.prototype.hashCode = function () {
    return UByte__hashCode_impl(this._data);
  };
  UByte.prototype.equals = function (other) {
    return UByte__equals_impl(this._data, other);
  };
  UByte.$metadata$ = {
    simpleName: 'UByte',
    kind: 'class',
    interfaces: [Comparable]
  };
  function _UInt___init__impl_(data) {
    return data;
  }
  function _UInt___get_data__impl_(this_0) {
    return this_0;
  }
  function Companion_6() {
    Companion_instance_5 = this;
    this._MIN_VALUE_0 = _UInt___init__impl_(0);
    this._MAX_VALUE_0 = _UInt___init__impl_(-1);
    this._SIZE_BYTES_0 = 4;
    this._SIZE_BITS_0 = 32;
  }
  Companion_6.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_5;
  function Companion_getInstance_5() {
    if (Companion_instance_5 == null)
      new Companion_6();
    return Companion_instance_5;
  }
  function UInt__compareTo_impl(this_0, other) {
    return uintCompare(_UInt___get_data__impl_(this_0), _UInt___get_data__impl_(other));
  }
  function UInt__compareTo_impl_0(this_0, other) {
    var tmp = this_0._data_0;
    return UInt__compareTo_impl(tmp, other instanceof UInt ? other._data_0 : THROW_CCE());
  }
  function UInt__toString_impl(this_0) {
    return toLong_0(_UInt___get_data__impl_(this_0)).and(new Long(-1, 0)).toString();
  }
  function UInt__hashCode_impl(this_0) {
    return this_0;
  }
  function UInt__equals_impl(this_0, other) {
    if (!(other instanceof UInt))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof UInt ? other._data_0 : THROW_CCE();
    if (!(this_0 === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UInt(data) {
    Companion_getInstance_5();
    this._data_0 = data;
  }
  UInt.prototype.compareTo_5 = function (other) {
    return UInt__compareTo_impl(this._data_0, other);
  };
  UInt.prototype.compareTo_30 = function (other) {
    return UInt__compareTo_impl_0(this, other);
  };
  UInt.prototype.toString = function () {
    return UInt__toString_impl(this._data_0);
  };
  UInt.prototype.hashCode = function () {
    return UInt__hashCode_impl(this._data_0);
  };
  UInt.prototype.equals = function (other) {
    return UInt__equals_impl(this._data_0, other);
  };
  UInt.$metadata$ = {
    simpleName: 'UInt',
    kind: 'class',
    interfaces: [Comparable]
  };
  function _ULong___init__impl_(data) {
    return data;
  }
  function _ULong___get_data__impl_(this_0) {
    return this_0;
  }
  function Companion_7() {
    Companion_instance_6 = this;
    this._MIN_VALUE_1 = _ULong___init__impl_(new Long(0, 0));
    this._MAX_VALUE_1 = _ULong___init__impl_(new Long(-1, -1));
    this._SIZE_BYTES_1 = 8;
    this._SIZE_BITS_1 = 64;
  }
  Companion_7.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_6;
  function Companion_getInstance_6() {
    if (Companion_instance_6 == null)
      new Companion_7();
    return Companion_instance_6;
  }
  function ULong__compareTo_impl(this_0, other) {
    return ulongCompare(_ULong___get_data__impl_(this_0), _ULong___get_data__impl_(other));
  }
  function ULong__compareTo_impl_0(this_0, other) {
    var tmp = this_0._data_1;
    return ULong__compareTo_impl(tmp, other instanceof ULong ? other._data_1 : THROW_CCE());
  }
  function ULong__toString_impl(this_0) {
    return ulongToString(_ULong___get_data__impl_(this_0));
  }
  function ULong__hashCode_impl(this_0) {
    return this_0.hashCode();
  }
  function ULong__equals_impl(this_0, other) {
    if (!(other instanceof ULong))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof ULong ? other._data_1 : THROW_CCE();
    if (!this_0.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function ULong(data) {
    Companion_getInstance_6();
    this._data_1 = data;
  }
  ULong.prototype.compareTo_7 = function (other) {
    return ULong__compareTo_impl(this._data_1, other);
  };
  ULong.prototype.compareTo_30 = function (other) {
    return ULong__compareTo_impl_0(this, other);
  };
  ULong.prototype.toString = function () {
    return ULong__toString_impl(this._data_1);
  };
  ULong.prototype.hashCode = function () {
    return ULong__hashCode_impl(this._data_1);
  };
  ULong.prototype.equals = function (other) {
    return ULong__equals_impl(this._data_1, other);
  };
  ULong.$metadata$ = {
    simpleName: 'ULong',
    kind: 'class',
    interfaces: [Comparable]
  };
  function _UShort___init__impl_(data) {
    return data;
  }
  function _UShort___get_data__impl_(this_0) {
    return this_0;
  }
  function Companion_8() {
    Companion_instance_7 = this;
    this._MIN_VALUE_2 = _UShort___init__impl_(0);
    this._MAX_VALUE_2 = _UShort___init__impl_(-1);
    this._SIZE_BYTES_2 = 2;
    this._SIZE_BITS_2 = 16;
  }
  Companion_8.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_7;
  function Companion_getInstance_7() {
    if (Companion_instance_7 == null)
      new Companion_8();
    return Companion_instance_7;
  }
  function UShort__compareTo_impl(this_0, other) {
    var tmp = _UShort___get_data__impl_(this_0) & 65535;
    return compareTo(tmp, _UShort___get_data__impl_(other) & 65535);
  }
  function UShort__compareTo_impl_0(this_0, other) {
    var tmp = this_0._data_2;
    return UShort__compareTo_impl(tmp, other instanceof UShort ? other._data_2 : THROW_CCE());
  }
  function UShort__toString_impl(this_0) {
    return (_UShort___get_data__impl_(this_0) & 65535).toString();
  }
  function UShort__hashCode_impl(this_0) {
    return this_0;
  }
  function UShort__equals_impl(this_0, other) {
    if (!(other instanceof UShort))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof UShort ? other._data_2 : THROW_CCE();
    if (!(this_0 === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UShort(data) {
    Companion_getInstance_7();
    this._data_2 = data;
  }
  UShort.prototype.compareTo_9 = function (other) {
    return UShort__compareTo_impl(this._data_2, other);
  };
  UShort.prototype.compareTo_30 = function (other) {
    return UShort__compareTo_impl_0(this, other);
  };
  UShort.prototype.toString = function () {
    return UShort__toString_impl(this._data_2);
  };
  UShort.prototype.hashCode = function () {
    return UShort__hashCode_impl(this._data_2);
  };
  UShort.prototype.equals = function (other) {
    return UShort__equals_impl(this._data_2, other);
  };
  UShort.$metadata$ = {
    simpleName: 'UShort',
    kind: 'class',
    interfaces: [Comparable]
  };
  function toUInt(_this_) {
    var tmp0_elvis_lhs = toUIntOrNull(_this_);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      numberFormatError(_this_);
    } else {
      {
        tmp = tmp0_elvis_lhs;
      }
    }
    return tmp;
  }
  function toULong(_this_) {
    var tmp0_elvis_lhs = toULongOrNull(_this_);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new ULong(tmp_0)) == null) {
      numberFormatError(_this_);
    } else {
      {
        tmp = tmp0_elvis_lhs;
      }
    }
    return tmp;
  }
  function toUByte(_this_) {
    var tmp0_elvis_lhs = toUByteOrNull(_this_);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UByte(tmp_0)) == null) {
      numberFormatError(_this_);
    } else {
      {
        tmp = tmp0_elvis_lhs;
      }
    }
    return tmp;
  }
  function toUShort(_this_) {
    var tmp0_elvis_lhs = toUShortOrNull(_this_);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UShort(tmp_0)) == null) {
      numberFormatError(_this_);
    } else {
      {
        tmp = tmp0_elvis_lhs;
      }
    }
    return tmp;
  }
  function toULongOrNull(_this_) {
    return toULongOrNull_0(_this_, 10);
  }
  function toUIntOrNull(_this_) {
    return toUIntOrNull_0(_this_, 10);
  }
  function toUByteOrNull(_this_) {
    return toUByteOrNull_0(_this_, 10);
  }
  function toUShortOrNull(_this_) {
    return toUShortOrNull_0(_this_, 10);
  }
  function toULongOrNull_0(_this_, radix) {
    checkRadix(radix);
    Unit_getInstance();
    var length = _this_.length;
    if (length === 0)
      return null;
    Companion_getInstance_6();
    var limit = _ULong___init__impl_(new Long(-1, -1));
    var start;
    var firstChar = charSequenceGet(_this_, 0);
    if (firstChar.compareTo_12(new Char(48)) < 0) {
      if (length === 1 ? true : !firstChar.equals(new Char(43)))
        return null;
      start = 1;
    } else {
      start = 0;
    }
    var limitForMaxRadix = _ULong___init__impl_(new Long(477218588, 119304647));
    var limitBeforeMul = limitForMaxRadix;
    var uradix = _ULong___init__impl_(toLong_0(radix));
    var result = _ULong___init__impl_(new Long(0, 0));
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this_, i), radix);
        if (digit < 0)
          return null;
        var tmp0_compareTo_0 = result;
        var tmp1_compareTo_0 = limitBeforeMul;
        if (ulongCompare(_ULong___get_data__impl_(tmp0_compareTo_0), _ULong___get_data__impl_(tmp1_compareTo_0)) > 0) {
          if (equals_1(new ULong(limitBeforeMul), new ULong(limitForMaxRadix))) {
            limitBeforeMul = ulongDivide(limit, uradix);
            var tmp2_compareTo_0 = result;
            var tmp3_compareTo_0 = limitBeforeMul;
            if (ulongCompare(_ULong___get_data__impl_(tmp2_compareTo_0), _ULong___get_data__impl_(tmp3_compareTo_0)) > 0) {
              return null;
            } else {
            }
          } else {
            return null;
          }
        } else {
        }
        var tmp4_times_0 = result;
        result = _ULong___init__impl_(_ULong___get_data__impl_(tmp4_times_0).times_30(_ULong___get_data__impl_(uradix)));
        var beforeAdding = result;
        var tmp5_plus_0 = result;
        var tmp6_plus_0 = _UInt___init__impl_(digit);
        var tmp0_plus_0_1 = _ULong___init__impl_(toLong_0(_UInt___get_data__impl_(tmp6_plus_0)).and(new Long(-1, 0)));
        result = _ULong___init__impl_(_ULong___get_data__impl_(tmp5_plus_0).plus_59(_ULong___get_data__impl_(tmp0_plus_0_1)));
        var tmp7_compareTo_0 = result;
        if (ulongCompare(_ULong___get_data__impl_(tmp7_compareTo_0), _ULong___get_data__impl_(beforeAdding)) < 0)
          return null;
        else {
        }
      }
       while (inductionVariable < length);
    return result;
  }
  function toUIntOrNull_0(_this_, radix) {
    checkRadix(radix);
    Unit_getInstance();
    var length = _this_.length;
    if (length === 0)
      return null;
    Companion_getInstance_5();
    var limit = _UInt___init__impl_(-1);
    var start;
    var firstChar = charSequenceGet(_this_, 0);
    if (firstChar.compareTo_12(new Char(48)) < 0) {
      if (length === 1 ? true : !firstChar.equals(new Char(43)))
        return null;
      start = 1;
    } else {
      start = 0;
    }
    var limitForMaxRadix = _UInt___init__impl_(119304647);
    var limitBeforeMul = limitForMaxRadix;
    var uradix = _UInt___init__impl_(radix);
    var result = _UInt___init__impl_(0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this_, i), radix);
        if (digit < 0)
          return null;
        var tmp0_compareTo_0 = result;
        var tmp1_compareTo_0 = limitBeforeMul;
        if (uintCompare(_UInt___get_data__impl_(tmp0_compareTo_0), _UInt___get_data__impl_(tmp1_compareTo_0)) > 0) {
          if (equals_1(new UInt(limitBeforeMul), new UInt(limitForMaxRadix))) {
            limitBeforeMul = uintDivide(limit, uradix);
            var tmp2_compareTo_0 = result;
            var tmp3_compareTo_0 = limitBeforeMul;
            if (uintCompare(_UInt___get_data__impl_(tmp2_compareTo_0), _UInt___get_data__impl_(tmp3_compareTo_0)) > 0) {
              return null;
            } else {
            }
          } else {
            return null;
          }
        } else {
        }
        var tmp4_times_0 = result;
        result = _UInt___init__impl_(imul(_UInt___get_data__impl_(tmp4_times_0), _UInt___get_data__impl_(uradix)));
        var beforeAdding = result;
        var tmp5_plus_0 = result;
        var tmp6_plus_0 = _UInt___init__impl_(digit);
        result = _UInt___init__impl_(_UInt___get_data__impl_(tmp5_plus_0) + _UInt___get_data__impl_(tmp6_plus_0) | 0);
        var tmp7_compareTo_0 = result;
        if (uintCompare(_UInt___get_data__impl_(tmp7_compareTo_0), _UInt___get_data__impl_(beforeAdding)) < 0)
          return null;
        else {
        }
      }
       while (inductionVariable < length);
    return result;
  }
  function toUByteOrNull_0(_this_, radix) {
    var tmp0_elvis_lhs = toUIntOrNull_0(_this_, radix);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      return null;
    } else {
      {
        tmp = tmp0_elvis_lhs;
      }
    }
    var int = tmp;
    Companion_getInstance_4();
    var tmp0_compareTo_0 = _UByte___init__impl_(-1);
    var tmp0_compareTo_0_1 = _UInt___init__impl_(_UByte___get_data__impl_(tmp0_compareTo_0) & 255);
    if (uintCompare(_UInt___get_data__impl_(int), _UInt___get_data__impl_(tmp0_compareTo_0_1)) > 0)
      return null;
    else {
    }
    var tmp0_toUByte_0_1 = _UInt___get_data__impl_(int);
    return _UByte___init__impl_(toByte(tmp0_toUByte_0_1));
  }
  function toUShortOrNull_0(_this_, radix) {
    var tmp0_elvis_lhs = toUIntOrNull_0(_this_, radix);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      return null;
    } else {
      {
        tmp = tmp0_elvis_lhs;
      }
    }
    var int = tmp;
    Companion_getInstance_7();
    var tmp0_compareTo_0 = _UShort___init__impl_(-1);
    var tmp0_compareTo_0_1 = _UInt___init__impl_(_UShort___get_data__impl_(tmp0_compareTo_0) & 65535);
    if (uintCompare(_UInt___get_data__impl_(int), _UInt___get_data__impl_(tmp0_compareTo_0_1)) > 0)
      return null;
    else {
    }
    var tmp0_toUShort_0_1 = _UInt___get_data__impl_(int);
    return _UShort___init__impl_(toShort(tmp0_toUShort_0_1));
  }
  function uintCompare(v1, v2) {
    return compareTo(v1 ^ IntCompanionObject_getInstance()._MIN_VALUE_5, v2 ^ IntCompanionObject_getInstance()._MIN_VALUE_5);
  }
  function uintDivide(v1, v2) {
    var tmp = toLong_0(_UInt___get_data__impl_(v1)).and(new Long(-1, 0));
    var tmp0_toUInt_0 = tmp.div_27(toLong_0(_UInt___get_data__impl_(v2)).and(new Long(-1, 0)));
    return _UInt___init__impl_(tmp0_toUInt_0.toInt_5());
  }
  function ulongCompare(v1, v2) {
    Companion_getInstance_15();
    var tmp = v1.xor(new Long(0, -2147483648));
    Companion_getInstance_15();
    return tmp.compareTo_59(v2.xor(new Long(0, -2147483648)));
  }
  function ulongDivide(v1, v2) {
    var dividend = _ULong___get_data__impl_(v1);
    var divisor = _ULong___get_data__impl_(v2);
    if (divisor.compareTo_59(new Long(0, 0)) < 0) {
      var tmp;
      if (ulongCompare(_ULong___get_data__impl_(v1), _ULong___get_data__impl_(v2)) < 0) {
        tmp = _ULong___init__impl_(new Long(0, 0));
      } else {
        {
          tmp = _ULong___init__impl_(new Long(1, 0));
        }
      }
      return tmp;
    }if (dividend.compareTo_59(new Long(0, 0)) >= 0) {
      return _ULong___init__impl_(dividend.div_27(divisor));
    }var quotient = dividend.ushr_0(1).div_27(divisor).shl_0(1);
    var rem = dividend.minus_30(quotient.times_30(divisor));
    var tmp_0;
    var tmp0_compareTo_0 = _ULong___init__impl_(rem);
    var tmp1_compareTo_0 = _ULong___init__impl_(divisor);
    if (ulongCompare(_ULong___get_data__impl_(tmp0_compareTo_0), _ULong___get_data__impl_(tmp1_compareTo_0)) >= 0) {
      tmp_0 = 1;
    } else {
      {
        tmp_0 = 0;
      }
    }
    var tmp2_plus_0 = tmp_0;
    return _ULong___init__impl_(quotient.plus_59(toLong_0(tmp2_plus_0)));
  }
  function ulongToString(v) {
    return ulongToString_0(v, 10);
  }
  function ulongToString_0(v, base) {
    if (v.compareTo_59(new Long(0, 0)) >= 0)
      return toString_2(v, base);
    var tmp0_div_0 = v.ushr_0(1);
    var quotient = tmp0_div_0.div_27(toLong_0(base)).shl_0(1);
    var tmp1_times_0 = quotient;
    var rem = v.minus_30(tmp1_times_0.times_30(toLong_0(base)));
    if (rem.compareTo_59(toLong_0(base)) >= 0) {
      var tmp2_minus_0 = rem;
      rem = tmp2_minus_0.minus_30(toLong_0(base));
      var tmp3_plus_0 = quotient;
      var tmp4_plus_0 = 1;
      quotient = tmp3_plus_0.plus_59(toLong_0(tmp4_plus_0));
    }return toString_2(quotient, base) + toString_2(rem, base);
  }
  function Annotation() {
  }
  Annotation.$metadata$ = {
    simpleName: 'Annotation',
    kind: 'interface',
    interfaces: []
  };
  function CharSequence() {
  }
  CharSequence.$metadata$ = {
    simpleName: 'CharSequence',
    kind: 'interface',
    interfaces: []
  };
  function Comparable() {
  }
  Comparable.$metadata$ = {
    simpleName: 'Comparable',
    kind: 'interface',
    interfaces: []
  };
  function Iterator_0() {
  }
  Iterator_0.$metadata$ = {
    simpleName: 'Iterator',
    kind: 'interface',
    interfaces: []
  };
  function MutableIterator() {
  }
  MutableIterator.$metadata$ = {
    simpleName: 'MutableIterator',
    kind: 'interface',
    interfaces: [Iterator_0]
  };
  function ListIterator() {
  }
  ListIterator.$metadata$ = {
    simpleName: 'ListIterator',
    kind: 'interface',
    interfaces: [Iterator_0]
  };
  function MutableListIterator() {
  }
  MutableListIterator.$metadata$ = {
    simpleName: 'MutableListIterator',
    kind: 'interface',
    interfaces: [ListIterator, MutableIterator]
  };
  function Number_0() {
  }
  Number_0.$metadata$ = {
    simpleName: 'Number',
    kind: 'class',
    interfaces: []
  };
  function IntIterator() {
  }
  IntIterator.prototype.next_31 = function () {
    return this.nextInt_0();
  };
  IntIterator.$metadata$ = {
    simpleName: 'IntIterator',
    kind: 'class',
    interfaces: [Iterator_0]
  };
  function CharIterator() {
  }
  CharIterator.prototype.next_31 = function () {
    return this.nextChar_0();
  };
  CharIterator.$metadata$ = {
    simpleName: 'CharIterator',
    kind: 'class',
    interfaces: [Iterator_0]
  };
  function IntProgressionIterator(first_1, last_1, step_0) {
    IntIterator.call(this);
    this._step = step_0;
    this._finalElement = last_1;
    this._hasNext = this._step > 0 ? first_1 <= last_1 : first_1 >= last_1;
    this._next_0 = this._hasNext ? first_1 : this._finalElement;
  }
  IntProgressionIterator.prototype.hasNext_29 = function () {
    return this._hasNext;
  };
  IntProgressionIterator.prototype.nextInt_0 = function () {
    var value = this._next_0;
    if (value === this._finalElement) {
      if (!this._hasNext)
        throw NoSuchElementException_init_$Create$();
      this._hasNext = false;
    } else {
      var tmp0_this = this;
      tmp0_this._next_0 = tmp0_this._next_0 + this._step | 0;
    }
    return value;
  };
  IntProgressionIterator.$metadata$ = {
    simpleName: 'IntProgressionIterator',
    kind: 'class',
    interfaces: []
  };
  function CharProgressionIterator(first_1, last_1, step_0) {
    CharIterator.call(this);
    this._step_0 = step_0;
    var tmp = this;
    tmp._finalElement_0 = last_1.toInt_5();
    this._hasNext_0 = this._step_0 > 0 ? first_1.compareTo_12(last_1) <= 0 : first_1.compareTo_12(last_1) >= 0;
    var tmp_0 = this;
    var tmp_1;
    if (this._hasNext_0) {
      tmp_1 = first_1.toInt_5();
    } else {
      tmp_1 = this._finalElement_0;
    }
    tmp_0._next_1 = tmp_1;
  }
  CharProgressionIterator.prototype.hasNext_29 = function () {
    return this._hasNext_0;
  };
  CharProgressionIterator.prototype.nextChar_0 = function () {
    var value = this._next_1;
    if (value === this._finalElement_0) {
      if (!this._hasNext_0)
        throw NoSuchElementException_init_$Create$();
      this._hasNext_0 = false;
    } else {
      var tmp0_this = this;
      tmp0_this._next_1 = tmp0_this._next_1 + this._step_0 | 0;
    }
    return numberToChar(value);
  };
  CharProgressionIterator.$metadata$ = {
    simpleName: 'CharProgressionIterator',
    kind: 'class',
    interfaces: []
  };
  function Companion_9() {
    Companion_instance_8 = this;
  }
  Companion_9.prototype.fromClosedRange = function (rangeStart, rangeEnd, step_0) {
    return new IntProgression(rangeStart, rangeEnd, step_0);
  };
  Companion_9.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_8;
  function Companion_getInstance_8() {
    if (Companion_instance_8 == null)
      new Companion_9();
    return Companion_instance_8;
  }
  function IntProgression(start, endInclusive, step_0) {
    Companion_getInstance_8();
    if (step_0 === 0)
      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
    if (step_0 === IntCompanionObject_getInstance()._MIN_VALUE_5)
      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this._first_1 = start;
    this._last = getProgressionLastElement(start, endInclusive, step_0);
    this._step_1 = step_0;
  }
  IntProgression.prototype._get_first__2 = function () {
    return this._first_1;
  };
  IntProgression.prototype._get_last__2 = function () {
    return this._last;
  };
  IntProgression.prototype.iterator_62 = function () {
    return new IntProgressionIterator(this._first_1, this._last, this._step_1);
  };
  IntProgression.prototype.isEmpty_50 = function () {
    return this._step_1 > 0 ? this._first_1 > this._last : this._first_1 < this._last;
  };
  IntProgression.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntProgression) {
      tmp = (this.isEmpty_50() ? other.isEmpty_50() : false) ? true : (this._first_1 === other._first_1 ? this._last === other._last : false) ? this._step_1 === other._step_1 : false;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  IntProgression.prototype.hashCode = function () {
    return this.isEmpty_50() ? -1 : imul(31, imul(31, this._first_1) + this._last | 0) + this._step_1 | 0;
  };
  IntProgression.prototype.toString = function () {
    return this._step_1 > 0 ? '' + this._first_1 + '..' + this._last + ' step ' + this._step_1 : '' + this._first_1 + ' downTo ' + this._last + ' step ' + (-this._step_1 | 0);
  };
  IntProgression.$metadata$ = {
    simpleName: 'IntProgression',
    kind: 'class',
    interfaces: [Iterable_0]
  };
  function Companion_10() {
    Companion_instance_9 = this;
  }
  Companion_10.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_9;
  function Companion_getInstance_9() {
    if (Companion_instance_9 == null)
      new Companion_10();
    return Companion_instance_9;
  }
  function CharProgression(start, endInclusive, step_0) {
    Companion_getInstance_9();
    if (step_0 === 0)
      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
    if (step_0 === IntCompanionObject_getInstance()._MIN_VALUE_5)
      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this._first_2 = start;
    var tmp = this;
    var tmp_0 = start.toInt_5();
    tmp._last_0 = numberToChar(getProgressionLastElement(tmp_0, endInclusive.toInt_5(), step_0));
    this._step_2 = step_0;
  }
  CharProgression.prototype._get_first__2 = function () {
    return this._first_2;
  };
  CharProgression.prototype._get_last__2 = function () {
    return this._last_0;
  };
  CharProgression.prototype.iterator_62 = function () {
    return new CharProgressionIterator(this._first_2, this._last_0, this._step_2);
  };
  CharProgression.prototype.isEmpty_50 = function () {
    return this._step_2 > 0 ? this._first_2.compareTo_12(this._last_0) > 0 : this._first_2.compareTo_12(this._last_0) < 0;
  };
  CharProgression.prototype.equals = function (other) {
    var tmp;
    if (other instanceof CharProgression) {
      tmp = (this.isEmpty_50() ? other.isEmpty_50() : false) ? true : (this._first_2.equals(other._first_2) ? this._last_0.equals(other._last_0) : false) ? this._step_2 === other._step_2 : false;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  CharProgression.prototype.hashCode = function () {
    var tmp;
    if (this.isEmpty_50()) {
      tmp = -1;
    } else {
      var tmp0__get_code__0 = this._first_2;
      var tmp_0 = imul(31, tmp0__get_code__0.toInt_5());
      var tmp1__get_code__0 = this._last_0;
      tmp = imul(31, tmp_0 + tmp1__get_code__0.toInt_5() | 0) + this._step_2 | 0;
    }
    return tmp;
  };
  CharProgression.prototype.toString = function () {
    return this._step_2 > 0 ? '' + this._first_2 + '..' + this._last_0 + ' step ' + this._step_2 : '' + this._first_2 + ' downTo ' + this._last_0 + ' step ' + (-this._step_2 | 0);
  };
  CharProgression.$metadata$ = {
    simpleName: 'CharProgression',
    kind: 'class',
    interfaces: [Iterable_0]
  };
  function ClosedRange() {
  }
  ClosedRange.$metadata$ = {
    simpleName: 'ClosedRange',
    kind: 'interface',
    interfaces: []
  };
  function Companion_11() {
    Companion_instance_10 = this;
    this._EMPTY = new IntRange(1, 0);
  }
  Companion_11.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_10;
  function Companion_getInstance_10() {
    if (Companion_instance_10 == null)
      new Companion_11();
    return Companion_instance_10;
  }
  function IntRange(start, endInclusive) {
    Companion_getInstance_10();
    IntProgression.call(this, start, endInclusive, 1);
  }
  IntRange.prototype._get_start__1 = function () {
    return this._get_first__2();
  };
  IntRange.prototype._get_endInclusive__1 = function () {
    return this._get_last__2();
  };
  IntRange.prototype.isEmpty_50 = function () {
    return this._get_first__2() > this._get_last__2();
  };
  IntRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntRange) {
      tmp = (this.isEmpty_50() ? other.isEmpty_50() : false) ? true : this._get_first__2() === other._get_first__2() ? this._get_last__2() === other._get_last__2() : false;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  IntRange.prototype.hashCode = function () {
    return this.isEmpty_50() ? -1 : imul(31, this._get_first__2()) + this._get_last__2() | 0;
  };
  IntRange.prototype.toString = function () {
    return '' + this._get_first__2() + '..' + this._get_last__2();
  };
  IntRange.$metadata$ = {
    simpleName: 'IntRange',
    kind: 'class',
    interfaces: [ClosedRange]
  };
  function Companion_12() {
    Companion_instance_11 = this;
    this._EMPTY_0 = new CharRange(new Char(1), new Char(0));
  }
  Companion_12.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_11;
  function Companion_getInstance_11() {
    if (Companion_instance_11 == null)
      new Companion_12();
    return Companion_instance_11;
  }
  function CharRange(start, endInclusive) {
    Companion_getInstance_11();
    CharProgression.call(this, start, endInclusive, 1);
  }
  CharRange.prototype.isEmpty_50 = function () {
    return this._get_first__2().compareTo_12(this._get_last__2()) > 0;
  };
  CharRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof CharRange) {
      tmp = (this.isEmpty_50() ? other.isEmpty_50() : false) ? true : this._get_first__2().equals(other._get_first__2()) ? this._get_last__2().equals(other._get_last__2()) : false;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  CharRange.prototype.hashCode = function () {
    var tmp;
    if (this.isEmpty_50()) {
      tmp = -1;
    } else {
      var tmp0__get_code__0 = this._get_first__2();
      var tmp_0 = imul(31, tmp0__get_code__0.toInt_5());
      var tmp1__get_code__0 = this._get_last__2();
      tmp = tmp_0 + tmp1__get_code__0.toInt_5() | 0;
    }
    return tmp;
  };
  CharRange.prototype.toString = function () {
    return '' + this._get_first__2() + '..' + this._get_last__2();
  };
  CharRange.$metadata$ = {
    simpleName: 'CharRange',
    kind: 'class',
    interfaces: [ClosedRange]
  };
  function Unit() {
    Unit_instance = this;
  }
  Unit.prototype.toString = function () {
    return 'kotlin.Unit';
  };
  Unit.$metadata$ = {
    simpleName: 'Unit',
    kind: 'object',
    interfaces: []
  };
  var Unit_instance;
  function Unit_getInstance() {
    if (Unit_instance == null)
      new Unit();
    return Unit_instance;
  }
  function getProgressionLastElement(start, end, step_0) {
    var tmp;
    if (step_0 > 0) {
      tmp = start >= end ? end : end - differenceModulo(end, start, step_0) | 0;
    } else if (step_0 < 0) {
      tmp = start <= end ? end : end + differenceModulo(start, end, -step_0 | 0) | 0;
    } else {
      throw IllegalArgumentException_init_$Create$_0('Step is zero.');
    }
    return tmp;
  }
  function differenceModulo(a, b, c) {
    return mod(mod(a, c) - mod(b, c) | 0, c);
  }
  function mod(a, b) {
    var mod_0 = a % b;
    return mod_0 >= 0 ? mod_0 : mod_0 + b | 0;
  }
  function ByteCompanionObject_0() {
    ByteCompanionObject_instance = this;
    this._MIN_VALUE_3 = -128;
    this._MAX_VALUE_3 = 127;
    this._SIZE_BYTES_3 = 1;
    this._SIZE_BITS_3 = 8;
  }
  ByteCompanionObject_0.prototype._get_MIN_VALUE__3 = function () {
    return this._MIN_VALUE_3;
  };
  ByteCompanionObject_0.prototype._get_MAX_VALUE__3 = function () {
    return this._MAX_VALUE_3;
  };
  ByteCompanionObject_0.prototype._get_SIZE_BYTES__3 = function () {
    return this._SIZE_BYTES_3;
  };
  ByteCompanionObject_0.prototype._get_SIZE_BITS__3 = function () {
    return this._SIZE_BITS_3;
  };
  ByteCompanionObject_0.$metadata$ = {
    simpleName: 'ByteCompanionObject',
    kind: 'object',
    interfaces: []
  };
  Object.defineProperty(ByteCompanionObject_0.prototype, 'MIN_VALUE', {
    configurable: true,
    get: ByteCompanionObject_0.prototype._get_MIN_VALUE__3
  });
  Object.defineProperty(ByteCompanionObject_0.prototype, 'MAX_VALUE', {
    configurable: true,
    get: ByteCompanionObject_0.prototype._get_MAX_VALUE__3
  });
  Object.defineProperty(ByteCompanionObject_0.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: ByteCompanionObject_0.prototype._get_SIZE_BYTES__3
  });
  Object.defineProperty(ByteCompanionObject_0.prototype, 'SIZE_BITS', {
    configurable: true,
    get: ByteCompanionObject_0.prototype._get_SIZE_BITS__3
  });
  var ByteCompanionObject_instance;
  function ByteCompanionObject_getInstance() {
    if (ByteCompanionObject_instance == null)
      new ByteCompanionObject_0();
    return ByteCompanionObject_instance;
  }
  function ShortCompanionObject_0() {
    ShortCompanionObject_instance = this;
    this._MIN_VALUE_4 = -32768;
    this._MAX_VALUE_4 = 32767;
    this._SIZE_BYTES_4 = 2;
    this._SIZE_BITS_4 = 16;
  }
  ShortCompanionObject_0.prototype._get_MIN_VALUE__3 = function () {
    return this._MIN_VALUE_4;
  };
  ShortCompanionObject_0.prototype._get_MAX_VALUE__3 = function () {
    return this._MAX_VALUE_4;
  };
  ShortCompanionObject_0.prototype._get_SIZE_BYTES__3 = function () {
    return this._SIZE_BYTES_4;
  };
  ShortCompanionObject_0.prototype._get_SIZE_BITS__3 = function () {
    return this._SIZE_BITS_4;
  };
  ShortCompanionObject_0.$metadata$ = {
    simpleName: 'ShortCompanionObject',
    kind: 'object',
    interfaces: []
  };
  Object.defineProperty(ShortCompanionObject_0.prototype, 'MIN_VALUE', {
    configurable: true,
    get: ShortCompanionObject_0.prototype._get_MIN_VALUE__3
  });
  Object.defineProperty(ShortCompanionObject_0.prototype, 'MAX_VALUE', {
    configurable: true,
    get: ShortCompanionObject_0.prototype._get_MAX_VALUE__3
  });
  Object.defineProperty(ShortCompanionObject_0.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: ShortCompanionObject_0.prototype._get_SIZE_BYTES__3
  });
  Object.defineProperty(ShortCompanionObject_0.prototype, 'SIZE_BITS', {
    configurable: true,
    get: ShortCompanionObject_0.prototype._get_SIZE_BITS__3
  });
  var ShortCompanionObject_instance;
  function ShortCompanionObject_getInstance() {
    if (ShortCompanionObject_instance == null)
      new ShortCompanionObject_0();
    return ShortCompanionObject_instance;
  }
  function IntCompanionObject_0() {
    IntCompanionObject_instance = this;
    this._MIN_VALUE_5 = -2147483648;
    this._MAX_VALUE_5 = 2147483647;
    this._SIZE_BYTES_5 = 4;
    this._SIZE_BITS_5 = 32;
  }
  IntCompanionObject_0.prototype._get_MIN_VALUE__3 = function () {
    return this._MIN_VALUE_5;
  };
  IntCompanionObject_0.prototype._get_MAX_VALUE__3 = function () {
    return this._MAX_VALUE_5;
  };
  IntCompanionObject_0.prototype._get_SIZE_BYTES__3 = function () {
    return this._SIZE_BYTES_5;
  };
  IntCompanionObject_0.prototype._get_SIZE_BITS__3 = function () {
    return this._SIZE_BITS_5;
  };
  IntCompanionObject_0.$metadata$ = {
    simpleName: 'IntCompanionObject',
    kind: 'object',
    interfaces: []
  };
  Object.defineProperty(IntCompanionObject_0.prototype, 'MIN_VALUE', {
    configurable: true,
    get: IntCompanionObject_0.prototype._get_MIN_VALUE__3
  });
  Object.defineProperty(IntCompanionObject_0.prototype, 'MAX_VALUE', {
    configurable: true,
    get: IntCompanionObject_0.prototype._get_MAX_VALUE__3
  });
  Object.defineProperty(IntCompanionObject_0.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: IntCompanionObject_0.prototype._get_SIZE_BYTES__3
  });
  Object.defineProperty(IntCompanionObject_0.prototype, 'SIZE_BITS', {
    configurable: true,
    get: IntCompanionObject_0.prototype._get_SIZE_BITS__3
  });
  var IntCompanionObject_instance;
  function IntCompanionObject_getInstance() {
    if (IntCompanionObject_instance == null)
      new IntCompanionObject_0();
    return IntCompanionObject_instance;
  }
  function FloatCompanionObject_0() {
    FloatCompanionObject_instance = this;
    this._MIN_VALUE_6 = 1.4E-45;
    this._MAX_VALUE_6 = 3.4028235E38;
    this._POSITIVE_INFINITY = Infinity;
    this._NEGATIVE_INFINITY = -Infinity;
    this._NaN = NaN;
    this._SIZE_BYTES_6 = 4;
    this._SIZE_BITS_6 = 32;
  }
  FloatCompanionObject_0.prototype._get_MIN_VALUE__3 = function () {
    return this._MIN_VALUE_6;
  };
  FloatCompanionObject_0.prototype._get_MAX_VALUE__3 = function () {
    return this._MAX_VALUE_6;
  };
  FloatCompanionObject_0.prototype._get_POSITIVE_INFINITY__0 = function () {
    return this._POSITIVE_INFINITY;
  };
  FloatCompanionObject_0.prototype._get_NEGATIVE_INFINITY__0 = function () {
    return this._NEGATIVE_INFINITY;
  };
  FloatCompanionObject_0.prototype._get_NaN__0 = function () {
    return this._NaN;
  };
  FloatCompanionObject_0.prototype._get_SIZE_BYTES__3 = function () {
    return this._SIZE_BYTES_6;
  };
  FloatCompanionObject_0.prototype._get_SIZE_BITS__3 = function () {
    return this._SIZE_BITS_6;
  };
  FloatCompanionObject_0.$metadata$ = {
    simpleName: 'FloatCompanionObject',
    kind: 'object',
    interfaces: []
  };
  Object.defineProperty(FloatCompanionObject_0.prototype, 'MIN_VALUE', {
    configurable: true,
    get: FloatCompanionObject_0.prototype._get_MIN_VALUE__3
  });
  Object.defineProperty(FloatCompanionObject_0.prototype, 'MAX_VALUE', {
    configurable: true,
    get: FloatCompanionObject_0.prototype._get_MAX_VALUE__3
  });
  Object.defineProperty(FloatCompanionObject_0.prototype, 'POSITIVE_INFINITY', {
    configurable: true,
    get: FloatCompanionObject_0.prototype._get_POSITIVE_INFINITY__0
  });
  Object.defineProperty(FloatCompanionObject_0.prototype, 'NEGATIVE_INFINITY', {
    configurable: true,
    get: FloatCompanionObject_0.prototype._get_NEGATIVE_INFINITY__0
  });
  Object.defineProperty(FloatCompanionObject_0.prototype, 'NaN', {
    configurable: true,
    get: FloatCompanionObject_0.prototype._get_NaN__0
  });
  Object.defineProperty(FloatCompanionObject_0.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: FloatCompanionObject_0.prototype._get_SIZE_BYTES__3
  });
  Object.defineProperty(FloatCompanionObject_0.prototype, 'SIZE_BITS', {
    configurable: true,
    get: FloatCompanionObject_0.prototype._get_SIZE_BITS__3
  });
  var FloatCompanionObject_instance;
  function FloatCompanionObject_getInstance() {
    if (FloatCompanionObject_instance == null)
      new FloatCompanionObject_0();
    return FloatCompanionObject_instance;
  }
  function DoubleCompanionObject_0() {
    DoubleCompanionObject_instance = this;
    this._MIN_VALUE_7 = 4.9E-324;
    this._MAX_VALUE_7 = 1.7976931348623157E308;
    this._POSITIVE_INFINITY_0 = Infinity;
    this._NEGATIVE_INFINITY_0 = -Infinity;
    this._NaN_0 = NaN;
    this._SIZE_BYTES_7 = 8;
    this._SIZE_BITS_7 = 64;
  }
  DoubleCompanionObject_0.prototype._get_MIN_VALUE__3 = function () {
    return this._MIN_VALUE_7;
  };
  DoubleCompanionObject_0.prototype._get_MAX_VALUE__3 = function () {
    return this._MAX_VALUE_7;
  };
  DoubleCompanionObject_0.prototype._get_POSITIVE_INFINITY__0 = function () {
    return this._POSITIVE_INFINITY_0;
  };
  DoubleCompanionObject_0.prototype._get_NEGATIVE_INFINITY__0 = function () {
    return this._NEGATIVE_INFINITY_0;
  };
  DoubleCompanionObject_0.prototype._get_NaN__0 = function () {
    return this._NaN_0;
  };
  DoubleCompanionObject_0.prototype._get_SIZE_BYTES__3 = function () {
    return this._SIZE_BYTES_7;
  };
  DoubleCompanionObject_0.prototype._get_SIZE_BITS__3 = function () {
    return this._SIZE_BITS_7;
  };
  DoubleCompanionObject_0.$metadata$ = {
    simpleName: 'DoubleCompanionObject',
    kind: 'object',
    interfaces: []
  };
  Object.defineProperty(DoubleCompanionObject_0.prototype, 'MIN_VALUE', {
    configurable: true,
    get: DoubleCompanionObject_0.prototype._get_MIN_VALUE__3
  });
  Object.defineProperty(DoubleCompanionObject_0.prototype, 'MAX_VALUE', {
    configurable: true,
    get: DoubleCompanionObject_0.prototype._get_MAX_VALUE__3
  });
  Object.defineProperty(DoubleCompanionObject_0.prototype, 'POSITIVE_INFINITY', {
    configurable: true,
    get: DoubleCompanionObject_0.prototype._get_POSITIVE_INFINITY__0
  });
  Object.defineProperty(DoubleCompanionObject_0.prototype, 'NEGATIVE_INFINITY', {
    configurable: true,
    get: DoubleCompanionObject_0.prototype._get_NEGATIVE_INFINITY__0
  });
  Object.defineProperty(DoubleCompanionObject_0.prototype, 'NaN', {
    configurable: true,
    get: DoubleCompanionObject_0.prototype._get_NaN__0
  });
  Object.defineProperty(DoubleCompanionObject_0.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: DoubleCompanionObject_0.prototype._get_SIZE_BYTES__3
  });
  Object.defineProperty(DoubleCompanionObject_0.prototype, 'SIZE_BITS', {
    configurable: true,
    get: DoubleCompanionObject_0.prototype._get_SIZE_BITS__3
  });
  var DoubleCompanionObject_instance;
  function DoubleCompanionObject_getInstance() {
    if (DoubleCompanionObject_instance == null)
      new DoubleCompanionObject_0();
    return DoubleCompanionObject_instance;
  }
  function StringCompanionObject() {
    StringCompanionObject_instance = this;
  }
  StringCompanionObject.$metadata$ = {
    simpleName: 'StringCompanionObject',
    kind: 'object',
    interfaces: []
  };
  var StringCompanionObject_instance;
  function StringCompanionObject_getInstance() {
    if (StringCompanionObject_instance == null)
      new StringCompanionObject();
    return StringCompanionObject_instance;
  }
  function BooleanCompanionObject() {
    BooleanCompanionObject_instance = this;
  }
  BooleanCompanionObject.$metadata$ = {
    simpleName: 'BooleanCompanionObject',
    kind: 'object',
    interfaces: []
  };
  var BooleanCompanionObject_instance;
  function BooleanCompanionObject_getInstance() {
    if (BooleanCompanionObject_instance == null)
      new BooleanCompanionObject();
    return BooleanCompanionObject_instance;
  }
  function Comparator() {
  }
  Comparator.$metadata$ = {
    simpleName: 'Comparator',
    kind: 'interface',
    interfaces: []
  };
  function setOf_0(element) {
    return hashSetOf([element]);
  }
  function mapCapacity(expectedSize) {
    return expectedSize;
  }
  function checkIndexOverflow(index) {
    if (index < 0) {
      throwIndexOverflow();
    }return index;
  }
  function sortWith(_this_, comparator) {
    collectionsSort(_this_, comparator);
  }
  function listOf_0(element) {
    return arrayListOf([element]);
  }
  function arrayCopy_0(source, destination, destinationOffset, startIndex, endIndex) {
    Companion_getInstance().checkRangeIndexes(startIndex, endIndex, source.length);
    var rangeSize = endIndex - startIndex | 0;
    Companion_getInstance().checkRangeIndexes(destinationOffset, destinationOffset + rangeSize | 0, destination.length);
    if (ArrayBuffer.isView(destination) && ArrayBuffer.isView(source)) {
      var subrange = source.subarray(startIndex, endIndex);
      destination.set(subrange, destinationOffset);
    } else {
      if (!(source === destination) ? true : destinationOffset <= startIndex) {
        var inductionVariable = 0;
        if (inductionVariable < rangeSize)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            destination[destinationOffset + index | 0] = source[startIndex + index | 0];
          }
           while (inductionVariable < rangeSize);
      } else {
        var inductionVariable_0 = rangeSize - 1 | 0;
        if (0 <= inductionVariable_0)
          do {
            var index_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + -1 | 0;
            destination[destinationOffset + index_0 | 0] = source[startIndex + index_0 | 0];
          }
           while (0 <= inductionVariable_0);
      }
    }
  }
  function mapOf_0(pair) {
    return hashMapOf([pair]);
  }
  function copyToArray_0(collection) {
    var tmp;
    if (collection.toArray !== undefined) {
      var tmp0_unsafeCast_0 = collection.toArray();
      tmp = tmp0_unsafeCast_0;
    } else {
      {
        var tmp1_unsafeCast_0 = copyToArrayImpl_0(collection);
        tmp = tmp1_unsafeCast_0;
      }
    }
    return tmp;
  }
  function collectionsSort(list, comparator) {
    if (list._get_size__48() <= 1)
      return Unit_getInstance();
    var array = copyToArray_0(list);
    sortArrayWith(array, comparator);
    var inductionVariable = 0;
    var last_1 = array.length;
    if (inductionVariable < last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        list.set_6(i, array[i]);
        Unit_getInstance();
      }
       while (inductionVariable < last_1);
  }
  function copyToArrayImpl_0(collection) {
    var array = [];
    var iterator = collection.iterator_62();
    while (iterator.hasNext_29()) {
      array.push(iterator.next_31());
    }
    return array;
  }
  function AbstractMutableCollection() {
    AbstractCollection.call(this);
  }
  AbstractMutableCollection.prototype.addAll_23 = function (elements) {
    this.checkIsMutable_12();
    var modified = false;
    var tmp0_iterator = elements.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var element = tmp0_iterator.next_31();
      if (this.add_32(element))
        modified = true;
    }
    return modified;
  };
  AbstractMutableCollection.prototype.clear_26 = function () {
    this.checkIsMutable_12();
    var iterator = this.iterator_62();
    while (iterator.hasNext_29()) {
      iterator.next_31();
      Unit_getInstance();
      iterator.remove_51();
    }
  };
  AbstractMutableCollection.prototype.toJSON = function () {
    return this.toArray();
  };
  AbstractMutableCollection.prototype.checkIsMutable_12 = function () {
  };
  AbstractMutableCollection.$metadata$ = {
    simpleName: 'AbstractMutableCollection',
    kind: 'class',
    interfaces: [MutableCollection]
  };
  function IteratorImpl($outer) {
    this._$this = $outer;
    this._index_1 = 0;
    this._last_1 = -1;
  }
  IteratorImpl.prototype._set_index__0 = function (_set___) {
    this._index_1 = _set___;
  };
  IteratorImpl.prototype.hasNext_29 = function () {
    return this._index_1 < this._$this._get_size__48();
  };
  IteratorImpl.prototype.next_31 = function () {
    if (!this.hasNext_29())
      throw NoSuchElementException_init_$Create$();
    var tmp = this;
    var tmp0_this = this;
    var tmp1 = tmp0_this._index_1;
    tmp0_this._index_1 = tmp1 + 1 | 0;
    tmp._last_1 = tmp1;
    return this._$this.get_77(this._last_1);
  };
  IteratorImpl.prototype.remove_51 = function () {
    var tmp0_check_0 = !(this._last_1 === -1);
    if (!tmp0_check_0) {
      var message_1 = 'Call next() or previous() before removing element from the iterator.';
      throw IllegalStateException_init_$Create$(toString_1(message_1));
    }this._$this.removeAt_2(this._last_1);
    Unit_getInstance();
    this._index_1 = this._last_1;
    this._last_1 = -1;
  };
  IteratorImpl.$metadata$ = {
    simpleName: 'IteratorImpl',
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function ListIteratorImpl($outer, index) {
    this._$this_0 = $outer;
    IteratorImpl.call(this, $outer);
    Companion_getInstance().checkPositionIndex(index, this._$this_0._get_size__48());
    this._set_index__0(index);
  }
  ListIteratorImpl.$metadata$ = {
    simpleName: 'ListIteratorImpl',
    kind: 'class',
    interfaces: [MutableListIterator]
  };
  function AbstractMutableList() {
    AbstractMutableCollection.call(this);
    this._modCount = 0;
  }
  AbstractMutableList.prototype._set_modCount__0 = function (_set___) {
    this._modCount = _set___;
  };
  AbstractMutableList.prototype._get_modCount__0 = function () {
    return this._modCount;
  };
  AbstractMutableList.prototype.add_32 = function (element) {
    this.checkIsMutable_12();
    this.add_26(this._get_size__48(), element);
    return true;
  };
  AbstractMutableList.prototype.clear_26 = function () {
    this.checkIsMutable_12();
    this.removeRange_0(0, this._get_size__48());
  };
  AbstractMutableList.prototype.iterator_62 = function () {
    return new IteratorImpl(this);
  };
  AbstractMutableList.prototype.contains_48 = function (element) {
    return this.indexOf_1(element) >= 0;
  };
  AbstractMutableList.prototype.indexOf_1 = function (element) {
    var inductionVariable = 0;
    var last_1 = _get_lastIndex__0(this);
    if (inductionVariable <= last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals_1(this.get_77(index), element)) {
          return index;
        }}
       while (!(index === last_1));
    return -1;
  };
  AbstractMutableList.prototype.listIterator_3 = function (index) {
    return new ListIteratorImpl(this, index);
  };
  AbstractMutableList.prototype.removeRange_0 = function (fromIndex, toIndex) {
    var iterator = this.listIterator_3(fromIndex);
    var tmp0_repeat_0 = toIndex - fromIndex | 0;
    var inductionVariable = 0;
    if (inductionVariable < tmp0_repeat_0)
      do {
        var index_2 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        iterator.next_31();
        Unit_getInstance();
        iterator.remove_51();
      }
       while (inductionVariable < tmp0_repeat_0);
  };
  AbstractMutableList.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List) : false))
      return false;
    else {
    }
    return Companion_getInstance().orderedEquals(this, other);
  };
  AbstractMutableList.prototype.hashCode = function () {
    return Companion_getInstance().orderedHashCode(this);
  };
  AbstractMutableList.$metadata$ = {
    simpleName: 'AbstractMutableList',
    kind: 'class',
    interfaces: [MutableList]
  };
  function _no_name_provided__17($entryIterator) {
    this._$entryIterator_1 = $entryIterator;
  }
  _no_name_provided__17.prototype.hasNext_29 = function () {
    return this._$entryIterator_1.hasNext_29();
  };
  _no_name_provided__17.prototype.next_31 = function () {
    return this._$entryIterator_1.next_31()._get_key__52();
  };
  _no_name_provided__17.prototype.remove_51 = function () {
    return this._$entryIterator_1.remove_51();
  };
  _no_name_provided__17.$metadata$ = {
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function _no_name_provided__18($entryIterator) {
    this._$entryIterator_2 = $entryIterator;
  }
  _no_name_provided__18.prototype.hasNext_29 = function () {
    return this._$entryIterator_2.hasNext_29();
  };
  _no_name_provided__18.prototype.next_31 = function () {
    return this._$entryIterator_2.next_31()._get_value__27();
  };
  _no_name_provided__18.prototype.remove_51 = function () {
    return this._$entryIterator_2.remove_51();
  };
  _no_name_provided__18.$metadata$ = {
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function SimpleEntry(key, value) {
    this._key_0 = key;
    this.__value_0 = value;
  }
  SimpleEntry.prototype._get_key__52 = function () {
    return this._key_0;
  };
  SimpleEntry.prototype._get_value__27 = function () {
    return this.__value_0;
  };
  SimpleEntry.prototype.setValue_8 = function (newValue) {
    var oldValue = this.__value_0;
    this.__value_0 = newValue;
    return oldValue;
  };
  SimpleEntry.prototype.hashCode = function () {
    return Companion_getInstance_0().entryHashCode(this);
  };
  SimpleEntry.prototype.toString = function () {
    return Companion_getInstance_0().entryToString(this);
  };
  SimpleEntry.prototype.equals = function (other) {
    return Companion_getInstance_0().entryEquals(this, other);
  };
  SimpleEntry.$metadata$ = {
    simpleName: 'SimpleEntry',
    kind: 'class',
    interfaces: [MutableEntry]
  };
  function AbstractEntrySet() {
    AbstractMutableSet.call(this);
  }
  AbstractEntrySet.prototype.contains_48 = function (element) {
    return this.containsEntry_4(element);
  };
  AbstractEntrySet.$metadata$ = {
    simpleName: 'AbstractEntrySet',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__19(this$0) {
    this._this$0_6 = this$0;
    AbstractMutableSet.call(this);
  }
  _no_name_provided__19.prototype.add_4 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on keys');
  };
  _no_name_provided__19.prototype.add_32 = function (element) {
    return this.add_4((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  _no_name_provided__19.prototype.clear_26 = function () {
    this._this$0_6.clear_26();
  };
  _no_name_provided__19.prototype.contains_26 = function (element) {
    return this._this$0_6.containsKey_12(element);
  };
  _no_name_provided__19.prototype.contains_48 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    else {
    }
    return this.contains_26((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  _no_name_provided__19.prototype.iterator_62 = function () {
    var entryIterator = this._this$0_6._get_entries__8().iterator_62();
    return new _no_name_provided__17(entryIterator);
  };
  _no_name_provided__19.prototype._get_size__48 = function () {
    return this._this$0_6._get_size__48();
  };
  _no_name_provided__19.prototype.checkIsMutable_12 = function () {
    return this._this$0_6.checkIsMutable_12();
  };
  _no_name_provided__19.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__20(this$0) {
    this._this$0_7 = this$0;
    AbstractMutableCollection.call(this);
  }
  _no_name_provided__20.prototype.add_6 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on values');
  };
  _no_name_provided__20.prototype.add_32 = function (element) {
    return this.add_6((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  _no_name_provided__20.prototype.contains_19 = function (element) {
    return this._this$0_7.containsValue_2(element);
  };
  _no_name_provided__20.prototype.contains_48 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    else {
    }
    return this.contains_19((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  _no_name_provided__20.prototype.iterator_62 = function () {
    var entryIterator = this._this$0_7._get_entries__8().iterator_62();
    return new _no_name_provided__18(entryIterator);
  };
  _no_name_provided__20.prototype._get_size__48 = function () {
    return this._this$0_7._get_size__48();
  };
  _no_name_provided__20.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(!(other == null) ? isInterface(other, Collection) : false))
      return false;
    else {
    }
    return Companion_getInstance().orderedEquals(this, other);
  };
  _no_name_provided__20.prototype.hashCode = function () {
    return Companion_getInstance().orderedHashCode(this);
  };
  _no_name_provided__20.prototype.checkIsMutable_12 = function () {
    return this._this$0_7.checkIsMutable_12();
  };
  _no_name_provided__20.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function AbstractMutableMap() {
    AbstractMap.call(this);
    this.__keys_0 = null;
    this.__values_0 = null;
  }
  AbstractMutableMap.prototype.clear_26 = function () {
    this._get_entries__8().clear_26();
  };
  AbstractMutableMap.prototype._get_keys__8 = function () {
    if (this.__keys_0 == null) {
      var tmp = this;
      tmp.__keys_0 = new _no_name_provided__19(this);
    }return ensureNotNull(this.__keys_0);
  };
  AbstractMutableMap.prototype.putAll_6 = function (from) {
    this.checkIsMutable_12();
    var tmp0_iterator = from._get_entries__8().iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var tmp1_loop_parameter = tmp0_iterator.next_31();
      var key = tmp1_loop_parameter._get_key__52();
      var value = tmp1_loop_parameter._get_value__27();
      this.put_10(key, value);
      Unit_getInstance();
    }
  };
  AbstractMutableMap.prototype._get_values__14 = function () {
    if (this.__values_0 == null) {
      var tmp = this;
      tmp.__values_0 = new _no_name_provided__20(this);
    }return ensureNotNull(this.__values_0);
  };
  AbstractMutableMap.prototype.remove_45 = function (key) {
    this.checkIsMutable_12();
    var iter = this._get_entries__8().iterator_62();
    while (iter.hasNext_29()) {
      var entry = iter.next_31();
      var k = entry._get_key__52();
      if (equals_1(key, k)) {
        var value = entry._get_value__27();
        iter.remove_51();
        return value;
      }}
    return null;
  };
  AbstractMutableMap.prototype.checkIsMutable_12 = function () {
  };
  AbstractMutableMap.$metadata$ = {
    simpleName: 'AbstractMutableMap',
    kind: 'class',
    interfaces: [MutableMap]
  };
  function AbstractMutableSet() {
    AbstractMutableCollection.call(this);
  }
  AbstractMutableSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    else {
    }
    return Companion_getInstance_1().setEquals(this, other);
  };
  AbstractMutableSet.prototype.hashCode = function () {
    return Companion_getInstance_1().unorderedHashCode(this);
  };
  AbstractMutableSet.$metadata$ = {
    simpleName: 'AbstractMutableSet',
    kind: 'class',
    interfaces: [MutableSet]
  };
  function ArrayList_init_$Init$($this) {
    ArrayList.call($this, []);
    return $this;
  }
  function ArrayList_init_$Create$() {
    return ArrayList_init_$Init$(Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_0(initialCapacity, $this) {
    ArrayList.call($this, []);
    return $this;
  }
  function ArrayList_init_$Create$_0(initialCapacity) {
    return ArrayList_init_$Init$_0(initialCapacity, Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_1(elements, $this) {
    ArrayList.call($this, copyToArray_0(elements));
    return $this;
  }
  function ArrayList_init_$Create$_1(elements) {
    return ArrayList_init_$Init$_1(elements, Object.create(ArrayList.prototype));
  }
  function rangeCheck($this, index) {
    Companion_getInstance().checkElementIndex(index, $this._get_size__48());
    return index;
  }
  function insertionRangeCheck($this, index) {
    Companion_getInstance().checkPositionIndex(index, $this._get_size__48());
    return index;
  }
  function ArrayList(array) {
    AbstractMutableList.call(this);
    this._array = array;
    this._isReadOnly = false;
  }
  ArrayList.prototype.trimToSize = function () {
  };
  ArrayList.prototype.ensureCapacity_8 = function (minCapacity) {
  };
  ArrayList.prototype._get_size__48 = function () {
    return this._array.length;
  };
  ArrayList.prototype.get_77 = function (index) {
    var tmp = this._array[rangeCheck(this, index)];
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.set_6 = function (index, element) {
    this.checkIsMutable_12();
    rangeCheck(this, index);
    Unit_getInstance();
    var tmp0_apply_0 = this._array[index];
    this._array[index] = element;
    var tmp = tmp0_apply_0;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.add_32 = function (element) {
    this.checkIsMutable_12();
    var tmp0_asDynamic_0 = this._array;
    tmp0_asDynamic_0.push(element);
    var tmp0_this = this;
    var tmp1 = tmp0_this._get_modCount__0();
    tmp0_this._set_modCount__0(tmp1 + 1 | 0);
    Unit_getInstance();
    return true;
  };
  ArrayList.prototype.add_26 = function (index, element) {
    this.checkIsMutable_12();
    var tmp0_asDynamic_0 = this._array;
    tmp0_asDynamic_0.splice(insertionRangeCheck(this, index), 0, element);
    var tmp0_this = this;
    var tmp1 = tmp0_this._get_modCount__0();
    tmp0_this._set_modCount__0(tmp1 + 1 | 0);
    Unit_getInstance();
  };
  ArrayList.prototype.addAll_23 = function (elements) {
    this.checkIsMutable_12();
    if (elements.isEmpty_50())
      return false;
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp0_plus_0 = tmp0_this._array;
    var tmp1_plus_0 = copyToArray_0(elements);
    tmp._array = tmp0_plus_0.concat(tmp1_plus_0);
    var tmp1_this = this;
    var tmp2 = tmp1_this._get_modCount__0();
    tmp1_this._set_modCount__0(tmp2 + 1 | 0);
    Unit_getInstance();
    return true;
  };
  ArrayList.prototype.removeAt_2 = function (index) {
    this.checkIsMutable_12();
    rangeCheck(this, index);
    Unit_getInstance();
    var tmp0_this = this;
    var tmp1 = tmp0_this._get_modCount__0();
    tmp0_this._set_modCount__0(tmp1 + 1 | 0);
    Unit_getInstance();
    var tmp;
    if (index === _get_lastIndex__0(this)) {
      var tmp0_asDynamic_0 = this._array;
      tmp = tmp0_asDynamic_0.pop();
    } else {
      var tmp1_asDynamic_0 = this._array;
      tmp = tmp1_asDynamic_0.splice(index, 1)[0];
    }
    return tmp;
  };
  ArrayList.prototype.removeRange_0 = function (fromIndex, toIndex) {
    this.checkIsMutable_12();
    var tmp0_this = this;
    var tmp1 = tmp0_this._get_modCount__0();
    tmp0_this._set_modCount__0(tmp1 + 1 | 0);
    Unit_getInstance();
    var tmp0_asDynamic_0 = this._array;
    tmp0_asDynamic_0.splice(fromIndex, toIndex - fromIndex | 0);
  };
  ArrayList.prototype.clear_26 = function () {
    this.checkIsMutable_12();
    var tmp = this;
    tmp._array = [];
    var tmp0_this = this;
    var tmp1 = tmp0_this._get_modCount__0();
    tmp0_this._set_modCount__0(tmp1 + 1 | 0);
    Unit_getInstance();
  };
  ArrayList.prototype.indexOf_1 = function (element) {
    return indexOf(this._array, element);
  };
  ArrayList.prototype.toString = function () {
    return arrayToString(this._array);
  };
  ArrayList.prototype.toArray_0 = function () {
    return [].slice.call(this._array);
  };
  ArrayList.prototype.toArray = function () {
    return this.toArray_0();
  };
  ArrayList.prototype.checkIsMutable_12 = function () {
    if (this._isReadOnly)
      throw UnsupportedOperationException_init_$Create$();
  };
  ArrayList.$metadata$ = {
    simpleName: 'ArrayList',
    kind: 'class',
    interfaces: [MutableList, RandomAccess]
  };
  var _stableSortingIsSupported;
  function sortArrayWith(array, comparator) {
    if (getStableSortingIsSupported()) {
      var comparison = _no_name_provided_$factory_9(comparator);
      array.sort(comparison);
    } else {
      mergeSort(array, 0, _get_lastIndex_(array), comparator);
    }
  }
  function getStableSortingIsSupported() {
    var tmp0_safe_receiver = _stableSortingIsSupported;
    if (tmp0_safe_receiver == null)
      null;
    else {
      return tmp0_safe_receiver;
    }
    Unit_getInstance();
    _stableSortingIsSupported = false;
    var tmp0_unsafeCast_0 = [];
    var array = tmp0_unsafeCast_0;
    var inductionVariable = 0;
    if (inductionVariable < 600)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        array.push(index);
      }
       while (inductionVariable < 600);
    var comparison = _no_name_provided_$factory_10();
    array.sort(comparison);
    var inductionVariable_0 = 1;
    var last_1 = array.length;
    if (inductionVariable_0 < last_1)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var a = array[index_0 - 1 | 0];
        var b = array[index_0];
        if ((a & 3) === (b & 3) ? a >= b : false)
          return false;
      }
       while (inductionVariable_0 < last_1);
    _stableSortingIsSupported = true;
    return true;
  }
  function mergeSort(array, start, endInclusive, comparator) {
    var tmp0_arrayOfNulls_0 = array.length;
    var tmp1_unsafeCast_0 = fillArrayVal(Array(tmp0_arrayOfNulls_0), null);
    var buffer = tmp1_unsafeCast_0;
    var result = mergeSort_0(array, buffer, start, endInclusive, comparator);
    if (!(result === array)) {
      var inductionVariable = start;
      if (inductionVariable <= endInclusive)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          array[i] = result[i];
        }
         while (!(i === endInclusive));
    }}
  function mergeSort_0(array, buffer, start, end, comparator) {
    if (start === end) {
      return array;
    }var median = (start + end | 0) / 2 | 0;
    var left = mergeSort_0(array, buffer, start, median, comparator);
    var right = mergeSort_0(array, buffer, median + 1 | 0, end, comparator);
    var target = left === buffer ? array : buffer;
    var leftIndex = start;
    var rightIndex = median + 1 | 0;
    var inductionVariable = start;
    if (inductionVariable <= end)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (leftIndex <= median ? rightIndex <= end : false) {
          var leftValue = left[leftIndex];
          var rightValue = right[rightIndex];
          if (comparator.compare(leftValue, rightValue) <= 0) {
            target[i] = leftValue;
            var tmp1 = leftIndex;
            leftIndex = tmp1 + 1 | 0;
            Unit_getInstance();
          } else {
            target[i] = rightValue;
            var tmp2 = rightIndex;
            rightIndex = tmp2 + 1 | 0;
            Unit_getInstance();
          }
        } else if (leftIndex <= median) {
          target[i] = left[leftIndex];
          var tmp3 = leftIndex;
          leftIndex = tmp3 + 1 | 0;
          Unit_getInstance();
        } else {
          target[i] = right[rightIndex];
          var tmp4 = rightIndex;
          rightIndex = tmp4 + 1 | 0;
          Unit_getInstance();
          Unit_getInstance();
        }
      }
       while (!(i === end));
    return target;
  }
  function _no_name_provided__21($comparator) {
    this._$comparator = $comparator;
  }
  _no_name_provided__21.prototype.invoke_19 = function (a, b) {
    return this._$comparator.compare(a, b);
  };
  _no_name_provided__21.prototype.invoke_418 = function (p1, p2) {
    var tmp = (p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE();
    return this.invoke_19(tmp, (p2 == null ? true : isObject(p2)) ? p2 : THROW_CCE());
  };
  _no_name_provided__21.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__22() {
  }
  _no_name_provided__22.prototype.invoke_21 = function (a, b) {
    return (a & 3) - (b & 3) | 0;
  };
  _no_name_provided__22.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? typeof p1 === 'number' : false) ? p1 : THROW_CCE();
    return this.invoke_21(tmp, (!(p2 == null) ? typeof p2 === 'number' : false) ? p2 : THROW_CCE());
  };
  _no_name_provided__22.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_9($comparator) {
    var i = new _no_name_provided__21($comparator);
    return function (p1, p2) {
      return i.invoke_19(p1, p2);
    };
  }
  function _no_name_provided_$factory_10() {
    var i = new _no_name_provided__22();
    return function (p1, p2) {
      return i.invoke_21(p1, p2);
    };
  }
  function HashCode() {
    HashCode_instance = this;
  }
  HashCode.prototype.equals_1 = function (value1, value2) {
    return equals_1(value1, value2);
  };
  HashCode.prototype.getHashCode_0 = function (value) {
    var tmp0_safe_receiver = value;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  HashCode.$metadata$ = {
    simpleName: 'HashCode',
    kind: 'object',
    interfaces: [EqualityComparator]
  };
  var HashCode_instance;
  function HashCode_getInstance() {
    if (HashCode_instance == null)
      new HashCode();
    return HashCode_instance;
  }
  function EqualityComparator() {
  }
  EqualityComparator.$metadata$ = {
    simpleName: 'EqualityComparator',
    kind: 'interface',
    interfaces: []
  };
  function EntrySet($outer) {
    this._$this_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet.prototype.add_14 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet.prototype.add_32 = function (element) {
    return this.add_14((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet.prototype.clear_26 = function () {
    this._$this_1.clear_26();
  };
  EntrySet.prototype.containsEntry_4 = function (element) {
    return this._$this_1.containsEntry_5(element);
  };
  EntrySet.prototype.iterator_62 = function () {
    return this._$this_1._internalMap.iterator_62();
  };
  EntrySet.prototype._get_size__48 = function () {
    return this._$this_1._get_size__48();
  };
  EntrySet.$metadata$ = {
    simpleName: 'EntrySet',
    kind: 'class',
    interfaces: []
  };
  function HashMap_init_$Init$(internalMap, $this) {
    AbstractMutableMap.call($this);
    HashMap.call($this);
    $this._internalMap = internalMap;
    $this._equality = internalMap._get_equality__0();
    return $this;
  }
  function HashMap_init_$Init$_0($this) {
    HashMap_init_$Init$(new InternalHashCodeMap(HashCode_getInstance()), $this);
    return $this;
  }
  function HashMap_init_$Create$() {
    return HashMap_init_$Init$_0(Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_0($this);
    var tmp0_require_0 = initialCapacity >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Negative initial capacity: ' + initialCapacity;
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var tmp1_require_0 = loadFactor >= 0;
    if (!tmp1_require_0) {
      var message_1_0 = '' + 'Non-positive load factor: ' + loadFactor;
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1_0));
    }return $this;
  }
  function HashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return HashMap_init_$Init$_1(initialCapacity, loadFactor, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_2(initialCapacity, $this) {
    HashMap_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashMap_init_$Create$_1(initialCapacity) {
    return HashMap_init_$Init$_2(initialCapacity, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_3(original, $this) {
    HashMap_init_$Init$_0($this);
    $this.putAll_6(original);
    return $this;
  }
  function HashMap_init_$Create$_2(original) {
    return HashMap_init_$Init$_3(original, Object.create(HashMap.prototype));
  }
  HashMap.prototype.clear_26 = function () {
    this._internalMap.clear_26();
  };
  HashMap.prototype.containsKey_12 = function (key) {
    return this._internalMap.contains_26(key);
  };
  HashMap.prototype.containsValue_2 = function (value) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_any_0 = this._internalMap;
      var tmp;
      if (isInterface(tmp0_any_0, Collection)) {
        tmp = tmp0_any_0.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = tmp0_any_0.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (this._equality.equals_1(element_2._get_value__27(), value)) {
          tmp$ret$0 = true;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = false;
    }
     while (false);
    return tmp$ret$0;
  };
  HashMap.prototype._get_entries__8 = function () {
    if (this.__entries == null) {
      this.__entries = this.createEntrySet_0();
    }return ensureNotNull(this.__entries);
  };
  HashMap.prototype.createEntrySet_0 = function () {
    return new EntrySet(this);
  };
  HashMap.prototype.get_65 = function (key) {
    return this._internalMap.get_65(key);
  };
  HashMap.prototype.put_10 = function (key, value) {
    return this._internalMap.put_10(key, value);
  };
  HashMap.prototype.remove_45 = function (key) {
    return this._internalMap.remove_45(key);
  };
  HashMap.prototype._get_size__48 = function () {
    return this._internalMap._get_size__48();
  };
  function HashMap() {
    this.__entries = null;
  }
  HashMap.$metadata$ = {
    simpleName: 'HashMap',
    kind: 'class',
    interfaces: [MutableMap]
  };
  function HashSet_init_$Init$($this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this._map = HashMap_init_$Create$();
    return $this;
  }
  function HashSet_init_$Create$() {
    return HashSet_init_$Init$(Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_0(elements, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this._map = HashMap_init_$Create$_1(elements._get_size__48());
    $this.addAll_23(elements);
    Unit_getInstance();
    return $this;
  }
  function HashSet_init_$Create$_0(elements) {
    return HashSet_init_$Init$_0(elements, Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this._map = HashMap_init_$Create$_0(initialCapacity, loadFactor);
    return $this;
  }
  function HashSet_init_$Init$_2(initialCapacity, $this) {
    HashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashSet_init_$Create$_1(initialCapacity) {
    return HashSet_init_$Init$_2(initialCapacity, Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_3(map_0, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this._map = map_0;
    return $this;
  }
  HashSet.prototype._get_map__0 = function () {
    return this._map;
  };
  HashSet.prototype.add_32 = function (element) {
    var old = this._map.put_10(element, this);
    return old == null;
  };
  HashSet.prototype.clear_26 = function () {
    this._map.clear_26();
  };
  HashSet.prototype.contains_48 = function (element) {
    return this._map.containsKey_12(element);
  };
  HashSet.prototype.isEmpty_50 = function () {
    return this._map.isEmpty_50();
  };
  HashSet.prototype.iterator_62 = function () {
    return this._map._get_keys__8().iterator_62();
  };
  HashSet.prototype._get_size__48 = function () {
    return this._map._get_size__48();
  };
  function HashSet() {
  }
  HashSet.$metadata$ = {
    simpleName: 'HashSet',
    kind: 'class',
    interfaces: [MutableSet]
  };
  function computeNext($this) {
    if ($this._chainOrEntry != null ? $this._isChain : false) {
      var tmp0_unsafeCast_0 = $this._chainOrEntry;
      var chainSize = tmp0_unsafeCast_0.length;
      var tmp0_this = $this;
      tmp0_this._itemIndex = tmp0_this._itemIndex + 1 | 0;
      if (tmp0_this._itemIndex < chainSize)
        return 0;
      else {
      }
    }var tmp1_this = $this;
    tmp1_this._keyIndex = tmp1_this._keyIndex + 1 | 0;
    if (tmp1_this._keyIndex < $this._keys.length) {
      $this._chainOrEntry = $this._this$0_8._backingMap[$this._keys[$this._keyIndex]];
      var tmp = $this;
      var tmp_0 = $this._chainOrEntry;
      tmp._isChain = !(tmp_0 == null) ? isArray(tmp_0) : false;
      $this._itemIndex = 0;
      return 0;
    } else {
      {
        $this._chainOrEntry = null;
        return 1;
      }
    }
  }
  function getEntry($this, key) {
    var tmp0_elvis_lhs = getChainOrEntryOrNull($this, $this._equality_0.getHashCode_0(key));
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if ($this._equality_0.equals_1(entry._get_key__52(), key)) {
        return entry;
      } else {
        return null;
      }
    } else {
      {
        var chain = chainOrEntry;
        return findEntryInChain(chain, $this, key);
      }
    }
  }
  function findEntryInChain(_this_, $this, key) {
    var tmp$ret$0;
    l$ret$1: do {
      var indexedObject = _this_;
      var inductionVariable = 0;
      var last_1 = indexedObject.length;
      while (inductionVariable < last_1) {
        var element_2 = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        if ($this._equality_0.equals_1(element_2._get_key__52(), key)) {
          tmp$ret$0 = element_2;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = null;
    }
     while (false);
    return tmp$ret$0;
  }
  function getChainOrEntryOrNull($this, hashCode_1) {
    var chainOrEntry = $this._backingMap[hashCode_1];
    return chainOrEntry === undefined ? null : chainOrEntry;
  }
  function _no_name_provided__23(this$0) {
    this._this$0_8 = this$0;
    this._state = -1;
    this._keys = Object.keys(this._this$0_8._backingMap);
    this._keyIndex = -1;
    this._chainOrEntry = null;
    this._isChain = false;
    this._itemIndex = -1;
    this._lastEntry = null;
  }
  _no_name_provided__23.prototype.hasNext_29 = function () {
    if (this._state === -1)
      this._state = computeNext(this);
    return this._state === 0;
  };
  _no_name_provided__23.prototype.next_31 = function () {
    if (!this.hasNext_29())
      throw NoSuchElementException_init_$Create$();
    var tmp;
    if (this._isChain) {
      var tmp0_unsafeCast_0 = this._chainOrEntry;
      tmp = tmp0_unsafeCast_0[this._itemIndex];
    } else {
      var tmp1_unsafeCast_0 = this._chainOrEntry;
      tmp = tmp1_unsafeCast_0;
    }
    var lastEntry = tmp;
    this._lastEntry = lastEntry;
    this._state = -1;
    return lastEntry;
  };
  _no_name_provided__23.prototype.remove_51 = function () {
    var tmp0_checkNotNull_0 = this._lastEntry;
    var tmp$ret$0;
    l$ret$1: do {
      if (tmp0_checkNotNull_0 == null) {
        var message_2_1 = 'Required value was null.';
        throw IllegalStateException_init_$Create$(toString_1(message_2_1));
      } else {
        tmp$ret$0 = tmp0_checkNotNull_0;
        break l$ret$1;
      }
    }
     while (false);
    Unit_getInstance();
    this._this$0_8.remove_45(ensureNotNull(this._lastEntry)._get_key__52());
    Unit_getInstance();
    this._lastEntry = null;
    var tmp0_this = this;
    var tmp1 = tmp0_this._itemIndex;
    tmp0_this._itemIndex = tmp1 - 1 | 0;
    Unit_getInstance();
  };
  _no_name_provided__23.$metadata$ = {
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function InternalHashCodeMap(equality) {
    this._equality_0 = equality;
    this._backingMap = this.createJsMap_0();
    this._size_0 = 0;
  }
  InternalHashCodeMap.prototype._get_equality__0 = function () {
    return this._equality_0;
  };
  InternalHashCodeMap.prototype._get_size__48 = function () {
    return this._size_0;
  };
  InternalHashCodeMap.prototype.put_10 = function (key, value) {
    var hashCode_1 = this._equality_0.getHashCode_0(key);
    var chainOrEntry = getChainOrEntryOrNull(this, hashCode_1);
    if (chainOrEntry == null) {
      this._backingMap[hashCode_1] = new SimpleEntry(key, value);
    } else {
      if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
        var entry = chainOrEntry;
        if (this._equality_0.equals_1(entry._get_key__52(), key)) {
          return entry.setValue_8(value);
        } else {
          var tmp0_arrayOf_0 = [entry, new SimpleEntry(key, value)];
          this._backingMap[hashCode_1] = tmp0_arrayOf_0;
          var tmp0_this = this;
          var tmp1 = tmp0_this._size_0;
          tmp0_this._size_0 = tmp1 + 1 | 0;
          Unit_getInstance();
          return null;
        }
      } else {
        {
          var chain = chainOrEntry;
          var entry_0 = findEntryInChain(chain, this, key);
          if (!(entry_0 == null)) {
            return entry_0.setValue_8(value);
          }chain.push(new SimpleEntry(key, value));
        }
      }
    }
    var tmp2_this = this;
    var tmp3 = tmp2_this._size_0;
    tmp2_this._size_0 = tmp3 + 1 | 0;
    Unit_getInstance();
    return null;
  };
  InternalHashCodeMap.prototype.remove_45 = function (key) {
    var hashCode_1 = this._equality_0.getHashCode_0(key);
    var tmp0_elvis_lhs = getChainOrEntryOrNull(this, hashCode_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if (this._equality_0.equals_1(entry._get_key__52(), key)) {
        jsDeleteProperty(this._backingMap, hashCode_1);
        var tmp1_this = this;
        var tmp2 = tmp1_this._size_0;
        tmp1_this._size_0 = tmp2 - 1 | 0;
        Unit_getInstance();
        return entry._get_value__27();
      } else {
        return null;
      }
    } else {
      {
        var chain = chainOrEntry;
        var inductionVariable = 0;
        var last_1 = chain.length - 1 | 0;
        if (inductionVariable <= last_1)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var entry_0 = chain[index];
            if (this._equality_0.equals_1(key, entry_0._get_key__52())) {
              if (chain.length === 1) {
                chain.length = 0;
                jsDeleteProperty(this._backingMap, hashCode_1);
              } else {
                chain.splice(index, 1);
              }
              var tmp4_this = this;
              var tmp5 = tmp4_this._size_0;
              tmp4_this._size_0 = tmp5 - 1 | 0;
              Unit_getInstance();
              return entry_0._get_value__27();
            }}
           while (inductionVariable <= last_1);
      }
    }
    return null;
  };
  InternalHashCodeMap.prototype.clear_26 = function () {
    this._backingMap = this.createJsMap_0();
    this._size_0 = 0;
  };
  InternalHashCodeMap.prototype.contains_26 = function (key) {
    return !(getEntry(this, key) == null);
  };
  InternalHashCodeMap.prototype.get_65 = function (key) {
    var tmp0_safe_receiver = getEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_value__27();
  };
  InternalHashCodeMap.prototype.iterator_62 = function () {
    return new _no_name_provided__23(this);
  };
  InternalHashCodeMap.$metadata$ = {
    simpleName: 'InternalHashCodeMap',
    kind: 'class',
    interfaces: [InternalMap]
  };
  function InternalMap() {
  }
  InternalMap.prototype.createJsMap_0 = function () {
    var result = Object.create(null);
    result['foo'] = 1;
    jsDeleteProperty(result, 'foo');
    return result;
  };
  InternalMap.$metadata$ = {
    simpleName: 'InternalMap',
    kind: 'interface',
    interfaces: [MutableIterable]
  };
  function EntryIterator($outer) {
    this._$this_2 = $outer;
    this._last_2 = null;
    this._next_2 = null;
    this._next_2 = this._$this_2._$this_4._head;
  }
  EntryIterator.prototype.hasNext_29 = function () {
    return !(this._next_2 === null);
  };
  EntryIterator.prototype.next_31 = function () {
    if (!this.hasNext_29())
      throw NoSuchElementException_init_$Create$();
    var current = ensureNotNull(this._next_2);
    this._last_2 = current;
    var tmp = this;
    var tmp0_takeIf_0 = current._next_3;
    var tmp_0;
    if (!(tmp0_takeIf_0 === this._$this_2._$this_4._head)) {
      tmp_0 = tmp0_takeIf_0;
    } else {
      {
        tmp_0 = null;
      }
    }
    tmp._next_2 = tmp_0;
    return current;
  };
  EntryIterator.prototype.remove_51 = function () {
    var tmp0_check_0 = !(this._last_2 == null);
    if (!tmp0_check_0) {
      var message_2_1 = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString_1(message_2_1));
    }this._$this_2.checkIsMutable_12();
    remove(ensureNotNull(this._last_2), this._$this_2._$this_4);
    this._$this_2._$this_4._map_0.remove_45(ensureNotNull(this._last_2)._get_key__52());
    Unit_getInstance();
    this._last_2 = null;
  };
  EntryIterator.$metadata$ = {
    simpleName: 'EntryIterator',
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function ChainEntry($outer, key, value) {
    this._$this_3 = $outer;
    SimpleEntry.call(this, key, value);
    this._next_3 = null;
    this._prev = null;
  }
  ChainEntry.prototype.setValue_8 = function (newValue) {
    this._$this_3.checkIsMutable_12();
    return SimpleEntry.prototype.setValue_8.call(this, newValue);
  };
  ChainEntry.$metadata$ = {
    simpleName: 'ChainEntry',
    kind: 'class',
    interfaces: []
  };
  function EntrySet_0($outer) {
    this._$this_4 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet_0.prototype.add_14 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet_0.prototype.add_32 = function (element) {
    return this.add_14((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet_0.prototype.clear_26 = function () {
    this._$this_4.clear_26();
  };
  EntrySet_0.prototype.containsEntry_4 = function (element) {
    return this._$this_4.containsEntry_5(element);
  };
  EntrySet_0.prototype.iterator_62 = function () {
    return new EntryIterator(this);
  };
  EntrySet_0.prototype._get_size__48 = function () {
    return this._$this_4._get_size__48();
  };
  EntrySet_0.prototype.checkIsMutable_12 = function () {
    return this._$this_4.checkIsMutable_12();
  };
  EntrySet_0.$metadata$ = {
    simpleName: 'EntrySet',
    kind: 'class',
    interfaces: []
  };
  function addToEnd(_this_, $this) {
    var tmp0_check_0 = _this_._next_3 == null ? _this_._prev == null : false;
    if (!tmp0_check_0) {
      var message_2_1 = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString_1(message_2_1));
    }var _head = $this._head;
    if (_head == null) {
      $this._head = _this_;
      _this_._next_3 = _this_;
      _this_._prev = _this_;
    } else {
      var tmp1_checkNotNull_0 = _head._prev;
      var tmp$ret$0;
      l$ret$1: do {
        if (tmp1_checkNotNull_0 == null) {
          var message_2_1_0 = 'Required value was null.';
          throw IllegalStateException_init_$Create$(toString_1(message_2_1_0));
        } else {
          tmp$ret$0 = tmp1_checkNotNull_0;
          break l$ret$1;
        }
      }
       while (false);
      var _tail = tmp$ret$0;
      _this_._prev = _tail;
      _this_._next_3 = _head;
      _head._prev = _this_;
      _tail._next_3 = _this_;
    }
  }
  function remove(_this_, $this) {
    if (_this_._next_3 === _this_) {
      $this._head = null;
    } else {
      if ($this._head === _this_) {
        $this._head = _this_._next_3;
      }ensureNotNull(_this_._next_3)._prev = _this_._prev;
      ensureNotNull(_this_._prev)._next_3 = _this_._next_3;
    }
    _this_._next_3 = null;
    _this_._prev = null;
  }
  function LinkedHashMap_init_$Init$($this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this._map_0 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$() {
    return LinkedHashMap_init_$Init$(Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_1(initialCapacity, loadFactor, $this);
    LinkedHashMap.call($this);
    $this._map_0 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_1(initialCapacity, $this) {
    LinkedHashMap_init_$Init$_0(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashMap_init_$Create$_1(initialCapacity) {
    return LinkedHashMap_init_$Init$_1(initialCapacity, Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_2(original, $this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this._map_0 = HashMap_init_$Create$();
    $this.putAll_6(original);
    return $this;
  }
  function LinkedHashMap_init_$Create$_2(original) {
    return LinkedHashMap_init_$Init$_2(original, Object.create(LinkedHashMap.prototype));
  }
  LinkedHashMap.prototype.clear_26 = function () {
    this.checkIsMutable_12();
    this._map_0.clear_26();
    this._head = null;
  };
  LinkedHashMap.prototype.containsKey_12 = function (key) {
    return this._map_0.containsKey_12(key);
  };
  LinkedHashMap.prototype.containsValue_2 = function (value) {
    var tmp0_elvis_lhs = this._head;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var node = tmp;
    do {
      if (equals_1(node._get_value__27(), value)) {
        return true;
      }node = ensureNotNull(node._next_3);
    }
     while (!(node === this._head));
    return false;
  };
  LinkedHashMap.prototype.createEntrySet_0 = function () {
    return new EntrySet_0(this);
  };
  LinkedHashMap.prototype.get_65 = function (key) {
    var tmp0_safe_receiver = this._map_0.get_65(key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_value__27();
  };
  LinkedHashMap.prototype.put_10 = function (key, value) {
    this.checkIsMutable_12();
    var old = this._map_0.get_65(key);
    if (old == null) {
      var newEntry = new ChainEntry(this, key, value);
      this._map_0.put_10(key, newEntry);
      Unit_getInstance();
      addToEnd(newEntry, this);
      return null;
    } else {
      return old.setValue_8(value);
    }
  };
  LinkedHashMap.prototype.remove_45 = function (key) {
    this.checkIsMutable_12();
    var entry = this._map_0.remove_45(key);
    if (!(entry == null)) {
      remove(entry, this);
      return entry._get_value__27();
    }return null;
  };
  LinkedHashMap.prototype._get_size__48 = function () {
    return this._map_0._get_size__48();
  };
  LinkedHashMap.prototype.checkIsMutable_12 = function () {
    if (this._isReadOnly_0)
      throw UnsupportedOperationException_init_$Create$();
  };
  function LinkedHashMap() {
    this._head = null;
    this._isReadOnly_0 = false;
  }
  LinkedHashMap.$metadata$ = {
    simpleName: 'LinkedHashMap',
    kind: 'class',
    interfaces: [MutableMap]
  };
  function LinkedHashSet_init_$Init$($this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Create$() {
    return LinkedHashSet_init_$Init$(Object.create(LinkedHashSet.prototype));
  }
  function LinkedHashSet_init_$Init$_0(elements, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    $this.addAll_23(elements);
    Unit_getInstance();
    return $this;
  }
  function LinkedHashSet_init_$Create$_0(elements) {
    return LinkedHashSet_init_$Init$_0(elements, Object.create(LinkedHashSet.prototype));
  }
  function LinkedHashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Init$_2(initialCapacity, $this) {
    LinkedHashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashSet_init_$Create$_1(initialCapacity) {
    return LinkedHashSet_init_$Init$_2(initialCapacity, Object.create(LinkedHashSet.prototype));
  }
  LinkedHashSet.prototype.checkIsMutable_12 = function () {
    return this._get_map__0().checkIsMutable_12();
  };
  function LinkedHashSet() {
  }
  LinkedHashSet.$metadata$ = {
    simpleName: 'LinkedHashSet',
    kind: 'class',
    interfaces: [MutableSet]
  };
  function RandomAccess() {
  }
  RandomAccess.$metadata$ = {
    simpleName: 'RandomAccess',
    kind: 'interface',
    interfaces: []
  };
  var output;
  function BaseOutput() {
  }
  BaseOutput.prototype.println_5 = function () {
    this.print_3('\n');
  };
  BaseOutput.prototype.println_6 = function (message) {
    this.print_3(message);
    this.println_5();
  };
  BaseOutput.$metadata$ = {
    simpleName: 'BaseOutput',
    kind: 'class',
    interfaces: []
  };
  function NodeJsOutput_0(outputStream) {
    BaseOutput.call(this);
    this._outputStream = outputStream;
  }
  NodeJsOutput_0.prototype.print_3 = function (message) {
    var messageString = String(message);
    this._outputStream.write(messageString);
  };
  NodeJsOutput_0.$metadata$ = {
    simpleName: 'NodeJsOutput',
    kind: 'class',
    interfaces: []
  };
  function BufferedOutputToConsoleLog_0() {
    BufferedOutput_0.call(this);
  }
  BufferedOutputToConsoleLog_0.prototype.print_3 = function (message) {
    var s = String(message);
    var tmp0_nativeLastIndexOf_0 = s;
    var tmp1_nativeLastIndexOf_0 = '\n';
    var tmp2_nativeLastIndexOf_0 = 0;
    var i = tmp0_nativeLastIndexOf_0.lastIndexOf(tmp1_nativeLastIndexOf_0, tmp2_nativeLastIndexOf_0);
    if (i >= 0) {
      var tmp0_this = this;
      var tmp = tmp0_this._get_buffer__15();
      var tmp3_substring_0 = s;
      var tmp4_substring_0 = 0;
      tmp0_this._set_buffer__0(tmp + tmp3_substring_0.substring(tmp4_substring_0, i));
      this.flush_10();
      var tmp5_substring_0 = s;
      var tmp6_substring_0 = i + 1 | 0;
      s = tmp5_substring_0.substring(tmp6_substring_0);
    }var tmp1_this = this;
    tmp1_this._set_buffer__0(tmp1_this._get_buffer__15() + s);
  };
  BufferedOutputToConsoleLog_0.prototype.flush_10 = function () {
    (function () {
      var $externalVarargReceiverTmp = console;
      return $externalVarargReceiverTmp.log.apply($externalVarargReceiverTmp, [].concat([this._get_buffer__15()]));
    }.call(this));
    this._set_buffer__0('');
  };
  BufferedOutputToConsoleLog_0.$metadata$ = {
    simpleName: 'BufferedOutputToConsoleLog',
    kind: 'class',
    interfaces: []
  };
  function BufferedOutput_0() {
    BaseOutput.call(this);
    this._buffer = '';
  }
  BufferedOutput_0.prototype._set_buffer__0 = function (_set___) {
    this._buffer = _set___;
  };
  BufferedOutput_0.prototype._get_buffer__15 = function () {
    return this._buffer;
  };
  BufferedOutput_0.prototype.print_3 = function (message) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this._buffer;
    tmp._buffer = tmp_0 + String(message);
  };
  BufferedOutput_0.$metadata$ = {
    simpleName: 'BufferedOutput',
    kind: 'class',
    interfaces: []
  };
  function print(message) {
    output.print_3(message);
  }
  function println(message) {
    output.println_6(message);
  }
  function output$init$() {
    var isNode_2 = typeof process !== 'undefined' && process.versions && !!process.versions.node;
    return isNode_2 ? new NodeJsOutput_0(process.stdout) : new BufferedOutputToConsoleLog_0();
  }
  function _get_EmptyContinuation_() {
    return EmptyContinuation;
  }
  var EmptyContinuation;
  function _no_name_provided__1_1($tmp0_Continuation_0) {
    this._$tmp0_Continuation_0 = $tmp0_Continuation_0;
  }
  _no_name_provided__1_1.prototype._get_context__2 = function () {
    return this._$tmp0_Continuation_0;
  };
  _no_name_provided__1_1.prototype._get_context__113 = function () {
    return this._get_context__2();
  };
  _no_name_provided__1_1.prototype.resumeWith_3 = function (result) {
    throwOnFailure(result);
    var tmp = _Result___get_value__impl_(result);
    if (tmp == null ? true : isObject(tmp))
      tmp;
    else
      THROW_CCE();
    return Unit_getInstance();
  };
  _no_name_provided__1_1.prototype.resumeWith_46 = function (result) {
    return this.resumeWith_3(result);
  };
  _no_name_provided__1_1.$metadata$ = {
    simpleName: '<no name provided>_1',
    kind: 'class',
    interfaces: [Continuation]
  };
  function EmptyContinuation$init$() {
    var tmp0_Continuation_0 = EmptyCoroutineContext_getInstance();
    return new _no_name_provided__1_1(tmp0_Continuation_0);
  }
  function Serializable() {
  }
  Serializable.$metadata$ = {
    simpleName: 'Serializable',
    kind: 'interface',
    interfaces: []
  };
  function roundToInt(_this_) {
    var tmp;
    if (isNaN_0(_this_)) {
      throw IllegalArgumentException_init_$Create$_0('Cannot round NaN value.');
    } else if (_this_ > IntCompanionObject_getInstance()._MAX_VALUE_5) {
      tmp = IntCompanionObject_getInstance()._MAX_VALUE_5;
    } else if (_this_ < IntCompanionObject_getInstance()._MIN_VALUE_5) {
      tmp = IntCompanionObject_getInstance()._MIN_VALUE_5;
    } else {
      tmp = numberToInt(Math.round(_this_));
    }
    return tmp;
  }
  function isNaN_0(_this_) {
    return !(_this_ === _this_);
  }
  function isFinite(_this_) {
    return !isInfinite(_this_) ? !isNaN_1(_this_) : false;
  }
  function isFinite_0(_this_) {
    return !isInfinite_0(_this_) ? !isNaN_0(_this_) : false;
  }
  function isInfinite(_this_) {
    var tmp;
    FloatCompanionObject_getInstance();
    if (_this_ === Infinity) {
      tmp = true;
    } else {
      {
        FloatCompanionObject_getInstance();
        tmp = _this_ === -Infinity;
      }
    }
    return tmp;
  }
  function isNaN_1(_this_) {
    return !(_this_ === _this_);
  }
  function isInfinite_0(_this_) {
    var tmp;
    DoubleCompanionObject_getInstance();
    if (_this_ === Infinity) {
      tmp = true;
    } else {
      {
        DoubleCompanionObject_getInstance();
        tmp = _this_ === -Infinity;
      }
    }
    return tmp;
  }
  function _get_js_(_this_) {
    return (_this_ instanceof KClassImpl ? _this_ : THROW_CCE())._get_jClass__2();
  }
  function KCallable() {
  }
  KCallable.$metadata$ = {
    simpleName: 'KCallable',
    kind: 'interface',
    interfaces: []
  };
  function KClass() {
  }
  KClass.$metadata$ = {
    simpleName: 'KClass',
    kind: 'interface',
    interfaces: [KClassifier]
  };
  function KClassImpl(jClass) {
    this._jClass = jClass;
  }
  KClassImpl.prototype._get_jClass__2 = function () {
    return this._jClass;
  };
  KClassImpl.prototype.equals = function (other) {
    var tmp;
    if (other instanceof KClassImpl) {
      tmp = equals_1(this._get_jClass__2(), other._get_jClass__2());
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  KClassImpl.prototype.hashCode = function () {
    var tmp0_safe_receiver = this._get_simpleName__4();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getStringHashCode(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  KClassImpl.prototype.toString = function () {
    return '' + 'class ' + this._get_simpleName__4();
  };
  KClassImpl.$metadata$ = {
    simpleName: 'KClassImpl',
    kind: 'class',
    interfaces: [KClass]
  };
  function PrimitiveKClassImpl(jClass, givenSimpleName, isInstanceFunction) {
    KClassImpl.call(this, jClass);
    this._givenSimpleName = givenSimpleName;
    this._isInstanceFunction = isInstanceFunction;
  }
  PrimitiveKClassImpl.prototype.equals = function (other) {
    if (!(other instanceof PrimitiveKClassImpl))
      return false;
    else {
    }
    return KClassImpl.prototype.equals.call(this, other) ? this._givenSimpleName === other._givenSimpleName : false;
  };
  PrimitiveKClassImpl.prototype._get_simpleName__4 = function () {
    return this._givenSimpleName;
  };
  PrimitiveKClassImpl.prototype.isInstance_4 = function (value) {
    return this._isInstanceFunction(value);
  };
  PrimitiveKClassImpl.$metadata$ = {
    simpleName: 'PrimitiveKClassImpl',
    kind: 'class',
    interfaces: []
  };
  function NothingKClassImpl() {
    NothingKClassImpl_instance = this;
    KClassImpl.call(this, Object);
    this._simpleName = 'Nothing';
  }
  NothingKClassImpl.prototype._get_simpleName__4 = function () {
    return this._simpleName;
  };
  NothingKClassImpl.prototype.isInstance_4 = function (value) {
    return false;
  };
  NothingKClassImpl.prototype._get_jClass__2 = function () {
    throw UnsupportedOperationException_init_$Create$_0("There's no native JS class for Nothing type");
  };
  NothingKClassImpl.prototype.equals = function (other) {
    return other === this;
  };
  NothingKClassImpl.prototype.hashCode = function () {
    return 0;
  };
  NothingKClassImpl.$metadata$ = {
    simpleName: 'NothingKClassImpl',
    kind: 'object',
    interfaces: []
  };
  var NothingKClassImpl_instance;
  function NothingKClassImpl_getInstance() {
    if (NothingKClassImpl_instance == null)
      new NothingKClassImpl();
    return NothingKClassImpl_instance;
  }
  function ErrorKClass() {
  }
  ErrorKClass.prototype._get_simpleName__4 = function () {
    var tmp0_error_0 = 'Unknown simpleName for ErrorKClass';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  };
  ErrorKClass.prototype.isInstance_4 = function (value) {
    var tmp0_error_0 = "Can's check isInstance on ErrorKClass";
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  };
  ErrorKClass.prototype.equals = function (other) {
    return other === this;
  };
  ErrorKClass.prototype.hashCode = function () {
    return 0;
  };
  ErrorKClass.$metadata$ = {
    simpleName: 'ErrorKClass',
    kind: 'class',
    interfaces: [KClass]
  };
  function SimpleKClassImpl(jClass) {
    KClassImpl.call(this, jClass);
    var tmp = this;
    var tmp0_safe_receiver = jClass.$metadata$;
    var tmp0_unsafeCast_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.simpleName;
    tmp._simpleName_0 = tmp0_unsafeCast_0;
  }
  SimpleKClassImpl.prototype._get_simpleName__4 = function () {
    return this._simpleName_0;
  };
  SimpleKClassImpl.prototype.isInstance_4 = function (value) {
    return jsIsType(value, this._get_jClass__2());
  };
  SimpleKClassImpl.$metadata$ = {
    simpleName: 'SimpleKClassImpl',
    kind: 'class',
    interfaces: []
  };
  function KFunction() {
  }
  KFunction.$metadata$ = {
    simpleName: 'KFunction',
    kind: 'interface',
    interfaces: [KCallable]
  };
  function KMutableProperty1() {
  }
  KMutableProperty1.$metadata$ = {
    simpleName: 'KMutableProperty1',
    kind: 'interface',
    interfaces: [KProperty1, KMutableProperty]
  };
  function KProperty() {
  }
  KProperty.$metadata$ = {
    simpleName: 'KProperty',
    kind: 'interface',
    interfaces: [KCallable]
  };
  function KProperty0() {
  }
  KProperty0.$metadata$ = {
    simpleName: 'KProperty0',
    kind: 'interface',
    interfaces: [KProperty]
  };
  function KProperty1() {
  }
  KProperty1.$metadata$ = {
    simpleName: 'KProperty1',
    kind: 'interface',
    interfaces: [KProperty]
  };
  function KMutableProperty() {
  }
  KMutableProperty.$metadata$ = {
    simpleName: 'KMutableProperty',
    kind: 'interface',
    interfaces: [KProperty]
  };
  function KType() {
  }
  KType.$metadata$ = {
    simpleName: 'KType',
    kind: 'interface',
    interfaces: []
  };
  function createKType_0(classifier, arguments_0, isMarkedNullable) {
    return new KTypeImpl(classifier, asList(arguments_0), isMarkedNullable);
  }
  function createInvariantKTypeProjection_0(type) {
    return Companion_getInstance_2().invariant(type);
  }
  function asString(_this_, $this) {
    if (_this_._variance == null)
      return '*';
    return prefixString(_this_._variance) + toString_0(_this_._type);
  }
  function _no_name_provided__24(this$0) {
    this._this$0_9 = this$0;
  }
  _no_name_provided__24.prototype.invoke_23 = function (it) {
    return asString(it, this._this$0_9);
  };
  _no_name_provided__24.prototype.invoke_420 = function (p1) {
    return this.invoke_23(p1 instanceof KTypeProjection ? p1 : THROW_CCE());
  };
  _no_name_provided__24.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function KTypeImpl(classifier, arguments_0, isMarkedNullable) {
    this._classifier = classifier;
    this._arguments = arguments_0;
    this._isMarkedNullable = isMarkedNullable;
  }
  KTypeImpl.prototype._get_classifier__0 = function () {
    return this._classifier;
  };
  KTypeImpl.prototype._get_arguments__0 = function () {
    return this._arguments;
  };
  KTypeImpl.prototype._get_isMarkedNullable__0 = function () {
    return this._isMarkedNullable;
  };
  KTypeImpl.prototype.equals = function (other) {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (other instanceof KTypeImpl) {
      tmp_1 = equals_1(this._classifier, other._classifier);
    } else {
      {
        tmp_1 = false;
      }
    }
    if (tmp_1) {
      tmp_0 = equals_1(this._arguments, other._arguments);
    } else {
      {
        tmp_0 = false;
      }
    }
    if (tmp_0) {
      tmp = this._isMarkedNullable === other._isMarkedNullable;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  KTypeImpl.prototype.hashCode = function () {
    return imul(imul(hashCode(this._classifier), 31) + hashCode(this._arguments) | 0, 31) + (this._isMarkedNullable | 0) | 0;
  };
  KTypeImpl.prototype.toString = function () {
    var tmp = this._classifier;
    var kClass = isInterface(tmp, KClass) ? tmp : null;
    var classifierName = kClass == null ? toString_1(this._classifier) : !(kClass._get_simpleName__4() == null) ? kClass._get_simpleName__4() : '(non-denotable type)';
    var tmp_0;
    if (this._arguments.isEmpty_50()) {
      tmp_0 = '';
    } else {
      tmp_0 = joinToString$default_0(this._arguments, ', ', '<', '>', 0, null, _no_name_provided_$factory_11(this), 24, null);
    }
    var args = tmp_0;
    var nullable_0 = this._isMarkedNullable ? '?' : '';
    return plus_3(classifierName, args) + nullable_0;
  };
  KTypeImpl.$metadata$ = {
    simpleName: 'KTypeImpl',
    kind: 'class',
    interfaces: [KType]
  };
  function prefixString(_this_) {
    var tmp0_subject = _this_;
    var tmp;
    if (tmp0_subject.equals(KVariance_INVARIANT_getInstance())) {
      tmp = '';
    } else if (tmp0_subject.equals(KVariance_IN_getInstance())) {
      tmp = 'in ';
    } else if (tmp0_subject.equals(KVariance_OUT_getInstance())) {
      tmp = 'out ';
    } else {
      noWhenBranchMatchedException();
    }
    return tmp;
  }
  function _no_name_provided_$factory_11(this$0) {
    var i = new _no_name_provided__24(this$0);
    return function (p1) {
      return i.invoke_23(p1);
    };
  }
  var functionClasses;
  function _no_name_provided__25() {
  }
  _no_name_provided__25.prototype.invoke_67 = function (it) {
    return isObject(it);
  };
  _no_name_provided__25.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__25.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__26() {
  }
  _no_name_provided__26.prototype.invoke_67 = function (it) {
    return isNumber(it);
  };
  _no_name_provided__26.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__26.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__27() {
  }
  _no_name_provided__27.prototype.invoke_67 = function (it) {
    return !(it == null) ? typeof it === 'boolean' : false;
  };
  _no_name_provided__27.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__27.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__28() {
  }
  _no_name_provided__28.prototype.invoke_67 = function (it) {
    return !(it == null) ? typeof it === 'number' : false;
  };
  _no_name_provided__28.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__28.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__29() {
  }
  _no_name_provided__29.prototype.invoke_67 = function (it) {
    return !(it == null) ? typeof it === 'number' : false;
  };
  _no_name_provided__29.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__29.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__30() {
  }
  _no_name_provided__30.prototype.invoke_67 = function (it) {
    return !(it == null) ? typeof it === 'number' : false;
  };
  _no_name_provided__30.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__30.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__31() {
  }
  _no_name_provided__31.prototype.invoke_67 = function (it) {
    return !(it == null) ? typeof it === 'number' : false;
  };
  _no_name_provided__31.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__31.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__32() {
  }
  _no_name_provided__32.prototype.invoke_67 = function (it) {
    return !(it == null) ? typeof it === 'number' : false;
  };
  _no_name_provided__32.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__32.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__33() {
  }
  _no_name_provided__33.prototype.invoke_67 = function (it) {
    return !(it == null) ? isArray(it) : false;
  };
  _no_name_provided__33.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__33.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__34() {
  }
  _no_name_provided__34.prototype.invoke_67 = function (it) {
    return !(it == null) ? typeof it === 'string' : false;
  };
  _no_name_provided__34.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__34.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__35() {
  }
  _no_name_provided__35.prototype.invoke_67 = function (it) {
    return it instanceof Error;
  };
  _no_name_provided__35.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__35.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__36() {
  }
  _no_name_provided__36.prototype.invoke_67 = function (it) {
    return !(it == null) ? isBooleanArray(it) : false;
  };
  _no_name_provided__36.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__36.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__37() {
  }
  _no_name_provided__37.prototype.invoke_67 = function (it) {
    return !(it == null) ? isCharArray(it) : false;
  };
  _no_name_provided__37.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__37.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__38() {
  }
  _no_name_provided__38.prototype.invoke_67 = function (it) {
    return !(it == null) ? isByteArray(it) : false;
  };
  _no_name_provided__38.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__38.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__39() {
  }
  _no_name_provided__39.prototype.invoke_67 = function (it) {
    return !(it == null) ? isShortArray(it) : false;
  };
  _no_name_provided__39.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__39.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__40() {
  }
  _no_name_provided__40.prototype.invoke_67 = function (it) {
    return !(it == null) ? isIntArray(it) : false;
  };
  _no_name_provided__40.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__40.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__41() {
  }
  _no_name_provided__41.prototype.invoke_67 = function (it) {
    return !(it == null) ? isLongArray(it) : false;
  };
  _no_name_provided__41.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__41.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__42() {
  }
  _no_name_provided__42.prototype.invoke_67 = function (it) {
    return !(it == null) ? isFloatArray(it) : false;
  };
  _no_name_provided__42.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__42.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__43() {
  }
  _no_name_provided__43.prototype.invoke_67 = function (it) {
    return !(it == null) ? isDoubleArray(it) : false;
  };
  _no_name_provided__43.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__43.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__44($arity) {
    this._$arity = $arity;
  }
  _no_name_provided__44.prototype.invoke_67 = function (it) {
    var tmp;
    if (typeof it === 'function') {
      tmp = it.length === this._$arity;
    } else {
      tmp = false;
    }
    return tmp;
  };
  _no_name_provided__44.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__44.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function PrimitiveClasses_0() {
    PrimitiveClasses_instance = this;
    var tmp = this;
    var tmp0_unsafeCast_0 = Object;
    var tmp_0 = tmp0_unsafeCast_0;
    tmp._anyClass = new PrimitiveKClassImpl(tmp_0, 'Any', _no_name_provided_$factory_12());
    var tmp_1 = this;
    var tmp0_unsafeCast_0_0 = Number;
    var tmp_2 = tmp0_unsafeCast_0_0;
    tmp_1._numberClass = new PrimitiveKClassImpl(tmp_2, 'Number', _no_name_provided_$factory_13());
    this._nothingClass = NothingKClassImpl_getInstance();
    var tmp_3 = this;
    var tmp0_unsafeCast_0_1 = Boolean;
    var tmp_4 = tmp0_unsafeCast_0_1;
    tmp_3._booleanClass = new PrimitiveKClassImpl(tmp_4, 'Boolean', _no_name_provided_$factory_14());
    var tmp_5 = this;
    var tmp0_unsafeCast_0_2 = Number;
    var tmp_6 = tmp0_unsafeCast_0_2;
    tmp_5._byteClass = new PrimitiveKClassImpl(tmp_6, 'Byte', _no_name_provided_$factory_15());
    var tmp_7 = this;
    var tmp0_unsafeCast_0_3 = Number;
    var tmp_8 = tmp0_unsafeCast_0_3;
    tmp_7._shortClass = new PrimitiveKClassImpl(tmp_8, 'Short', _no_name_provided_$factory_16());
    var tmp_9 = this;
    var tmp0_unsafeCast_0_4 = Number;
    var tmp_10 = tmp0_unsafeCast_0_4;
    tmp_9._intClass = new PrimitiveKClassImpl(tmp_10, 'Int', _no_name_provided_$factory_17());
    var tmp_11 = this;
    var tmp0_unsafeCast_0_5 = Number;
    var tmp_12 = tmp0_unsafeCast_0_5;
    tmp_11._floatClass = new PrimitiveKClassImpl(tmp_12, 'Float', _no_name_provided_$factory_18());
    var tmp_13 = this;
    var tmp0_unsafeCast_0_6 = Number;
    var tmp_14 = tmp0_unsafeCast_0_6;
    tmp_13._doubleClass = new PrimitiveKClassImpl(tmp_14, 'Double', _no_name_provided_$factory_19());
    var tmp_15 = this;
    var tmp0_unsafeCast_0_7 = Array;
    var tmp_16 = tmp0_unsafeCast_0_7;
    tmp_15._arrayClass = new PrimitiveKClassImpl(tmp_16, 'Array', _no_name_provided_$factory_20());
    var tmp_17 = this;
    var tmp0_unsafeCast_0_8 = String;
    var tmp_18 = tmp0_unsafeCast_0_8;
    tmp_17._stringClass = new PrimitiveKClassImpl(tmp_18, 'String', _no_name_provided_$factory_21());
    var tmp_19 = this;
    var tmp0_unsafeCast_0_9 = Error;
    var tmp_20 = tmp0_unsafeCast_0_9;
    tmp_19._throwableClass = new PrimitiveKClassImpl(tmp_20, 'Throwable', _no_name_provided_$factory_22());
    var tmp_21 = this;
    var tmp0_unsafeCast_0_10 = Array;
    var tmp_22 = tmp0_unsafeCast_0_10;
    tmp_21._booleanArrayClass = new PrimitiveKClassImpl(tmp_22, 'BooleanArray', _no_name_provided_$factory_23());
    var tmp_23 = this;
    var tmp0_unsafeCast_0_11 = Uint16Array;
    var tmp_24 = tmp0_unsafeCast_0_11;
    tmp_23._charArrayClass = new PrimitiveKClassImpl(tmp_24, 'CharArray', _no_name_provided_$factory_24());
    var tmp_25 = this;
    var tmp0_unsafeCast_0_12 = Int8Array;
    var tmp_26 = tmp0_unsafeCast_0_12;
    tmp_25._byteArrayClass = new PrimitiveKClassImpl(tmp_26, 'ByteArray', _no_name_provided_$factory_25());
    var tmp_27 = this;
    var tmp0_unsafeCast_0_13 = Int16Array;
    var tmp_28 = tmp0_unsafeCast_0_13;
    tmp_27._shortArrayClass = new PrimitiveKClassImpl(tmp_28, 'ShortArray', _no_name_provided_$factory_26());
    var tmp_29 = this;
    var tmp0_unsafeCast_0_14 = Int32Array;
    var tmp_30 = tmp0_unsafeCast_0_14;
    tmp_29._intArrayClass = new PrimitiveKClassImpl(tmp_30, 'IntArray', _no_name_provided_$factory_27());
    var tmp_31 = this;
    var tmp0_unsafeCast_0_15 = Array;
    var tmp_32 = tmp0_unsafeCast_0_15;
    tmp_31._longArrayClass = new PrimitiveKClassImpl(tmp_32, 'LongArray', _no_name_provided_$factory_28());
    var tmp_33 = this;
    var tmp0_unsafeCast_0_16 = Float32Array;
    var tmp_34 = tmp0_unsafeCast_0_16;
    tmp_33._floatArrayClass = new PrimitiveKClassImpl(tmp_34, 'FloatArray', _no_name_provided_$factory_29());
    var tmp_35 = this;
    var tmp0_unsafeCast_0_17 = Float64Array;
    var tmp_36 = tmp0_unsafeCast_0_17;
    tmp_35._doubleArrayClass = new PrimitiveKClassImpl(tmp_36, 'DoubleArray', _no_name_provided_$factory_30());
  }
  PrimitiveClasses_0.prototype._get_anyClass_ = function () {
    return this._anyClass;
  };
  PrimitiveClasses_0.prototype._get_numberClass_ = function () {
    return this._numberClass;
  };
  PrimitiveClasses_0.prototype._get_nothingClass_ = function () {
    return this._nothingClass;
  };
  PrimitiveClasses_0.prototype._get_booleanClass_ = function () {
    return this._booleanClass;
  };
  PrimitiveClasses_0.prototype._get_byteClass_ = function () {
    return this._byteClass;
  };
  PrimitiveClasses_0.prototype._get_shortClass_ = function () {
    return this._shortClass;
  };
  PrimitiveClasses_0.prototype._get_intClass_ = function () {
    return this._intClass;
  };
  PrimitiveClasses_0.prototype._get_floatClass_ = function () {
    return this._floatClass;
  };
  PrimitiveClasses_0.prototype._get_doubleClass_ = function () {
    return this._doubleClass;
  };
  PrimitiveClasses_0.prototype._get_arrayClass_ = function () {
    return this._arrayClass;
  };
  PrimitiveClasses_0.prototype._get_stringClass_ = function () {
    return this._stringClass;
  };
  PrimitiveClasses_0.prototype._get_throwableClass_ = function () {
    return this._throwableClass;
  };
  PrimitiveClasses_0.prototype._get_booleanArrayClass_ = function () {
    return this._booleanArrayClass;
  };
  PrimitiveClasses_0.prototype._get_charArrayClass_ = function () {
    return this._charArrayClass;
  };
  PrimitiveClasses_0.prototype._get_byteArrayClass_ = function () {
    return this._byteArrayClass;
  };
  PrimitiveClasses_0.prototype._get_shortArrayClass_ = function () {
    return this._shortArrayClass;
  };
  PrimitiveClasses_0.prototype._get_intArrayClass_ = function () {
    return this._intArrayClass;
  };
  PrimitiveClasses_0.prototype._get_longArrayClass_ = function () {
    return this._longArrayClass;
  };
  PrimitiveClasses_0.prototype._get_floatArrayClass_ = function () {
    return this._floatArrayClass;
  };
  PrimitiveClasses_0.prototype._get_doubleArrayClass_ = function () {
    return this._doubleArrayClass;
  };
  PrimitiveClasses_0.prototype.functionClass = function (arity) {
    var tmp0_elvis_lhs = functionClasses[arity];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_unsafeCast_0_3 = Function;
      var tmp_0 = tmp0_unsafeCast_0_3;
      var tmp_1 = '' + 'Function' + arity;
      var result_2 = new PrimitiveKClassImpl(tmp_0, tmp_1, _no_name_provided_$factory_31(arity));
      var tmp1_asDynamic_0_5 = functionClasses;
      tmp1_asDynamic_0_5[arity] = result_2;
      tmp = result_2;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  PrimitiveClasses_0.$metadata$ = {
    simpleName: 'PrimitiveClasses',
    kind: 'object',
    interfaces: []
  };
  Object.defineProperty(PrimitiveClasses_0.prototype, 'anyClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_anyClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'numberClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_numberClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'nothingClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_nothingClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'booleanClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_booleanClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'byteClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_byteClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'shortClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_shortClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'intClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_intClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'floatClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_floatClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'doubleClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_doubleClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'arrayClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_arrayClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'stringClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_stringClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'throwableClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_throwableClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'booleanArrayClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_booleanArrayClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'charArrayClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_charArrayClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'byteArrayClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_byteArrayClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'shortArrayClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_shortArrayClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'intArrayClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_intArrayClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'longArrayClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_longArrayClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'floatArrayClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_floatArrayClass_
  });
  Object.defineProperty(PrimitiveClasses_0.prototype, 'doubleArrayClass', {
    configurable: true,
    get: PrimitiveClasses_0.prototype._get_doubleArrayClass_
  });
  var PrimitiveClasses_instance;
  function PrimitiveClasses_getInstance() {
    if (PrimitiveClasses_instance == null)
      new PrimitiveClasses_0();
    return PrimitiveClasses_instance;
  }
  function _no_name_provided_$factory_12() {
    var i = new _no_name_provided__25();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_13() {
    var i = new _no_name_provided__26();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_14() {
    var i = new _no_name_provided__27();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_15() {
    var i = new _no_name_provided__28();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_16() {
    var i = new _no_name_provided__29();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_17() {
    var i = new _no_name_provided__30();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_18() {
    var i = new _no_name_provided__31();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_19() {
    var i = new _no_name_provided__32();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_20() {
    var i = new _no_name_provided__33();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_21() {
    var i = new _no_name_provided__34();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_22() {
    var i = new _no_name_provided__35();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_23() {
    var i = new _no_name_provided__36();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_24() {
    var i = new _no_name_provided__37();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_25() {
    var i = new _no_name_provided__38();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_26() {
    var i = new _no_name_provided__39();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_27() {
    var i = new _no_name_provided__40();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_28() {
    var i = new _no_name_provided__41();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_29() {
    var i = new _no_name_provided__42();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_30() {
    var i = new _no_name_provided__43();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function _no_name_provided_$factory_31($arity) {
    var i = new _no_name_provided__44($arity);
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function functionClasses$init$() {
    var tmp0_arrayOfNulls_0 = 0;
    return fillArrayVal(Array(tmp0_arrayOfNulls_0), null);
  }
  function getKClass_0(jClass) {
    var tmp;
    if (Array.isArray(jClass)) {
      tmp = getKClassM_0(jClass);
    } else {
      tmp = getKClass1_0(jClass);
    }
    return tmp;
  }
  function getKClassM_0(jClasses) {
    var tmp0_subject = jClasses.length;
    var tmp;
    switch (tmp0_subject) {
      case 1:
        tmp = getKClass1_0(jClasses[0]);
        break;
      case 0:
        var tmp0_unsafeCast_0 = NothingKClassImpl_getInstance();
        tmp = tmp0_unsafeCast_0;
        break;
      default:var tmp1_unsafeCast_0 = new ErrorKClass();
        tmp = tmp1_unsafeCast_0;
        break;
    }
    return tmp;
  }
  function getKClass1_0(jClass) {
    if (jClass === String) {
      var tmp0_unsafeCast_0 = PrimitiveClasses_getInstance()._stringClass;
      return tmp0_unsafeCast_0;
    }var metadata = jClass.$metadata$;
    var tmp;
    if (metadata != null) {
      var tmp_0;
      if (metadata.$kClass$ == null) {
        var kClass = new SimpleKClassImpl(jClass);
        metadata.$kClass$ = kClass;
        tmp_0 = kClass;
      } else {
        tmp_0 = metadata.$kClass$;
      }
      tmp = tmp_0;
    } else {
      tmp = new SimpleKClassImpl(jClass);
    }
    return tmp;
  }
  function getKClassFromExpression_0(e) {
    var tmp0_subject = typeof e;
    var tmp;
    switch (tmp0_subject) {
      case 'string':
        tmp = PrimitiveClasses_getInstance()._stringClass;
        break;
      case 'number':
        var tmp_0;
        var tmp0_asDynamic_0 = jsBitwiseOr(e, 0);
        if (tmp0_asDynamic_0 === e) {
          tmp_0 = PrimitiveClasses_getInstance()._intClass;
        } else {
          {
            tmp_0 = PrimitiveClasses_getInstance()._doubleClass;
          }
        }

        tmp = tmp_0;
        break;
      case 'boolean':
        tmp = PrimitiveClasses_getInstance()._booleanClass;
        break;
      case 'function':
        var tmp_1 = PrimitiveClasses_getInstance();
        tmp = tmp_1.functionClass(e.length);
        break;
      default:var tmp_2;
        if (isBooleanArray(e)) {
          tmp_2 = PrimitiveClasses_getInstance()._booleanArrayClass;
        } else {
          if (isCharArray(e)) {
            tmp_2 = PrimitiveClasses_getInstance()._charArrayClass;
          } else {
            if (isByteArray(e)) {
              tmp_2 = PrimitiveClasses_getInstance()._byteArrayClass;
            } else {
              if (isShortArray(e)) {
                tmp_2 = PrimitiveClasses_getInstance()._shortArrayClass;
              } else {
                if (isIntArray(e)) {
                  tmp_2 = PrimitiveClasses_getInstance()._intArrayClass;
                } else {
                  if (isLongArray(e)) {
                    tmp_2 = PrimitiveClasses_getInstance()._longArrayClass;
                  } else {
                    if (isFloatArray(e)) {
                      tmp_2 = PrimitiveClasses_getInstance()._floatArrayClass;
                    } else {
                      if (isDoubleArray(e)) {
                        tmp_2 = PrimitiveClasses_getInstance()._doubleArrayClass;
                      } else {
                        if (isInterface(e, KClass)) {
                          tmp_2 = getKClass_0(KClass);
                        } else {
                          if (isArray(e)) {
                            tmp_2 = PrimitiveClasses_getInstance()._arrayClass;
                          } else {
                            {
                              var constructor = Object.getPrototypeOf(e).constructor;
                              var tmp_3;
                              if (constructor === Object) {
                                tmp_3 = PrimitiveClasses_getInstance()._anyClass;
                              } else if (constructor === Error) {
                                tmp_3 = PrimitiveClasses_getInstance()._throwableClass;
                              } else {
                                var jsClass_0 = constructor;
                                tmp_3 = getKClass1_0(jsClass_0);
                              }
                              tmp_2 = tmp_3;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        tmp = tmp_2;
        break;
    }
    var tmp1_unsafeCast_0 = tmp;
    return tmp1_unsafeCast_0;
  }
  function Appendable() {
  }
  Appendable.$metadata$ = {
    simpleName: 'Appendable',
    kind: 'interface',
    interfaces: []
  };
  function CharacterCodingException(message) {
    Exception_init_$Init$_0(message, this);
    captureStack(this, CharacterCodingException);
  }
  CharacterCodingException.$metadata$ = {
    simpleName: 'CharacterCodingException',
    kind: 'class',
    interfaces: []
  };
  function StringBuilder_init_$Init$(capacity, $this) {
    StringBuilder_init_$Init$_0($this);
    return $this;
  }
  function StringBuilder_init_$Create$(capacity) {
    return StringBuilder_init_$Init$(capacity, Object.create(StringBuilder.prototype));
  }
  function StringBuilder_init_$Init$_0($this) {
    StringBuilder.call($this, '');
    return $this;
  }
  function StringBuilder_init_$Create$_0() {
    return StringBuilder_init_$Init$_0(Object.create(StringBuilder.prototype));
  }
  function StringBuilder(content) {
    this._string = !(content === undefined) ? content : '';
  }
  StringBuilder.prototype._get_length__41 = function () {
    var tmp0_asDynamic_0 = this._string;
    return tmp0_asDynamic_0.length;
  };
  StringBuilder.prototype.get_77 = function (index) {
    var tmp0_getOrElse_0 = this._string;
    var tmp;
    if (index >= 0 ? index <= _get_lastIndex__1(tmp0_getOrElse_0) : false) {
      tmp = charSequenceGet(tmp0_getOrElse_0, index);
    } else {
      throw IndexOutOfBoundsException_init_$Create$_0('' + 'index: ' + index + ', length: ' + this._get_length__41() + '}');
    }
    return tmp;
  };
  StringBuilder.prototype.subSequence_1 = function (startIndex, endIndex) {
    var tmp0_substring_0 = this._string;
    return tmp0_substring_0.substring(startIndex, endIndex);
  };
  StringBuilder.prototype.append_23 = function (value) {
    var tmp0_this = this;
    tmp0_this._string = tmp0_this._string + value;
    return this;
  };
  StringBuilder.prototype.append_22 = function (value) {
    var tmp0_this = this;
    tmp0_this._string = tmp0_this._string + toString_0(value);
    return this;
  };
  StringBuilder.prototype.append_21 = function (value, startIndex, endIndex) {
    var tmp0_elvis_lhs = value;
    return this.appendRange(tmp0_elvis_lhs == null ? 'null' : tmp0_elvis_lhs, startIndex, endIndex);
  };
  StringBuilder.prototype.append_5 = function (value) {
    var tmp0_this = this;
    tmp0_this._string = tmp0_this._string + toString_0(value);
    return this;
  };
  StringBuilder.prototype.append_6 = function (value) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this._string;
    var tmp1_elvis_lhs = value;
    tmp._string = tmp_0 + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
    return this;
  };
  StringBuilder.prototype.setLength = function (newLength) {
    if (newLength < 0) {
      throw IllegalArgumentException_init_$Create$_0('' + 'Negative new length: ' + newLength + '.');
    }if (newLength <= this._get_length__41()) {
      var tmp = this;
      var tmp0_substring_0 = this._string;
      var tmp1_substring_0 = 0;
      tmp._string = tmp0_substring_0.substring(tmp1_substring_0, newLength);
    } else {
      var inductionVariable = this._get_length__41();
      if (inductionVariable < newLength)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp1_this = this;
          tmp1_this._string = tmp1_this._string + new Char(0);
        }
         while (inductionVariable < newLength);
    }
  };
  StringBuilder.prototype.toString = function () {
    return this._string;
  };
  StringBuilder.prototype.clear_15 = function () {
    this._string = '';
    return this;
  };
  StringBuilder.prototype.appendRange = function (value, startIndex, endIndex) {
    var stringCsq = toString_1(value);
    Companion_getInstance().checkBoundsIndexes(startIndex, endIndex, stringCsq.length);
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this._string;
    tmp._string = tmp_0 + stringCsq.substring(startIndex, endIndex);
    return this;
  };
  StringBuilder.$metadata$ = {
    simpleName: 'StringBuilder',
    kind: 'class',
    interfaces: [Appendable, CharSequence]
  };
  function isHighSurrogate(_this_) {
    Companion_getInstance_13();
    var containsLower = new Char(55296);
    var tmp;
    Companion_getInstance_13();
    if (_this_ <= new Char(56319)) {
      tmp = containsLower <= _this_;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  }
  function isLowSurrogate(_this_) {
    Companion_getInstance_13();
    var containsLower = new Char(56320);
    var tmp;
    Companion_getInstance_13();
    if (_this_ <= new Char(57343)) {
      tmp = containsLower <= _this_;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  }
  function isWhitespace(_this_) {
    return isWhitespaceImpl(_this_);
  }
  function uppercaseChar(_this_) {
    var tmp0_asDynamic_0 = _this_.toString();
    var tmp1_unsafeCast_0 = tmp0_asDynamic_0.toUpperCase();
    var uppercase = tmp1_unsafeCast_0;
    return uppercase.length > 1 ? _this_ : charSequenceGet(uppercase, 0);
  }
  function checkRadix(radix) {
    if (!(2 <= radix ? radix <= 36 : false)) {
      throw IllegalArgumentException_init_$Create$_0('' + 'radix ' + radix + ' was not in valid range 2..36');
    }return radix;
  }
  function toDoubleOrNull(_this_) {
    var tmp0_unsafeCast_0 = +_this_;
    var tmp1_takeIf_0 = tmp0_unsafeCast_0;
    var tmp;
    if (!((isNaN_0(tmp1_takeIf_0) ? !isNaN_2(_this_) : false) ? true : tmp1_takeIf_0 === 0.0 ? isBlank(_this_) : false)) {
      tmp = tmp1_takeIf_0;
    } else {
      {
        tmp = null;
      }
    }
    return tmp;
  }
  function toLong(_this_) {
    var tmp0_elvis_lhs = toLongOrNull(_this_);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this_);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toInt(_this_) {
    var tmp0_elvis_lhs = toIntOrNull(_this_);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this_);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toBoolean(_this_) {
    var tmp;
    if (!(_this_ == null)) {
      tmp = _this_.toLowerCase() === 'true';
    } else {
      tmp = false;
    }
    return tmp;
  }
  function digitOf(char, radix) {
    var tmp0_let_0 = (char.compareTo_12(new Char(48)) >= 0 ? char.compareTo_12(new Char(57)) <= 0 : false) ? char.minus_0(new Char(48)) : (char.compareTo_12(new Char(65)) >= 0 ? char.compareTo_12(new Char(90)) <= 0 : false) ? char.minus_0(new Char(65)) + 10 | 0 : (char.compareTo_12(new Char(97)) >= 0 ? char.compareTo_12(new Char(122)) <= 0 : false) ? char.minus_0(new Char(97)) + 10 | 0 : -1;
    return tmp0_let_0 >= radix ? -1 : tmp0_let_0;
  }
  function isNaN_2(_this_) {
    var tmp0_subject = _this_.toLowerCase();
    switch (tmp0_subject) {
      case 'nan':
      case '+nan':
      case '-nan':
        return true;
      default:return false;
    }
  }
  function toDouble(_this_) {
    var tmp0_unsafeCast_0 = +_this_;
    var tmp1_also_0 = tmp0_unsafeCast_0;
    if ((isNaN_0(tmp1_also_0) ? !isNaN_2(_this_) : false) ? true : tmp1_also_0 === 0.0 ? isBlank(_this_) : false) {
      numberFormatError(_this_);
    }return tmp1_also_0;
  }
  function Regex_init_$Init$(pattern, $this) {
    Regex.call($this, pattern, emptySet());
    return $this;
  }
  function Regex_init_$Create$(pattern) {
    return Regex_init_$Init$(pattern, Object.create(Regex.prototype));
  }
  function Companion_13() {
    Companion_instance_12 = this;
    this._patternEscape = new RegExp('[\\\\^$*+?.()|[\\]{}]', 'g');
    this._replacementEscape = new RegExp('\\$', 'g');
  }
  Companion_13.prototype.escape = function (literal) {
    var tmp0_nativeReplace_0 = this._patternEscape;
    var tmp1_nativeReplace_0 = '\\$&';
    return literal.replace(tmp0_nativeReplace_0, tmp1_nativeReplace_0);
  };
  Companion_13.prototype.escapeReplacement = function (literal) {
    var tmp0_nativeReplace_0 = this._replacementEscape;
    var tmp1_nativeReplace_0 = '$$$$';
    return literal.replace(tmp0_nativeReplace_0, tmp1_nativeReplace_0);
  };
  Companion_13.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_12;
  function Companion_getInstance_12() {
    if (Companion_instance_12 == null)
      new Companion_13();
    return Companion_instance_12;
  }
  function _no_name_provided__45() {
  }
  _no_name_provided__45.prototype.invoke_65 = function (it) {
    return it._value_0;
  };
  _no_name_provided__45.prototype.invoke_420 = function (p1) {
    return this.invoke_65(p1 instanceof RegexOption ? p1 : THROW_CCE());
  };
  _no_name_provided__45.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function Regex(pattern, options) {
    Companion_getInstance_12();
    this._pattern = pattern;
    this._options = toSet_0(options);
    var tmp = this;
    tmp._nativePattern = new RegExp(pattern, joinToString$default_0(options, '', 'gu', null, 0, null, _no_name_provided_$factory_32(), 28, null));
  }
  Regex.prototype.toString = function () {
    return this._nativePattern.toString();
  };
  Regex.$metadata$ = {
    simpleName: 'Regex',
    kind: 'class',
    interfaces: []
  };
  function RegexOption() {
  }
  RegexOption.$metadata$ = {
    simpleName: 'RegexOption',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_32() {
    var i = new _no_name_provided__45();
    return function (p1) {
      return i.invoke_65(p1);
    };
  }
  function decodeToString(_this_) {
    return decodeUtf8(_this_, 0, _this_.length, false);
  }
  function replace(_this_, oldChar, newChar, ignoreCase) {
    var tmp0_nativeReplace_0 = new RegExp(Companion_getInstance_12().escape(oldChar.toString()), ignoreCase ? 'gui' : 'gu');
    var tmp1_nativeReplace_0 = newChar.toString();
    return _this_.replace(tmp0_nativeReplace_0, tmp1_nativeReplace_0);
  }
  function replace$default(_this_, oldChar, newChar, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return replace(_this_, oldChar, newChar, ignoreCase);
  }
  function equals_0(_this_, other, ignoreCase) {
    var tmp;
    if (_this_ == null) {
      tmp = other == null;
    } else if (!ignoreCase) {
      tmp = _this_ == other;
    } else if (other == null) {
      tmp = false;
    } else {
      var thisLower = _this_.toLowerCase();
      var otherLower = other.toLowerCase();
      var tmp_0;
      if (thisLower === otherLower) {
        tmp_0 = true;
      } else {
        var tmp_1 = thisLower.toUpperCase();
        tmp_0 = tmp_1 === otherLower.toUpperCase();
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function isBlank(_this_) {
    var tmp;
    if (charSequenceLength(_this_) === 0) {
      tmp = true;
    } else {
      var tmp_0;
      if (typeof _this_ === 'string') {
        tmp_0 = _this_;
      } else {
        {
          tmp_0 = toString_1(_this_);
        }
      }
      tmp = matches(tmp_0, '^[\\s\\xA0]+$');
    }
    return tmp;
  }
  function matches(_this_, regex) {
    var result = _this_.match(regex);
    return !(result == null) ? !(result.length === 0) : false;
  }
  function startsWith_0(_this_, prefix, ignoreCase) {
    if (!ignoreCase) {
      var tmp0_nativeStartsWith_0 = 0;
      return _this_.startsWith(prefix, tmp0_nativeStartsWith_0);
    } else
      return regionMatches(_this_, 0, prefix, 0, prefix.length, ignoreCase);
  }
  function startsWith$default_0(_this_, prefix, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return startsWith_0(_this_, prefix, ignoreCase);
  }
  function regionMatches(_this_, thisOffset, other, otherOffset, length, ignoreCase) {
    return regionMatchesImpl(_this_, thisOffset, other, otherOffset, length, ignoreCase);
  }
  function startsWith_1(_this_, prefix, startIndex, ignoreCase) {
    if (!ignoreCase) {
      return _this_.startsWith(prefix, startIndex);
    } else
      return regionMatches(_this_, startIndex, prefix, 0, prefix.length, ignoreCase);
  }
  function startsWith$default_1(_this_, prefix, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return startsWith_1(_this_, prefix, startIndex, ignoreCase);
  }
  function replace_0(_this_, oldValue, newValue, ignoreCase) {
    var tmp0_nativeReplace_0 = new RegExp(Companion_getInstance_12().escape(oldValue), ignoreCase ? 'gui' : 'gu');
    var tmp1_nativeReplace_0 = Companion_getInstance_12().escapeReplacement(newValue);
    return _this_.replace(tmp0_nativeReplace_0, tmp1_nativeReplace_0);
  }
  function replace$default_0(_this_, oldValue, newValue, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return replace_0(_this_, oldValue, newValue, ignoreCase);
  }
  function capitalize(_this_) {
    var tmp;
    if (charSequenceLength(_this_) > 0) {
      var tmp0_substring_0 = 0;
      var tmp1_substring_0 = 1;
      var tmp2_toUpperCase_0 = _this_.substring(tmp0_substring_0, tmp1_substring_0);
      var tmp_0 = tmp2_toUpperCase_0.toUpperCase();
      var tmp3_substring_0 = 1;
      tmp = tmp_0 + _this_.substring(tmp3_substring_0);
    } else {
      {
        tmp = _this_;
      }
    }
    return tmp;
  }
  function endsWith(_this_, suffix, ignoreCase) {
    if (!ignoreCase) {
      return _this_.endsWith(suffix);
    } else
      return regionMatches(_this_, _this_.length - suffix.length | 0, suffix, 0, suffix.length, ignoreCase);
  }
  function endsWith$default(_this_, suffix, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return endsWith(_this_, suffix, ignoreCase);
  }
  function decodeUtf8(bytes, startIndex, endIndex, throwOnMalformed) {
    var tmp0_require_0 = (startIndex >= 0 ? endIndex <= bytes.length : false) ? startIndex <= endIndex : false;
    if (!tmp0_require_0) {
      var message_2_1 = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2_1));
    }var byteIndex = startIndex;
    var stringBuilder = StringBuilder_init_$Create$_0();
    while (byteIndex < endIndex) {
      var tmp0 = byteIndex;
      byteIndex = tmp0 + 1 | 0;
      var byte = bytes[tmp0];
      if (byte >= 0) {
        stringBuilder.append_23(numberToChar(byte));
        Unit_getInstance();
      } else if (byte >> 5 === -2) {
        var code = codePointFrom2(bytes, byte, byteIndex, endIndex, throwOnMalformed);
        if (code <= 0) {
          stringBuilder.append_23(new Char(65533));
          Unit_getInstance();
          byteIndex = byteIndex + (-code | 0) | 0;
        } else {
          stringBuilder.append_23(numberToChar(code));
          Unit_getInstance();
          byteIndex = byteIndex + 1 | 0;
        }
      } else if (byte >> 4 === -2) {
        var code_0 = codePointFrom3(bytes, byte, byteIndex, endIndex, throwOnMalformed);
        if (code_0 <= 0) {
          stringBuilder.append_23(new Char(65533));
          Unit_getInstance();
          byteIndex = byteIndex + (-code_0 | 0) | 0;
        } else {
          stringBuilder.append_23(numberToChar(code_0));
          Unit_getInstance();
          byteIndex = byteIndex + 2 | 0;
        }
      } else if (byte >> 3 === -2) {
        var code_1 = codePointFrom4(bytes, byte, byteIndex, endIndex, throwOnMalformed);
        if (code_1 <= 0) {
          stringBuilder.append_23(new Char(65533));
          Unit_getInstance();
          byteIndex = byteIndex + (-code_1 | 0) | 0;
        } else {
          var high = (code_1 - 65536 | 0) >> 10 | 55296;
          var low = code_1 & 1023 | 56320;
          stringBuilder.append_23(numberToChar(high));
          Unit_getInstance();
          stringBuilder.append_23(numberToChar(low));
          Unit_getInstance();
          byteIndex = byteIndex + 3 | 0;
        }
      } else {
        malformed(0, byteIndex, throwOnMalformed);
        Unit_getInstance();
        stringBuilder.append_23(new Char(65533));
        Unit_getInstance();
      }
    }
    return stringBuilder.toString();
  }
  function codePointFrom2(bytes, byte1, index, endIndex, throwOnMalformed) {
    if ((byte1 & 30) === 0 ? true : index >= endIndex) {
      return malformed(0, index, throwOnMalformed);
    }var byte2 = bytes[index];
    if (!((byte2 & 192) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }return byte1 << 6 ^ byte2 ^ 3968;
  }
  function codePointFrom3(bytes, byte1, index, endIndex, throwOnMalformed) {
    if (index >= endIndex) {
      return malformed(0, index, throwOnMalformed);
    }var byte2 = bytes[index];
    if ((byte1 & 15) === 0) {
      if (!((byte2 & 224) === 160)) {
        return malformed(0, index, throwOnMalformed);
      }} else if ((byte1 & 15) === 13) {
      if (!((byte2 & 224) === 128)) {
        return malformed(0, index, throwOnMalformed);
      }} else if (!((byte2 & 192) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }if ((index + 1 | 0) === endIndex) {
      return malformed(1, index, throwOnMalformed);
    }var byte3 = bytes[index + 1 | 0];
    if (!((byte3 & 192) === 128)) {
      return malformed(1, index, throwOnMalformed);
    }return byte1 << 12 ^ byte2 << 6 ^ byte3 ^ -123008;
  }
  function codePointFrom4(bytes, byte1, index, endIndex, throwOnMalformed) {
    if (index >= endIndex) {
      malformed(0, index, throwOnMalformed);
      Unit_getInstance();
    }var byte2 = bytes[index];
    if ((byte1 & 15) === 0) {
      if ((byte2 & 240) <= 128) {
        return malformed(0, index, throwOnMalformed);
      }} else if ((byte1 & 15) === 4) {
      if (!((byte2 & 240) === 128)) {
        return malformed(0, index, throwOnMalformed);
      }} else if ((byte1 & 15) > 4) {
      return malformed(0, index, throwOnMalformed);
    } else if (!((byte2 & 192) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }if ((index + 1 | 0) === endIndex) {
      return malformed(1, index, throwOnMalformed);
    }var byte3 = bytes[index + 1 | 0];
    if (!((byte3 & 192) === 128)) {
      return malformed(1, index, throwOnMalformed);
    }if ((index + 2 | 0) === endIndex) {
      return malformed(2, index, throwOnMalformed);
    }var byte4 = bytes[index + 2 | 0];
    if (!((byte4 & 192) === 128)) {
      return malformed(2, index, throwOnMalformed);
    }return byte1 << 18 ^ byte2 << 12 ^ byte3 << 6 ^ byte4 ^ 3678080;
  }
  function malformed(size_0, index, throwOnMalformed) {
    if (throwOnMalformed)
      throw new CharacterCodingException('' + 'Malformed sequence starting at ' + (index - 1 | 0));
    return -size_0 | 0;
  }
  function printStackTrace(_this_) {
    (function () {
      var $externalVarargReceiverTmp = console;
      return $externalVarargReceiverTmp.error.apply($externalVarargReceiverTmp, [].concat([stackTraceToString(_this_)]));
    }.call(this));
  }
  function stackTraceToString(_this_) {
    return (new ExceptionTraceBuilder()).buildFor(_this_);
  }
  function hasSeen($this, exception) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_any_0 = $this._visited;
      var indexedObject = tmp0_any_0;
      var inductionVariable = 0;
      var last_1 = indexedObject.length;
      while (inductionVariable < last_1) {
        var element_2 = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        if (element_2 === exception) {
          tmp$ret$0 = true;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = false;
    }
     while (false);
    return tmp$ret$0;
  }
  function dumpFullTrace(_this_, $this, indent, qualifier) {
    if (dumpSelfTrace(_this_, $this, indent, qualifier))
      true;
    else
      return Unit_getInstance();
    Unit_getInstance();
    var cause = _this_.cause;
    while (!(cause == null)) {
      if (dumpSelfTrace(cause, $this, indent, 'Caused by: '))
        true;
      else
        return Unit_getInstance();
      Unit_getInstance();
      cause = cause.cause;
    }
  }
  function dumpSelfTrace(_this_, $this, indent, qualifier) {
    $this._target.append_6(indent).append_6(qualifier);
    Unit_getInstance();
    var shortInfo = _this_.toString();
    if (hasSeen($this, _this_)) {
      $this._target.append_6('[CIRCULAR REFERENCE, SEE ABOVE: ').append_6(shortInfo).append_6(']\n');
      Unit_getInstance();
      return false;
    }var tmp0_asDynamic_0 = $this._visited;
    tmp0_asDynamic_0.push(_this_);
    var tmp = _this_.stack;
    var stack = (tmp == null ? true : typeof tmp === 'string') ? tmp : THROW_CCE();
    if (!(stack == null)) {
      var tmp_0 = stack;
      var tmp1_let_0 = indexOf$default_0(tmp_0, shortInfo, 0, false, 6, null);
      var stackStart = tmp1_let_0 < 0 ? 0 : tmp1_let_0 + shortInfo.length | 0;
      if (stackStart === 0) {
        $this._target.append_6(shortInfo).append_6('\n');
        Unit_getInstance();
      }var tmp2_isEmpty_0 = $this._topStack;
      if (charSequenceLength(tmp2_isEmpty_0) === 0) {
        $this._topStack = stack;
        $this._topStackStart = stackStart;
      } else {
        {
          stack = dropCommonFrames($this, stack, stackStart);
        }
      }
      if (charSequenceLength(indent) > 0) {
        var tmp_1;
        if (stackStart === 0) {
          tmp_1 = 0;
        } else {
          var count_1 = 0;
          var indexedObject = shortInfo;
          var inductionVariable = 0;
          var last_1 = indexedObject.length;
          while (inductionVariable < last_1) {
            var element_3 = charSequenceGet(indexedObject, inductionVariable);
            inductionVariable = inductionVariable + 1 | 0;
            if (element_3.equals(new Char(10))) {
              count_1 = count_1 + 1 | 0;
              Unit_getInstance();
            } else {
            }
          }
          tmp_1 = 1 + count_1 | 0;
        }
        var messageLines = tmp_1;
        var tmp3_forEachIndexed_0 = lineSequence(stack);
        var index_1 = 0;
        var tmp0_iterator_2 = tmp3_forEachIndexed_0.iterator_62();
        while (tmp0_iterator_2.hasNext_29()) {
          var item_3 = tmp0_iterator_2.next_31();
          var tmp1_4 = index_1;
          index_1 = tmp1_4 + 1 | 0;
          var tmp4__anonymous__5 = checkIndexOverflow(tmp1_4);
          if (tmp4__anonymous__5 >= messageLines) {
            $this._target.append_6(indent);
            Unit_getInstance();
          }$this._target.append_6(item_3).append_6('\n');
          Unit_getInstance();
        }
      } else {
        {
          $this._target.append_6(stack).append_6('\n');
          Unit_getInstance();
        }
      }
    } else {
      $this._target.append_6(shortInfo).append_6('\n');
      Unit_getInstance();
    }
    var suppressed = _get_suppressedExceptions_(_this_);
    if (!suppressed.isEmpty_50()) {
      var suppressedIndent = indent + '    ';
      var tmp0_iterator = suppressed.iterator_62();
      while (tmp0_iterator.hasNext_29()) {
        var s = tmp0_iterator.next_31();
        dumpFullTrace(s, $this, suppressedIndent, 'Suppressed: ');
      }
    } else {
    }
    return true;
  }
  function dropCommonFrames($this, stack, stackStart) {
    var commonFrames = 0;
    var lastBreak = 0;
    var preLastBreak = 0;
    var inductionVariable = 0;
    var tmp0_minOf_0 = $this._topStack.length - $this._topStackStart | 0;
    var tmp1_minOf_0 = stack.length - stackStart | 0;
    var last_1 = function () {
      var $externalVarargReceiverTmp = Math;
      return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_minOf_0, tmp1_minOf_0]))));
    }.call(this);
    if (inductionVariable < last_1)
      $l$break: do {
        var pos = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var c = charSequenceGet(stack, _get_lastIndex__1(stack) - pos | 0);
        if (!c.equals(charSequenceGet($this._topStack, _get_lastIndex__1($this._topStack) - pos | 0)))
          break $l$break;
        if (c.equals(new Char(10))) {
          commonFrames = commonFrames + 1 | 0;
          preLastBreak = lastBreak;
          lastBreak = pos;
        }}
       while (inductionVariable < last_1);
    if (commonFrames <= 1)
      return stack;
    while (preLastBreak > 0 ? charSequenceGet(stack, _get_lastIndex__1(stack) - (preLastBreak - 1 | 0) | 0).equals(new Char(32)) : false)
      preLastBreak = preLastBreak - 1 | 0;
    return dropLast(stack, preLastBreak) + ('' + '... and ' + (commonFrames - 1 | 0) + ' more common stack frames skipped');
  }
  function ExceptionTraceBuilder() {
    this._target = StringBuilder_init_$Create$_0();
    var tmp = this;
    var tmp0_arrayOf_0 = [];
    tmp._visited = tmp0_arrayOf_0;
    this._topStack = '';
    this._topStackStart = 0;
  }
  ExceptionTraceBuilder.prototype.buildFor = function (exception) {
    dumpFullTrace(exception, this, '', '');
    return this._target.toString();
  };
  ExceptionTraceBuilder.$metadata$ = {
    simpleName: 'ExceptionTraceBuilder',
    kind: 'class',
    interfaces: []
  };
  function _get_suppressedExceptions_(_this_) {
    var tmp0_safe_receiver = _this_._suppressed;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = tmp0_safe_receiver;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? emptyList() : tmp1_elvis_lhs;
  }
  function addSuppressed(_this_, exception) {
    if (!(_this_ === exception)) {
      var tmp0_unsafeCast_0 = _this_._suppressed;
      var suppressed = tmp0_unsafeCast_0;
      if (suppressed == null) {
        _this_._suppressed = mutableListOf([exception]);
      } else {
        suppressed.add_32(exception);
        Unit_getInstance();
      }
    }}
  function Companion_14() {
    Companion_instance_13 = this;
    this._MIN_VALUE_8 = new Char(0);
    this._MAX_VALUE_8 = new Char(65535);
    this._MIN_HIGH_SURROGATE = new Char(55296);
    this._MAX_HIGH_SURROGATE = new Char(56319);
    this._MIN_LOW_SURROGATE = new Char(56320);
    this._MAX_LOW_SURROGATE = new Char(57343);
    this._MIN_SURROGATE = new Char(55296);
    this._MAX_SURROGATE = new Char(57343);
    this._SIZE_BYTES_8 = 2;
    this._SIZE_BITS_8 = 16;
  }
  Companion_14.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_13;
  function Companion_getInstance_13() {
    if (Companion_instance_13 == null)
      new Companion_14();
    return Companion_instance_13;
  }
  function Char(code) {
    Companion_getInstance_13();
    var tmp = this;
    tmp._value_1 = _UShort___get_data__impl_(code) & 65535;
  }
  Char.prototype.compareTo_12 = function (other) {
    return this._value_1 - other._value_1 | 0;
  };
  Char.prototype.compareTo_30 = function (other) {
    return this.compareTo_12(other instanceof Char ? other : THROW_CCE());
  };
  Char.prototype.plus_58 = function (other) {
    return numberToChar(this._value_1 + other | 0);
  };
  Char.prototype.minus_0 = function (other) {
    return this._value_1 - other._value_1 | 0;
  };
  Char.prototype.minus_29 = function (other) {
    return numberToChar(this._value_1 - other | 0);
  };
  Char.prototype.rangeTo = function (other) {
    return new CharRange(this, other);
  };
  Char.prototype.toByte_5 = function () {
    return toByte(this._value_1);
  };
  Char.prototype.toInt_5 = function () {
    return this._value_1;
  };
  Char.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(other instanceof Char))
      return false;
    else {
    }
    return this._value_1 === other._value_1;
  };
  Char.prototype.hashCode = function () {
    return this._value_1;
  };
  Char.prototype.toString = function () {
    var tmp0_unsafeCast_0 = String.fromCharCode(this._value_1);
    return tmp0_unsafeCast_0;
  };
  Char.$metadata$ = {
    simpleName: 'Char',
    kind: 'class',
    interfaces: [Comparable]
  };
  function Iterable_0() {
  }
  Iterable_0.$metadata$ = {
    simpleName: 'Iterable',
    kind: 'interface',
    interfaces: []
  };
  function List() {
  }
  List.$metadata$ = {
    simpleName: 'List',
    kind: 'interface',
    interfaces: [Collection]
  };
  function MutableSet() {
  }
  MutableSet.$metadata$ = {
    simpleName: 'MutableSet',
    kind: 'interface',
    interfaces: [Set, MutableCollection]
  };
  function Set() {
  }
  Set.$metadata$ = {
    simpleName: 'Set',
    kind: 'interface',
    interfaces: [Collection]
  };
  function Entry() {
  }
  Entry.$metadata$ = {
    simpleName: 'Entry',
    kind: 'interface',
    interfaces: []
  };
  function Map_0() {
  }
  Map_0.$metadata$ = {
    simpleName: 'Map',
    kind: 'interface',
    interfaces: []
  };
  function MutableEntry() {
  }
  MutableEntry.$metadata$ = {
    simpleName: 'MutableEntry',
    kind: 'interface',
    interfaces: [Entry]
  };
  function MutableMap() {
  }
  MutableMap.$metadata$ = {
    simpleName: 'MutableMap',
    kind: 'interface',
    interfaces: [Map_0]
  };
  function MutableList() {
  }
  MutableList.$metadata$ = {
    simpleName: 'MutableList',
    kind: 'interface',
    interfaces: [List, MutableCollection]
  };
  function MutableCollection() {
  }
  MutableCollection.$metadata$ = {
    simpleName: 'MutableCollection',
    kind: 'interface',
    interfaces: [Collection, MutableIterable]
  };
  function Collection() {
  }
  Collection.$metadata$ = {
    simpleName: 'Collection',
    kind: 'interface',
    interfaces: [Iterable_0]
  };
  function MutableIterable() {
  }
  MutableIterable.$metadata$ = {
    simpleName: 'MutableIterable',
    kind: 'interface',
    interfaces: [Iterable_0]
  };
  function Companion_15() {
    Companion_instance_14 = this;
  }
  Companion_15.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_14;
  function Companion_getInstance_14() {
    if (Companion_instance_14 == null)
      new Companion_15();
    return Companion_instance_14;
  }
  function Enum(name, ordinal) {
    Companion_getInstance_14();
    this._name = name;
    this._ordinal = ordinal;
  }
  Enum.prototype._get_ordinal__0 = function () {
    return this._ordinal;
  };
  Enum.prototype.compareTo_14 = function (other) {
    return compareTo(this._ordinal, other._ordinal);
  };
  Enum.prototype.compareTo_30 = function (other) {
    return this.compareTo_14(other instanceof Enum ? other : THROW_CCE());
  };
  Enum.prototype.equals = function (other) {
    return this === other;
  };
  Enum.prototype.hashCode = function () {
    return identityHashCode(this);
  };
  Enum.prototype.toString = function () {
    return this._name;
  };
  Enum.$metadata$ = {
    simpleName: 'Enum',
    kind: 'class',
    interfaces: [Comparable]
  };
  function toString_0(_this_) {
    var tmp0_safe_receiver = _this_;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_1(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
  }
  function plus_3(_this_, other) {
    var tmp2_safe_receiver = _this_;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : toString_1(tmp2_safe_receiver);
    var tmp = tmp3_elvis_lhs == null ? 'null' : tmp3_elvis_lhs;
    var tmp0_safe_receiver = other;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_1(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
  }
  function fillArrayVal(array, initValue) {
    var inductionVariable = 0;
    var last_1 = array.length - 1 | 0;
    if (inductionVariable <= last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        array[i] = initValue;
      }
       while (!(i === last_1));
    return array;
  }
  function arrayIterator(array) {
    return new _no_name_provided__46(array);
  }
  function booleanArray(size_0) {
    var tmp0_withType_0 = 'BooleanArray';
    var tmp1_withType_0 = fillArrayVal(Array(size_0), false);
    tmp1_withType_0.$type$ = tmp0_withType_0;
    var tmp2_unsafeCast_0 = tmp1_withType_0;
    return tmp2_unsafeCast_0;
  }
  function charArray(size_0) {
    var tmp1_withType_0 = 'CharArray';
    var tmp = Array(size_0);
    var tmp0_Char_0 = 0;
    var tmp_0;
    Companion_getInstance_13();
    var tmp0__get_code__0_1 = new Char(0);
    if (tmp0_Char_0 < tmp0__get_code__0_1.toInt_5()) {
      tmp_0 = true;
    } else {
      {
        Companion_getInstance_13();
        var tmp1__get_code__0_2 = new Char(65535);
        tmp_0 = tmp0_Char_0 > tmp1__get_code__0_2.toInt_5();
      }
    }
    if (tmp_0) {
      throw IllegalArgumentException_init_$Create$_0('' + 'Invalid Char code: ' + tmp0_Char_0);
    } else {
    }
    var tmp2_withType_0 = fillArrayVal(tmp, new Char(_UShort___init__impl_(toShort(tmp0_Char_0))));
    tmp2_withType_0.$type$ = tmp1_withType_0;
    var tmp3_unsafeCast_0 = tmp2_withType_0;
    return tmp3_unsafeCast_0;
  }
  function longArray(size_0) {
    var tmp0_withType_0 = 'LongArray';
    var tmp1_withType_0 = fillArrayVal(Array(size_0), new Long(0, 0));
    tmp1_withType_0.$type$ = tmp0_withType_0;
    var tmp2_unsafeCast_0 = tmp1_withType_0;
    return tmp2_unsafeCast_0;
  }
  function charArrayOf(arr) {
    var tmp0_withType_0 = 'CharArray';
    var tmp1_withType_0 = arr.slice();
    tmp1_withType_0.$type$ = tmp0_withType_0;
    var tmp2_unsafeCast_0 = tmp1_withType_0;
    return tmp2_unsafeCast_0;
  }
  function _no_name_provided__46($array) {
    this._$array = $array;
    this._index_2 = 0;
  }
  _no_name_provided__46.prototype.hasNext_29 = function () {
    return !(this._index_2 === this._$array.length);
  };
  _no_name_provided__46.prototype.next_31 = function () {
    var tmp;
    if (!(this._index_2 === this._$array.length)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this._index_2;
      tmp0_this._index_2 = tmp1 + 1 | 0;
      tmp = this._$array[tmp1];
    } else {
      throw NoSuchElementException_init_$Create$_0('' + this._index_2);
    }
    return tmp;
  };
  _no_name_provided__46.$metadata$ = {
    kind: 'class',
    interfaces: [Iterator_0]
  };
  var buf;
  var bufFloat64;
  var bufInt32;
  var lowIndex;
  var highIndex;
  function getNumberHashCode(obj) {
    var tmp0_unsafeCast_0 = jsBitwiseOr(obj, 0);
    if (tmp0_unsafeCast_0 === obj) {
      return numberToInt(obj);
    } else {
    }
    bufFloat64[0] = obj;
    return imul(bufInt32[highIndex], 31) + bufInt32[lowIndex] | 0;
  }
  function bufFloat64$init$() {
    var tmp0_unsafeCast_0 = new Float64Array(buf);
    return tmp0_unsafeCast_0;
  }
  function bufInt32$init$() {
    var tmp0_unsafeCast_0 = new Int32Array(buf);
    return tmp0_unsafeCast_0;
  }
  function lowIndex$init$() {
    bufFloat64[0] = -1.0;
    return !(bufInt32[0] === 0) ? 1 : 0;
  }
  function charSequenceGet(a, index) {
    var tmp;
    if (isString(a)) {
      var tmp0_unsafeCast_0 = a.charCodeAt(index);
      var tmp1_Char_0 = tmp0_unsafeCast_0;
      var tmp_0;
      Companion_getInstance_13();
      var tmp0__get_code__0_1 = new Char(0);
      if (tmp1_Char_0 < tmp0__get_code__0_1.toInt_5()) {
        tmp_0 = true;
      } else {
        {
          Companion_getInstance_13();
          var tmp1__get_code__0_2 = new Char(65535);
          tmp_0 = tmp1_Char_0 > tmp1__get_code__0_2.toInt_5();
        }
      }
      if (tmp_0) {
        throw IllegalArgumentException_init_$Create$_0('' + 'Invalid Char code: ' + tmp1_Char_0);
      } else {
      }
      tmp = new Char(_UShort___init__impl_(toShort(tmp1_Char_0)));
    } else {
      tmp = a.get_77(index);
    }
    return tmp;
  }
  function isString(a) {
    return typeof a === 'string';
  }
  function charSequenceLength(a) {
    var tmp;
    if (isString(a)) {
      var tmp0_unsafeCast_0 = a.length;
      tmp = tmp0_unsafeCast_0;
    } else {
      tmp = a._get_length__41();
    }
    return tmp;
  }
  function charSequenceSubSequence(a, startIndex, endIndex) {
    var tmp;
    if (isString(a)) {
      var tmp0_unsafeCast_0 = a.substring(startIndex, endIndex);
      tmp = tmp0_unsafeCast_0;
    } else {
      tmp = a.subSequence_1(startIndex, endIndex);
    }
    return tmp;
  }
  function arrayToString(array) {
    return joinToString$default(array, ', ', '[', ']', 0, null, _no_name_provided_$factory_33(), 24, null);
  }
  function contentEqualsInternal(_this_, other) {
    var a = _this_;
    var b = other;
    if (a === b)
      return true;
    if (((a == null ? true : b == null) ? true : !isArrayish(b)) ? true : a.length != b.length)
      return false;
    var inductionVariable = 0;
    var last_1 = a.length;
    if (inductionVariable < last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals_1(a[i], b[i])) {
          return false;
        }}
       while (inductionVariable < last_1);
    return true;
  }
  function contentHashCodeInternal(_this_) {
    var a = _this_;
    if (a == null)
      return 0;
    var result = 1;
    var inductionVariable = 0;
    var last_1 = a.length;
    if (inductionVariable < last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = imul(result, 31) + hashCode(a[i]) | 0;
      }
       while (inductionVariable < last_1);
    return result;
  }
  function _no_name_provided__47() {
  }
  _no_name_provided__47.prototype.invoke_67 = function (it) {
    return toString_1(it);
  };
  _no_name_provided__47.prototype.invoke_420 = function (p1) {
    return this.invoke_67((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
  };
  _no_name_provided__47.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_33() {
    var i = new _no_name_provided__47();
    return function (p1) {
      return i.invoke_67(p1);
    };
  }
  function compareTo(a, b) {
    var tmp0_subject = typeof a;
    var tmp;
    switch (tmp0_subject) {
      case 'number':
        var tmp_0;
        if (typeof b === 'number') {
          tmp_0 = doubleCompareTo(a, b);
        } else {
          if (b instanceof Long) {
            tmp_0 = doubleCompareTo(a, b.toDouble_4());
          } else {
            {
              tmp_0 = primitiveCompareTo(a, b);
            }
          }
        }

        tmp = tmp_0;
        break;
      case 'string':
      case 'boolean':
        tmp = primitiveCompareTo(a, b);
        break;
      default:tmp = compareToDoNotIntrinsicify(a, b);
        break;
    }
    return tmp;
  }
  function doubleCompareTo(a, b) {
    var tmp;
    if (a < b) {
      tmp = -1;
    } else if (a > b) {
      tmp = 1;
    } else if (a === b) {
      var tmp_0;
      if (a !== 0) {
        tmp_0 = 0;
      } else {
        var tmp0_asDynamic_0 = 1;
        var ia = tmp0_asDynamic_0 / a;
        var tmp_1;
        var tmp1_asDynamic_0 = 1;
        if (ia === tmp1_asDynamic_0 / b) {
          tmp_1 = 0;
        } else {
          if (ia < 0) {
            tmp_1 = -1;
          } else {
            {
              tmp_1 = 1;
            }
          }
        }
        tmp_0 = tmp_1;
      }
      tmp = tmp_0;
    } else if (a !== a) {
      tmp = b !== b ? 0 : 1;
    } else {
      tmp = -1;
    }
    return tmp;
  }
  function primitiveCompareTo(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }
  function compareToDoNotIntrinsicify(a, b) {
    return a.compareTo_30(b);
  }
  function identityHashCode(obj) {
    return getObjectHashCode(obj);
  }
  function getObjectHashCode(obj) {
    if (!jsIn('kotlinHashCodeValue$', obj)) {
      var hash = jsBitwiseOr(Math.random() * 4.294967296E9, 0);
      var descriptor = new Object();
      descriptor.value = hash;
      descriptor.enumerable = false;
      Object.defineProperty(obj, 'kotlinHashCodeValue$', descriptor);
    }var tmp0_unsafeCast_0 = obj['kotlinHashCodeValue$'];
    return tmp0_unsafeCast_0;
  }
  function toString_1(o) {
    var tmp;
    if (o == null) {
      tmp = 'null';
    } else if (isArrayish(o)) {
      tmp = '[...]';
    } else {
      var tmp0_unsafeCast_0 = o.toString();
      tmp = tmp0_unsafeCast_0;
    }
    return tmp;
  }
  function equals_1(obj1, obj2) {
    if (obj1 == null) {
      return obj2 == null;
    }if (obj2 == null) {
      return false;
    }if (typeof obj1 === 'object' ? typeof obj1.equals === 'function' : false) {
      return obj1.equals(obj2);
    }if (obj1 !== obj1) {
      return obj2 !== obj2;
    }if (typeof obj1 === 'number' ? typeof obj2 === 'number' : false) {
      var tmp;
      if (obj1 === obj2) {
        var tmp_0;
        if (obj1 !== 0) {
          tmp_0 = true;
        } else {
          var tmp0_asDynamic_0 = 1;
          var tmp_1 = tmp0_asDynamic_0 / obj1;
          var tmp1_asDynamic_0 = 1;
          tmp_0 = tmp_1 === tmp1_asDynamic_0 / obj2;
        }
        tmp = tmp_0;
      } else {
        tmp = false;
      }
      return tmp;
    }return obj1 === obj2;
  }
  function hashCode(obj) {
    if (obj == null)
      return 0;
    var tmp0_subject = typeof obj;
    var tmp;
    switch (tmp0_subject) {
      case 'object':
        tmp = 'function' === typeof obj.hashCode ? obj.hashCode() : getObjectHashCode(obj);
        break;
      case 'function':
        tmp = getObjectHashCode(obj);
        break;
      case 'number':
        tmp = getNumberHashCode(obj);
        break;
      case 'boolean':
        var tmp_0;
        if (obj) {
          tmp_0 = 1;
        } else {
          {
            tmp_0 = 0;
          }
        }

        tmp = tmp_0;
        break;
      default:tmp = getStringHashCode(hashCode$outlinedJsCode$(obj));
        break;
    }
    return tmp;
  }
  function getStringHashCode(str) {
    var hash = 0;
    var length = str.length;
    var inductionVariable = 0;
    var last_1 = length - 1 | 0;
    if (inductionVariable <= last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var code = str.charCodeAt(i);
        hash = imul(hash, 31) + code | 0;
      }
       while (!(i === last_1));
    return hash;
  }
  function anyToString(o) {
    return Object.prototype.toString.call(o);
  }
  function boxIntrinsic(x) {
    var tmp0_error_0 = 'Should be lowered';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  }
  function unboxIntrinsic(x) {
    var tmp0_error_0 = 'Should be lowered';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  }
  function captureStack(instance, constructorFunction) {
    if (Error.captureStackTrace != null) {
      Error.captureStackTrace(instance, constructorFunction);
    } else {
      instance.stack = (new Error()).stack;
    }
  }
  function extendThrowable(this_, message, cause) {
    Error.call(this_);
    setPropertiesToThrowableInstance(this_, message, cause);
  }
  function setPropertiesToThrowableInstance(this_, message, cause) {
    if (!hasOwnPrototypeProperty(this_, 'message')) {
      var tmp;
      if (message == null) {
        var tmp_0;
        if (!(message === null)) {
          var tmp0_safe_receiver = cause;
          var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
          tmp_0 = tmp1_elvis_lhs == null ? undefined : tmp1_elvis_lhs;
        } else {
          tmp_0 = undefined;
        }
        tmp = tmp_0;
      } else {
        tmp = message;
      }
      this_.message = tmp;
    }if (!hasOwnPrototypeProperty(this_, 'cause')) {
      this_.cause = cause;
    }this_.name = Object.getPrototypeOf(this_).constructor.name;
  }
  function hasOwnPrototypeProperty(o, name) {
    var tmp0_unsafeCast_0 = Object.getPrototypeOf(o).hasOwnProperty(name);
    return tmp0_unsafeCast_0;
  }
  function hashCode$outlinedJsCode$(obj) {
    return String(obj);
  }
  function getContinuation() {
    throw Exception_init_$Create$('Implemented as intrinsic');
  }
  function ensureNotNull(v) {
    var tmp;
    if (v == null) {
      THROW_NPE();
    } else {
      tmp = v;
    }
    return tmp;
  }
  function THROW_NPE() {
    throw NullPointerException_init_$Create$();
  }
  function noWhenBranchMatchedException() {
    throw NoWhenBranchMatchedException_init_$Create$();
  }
  function THROW_CCE() {
    throw ClassCastException_init_$Create$();
  }
  function throwUninitializedPropertyAccessException(name) {
    throw UninitializedPropertyAccessException_init_$Create$('' + 'lateinit property ' + name + ' has not been initialized');
  }
  function lazy(initializer_0) {
    return new UnsafeLazyImpl(initializer_0);
  }
  function lazy_0(mode, initializer_0) {
    return new UnsafeLazyImpl(initializer_0);
  }
  function fillFrom(src, dst) {
    var srcLen = src.length;
    var dstLen = dst.length;
    var index = 0;
    var arr = dst;
    while (index < srcLen ? index < dstLen : false) {
      var tmp = index;
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      arr[tmp] = src[tmp0];
    }
    return dst;
  }
  function arrayCopyResize(source, newSize, defaultValue) {
    var tmp0_unsafeCast_0 = source.slice(0, newSize);
    var result = tmp0_unsafeCast_0;
    if (source.$type$ !== undefined) {
      result.$type$ = source.$type$;
    }var index = source.length;
    if (newSize > index) {
      result.length = newSize;
      while (index < newSize) {
        var tmp0 = index;
        index = tmp0 + 1 | 0;
        result[tmp0] = defaultValue;
      }
    }return result;
  }
  function Companion_16() {
    Companion_instance_15 = this;
    this._MIN_VALUE_9 = new Long(0, -2147483648);
    this._MAX_VALUE_9 = new Long(-1, 2147483647);
    this._SIZE_BYTES_9 = 8;
    this._SIZE_BITS_9 = 64;
  }
  Companion_16.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_15;
  function Companion_getInstance_15() {
    if (Companion_instance_15 == null)
      new Companion_16();
    return Companion_instance_15;
  }
  function Long(low, high) {
    Companion_getInstance_15();
    Number_0.call(this);
    this._low = low;
    this._high = high;
  }
  Long.prototype.compareTo_59 = function (other) {
    return compare(this, other);
  };
  Long.prototype.compareTo_30 = function (other) {
    return this.compareTo_59(other instanceof Long ? other : THROW_CCE());
  };
  Long.prototype.plus_59 = function (other) {
    return add(this, other);
  };
  Long.prototype.minus_30 = function (other) {
    return subtract(this, other);
  };
  Long.prototype.times_30 = function (other) {
    return multiply(this, other);
  };
  Long.prototype.div_27 = function (other) {
    return divide(this, other);
  };
  Long.prototype.rem_27 = function (other) {
    return modulo(this, other);
  };
  Long.prototype.inc_4 = function () {
    return this.plus_59(new Long(1, 0));
  };
  Long.prototype.dec_4 = function () {
    return this.minus_30(new Long(1, 0));
  };
  Long.prototype.unaryMinus_4 = function () {
    return this.inv_0().plus_59(new Long(1, 0));
  };
  Long.prototype.shl_0 = function (bitCount) {
    return shiftLeft(this, bitCount);
  };
  Long.prototype.shr_0 = function (bitCount) {
    return shiftRight(this, bitCount);
  };
  Long.prototype.ushr_0 = function (bitCount) {
    return shiftRightUnsigned(this, bitCount);
  };
  Long.prototype.and = function (other) {
    return new Long(this._low & other._low, this._high & other._high);
  };
  Long.prototype.or = function (other) {
    return new Long(this._low | other._low, this._high | other._high);
  };
  Long.prototype.xor = function (other) {
    return new Long(this._low ^ other._low, this._high ^ other._high);
  };
  Long.prototype.inv_0 = function () {
    return new Long(~this._low, ~this._high);
  };
  Long.prototype.toByte_5 = function () {
    return toByte(this._low);
  };
  Long.prototype.toShort_4 = function () {
    return toShort(this._low);
  };
  Long.prototype.toInt_5 = function () {
    return this._low;
  };
  Long.prototype.toDouble_4 = function () {
    return toNumber(this);
  };
  Long.prototype.valueOf = function () {
    return this.toDouble_4();
  };
  Long.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Long) {
      tmp = equalsLong(this, other);
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  Long.prototype.hashCode = function () {
    return hashCode_0(this);
  };
  Long.prototype.toString = function () {
    return toStringImpl(this, 10);
  };
  Long.$metadata$ = {
    simpleName: 'Long',
    kind: 'class',
    interfaces: [Comparable]
  };
  var ZERO;
  var ONE;
  var NEG_ONE;
  var MAX_VALUE;
  var MIN_VALUE;
  var TWO_PWR_24_;
  function compare(_this_, other) {
    if (equalsLong(_this_, other)) {
      return 0;
    }var thisNeg = isNegative(_this_);
    var otherNeg = isNegative(other);
    return (thisNeg ? !otherNeg : false) ? -1 : (!thisNeg ? otherNeg : false) ? 1 : isNegative(subtract(_this_, other)) ? -1 : 1;
  }
  function add(_this_, other) {
    var a48 = _this_._high >>> 16;
    var a32 = _this_._high & 65535;
    var a16 = _this_._low >>> 16;
    var a00 = _this_._low & 65535;
    var b48 = other._high >>> 16;
    var b32 = other._high & 65535;
    var b16 = other._low >>> 16;
    var b00 = other._low & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + (a00 + b00 | 0) | 0;
    c16 = c16 + (c00 >>> 16) | 0;
    c00 = c00 & 65535;
    c16 = c16 + (a16 + b16 | 0) | 0;
    c32 = c32 + (c16 >>> 16) | 0;
    c16 = c16 & 65535;
    c32 = c32 + (a32 + b32 | 0) | 0;
    c48 = c48 + (c32 >>> 16) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (a48 + b48 | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function subtract(_this_, other) {
    return add(_this_, other.unaryMinus_4());
  }
  function multiply(_this_, other) {
    if (isZero(_this_)) {
      return ZERO;
    } else if (isZero(other)) {
      return ZERO;
    }if (equalsLong(_this_, MIN_VALUE)) {
      return isOdd(other) ? MIN_VALUE : ZERO;
    } else if (equalsLong(other, MIN_VALUE)) {
      return isOdd(_this_) ? MIN_VALUE : ZERO;
    }if (isNegative(_this_)) {
      var tmp;
      if (isNegative(other)) {
        tmp = multiply(negate(_this_), negate(other));
      } else {
        tmp = negate(multiply(negate(_this_), other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(multiply(_this_, negate(other)));
    }if (lessThan(_this_, TWO_PWR_24_) ? lessThan(other, TWO_PWR_24_) : false) {
      return fromNumber(toNumber(_this_) * toNumber(other));
    }var a48 = _this_._high >>> 16;
    var a32 = _this_._high & 65535;
    var a16 = _this_._low >>> 16;
    var a00 = _this_._low & 65535;
    var b48 = other._high >>> 16;
    var b32 = other._high & 65535;
    var b16 = other._low >>> 16;
    var b00 = other._low & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + imul(a00, b00) | 0;
    c16 = c16 + (c00 >>> 16) | 0;
    c00 = c00 & 65535;
    c16 = c16 + imul(a16, b00) | 0;
    c32 = c32 + (c16 >>> 16) | 0;
    c16 = c16 & 65535;
    c16 = c16 + imul(a00, b16) | 0;
    c32 = c32 + (c16 >>> 16) | 0;
    c16 = c16 & 65535;
    c32 = c32 + imul(a32, b00) | 0;
    c48 = c48 + (c32 >>> 16) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a16, b16) | 0;
    c48 = c48 + (c32 >>> 16) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a00, b32) | 0;
    c48 = c48 + (c32 >>> 16) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (((imul(a48, b00) + imul(a32, b16) | 0) + imul(a16, b32) | 0) + imul(a00, b48) | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function divide(_this_, other) {
    if (isZero(other)) {
      throw Exception_init_$Create$('division by zero');
    } else if (isZero(_this_)) {
      return ZERO;
    }if (equalsLong(_this_, MIN_VALUE)) {
      if (equalsLong(other, ONE) ? true : equalsLong(other, NEG_ONE)) {
        return MIN_VALUE;
      } else if (equalsLong(other, MIN_VALUE)) {
        return ONE;
      } else {
        var halfThis = shiftRight(_this_, 1);
        var approx = shiftLeft(halfThis.div_27(other), 1);
        if (equalsLong(approx, ZERO)) {
          return isNegative(other) ? ONE : NEG_ONE;
        } else {
          var rem = subtract(_this_, multiply(other, approx));
          return add(approx, rem.div_27(other));
        }
      }
    } else if (equalsLong(other, MIN_VALUE)) {
      return ZERO;
    }if (isNegative(_this_)) {
      var tmp;
      if (isNegative(other)) {
        tmp = negate(_this_).div_27(negate(other));
      } else {
        tmp = negate(negate(_this_).div_27(other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(_this_.div_27(negate(other)));
    }var res = ZERO;
    var rem_0 = _this_;
    while (greaterThanOrEqual(rem_0, other)) {
      var approxDouble = toNumber(rem_0) / toNumber(other);
      var approx2 = function () {
        var $externalVarargReceiverTmp = Math;
        return $externalVarargReceiverTmp.max.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Float64Array([1.0, Math.floor(approxDouble)]))));
      }.call(this);
      var log2 = Math.ceil(Math.log(approx2) / Math.LN2);
      var delta_0 = log2 <= 48.0 ? 1.0 : Math.pow(2.0, log2 - 48);
      var approxRes = fromNumber(approx2);
      var approxRem = multiply(approxRes, other);
      while (isNegative(approxRem) ? true : greaterThan(approxRem, rem_0)) {
        approx2 = approx2 - delta_0;
        approxRes = fromNumber(approx2);
        approxRem = multiply(approxRes, other);
      }
      if (isZero(approxRes)) {
        approxRes = ONE;
      }res = add(res, approxRes);
      rem_0 = subtract(rem_0, approxRem);
    }
    return res;
  }
  function modulo(_this_, other) {
    return subtract(_this_, multiply(_this_.div_27(other), other));
  }
  function shiftLeft(_this_, numBits) {
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this_;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this_._low << numBits_0, _this_._high << numBits_0 | _this_._low >>> (32 - numBits_0 | 0));
      } else {
        return new Long(0, _this_._low << (numBits_0 - 32 | 0));
      }
    }
  }
  function shiftRight(_this_, numBits) {
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this_;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this_._low >>> numBits_0 | _this_._high << (32 - numBits_0 | 0), _this_._high >> numBits_0);
      } else {
        return new Long(_this_._high >> (numBits_0 - 32 | 0), _this_._high >= 0 ? 0 : -1);
      }
    }
  }
  function shiftRightUnsigned(_this_, numBits) {
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this_;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this_._low >>> numBits_0 | _this_._high << (32 - numBits_0 | 0), _this_._high >>> numBits_0);
      } else {
        var tmp;
        if (numBits_0 === 32) {
          tmp = new Long(_this_._high, 0);
        } else {
          tmp = new Long(_this_._high >>> (numBits_0 - 32 | 0), 0);
        }
        return tmp;
      }
    }
  }
  function toNumber(_this_) {
    return _this_._high * 4.294967296E9 + getLowBitsUnsigned(_this_);
  }
  function equalsLong(_this_, other) {
    return _this_._high === other._high ? _this_._low === other._low : false;
  }
  function hashCode_0(l) {
    return l._low ^ l._high;
  }
  function toStringImpl(_this_, radix) {
    if (radix < 2 ? true : 36 < radix) {
      throw Exception_init_$Create$('' + 'radix out of range: ' + radix);
    }if (isZero(_this_)) {
      return '0';
    }if (isNegative(_this_)) {
      if (equalsLong(_this_, MIN_VALUE)) {
        var radixLong = fromInt(radix);
        var div = _this_.div_27(radixLong);
        var rem = subtract(multiply(div, radixLong), _this_).toInt_5();
        var tmp = toStringImpl(div, radix);
        var tmp0_unsafeCast_0 = rem.toString(radix);
        return tmp + tmp0_unsafeCast_0;
      } else {
        return '' + '-' + toStringImpl(negate(_this_), radix);
      }
    }var radixToPower = fromNumber(Math.pow(radix, 6.0));
    var rem_0 = _this_;
    var result = '';
    while (true) {
      var remDiv = rem_0.div_27(radixToPower);
      var intval = subtract(rem_0, multiply(remDiv, radixToPower)).toInt_5();
      var tmp1_unsafeCast_0 = intval.toString(radix);
      var digits_0 = tmp1_unsafeCast_0;
      rem_0 = remDiv;
      if (isZero(rem_0)) {
        return digits_0 + result;
      } else {
        while (digits_0.length < 6) {
          digits_0 = '0' + digits_0;
        }
        result = digits_0 + result;
      }
    }
  }
  function fromInt(value) {
    return new Long(value, value < 0 ? -1 : 0);
  }
  function isNegative(_this_) {
    return _this_._high < 0;
  }
  function isZero(_this_) {
    return _this_._high === 0 ? _this_._low === 0 : false;
  }
  function isOdd(_this_) {
    return (_this_._low & 1) === 1;
  }
  function negate(_this_) {
    return _this_.unaryMinus_4();
  }
  function lessThan(_this_, other) {
    return compare(_this_, other) < 0;
  }
  function fromNumber(value) {
    if (isNaN_0(value)) {
      return ZERO;
    } else if (value <= -9.223372036854776E18) {
      return MIN_VALUE;
    } else if (value + 1 >= 9.223372036854776E18) {
      return MAX_VALUE;
    } else if (value < 0.0) {
      return negate(fromNumber(-value));
    } else {
      var twoPwr32 = 4.294967296E9;
      return new Long(jsBitwiseOr(value % twoPwr32, 0), jsBitwiseOr(value / twoPwr32, 0));
    }
  }
  function greaterThan(_this_, other) {
    return compare(_this_, other) > 0;
  }
  function greaterThanOrEqual(_this_, other) {
    return compare(_this_, other) >= 0;
  }
  function getLowBitsUnsigned(_this_) {
    return _this_._low >= 0 ? _this_._low : 4.294967296E9 + _this_._low;
  }
  function imul(a_local, b_local) {
    var lhs = jsBitwiseAnd(a_local, 4.29490176E9) * jsBitwiseAnd(b_local, 65535);
    var rhs = jsBitwiseAnd(a_local, 65535) * b_local;
    return jsBitwiseOr(lhs + rhs, 0);
  }
  function toByte(a) {
    var tmp0_unsafeCast_0 = toByte$outlinedJsCode$(a);
    return tmp0_unsafeCast_0;
  }
  function numberToInt(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a.toInt_5();
    } else {
      {
        tmp = doubleToInt(a);
      }
    }
    return tmp;
  }
  function doubleToInt(a) {
    return a > 2.147483647E9 ? 2147483647 : a < -2.147483648E9 ? -2147483648 : jsBitwiseOr(a, 0);
  }
  function numberToDouble(a) {
    var tmp0_unsafeCast_0 = numberToDouble$outlinedJsCode$_0(a);
    return tmp0_unsafeCast_0;
  }
  function toShort(a) {
    var tmp0_unsafeCast_0 = toShort$outlinedJsCode$_1(a);
    return tmp0_unsafeCast_0;
  }
  function numberToLong(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a;
    } else {
      {
        tmp = fromNumber(a);
      }
    }
    return tmp;
  }
  function numberToChar(a) {
    var tmp0_Char_0 = numberToInt(a) & 65535;
    var tmp;
    Companion_getInstance_13();
    var tmp0__get_code__0_1 = new Char(0);
    if (tmp0_Char_0 < tmp0__get_code__0_1.toInt_5()) {
      tmp = true;
    } else {
      {
        Companion_getInstance_13();
        var tmp1__get_code__0_2 = new Char(65535);
        tmp = tmp0_Char_0 > tmp1__get_code__0_2.toInt_5();
      }
    }
    if (tmp) {
      throw IllegalArgumentException_init_$Create$_0('' + 'Invalid Char code: ' + tmp0_Char_0);
    } else {
    }
    return new Char(_UShort___init__impl_(toShort(tmp0_Char_0)));
  }
  function toLong_0(a) {
    return fromInt(a);
  }
  function toByte$outlinedJsCode$(a) {
    return a << 24 >> 24;
  }
  function numberToDouble$outlinedJsCode$_0(a) {
    return +a;
  }
  function toShort$outlinedJsCode$_1(a) {
    return a << 16 >> 16;
  }
  function numberRangeToNumber(start, endInclusive) {
    return new IntRange(start, endInclusive);
  }
  var propertyRefClassMetadataCache;
  function getPropertyCallableRef(name, paramCount, type, getter, setter) {
    getter.get = getter;
    getter.set = setter;
    getter.callableName = name;
    var tmp0_unsafeCast_0 = getPropertyRefClass(getter, getKPropMetadata(paramCount, setter, type));
    return tmp0_unsafeCast_0;
  }
  function getPropertyRefClass(obj, metadata) {
    obj.$metadata$ = metadata;
    obj.constructor = obj;
    return obj;
  }
  function getKPropMetadata(paramCount, setter, type) {
    var mdata = propertyRefClassMetadataCache[paramCount][setter == null ? 0 : 1];
    if (mdata.interfaces.length == 0) {
      mdata.interfaces.push(type);
    }return mdata;
  }
  function propertyRefClassMetadataCache$init$() {
    var tmp = {kind: 'class', interfaces: []};
    var tmp0_arrayOf_0 = [tmp, {kind: 'class', interfaces: []}];
    var tmp_0 = tmp0_arrayOf_0;
    var tmp_1 = {kind: 'class', interfaces: []};
    var tmp1_arrayOf_0 = [tmp_1, {kind: 'class', interfaces: []}];
    var tmp_2 = tmp1_arrayOf_0;
    var tmp_3 = {kind: 'class', interfaces: []};
    var tmp2_arrayOf_0 = [tmp_3, {kind: 'class', interfaces: []}];
    var tmp3_arrayOf_0 = [tmp_0, tmp_2, tmp2_arrayOf_0];
    return tmp3_arrayOf_0;
  }
  function isArrayish(o) {
    var tmp;
    if (isJsArray(o)) {
      tmp = true;
    } else {
      var tmp0_unsafeCast_0 = ArrayBuffer.isView(o);
      tmp = tmp0_unsafeCast_0;
    }
    return tmp;
  }
  function isJsArray(obj) {
    var tmp0_unsafeCast_0 = Array.isArray(obj);
    return tmp0_unsafeCast_0;
  }
  function isInterface(obj, iface) {
    var tmp0_elvis_lhs = obj.constructor;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var ctor = tmp;
    return isInterfaceImpl(ctor, iface);
  }
  function isInterfaceImpl(ctor, iface) {
    if (ctor === iface)
      return true;
    var metadata = ctor.$metadata$;
    if (!(metadata == null)) {
      var interfaces = metadata.interfaces;
      var indexedObject = interfaces;
      var inductionVariable = 0;
      var last_1 = indexedObject.length;
      while (inductionVariable < last_1) {
        var i = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        if (isInterfaceImpl(i, iface)) {
          return true;
        }}
    }var superPrototype = !(ctor.prototype == null) ? Object.getPrototypeOf(ctor.prototype) : null;
    var superConstructor = superPrototype != null ? superPrototype.constructor : null;
    return !(superConstructor == null) ? isInterfaceImpl(superConstructor, iface) : false;
  }
  function isArray(obj) {
    var tmp;
    if (isJsArray(obj)) {
      tmp = !obj.$type$;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isObject(obj) {
    var objTypeOf = typeof obj;
    var tmp0_subject = objTypeOf;
    switch (tmp0_subject) {
      case 'string':
        return true;
      case 'number':
        return true;
      case 'boolean':
        return true;
      case 'function':
        return true;
      default:return jsInstanceOf(obj, Object);
    }
  }
  function isNumber(a) {
    var tmp;
    if (typeof a === 'number') {
      tmp = true;
    } else {
      tmp = a instanceof Long;
    }
    return tmp;
  }
  function isComparable(value) {
    var type = typeof value;
    return ((type === 'string' ? true : type === 'boolean') ? true : isNumber(value)) ? true : isInterface(value, _get_js_(getKClass_0(Comparable)));
  }
  function isCharSequence(value) {
    return typeof value === 'string' ? true : isInterface(value, _get_js_(getKClass_0(CharSequence)));
  }
  function isBooleanArray(a) {
    return isJsArray(a) ? a.$type$ === 'BooleanArray' : false;
  }
  function isByteArray(a) {
    return jsInstanceOf(a, Int8Array);
  }
  function isShortArray(a) {
    return jsInstanceOf(a, Int16Array);
  }
  function isCharArray(a) {
    return isJsArray(a) ? a.$type$ === 'CharArray' : false;
  }
  function isIntArray(a) {
    return jsInstanceOf(a, Int32Array);
  }
  function isFloatArray(a) {
    return jsInstanceOf(a, Float32Array);
  }
  function isLongArray(a) {
    return isJsArray(a) ? a.$type$ === 'LongArray' : false;
  }
  function isDoubleArray(a) {
    return jsInstanceOf(a, Float64Array);
  }
  function jsIsType(obj, jsClass_0) {
    if (jsClass_0 === Object) {
      return isObject(obj);
    }if ((obj == null ? true : jsClass_0 == null) ? true : !(typeof obj === 'object') ? !(typeof obj === 'function') : false) {
      return false;
    }if (typeof jsClass_0 === 'function' ? jsInstanceOf(obj, jsClass_0) : false) {
      return true;
    }var proto = jsGetPrototypeOf(jsClass_0);
    var tmp0_safe_receiver = proto;
    var constructor = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.constructor;
    if (constructor != null ? jsIn('$metadata$', constructor) : false) {
      var metadata = constructor.$metadata$;
      if (metadata.kind === 'object') {
        return obj === jsClass_0;
      }}var klassMetadata = jsClass_0.$metadata$;
    if (klassMetadata == null) {
      return jsInstanceOf(obj, jsClass_0);
    }if (klassMetadata.kind === 'interface' ? obj.constructor != null : false) {
      return isInterfaceImpl(obj.constructor, jsClass_0);
    }return false;
  }
  function jsGetPrototypeOf(jsClass_0) {
    return Object.getPrototypeOf(jsClass_0);
  }
  function copyOf(_this_, newSize) {
    var tmp0_require_0 = newSize >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var tmp1_withType_0 = 'CharArray';
    var tmp2_withType_0 = fillFrom(_this_, charArray(newSize));
    tmp2_withType_0.$type$ = tmp1_withType_0;
    return tmp2_withType_0;
  }
  function copyOf_0(_this_, newSize) {
    var tmp0_require_0 = newSize >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }return fillFrom(_this_, new Float64Array(newSize));
  }
  function copyOf_1(_this_, newSize) {
    var tmp0_require_0 = newSize >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }return fillFrom(_this_, new Float32Array(newSize));
  }
  function copyOf_2(_this_, newSize) {
    var tmp0_require_0 = newSize >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var tmp1_withType_0 = 'LongArray';
    var tmp2_withType_0 = arrayCopyResize(_this_, newSize, new Long(0, 0));
    tmp2_withType_0.$type$ = tmp1_withType_0;
    return tmp2_withType_0;
  }
  function copyOf_3(_this_, newSize) {
    var tmp0_require_0 = newSize >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }return fillFrom(_this_, new Int32Array(newSize));
  }
  function copyOf_4(_this_, newSize) {
    var tmp0_require_0 = newSize >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }return fillFrom(_this_, new Int16Array(newSize));
  }
  function copyOf_5(_this_, newSize) {
    var tmp0_require_0 = newSize >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }return fillFrom(_this_, new Int8Array(newSize));
  }
  function copyOf_6(_this_, newSize) {
    var tmp0_require_0 = newSize >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var tmp1_withType_0 = 'BooleanArray';
    var tmp2_withType_0 = arrayCopyResize(_this_, newSize, false);
    tmp2_withType_0.$type$ = tmp1_withType_0;
    return tmp2_withType_0;
  }
  function contentEquals(_this_, other) {
    return contentEqualsInternal(_this_, other);
  }
  function contentHashCode(_this_) {
    return contentHashCodeInternal(_this_);
  }
  function asList(_this_) {
    return new ArrayList(_this_);
  }
  function sortWith_0(_this_, comparator) {
    if (_this_.length > 1)
      sortArrayWith(_this_, comparator);
  }
  function toTypedArray(_this_) {
    return [].slice.call(_this_);
  }
  function fill(_this_, element, fromIndex, toIndex) {
    Companion_getInstance().checkRangeIndexes(fromIndex, toIndex, _this_.length);
    _this_.fill(element, fromIndex, toIndex);
  }
  function fill$default(_this_, element, fromIndex, toIndex, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      fromIndex = 0;
    if (!(($mask0 & 4) === 0))
      toIndex = _this_.length;
    return fill(_this_, element, fromIndex, toIndex);
  }
  function reverse(_this_) {
    var midPoint = (_this_._get_size__48() / 2 | 0) - 1 | 0;
    if (midPoint < 0)
      return Unit_getInstance();
    var reverseIndex = _get_lastIndex__0(_this_);
    var inductionVariable = 0;
    if (inductionVariable <= midPoint)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = _this_.get_77(index);
        _this_.set_6(index, _this_.get_77(reverseIndex));
        Unit_getInstance();
        _this_.set_6(reverseIndex, tmp);
        Unit_getInstance();
        var tmp1 = reverseIndex;
        reverseIndex = tmp1 - 1 | 0;
        Unit_getInstance();
      }
       while (!(index === midPoint));
  }
  function isWhitespaceImpl(_this_) {
    var ch = _this_.toInt_5();
    return (((9 <= ch ? ch <= 13 : false) ? true : 28 <= ch ? ch <= 32 : false) ? true : ch === 160) ? true : ch > 4096 ? (((((ch === 5760 ? true : 8192 <= ch ? ch <= 8202 : false) ? true : ch === 8232) ? true : ch === 8233) ? true : ch === 8239) ? true : ch === 8287) ? true : ch === 12288 : false;
  }
  function releaseIntercepted($this) {
    var intercepted_0 = $this._intercepted_;
    if (!(intercepted_0 == null) ? !(intercepted_0 === $this) : false) {
      ensureNotNull($this._get_context__113().get_63(Key_getInstance())).releaseInterceptedContinuation_9(intercepted_0);
    }$this._intercepted_ = CompletedContinuation_getInstance();
  }
  function CoroutineImpl_0(resultContinuation) {
    this._resultContinuation = resultContinuation;
    this._state_0 = 0;
    this._exceptionState = 0;
    this._result = null;
    this._exception_0 = null;
    this._finallyPath = null;
    var tmp = this;
    var tmp0_safe_receiver = this._resultContinuation;
    tmp.__context = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_context__113();
    this._intercepted_ = null;
  }
  CoroutineImpl_0.prototype._get_exception_ = function () {
    return this._exception_0;
  };
  CoroutineImpl_0.prototype._get_context__113 = function () {
    return ensureNotNull(this.__context);
  };
  CoroutineImpl_0.prototype.intercepted_94 = function () {
    var tmp2_elvis_lhs = this._intercepted_;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      var tmp0_safe_receiver = this._get_context__113().get_63(Key_getInstance());
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.interceptContinuation_9(this);
      var tmp0_also_0 = tmp1_elvis_lhs == null ? this : tmp1_elvis_lhs;
      this._intercepted_ = tmp0_also_0;
      tmp = tmp0_also_0;
    } else {
      tmp = tmp2_elvis_lhs;
    }
    return tmp;
  };
  CoroutineImpl_0.prototype.resumeWith_113 = function (result) {
    var current = this;
    var tmp;
    if (_Result___get_isFailure__impl_(result)) {
      tmp = null;
    } else {
      var tmp_0 = _Result___get_value__impl_(result);
      tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
    }
    var currentResult = tmp;
    var currentException = Result__exceptionOrNull_impl(result);
    while (true) {
      var tmp0_with_0 = current;
      if (currentException == null) {
        tmp0_with_0._result = currentResult;
      } else {
        tmp0_with_0._state_0 = tmp0_with_0._exceptionState;
        tmp0_with_0._exception_0 = currentException;
      }
      try {
        var outcome_2 = tmp0_with_0.doResume_95();
        if (outcome_2 === _get_COROUTINE_SUSPENDED_())
          return Unit_getInstance();
        currentResult = outcome_2;
        currentException = null;
      } catch ($p) {
        currentResult = null;
        currentException = $p;
      }
      releaseIntercepted(tmp0_with_0);
      var completion_4 = ensureNotNull(tmp0_with_0._resultContinuation);
      if (completion_4 instanceof CoroutineImpl_0) {
        current = completion_4;
      } else {
        {
          if (!(currentException == null)) {
            var tmp0_resumeWithException_0_5 = ensureNotNull(currentException);
            var tmp0_failure_0_1_6 = Companion_getInstance_3();
            completion_4.resumeWith_46(_Result___init__impl_(createFailure(tmp0_resumeWithException_0_5)));
          } else {
            var tmp1_resume_0_7 = currentResult;
            var tmp0_success_0_1_8 = Companion_getInstance_3();
            completion_4.resumeWith_46(_Result___init__impl_(tmp1_resume_0_7));
          }
          return Unit_getInstance();
        }
      }
    }
  };
  CoroutineImpl_0.prototype.resumeWith_46 = function (result) {
    return this.resumeWith_113(result);
  };
  CoroutineImpl_0.$metadata$ = {
    simpleName: 'CoroutineImpl',
    kind: 'class',
    interfaces: [Continuation]
  };
  function CompletedContinuation() {
    CompletedContinuation_instance = this;
  }
  CompletedContinuation.prototype._get_context__113 = function () {
    var tmp0_error_0 = 'This continuation is already complete';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  };
  CompletedContinuation.prototype.resumeWith_113 = function (result) {
    var tmp0_error_0 = 'This continuation is already complete';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  };
  CompletedContinuation.prototype.resumeWith_46 = function (result) {
    return this.resumeWith_113(result);
  };
  CompletedContinuation.prototype.toString = function () {
    return 'This continuation is already complete';
  };
  CompletedContinuation.$metadata$ = {
    simpleName: 'CompletedContinuation',
    kind: 'object',
    interfaces: [Continuation]
  };
  var CompletedContinuation_instance;
  function CompletedContinuation_getInstance() {
    if (CompletedContinuation_instance == null)
      new CompletedContinuation();
    return CompletedContinuation_instance;
  }
  function intercepted(_this_) {
    var tmp0_safe_receiver = _this_ instanceof CoroutineImpl_0 ? _this_ : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.intercepted_94();
    return tmp1_elvis_lhs == null ? _this_ : tmp1_elvis_lhs;
  }
  function createCoroutineUnintercepted(_this_, receiver, completion) {
    return new _no_name_provided__1_2(_this_, receiver, completion);
  }
  function _no_name_provided__1_2($this_createCoroutineUnintercepted, $receiver, $completion) {
    this._$this_createCoroutineUnintercepted = $this_createCoroutineUnintercepted;
    this._$receiver = $receiver;
    this._$completion = $completion;
    CoroutineImpl_0.call(this, isInterface($completion, Continuation) ? $completion : THROW_CCE());
  }
  _no_name_provided__1_2.prototype.doResume_2 = function () {
    if (this._get_exception_() != null)
      throw this._get_exception_();
    return this._$this_createCoroutineUnintercepted(this._$receiver, this._$completion);
  };
  _no_name_provided__1_2.prototype.doResume_95 = function () {
    return this.doResume_2();
  };
  _no_name_provided__1_2.$metadata$ = {
    simpleName: '<no name provided>_1',
    kind: 'class',
    interfaces: []
  };
  function Exception_init_$Init$($this) {
    extendThrowable($this, void 1, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Init$_0(message, $this) {
    extendThrowable($this, message, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Create$(message) {
    var tmp = Exception_init_$Init$_0(message, Object.create(Exception.prototype));
    captureStack(tmp, Exception_init_$Create$);
    return tmp;
  }
  function Exception_init_$Init$_1(message, cause, $this) {
    extendThrowable($this, message, cause);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Init$_2(cause, $this) {
    extendThrowable($this, void 1, cause);
    Exception.call($this);
    return $this;
  }
  function Exception() {
    captureStack(this, Exception);
  }
  Exception.$metadata$ = {
    simpleName: 'Exception',
    kind: 'class',
    interfaces: []
  };
  function Error_init_$Init$(message, $this) {
    extendThrowable($this, message, void 1);
    Error_0.call($this);
    return $this;
  }
  function Error_init_$Create$(message) {
    var tmp = Error_init_$Init$(message, Object.create(Error_0.prototype));
    captureStack(tmp, Error_init_$Create$);
    return tmp;
  }
  function Error_init_$Init$_0(message, cause, $this) {
    extendThrowable($this, message, cause);
    Error_0.call($this);
    return $this;
  }
  function Error_init_$Create$_0(message, cause) {
    var tmp = Error_init_$Init$_0(message, cause, Object.create(Error_0.prototype));
    captureStack(tmp, Error_init_$Create$_0);
    return tmp;
  }
  function Error_0() {
    captureStack(this, Error_0);
  }
  Error_0.$metadata$ = {
    simpleName: 'Error',
    kind: 'class',
    interfaces: []
  };
  function IllegalArgumentException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$() {
    var tmp = IllegalArgumentException_init_$Init$(Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$_0(message) {
    var tmp = IllegalArgumentException_init_$Init$_0(message, Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$_0);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_1(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$_1(message, cause) {
    var tmp = IllegalArgumentException_init_$Init$_1(message, cause, Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$_1);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_2(cause, $this) {
    RuntimeException_init_$Init$_2(cause, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException() {
    captureStack(this, IllegalArgumentException);
  }
  IllegalArgumentException.$metadata$ = {
    simpleName: 'IllegalArgumentException',
    kind: 'class',
    interfaces: []
  };
  function RuntimeException_init_$Init$($this) {
    Exception_init_$Init$($this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_0(message, $this) {
    Exception_init_$Init$_0(message, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_1(message, cause, $this) {
    Exception_init_$Init$_1(message, cause, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Create$(message, cause) {
    var tmp = RuntimeException_init_$Init$_1(message, cause, Object.create(RuntimeException.prototype));
    captureStack(tmp, RuntimeException_init_$Create$);
    return tmp;
  }
  function RuntimeException_init_$Init$_2(cause, $this) {
    Exception_init_$Init$_2(cause, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException() {
    captureStack(this, RuntimeException);
  }
  RuntimeException.$metadata$ = {
    simpleName: 'RuntimeException',
    kind: 'class',
    interfaces: []
  };
  function NoSuchElementException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$() {
    var tmp = NoSuchElementException_init_$Init$(Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$);
    return tmp;
  }
  function NoSuchElementException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$_0(message) {
    var tmp = NoSuchElementException_init_$Init$_0(message, Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$_0);
    return tmp;
  }
  function NoSuchElementException() {
    captureStack(this, NoSuchElementException);
  }
  NoSuchElementException.$metadata$ = {
    simpleName: 'NoSuchElementException',
    kind: 'class',
    interfaces: []
  };
  function IllegalStateException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$(message) {
    var tmp = IllegalStateException_init_$Init$_0(message, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$);
    return tmp;
  }
  function IllegalStateException_init_$Init$_1(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$_0(message, cause) {
    var tmp = IllegalStateException_init_$Init$_1(message, cause, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$_0);
    return tmp;
  }
  function IllegalStateException() {
    captureStack(this, IllegalStateException);
  }
  IllegalStateException.$metadata$ = {
    simpleName: 'IllegalStateException',
    kind: 'class',
    interfaces: []
  };
  function UnsupportedOperationException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$() {
    var tmp = UnsupportedOperationException_init_$Init$(Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$);
    return tmp;
  }
  function UnsupportedOperationException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$_0(message) {
    var tmp = UnsupportedOperationException_init_$Init$_0(message, Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$_0);
    return tmp;
  }
  function UnsupportedOperationException() {
    captureStack(this, UnsupportedOperationException);
  }
  UnsupportedOperationException.$metadata$ = {
    simpleName: 'UnsupportedOperationException',
    kind: 'class',
    interfaces: []
  };
  function IndexOutOfBoundsException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IndexOutOfBoundsException.call($this);
    return $this;
  }
  function IndexOutOfBoundsException_init_$Create$() {
    var tmp = IndexOutOfBoundsException_init_$Init$(Object.create(IndexOutOfBoundsException.prototype));
    captureStack(tmp, IndexOutOfBoundsException_init_$Create$);
    return tmp;
  }
  function IndexOutOfBoundsException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IndexOutOfBoundsException.call($this);
    return $this;
  }
  function IndexOutOfBoundsException_init_$Create$_0(message) {
    var tmp = IndexOutOfBoundsException_init_$Init$_0(message, Object.create(IndexOutOfBoundsException.prototype));
    captureStack(tmp, IndexOutOfBoundsException_init_$Create$_0);
    return tmp;
  }
  function IndexOutOfBoundsException() {
    captureStack(this, IndexOutOfBoundsException);
  }
  IndexOutOfBoundsException.$metadata$ = {
    simpleName: 'IndexOutOfBoundsException',
    kind: 'class',
    interfaces: []
  };
  function ArithmeticException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    ArithmeticException.call($this);
    return $this;
  }
  function ArithmeticException_init_$Create$(message) {
    var tmp = ArithmeticException_init_$Init$(message, Object.create(ArithmeticException.prototype));
    captureStack(tmp, ArithmeticException_init_$Create$);
    return tmp;
  }
  function ArithmeticException() {
    captureStack(this, ArithmeticException);
  }
  ArithmeticException.$metadata$ = {
    simpleName: 'ArithmeticException',
    kind: 'class',
    interfaces: []
  };
  function NumberFormatException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$_0(message, $this);
    NumberFormatException.call($this);
    return $this;
  }
  function NumberFormatException_init_$Create$(message) {
    var tmp = NumberFormatException_init_$Init$(message, Object.create(NumberFormatException.prototype));
    captureStack(tmp, NumberFormatException_init_$Create$);
    return tmp;
  }
  function NumberFormatException() {
    captureStack(this, NumberFormatException);
  }
  NumberFormatException.$metadata$ = {
    simpleName: 'NumberFormatException',
    kind: 'class',
    interfaces: []
  };
  function NullPointerException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NullPointerException.call($this);
    return $this;
  }
  function NullPointerException_init_$Create$() {
    var tmp = NullPointerException_init_$Init$(Object.create(NullPointerException.prototype));
    captureStack(tmp, NullPointerException_init_$Create$);
    return tmp;
  }
  function NullPointerException() {
    captureStack(this, NullPointerException);
  }
  NullPointerException.$metadata$ = {
    simpleName: 'NullPointerException',
    kind: 'class',
    interfaces: []
  };
  function NoWhenBranchMatchedException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoWhenBranchMatchedException.call($this);
    return $this;
  }
  function NoWhenBranchMatchedException_init_$Create$() {
    var tmp = NoWhenBranchMatchedException_init_$Init$(Object.create(NoWhenBranchMatchedException.prototype));
    captureStack(tmp, NoWhenBranchMatchedException_init_$Create$);
    return tmp;
  }
  function NoWhenBranchMatchedException() {
    captureStack(this, NoWhenBranchMatchedException);
  }
  NoWhenBranchMatchedException.$metadata$ = {
    simpleName: 'NoWhenBranchMatchedException',
    kind: 'class',
    interfaces: []
  };
  function ClassCastException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    ClassCastException.call($this);
    return $this;
  }
  function ClassCastException_init_$Create$() {
    var tmp = ClassCastException_init_$Init$(Object.create(ClassCastException.prototype));
    captureStack(tmp, ClassCastException_init_$Create$);
    return tmp;
  }
  function ClassCastException() {
    captureStack(this, ClassCastException);
  }
  ClassCastException.$metadata$ = {
    simpleName: 'ClassCastException',
    kind: 'class',
    interfaces: []
  };
  function UninitializedPropertyAccessException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UninitializedPropertyAccessException.call($this);
    return $this;
  }
  function UninitializedPropertyAccessException_init_$Create$(message) {
    var tmp = UninitializedPropertyAccessException_init_$Init$(message, Object.create(UninitializedPropertyAccessException.prototype));
    captureStack(tmp, UninitializedPropertyAccessException_init_$Create$);
    return tmp;
  }
  function UninitializedPropertyAccessException() {
    captureStack(this, UninitializedPropertyAccessException);
  }
  UninitializedPropertyAccessException.$metadata$ = {
    simpleName: 'UninitializedPropertyAccessException',
    kind: 'class',
    interfaces: []
  };
  function jsIn(lhs_hack, rhs_hack) {
    var tmp0_unsafeCast_0 = jsIn$outlinedJsCode$(lhs_hack, rhs_hack);
    return tmp0_unsafeCast_0;
  }
  function jsBitwiseOr(lhs_hack, rhs_hack) {
    var tmp0_unsafeCast_0 = jsBitwiseOr$outlinedJsCode$_0(lhs_hack, rhs_hack);
    return tmp0_unsafeCast_0;
  }
  function jsTypeOf(value_hack) {
    var tmp0_unsafeCast_0 = jsTypeOf$outlinedJsCode$_1(value_hack);
    return tmp0_unsafeCast_0;
  }
  function jsDeleteProperty(obj_hack, property_hack) {
    jsDeleteProperty$outlinedJsCode$_2(obj_hack, property_hack);
  }
  function jsInstanceOf(obj_hack, jsClass_hack) {
    var tmp0_unsafeCast_0 = jsInstanceOf$outlinedJsCode$_3(obj_hack, jsClass_hack);
    return tmp0_unsafeCast_0;
  }
  function jsBitwiseAnd(lhs_hack, rhs_hack) {
    var tmp0_unsafeCast_0 = jsBitwiseAnd$outlinedJsCode$_4(lhs_hack, rhs_hack);
    return tmp0_unsafeCast_0;
  }
  function jsIn$outlinedJsCode$(lhs_hack, rhs_hack) {
    return lhs_hack in rhs_hack;
  }
  function jsBitwiseOr$outlinedJsCode$_0(lhs_hack, rhs_hack) {
    return lhs_hack | rhs_hack;
  }
  function jsTypeOf$outlinedJsCode$_1(value_hack) {
    return typeof value_hack;
  }
  function jsDeleteProperty$outlinedJsCode$_2(obj_hack, property_hack) {
    return delete obj_hack[property_hack];
  }
  function jsInstanceOf$outlinedJsCode$_3(obj_hack, jsClass_hack) {
    return obj_hack instanceof jsClass_hack;
  }
  function jsBitwiseAnd$outlinedJsCode$_4(lhs_hack, rhs_hack) {
    return lhs_hack & rhs_hack;
  }
  function findAssociatedObject(_this_, annotationClass) {
    var tmp;
    var tmp_0;
    if (_this_ instanceof KClassImpl) {
      tmp_0 = annotationClass instanceof KClassImpl;
    } else {
      {
        tmp_0 = false;
      }
    }
    if (tmp_0) {
      var tmp0_asDynamic_0 = annotationClass._get_jClass__2();
      var tmp0_safe_receiver = tmp0_asDynamic_0.$metadata$;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.associatedObjectKey;
      var tmp_1;
      if (tmp1_safe_receiver == null) {
        tmp_1 = null;
      } else {
        tmp_1 = tmp1_safe_receiver;
      }
      var tmp2_elvis_lhs = tmp_1;
      var tmp_2;
      if (tmp2_elvis_lhs == null) {
        return null;
      } else {
        tmp_2 = tmp2_elvis_lhs;
      }
      var key = tmp_2;
      var tmp1_asDynamic_0 = _this_._get_jClass__2();
      var tmp3_safe_receiver = tmp1_asDynamic_0.$metadata$;
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.associatedObjects;
      var tmp_3;
      if (tmp4_elvis_lhs == null) {
        return null;
      } else {
        tmp_3 = tmp4_elvis_lhs;
      }
      var map_0 = tmp_3;
      var tmp5_elvis_lhs = map_0[key];
      var tmp_4;
      if (tmp5_elvis_lhs == null) {
        return null;
      } else {
        tmp_4 = tmp5_elvis_lhs;
      }
      var factory = tmp_4;
      return factory();
    } else {
      {
        tmp = null;
      }
    }
    return tmp;
  }
  function toString_2(_this_, radix) {
    return toStringImpl(_this_, checkRadix(radix));
  }
  function AtomicArray(size_0) {
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = size_0;
    var tmp_2 = fillArrayVal(Array(tmp_1), null);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      tmp_2[tmp_3] = atomic(null);
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp._array_0 = tmp_2;
  }
  AtomicArray.prototype._get_size__48 = function () {
    return this._array_0.length;
  };
  AtomicArray.prototype.atomicfu$get = function (index) {
    return this._array_0[index];
  };
  AtomicArray.$metadata$ = {
    simpleName: 'AtomicArray',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(AtomicArray.prototype, 'atomicfu$size', {
    configurable: true,
    get: AtomicArray.prototype._get_size__48
  });
  function atomicArrayOfNulls(size_0) {
    return new AtomicArray(size_0);
  }
  function None() {
    None_instance = this;
    TraceBase.call(this);
  }
  None.$metadata$ = {
    simpleName: 'None',
    kind: 'object',
    interfaces: []
  };
  var None_instance;
  function None_getInstance() {
    if (None_instance == null)
      new None();
    return None_instance;
  }
  function TraceBase() {
  }
  TraceBase.prototype.atomicfu$Trace$append$1 = function (event) {
  };
  TraceBase.prototype.atomicfu$Trace$append$2 = function (event1, event2) {
  };
  TraceBase.prototype.atomicfu$Trace$append$3 = function (event1, event2, event3) {
  };
  TraceBase.prototype.atomicfu$Trace$append$4 = function (event1, event2, event3, event4) {
  };
  TraceBase.$metadata$ = {
    simpleName: 'TraceBase',
    kind: 'class',
    interfaces: []
  };
  function AtomicRef(value) {
    this._value_2 = value;
  }
  AtomicRef.prototype._set_value__9 = function (_set___) {
    this._value_2 = _set___;
  };
  AtomicRef.prototype._get_value__27 = function () {
    return this._value_2;
  };
  AtomicRef.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this._value_2 === expect))
      return false;
    this._value_2 = update;
    return true;
  };
  AtomicRef.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this._value_2;
    this._value_2 = value;
    return oldValue;
  };
  AtomicRef.prototype.toString = function () {
    return toString_0(this._value_2);
  };
  AtomicRef.$metadata$ = {
    simpleName: 'AtomicRef',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(AtomicRef.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicRef.prototype._get_value__27,
    set: AtomicRef.prototype._set_value__9
  });
  function atomic(initial) {
    return atomic_3(initial, None_getInstance());
  }
  function AtomicBoolean(value) {
    this._value_3 = value;
  }
  AtomicBoolean.prototype._set_value__0 = function (_set___) {
    this._value_3 = _set___;
  };
  AtomicBoolean.prototype._get_value__27 = function () {
    return this._value_3;
  };
  AtomicBoolean.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this._value_3 === expect))
      return false;
    this._value_3 = update;
    return true;
  };
  AtomicBoolean.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this._value_3;
    this._value_3 = value;
    return oldValue;
  };
  AtomicBoolean.prototype.toString = function () {
    return this._value_3.toString();
  };
  AtomicBoolean.$metadata$ = {
    simpleName: 'AtomicBoolean',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(AtomicBoolean.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicBoolean.prototype._get_value__27,
    set: AtomicBoolean.prototype._set_value__0
  });
  function atomic_0(initial) {
    return atomic_5(initial, None_getInstance());
  }
  function AtomicInt(value) {
    this._value_4 = value;
  }
  AtomicInt.prototype._set_value__1 = function (_set___) {
    this._value_4 = _set___;
  };
  AtomicInt.prototype._get_value__27 = function () {
    return this._value_4;
  };
  AtomicInt.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this._value_4 === expect))
      return false;
    this._value_4 = update;
    return true;
  };
  AtomicInt.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this._value_4;
    this._value_4 = value;
    return oldValue;
  };
  AtomicInt.prototype.atomicfu$getAndIncrement = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this._value_4;
    tmp0_this._value_4 = tmp1 + 1 | 0;
    return tmp1;
  };
  AtomicInt.prototype.atomicfu$getAndDecrement = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this._value_4;
    tmp0_this._value_4 = tmp1 - 1 | 0;
    return tmp1;
  };
  AtomicInt.prototype.atomicfu$getAndAdd = function (delta_0) {
    var oldValue = this._value_4;
    var tmp0_this = this;
    tmp0_this._value_4 = tmp0_this._value_4 + delta_0 | 0;
    return oldValue;
  };
  AtomicInt.prototype.atomicfu$addAndGet = function (delta_0) {
    var tmp0_this = this;
    tmp0_this._value_4 = tmp0_this._value_4 + delta_0 | 0;
    return this._value_4;
  };
  AtomicInt.prototype.atomicfu$incrementAndGet = function () {
    var tmp0_this = this;
    tmp0_this._value_4 = tmp0_this._value_4 + 1 | 0;
    return tmp0_this._value_4;
  };
  AtomicInt.prototype.atomicfu$decrementAndGet = function () {
    var tmp0_this = this;
    tmp0_this._value_4 = tmp0_this._value_4 - 1 | 0;
    return tmp0_this._value_4;
  };
  AtomicInt.prototype.toString = function () {
    return this._value_4.toString();
  };
  AtomicInt.$metadata$ = {
    simpleName: 'AtomicInt',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(AtomicInt.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicInt.prototype._get_value__27,
    set: AtomicInt.prototype._set_value__1
  });
  function atomic_1(initial) {
    return atomic_7(initial, None_getInstance());
  }
  function AtomicLong(value) {
    this._value_5 = value;
  }
  AtomicLong.prototype._set_value__2 = function (_set___) {
    this._value_5 = _set___;
  };
  AtomicLong.prototype._get_value__27 = function () {
    return this._value_5;
  };
  AtomicLong.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!this._value_5.equals(expect))
      return false;
    this._value_5 = update;
    return true;
  };
  AtomicLong.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this._value_5;
    this._value_5 = value;
    return oldValue;
  };
  AtomicLong.prototype.atomicfu$getAndIncrement$long = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this._value_5;
    tmp0_this._value_5 = tmp1.inc_4();
    return tmp1;
  };
  AtomicLong.prototype.atomicfu$getAndDecrement$long = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this._value_5;
    tmp0_this._value_5 = tmp1.dec_4();
    return tmp1;
  };
  AtomicLong.prototype.atomicfu$getAndAdd$long = function (delta_0) {
    var oldValue = this._value_5;
    var tmp0_this = this;
    tmp0_this._value_5 = tmp0_this._value_5.plus_59(delta_0);
    return oldValue;
  };
  AtomicLong.prototype.atomicfu$addAndGet$long = function (delta_0) {
    var tmp0_this = this;
    tmp0_this._value_5 = tmp0_this._value_5.plus_59(delta_0);
    return this._value_5;
  };
  AtomicLong.prototype.atomicfu$incrementAndGet$long = function () {
    var tmp0_this = this;
    tmp0_this._value_5 = tmp0_this._value_5.inc_4();
    return tmp0_this._value_5;
  };
  AtomicLong.prototype.atomicfu$decrementAndGet$long = function () {
    var tmp0_this = this;
    tmp0_this._value_5 = tmp0_this._value_5.dec_4();
    return tmp0_this._value_5;
  };
  AtomicLong.prototype.toString = function () {
    return this._value_5.toString();
  };
  AtomicLong.$metadata$ = {
    simpleName: 'AtomicLong',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(AtomicLong.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicLong.prototype._get_value__27,
    set: AtomicLong.prototype._set_value__2
  });
  function atomic_2(initial, trace) {
    return atomic_3(initial, trace === void 1 ? None_getInstance() : trace);
  }
  function atomic_3(initial, trace) {
    return new AtomicRef(initial);
  }
  function atomic_4(initial, trace) {
    return atomic_5(initial, trace === void 1 ? None_getInstance() : trace);
  }
  function atomic_5(initial, trace) {
    return new AtomicBoolean(initial);
  }
  function atomic_6(initial, trace) {
    return atomic_7(initial, trace === void 1 ? None_getInstance() : trace);
  }
  function atomic_7(initial, trace) {
    return new AtomicInt(initial);
  }
  function atomic_8(initial, trace) {
    return atomic_9(initial, trace === void 1 ? None_getInstance() : trace);
  }
  function atomic_9(initial, trace) {
    return new AtomicLong(initial);
  }
  function AbstractCoroutine(parentContext, active) {
    JobSupport.call(this, active);
    this._parentContext = parentContext;
    this._context = this._parentContext.plus_31(this);
  }
  AbstractCoroutine.prototype._get_context__113 = function () {
    return this._context;
  };
  AbstractCoroutine.prototype._get_coroutineContext__27 = function () {
    return this._context;
  };
  AbstractCoroutine.prototype._get_isActive__26 = function () {
    return JobSupport.prototype._get_isActive__26.call(this);
  };
  AbstractCoroutine.prototype.initParentJob_5 = function () {
    this.initParentJobInternal_9(this._parentContext.get_63(Key_getInstance_3()));
  };
  AbstractCoroutine.prototype.onStart_5 = function () {
  };
  AbstractCoroutine.prototype.onStartInternal_9 = function () {
    this.onStart_5();
  };
  AbstractCoroutine.prototype.onCompleted_5 = function (value) {
  };
  AbstractCoroutine.prototype.onCancelled_5 = function (cause, handled) {
  };
  AbstractCoroutine.prototype.cancellationExceptionMessage_9 = function () {
    return '' + _get_classSimpleName_(this) + ' was cancelled';
  };
  AbstractCoroutine.prototype.onCompletionInternal_9 = function (state) {
    if (state instanceof CompletedExceptionally)
      this.onCancelled_5(state._cause, state._get_handled__0());
    else {
      {
        this.onCompleted_5((state == null ? true : isObject(state)) ? state : THROW_CCE());
      }
    }
  };
  AbstractCoroutine.prototype.resumeWith_46 = function (result) {
    var state = this.makeCompletingOnce_6(toState$default(result, null, 1, null));
    if (state === COMPLETING_WAITING_CHILDREN)
      return Unit_getInstance();
    this.afterResume_5(state);
  };
  AbstractCoroutine.prototype.afterResume_5 = function (state) {
    return this.afterCompletion_9(state);
  };
  AbstractCoroutine.prototype.handleOnCompletionException_9 = function (exception) {
    handleCoroutineException(this._context, exception);
  };
  AbstractCoroutine.prototype.nameString_11 = function () {
    var tmp0_elvis_lhs = _get_coroutineName_(this._context);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return JobSupport.prototype.nameString_11.call(this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var coroutineName = tmp;
    return '' + '"' + coroutineName + '":' + JobSupport.prototype.nameString_11.call(this);
  };
  AbstractCoroutine.prototype.start_8 = function (start, receiver, block) {
    this.initParentJob_5();
    start.invoke_76(block, receiver, this);
  };
  AbstractCoroutine.$metadata$ = {
    simpleName: 'AbstractCoroutine',
    kind: 'class',
    interfaces: [Job, Continuation, CoroutineScope]
  };
  function awaitAll(_this_, $cont) {
    var tmp = new $awaitAllCOROUTINE$0(_this_, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function DisposeHandlersOnCancel($outer, nodes) {
    this._$this_5 = $outer;
    CancelHandler.call(this);
    this._nodes = nodes;
  }
  DisposeHandlersOnCancel.prototype.disposeAll = function () {
    var tmp0_forEach_0 = this._nodes;
    var indexedObject = tmp0_forEach_0;
    var inductionVariable = 0;
    var last_1 = indexedObject.length;
    while (inductionVariable < last_1) {
      var element_2 = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      element_2._get_handle_().dispose_29();
    }
  };
  DisposeHandlersOnCancel.prototype.invoke_310 = function (cause) {
    this.disposeAll();
  };
  DisposeHandlersOnCancel.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  DisposeHandlersOnCancel.prototype.toString = function () {
    return '' + 'DisposeHandlersOnCancel[' + this._nodes + ']';
  };
  DisposeHandlersOnCancel.$metadata$ = {
    simpleName: 'DisposeHandlersOnCancel',
    kind: 'class',
    interfaces: []
  };
  function AwaitAllNode($outer, continuation) {
    this._$this_6 = $outer;
    JobNode.call(this);
    this._continuation = continuation;
    this.__disposer = atomic(null);
  }
  AwaitAllNode.prototype._get_handle_ = function () {
    var tmp = this._handle;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('handle');
    }
  };
  AwaitAllNode.prototype._set_disposer_ = function (value) {
    this.__disposer._value_2 = value;
  };
  AwaitAllNode.prototype._get_disposer_ = function () {
    return this.__disposer._value_2;
  };
  AwaitAllNode.prototype.invoke_310 = function (cause) {
    if (!(cause == null)) {
      var token = this._continuation.tryResumeWithException_1(cause);
      if (!(token == null)) {
        this._continuation.completeResume_1(token);
        var tmp0_safe_receiver = this._get_disposer_();
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.disposeAll();
          Unit_getInstance();
        }
        Unit_getInstance();
      }} else if (this._$this_6._notCompletedCount.atomicfu$decrementAndGet() === 0) {
      var tmp1_resume_0 = this._continuation;
      var tmp0_map_0 = this._$this_6._deferreds;
      var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(tmp0_map_0.length);
      var indexedObject = tmp0_map_0;
      var inductionVariable = 0;
      var last_1 = indexedObject.length;
      while (inductionVariable < last_1) {
        var item_2_3 = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        tmp0_mapTo_0_1.add_32(item_2_3.getCompleted_2());
        Unit_getInstance();
      }
      var tmp2_resume_0 = tmp0_mapTo_0_1;
      var tmp0_success_0_1 = Companion_getInstance_3();
      tmp1_resume_0.resumeWith_46(_Result___init__impl_(tmp2_resume_0));
    }};
  AwaitAllNode.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  AwaitAllNode.$metadata$ = {
    simpleName: 'AwaitAllNode',
    kind: 'class',
    interfaces: []
  };
  function AwaitAll(deferreds) {
    this._deferreds = deferreds;
    this._notCompletedCount = atomic_1(this._deferreds.length);
  }
  AwaitAll.prototype.await_3 = function ($cont) {
    var tmp0__anonymous__1_1 = $cont;
    var cancellable_2_2 = new CancellableContinuationImpl(intercepted(tmp0__anonymous__1_1), 1);
    cancellable_2_2.initCancellability_0();
    var tmp_5 = 0;
    var tmp_6 = this._deferreds.length;
    var tmp_7 = fillArrayVal(Array(tmp_6), null);
    while (tmp_5 < tmp_6) {
      var tmp_8 = tmp_5;
      var deferred_9 = this._deferreds[tmp_8];
      deferred_9.start_18();
      Unit_getInstance();
      var tmp0_apply_0_10 = new AwaitAllNode(this, cancellable_2_2);
      var tmp = tmp0_apply_0_10;
      tmp._handle = deferred_9.invokeOnCompletion_27(tmp0_apply_0_10);
      tmp_7[tmp_8] = tmp0_apply_0_10;
      tmp_5 = tmp_5 + 1 | 0;
    }
    var nodes_4 = tmp_7;
    var disposer_11 = new DisposeHandlersOnCancel(this, nodes_4);
    var indexedObject = nodes_4;
    var inductionVariable = 0;
    var last_1 = indexedObject.length;
    while (inductionVariable < last_1) {
      var element_2_13 = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      element_2_13._set_disposer_(disposer_11);
    }
    if (cancellable_2_2._get_isCompleted__12()) {
      disposer_11.disposeAll();
    } else {
      cancellable_2_2.invokeOnCancellation_1(disposer_11);
    }
    return cancellable_2_2.getResult_0();
  };
  AwaitAll.$metadata$ = {
    simpleName: 'AwaitAll',
    kind: 'class',
    interfaces: []
  };
  function $awaitAllCOROUTINE$0(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this_ = _this_;
  }
  $awaitAllCOROUTINE$0.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            if (this.__this_.isEmpty_50()) {
              this._WHEN_RESULT0 = emptyList();
              this._state_0 = 2;
              continue $sm;
            } else {
              this._state_0 = 1;
              suspendResult = (new AwaitAll(copyToArray_0(this.__this_))).await_3(this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            }

            break;
          case 1:
            this._WHEN_RESULT0 = suspendResult;
            this._state_0 = 2;
            continue $sm;
          case 2:
            return this._WHEN_RESULT0;
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $awaitAllCOROUTINE$0.$metadata$ = {
    simpleName: '$awaitAllCOROUTINE$0',
    kind: 'class',
    interfaces: []
  };
  function launch(_this_, context, start, block) {
    var newContext = newCoroutineContext(_this_, context);
    var coroutine = start._get_isLazy_() ? new LazyStandaloneCoroutine(newContext, block) : new StandaloneCoroutine(newContext, true);
    coroutine.start_8(start, coroutine, block);
    return coroutine;
  }
  function launch$default(_this_, context, start, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      context = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      start = CoroutineStart_DEFAULT_getInstance();
    return launch(_this_, context, start, block);
  }
  function async(_this_, context, start, block) {
    var newContext = newCoroutineContext(_this_, context);
    var coroutine = start._get_isLazy_() ? new LazyDeferredCoroutine(newContext, block) : new DeferredCoroutine(newContext, true);
    coroutine.start_8(start, coroutine, block);
    return coroutine;
  }
  function async$default(_this_, context, start, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      context = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      start = CoroutineStart_DEFAULT_getInstance();
    return async(_this_, context, start, block);
  }
  function StandaloneCoroutine(parentContext, active) {
    AbstractCoroutine.call(this, parentContext, active);
  }
  StandaloneCoroutine.prototype.handleJobException_9 = function (exception) {
    handleCoroutineException(this._get_context__113(), exception);
    return true;
  };
  StandaloneCoroutine.$metadata$ = {
    simpleName: 'StandaloneCoroutine',
    kind: 'class',
    interfaces: []
  };
  function LazyStandaloneCoroutine(parentContext, block) {
    StandaloneCoroutine.call(this, parentContext, false);
    this._continuation_0 = createCoroutineUnintercepted(block, this, this);
  }
  LazyStandaloneCoroutine.prototype.onStart_5 = function () {
    startCoroutineCancellable_0(this._continuation_0, this);
  };
  LazyStandaloneCoroutine.$metadata$ = {
    simpleName: 'LazyStandaloneCoroutine',
    kind: 'class',
    interfaces: []
  };
  function $awaitCOROUTINE$1(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__0 = _this_;
  }
  $awaitCOROUTINE$1.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this.__this__0.awaitInternal_2(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var tmp_0 = suspendResult;
            return (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $awaitCOROUTINE$1.$metadata$ = {
    simpleName: '$awaitCOROUTINE$1',
    kind: 'class',
    interfaces: []
  };
  function DeferredCoroutine(parentContext, active) {
    AbstractCoroutine.call(this, parentContext, active);
  }
  DeferredCoroutine.prototype.getCompleted_2 = function () {
    var tmp = this.getCompletedInternal_2();
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  DeferredCoroutine.prototype.await_3 = function ($cont) {
    var tmp = new $awaitCOROUTINE$1(this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  DeferredCoroutine.$metadata$ = {
    simpleName: 'DeferredCoroutine',
    kind: 'class',
    interfaces: [Deferred, SelectClause1]
  };
  function LazyDeferredCoroutine(parentContext, block) {
    DeferredCoroutine.call(this, parentContext, false);
    this._continuation_1 = createCoroutineUnintercepted(block, this, this);
  }
  LazyDeferredCoroutine.prototype.onStart_5 = function () {
    startCoroutineCancellable_0(this._continuation_1, this);
  };
  LazyDeferredCoroutine.$metadata$ = {
    simpleName: 'LazyDeferredCoroutine',
    kind: 'class',
    interfaces: []
  };
  function CancellableContinuation() {
  }
  CancellableContinuation.prototype.tryResume$default_1 = function (value, idempotent, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      idempotent = null;
    return $handler == null ? this.tryResume_3(value, idempotent) : $handler(value, idempotent);
  };
  CancellableContinuation.$metadata$ = {
    simpleName: 'CancellableContinuation',
    kind: 'interface',
    interfaces: [Continuation]
  };
  function disposeOnCancellation(_this_, handle) {
    var tmp0__get_asHandler__0 = new DisposeOnCancel(handle);
    return _this_.invokeOnCancellation_1(tmp0__get_asHandler__0);
  }
  function DisposeOnCancel(handle) {
    CancelHandler.call(this);
    this._handle_0 = handle;
  }
  DisposeOnCancel.prototype.invoke_310 = function (cause) {
    return this._handle_0.dispose_29();
  };
  DisposeOnCancel.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  DisposeOnCancel.prototype.toString = function () {
    return '' + 'DisposeOnCancel[' + this._handle_0 + ']';
  };
  DisposeOnCancel.$metadata$ = {
    simpleName: 'DisposeOnCancel',
    kind: 'class',
    interfaces: []
  };
  function removeOnCancellation(_this_, node) {
    var tmp0__get_asHandler__0 = new RemoveOnCancel(node);
    return _this_.invokeOnCancellation_1(tmp0__get_asHandler__0);
  }
  function getOrCreateCancellableContinuation(delegate) {
    if (!(delegate instanceof DispatchedContinuation)) {
      return new CancellableContinuationImpl(delegate, 2);
    } else {
    }
    var tmp0_safe_receiver = delegate.claimReusableCancellableContinuation();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp_0;
      if (tmp0_safe_receiver.resetStateReusable_0()) {
        tmp_0 = tmp0_safe_receiver;
      } else {
        {
          tmp_0 = null;
        }
      }
      tmp = tmp_0;
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_1;
    if (tmp1_elvis_lhs == null) {
      return new CancellableContinuationImpl(delegate, 2);
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    return tmp_1;
  }
  function RemoveOnCancel(node) {
    BeforeResumeCancelHandler.call(this);
    this._node = node;
  }
  RemoveOnCancel.prototype.invoke_310 = function (cause) {
    this._node.remove_37();
    Unit_getInstance();
  };
  RemoveOnCancel.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  RemoveOnCancel.prototype.toString = function () {
    return '' + 'RemoveOnCancel[' + this._node + ']';
  };
  RemoveOnCancel.$metadata$ = {
    simpleName: 'RemoveOnCancel',
    kind: 'class',
    interfaces: []
  };
  var RESUME_TOKEN;
  function _set_parentHandle_($this, value) {
    $this.__parentHandle._value_2 = value;
  }
  function _get_parentHandle_($this) {
    return $this.__parentHandle._value_2;
  }
  function _get_stateDebugRepresentation_($this) {
    var tmp0_subject = $this._get_state__15();
    var tmp;
    if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
      tmp = 'Active';
    } else {
      if (tmp0_subject instanceof CancelledContinuation) {
        tmp = 'Cancelled';
      } else {
        {
          tmp = 'Completed';
        }
      }
    }
    return tmp;
  }
  function isReusable($this) {
    var tmp;
    var tmp_0 = $this._delegate;
    if (tmp_0 instanceof DispatchedContinuation) {
      tmp = $this._delegate.isReusable($this);
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  }
  function setupCancellation($this) {
    if (checkCompleted($this))
      return Unit_getInstance();
    if (!(_get_parentHandle_($this) === null))
      return Unit_getInstance();
    var tmp0_elvis_lhs = $this._delegate._get_context__113().get_63(Key_getInstance_3());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var parent = tmp;
    var tmp0__get_asHandler__0 = new ChildContinuation($this);
    var handle = parent.invokeOnCompletion$default_11(true, false, tmp0__get_asHandler__0, 2, null);
    _set_parentHandle_($this, handle);
    if ($this._get_isCompleted__12() ? !isReusable($this) : false) {
      handle.dispose_29();
      _set_parentHandle_($this, NonDisposableHandle_getInstance());
    }}
  function checkCompleted($this) {
    var completed = $this._get_isCompleted__12();
    if (!_get_isReusableMode_($this._get_resumeMode__1()))
      return completed;
    var tmp = $this._delegate;
    var tmp0_elvis_lhs = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      return completed;
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var dispatched = tmp_0;
    var tmp1_elvis_lhs = dispatched.checkPostponedCancellation($this);
    var tmp_1;
    if (tmp1_elvis_lhs == null) {
      return completed;
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    var cause = tmp_1;
    if (!completed) {
      $this.cancel_25(cause);
      Unit_getInstance();
    }return true;
  }
  function cancelLater($this, cause) {
    if (!_get_isReusableMode_($this._get_resumeMode__1()))
      return false;
    var tmp = $this._delegate;
    var tmp0_elvis_lhs = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var dispatched = tmp_0;
    return dispatched.postponeCancellation(cause);
  }
  function callCancelHandler($this, handler, cause) {
    var tmp;
    try {
      tmp = invokeIt(handler, cause);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = handleCoroutineException($this._get_context__113(), new CompletionHandlerException('' + 'Exception in invokeOnCancellation handler for ' + $this, $p));
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function trySuspend($this) {
    var tmp0_loop_0 = $this.__decision;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_4;
      var tmp0_subject_2 = tmp1__anonymous__1;
      switch (tmp0_subject_2) {
        case 0:
          if ($this.__decision.atomicfu$compareAndSet(0, 1))
            return true;
          break;
        case 2:
          return false;
        default:var tmp0_error_0_3 = 'Already suspended';
          throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0_3));
      }
    }
    Unit_getInstance();
  }
  function tryResume($this) {
    var tmp0_loop_0 = $this.__decision;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_4;
      var tmp0_subject_2 = tmp1__anonymous__1;
      switch (tmp0_subject_2) {
        case 0:
          if ($this.__decision.atomicfu$compareAndSet(0, 2))
            return true;
          break;
        case 1:
          return false;
        default:var tmp0_error_0_3 = 'Already resumed';
          throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0_3));
      }
    }
    Unit_getInstance();
  }
  function multipleHandlersError($this, handler, state) {
    var tmp0_error_0 = '' + "It's prohibited to register multiple handlers, tried to register " + handler + ', already has ' + state;
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  }
  function makeCancelHandler($this, handler) {
    var tmp;
    if (handler instanceof CancelHandler) {
      tmp = handler;
    } else {
      {
        tmp = new InvokeOnCancel(handler);
      }
    }
    return tmp;
  }
  function dispatchResume($this, mode) {
    if (tryResume($this))
      return Unit_getInstance();
    dispatch($this, mode);
  }
  function resumedState($this, state, proposedUpdate, resumeMode, onCancellation, idempotent) {
    var tmp;
    if (proposedUpdate instanceof CompletedExceptionally) {
      tmp = proposedUpdate;
    } else {
      if (!_get_isCancellableMode_(resumeMode) ? idempotent == null : false) {
        tmp = proposedUpdate;
      } else {
        var tmp_0;
        var tmp_1;
        if (!(onCancellation == null)) {
          tmp_1 = true;
        } else {
          var tmp_2;
          if (state instanceof CancelHandler) {
            tmp_2 = !(state instanceof BeforeResumeCancelHandler);
          } else {
            {
              tmp_2 = false;
            }
          }
          tmp_1 = tmp_2;
        }
        if (tmp_1) {
          tmp_0 = true;
        } else {
          {
            tmp_0 = !(idempotent == null);
          }
        }
        if (tmp_0) {
          var tmp_3 = state instanceof CancelHandler ? state : null;
          tmp = CompletedContinuation_init_$Create$(proposedUpdate, tmp_3, onCancellation, idempotent, null, 16, null);
        } else {
          {
            tmp = proposedUpdate;
          }
        }
      }
    }
    return tmp;
  }
  function resumeImpl($this, proposedUpdate, resumeMode, onCancellation) {
    var tmp0_loop_0 = $this.__state;
    while (true) {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp1__anonymous__1 = tmp0_loop_0._value_2;
        var tmp0_subject_2 = tmp1__anonymous__1;
        if (!(tmp0_subject_2 == null) ? isInterface(tmp0_subject_2, NotCompleted) : false) {
          var update_3 = resumedState($this, tmp1__anonymous__1, proposedUpdate, resumeMode, onCancellation, null);
          if (!$this.__state.atomicfu$compareAndSet(tmp1__anonymous__1, update_3)) {
            tmp$ret$0 = Unit_getInstance();
            break l$ret$1;
          }detachChildIfNonResuable($this);
          dispatchResume($this, resumeMode);
          return Unit_getInstance();
        } else {
          if (tmp0_subject_2 instanceof CancelledContinuation) {
            if (tmp1__anonymous__1.makeResumed()) {
              var tmp1_safe_receiver_4 = onCancellation;
              if (tmp1_safe_receiver_4 == null)
                null;
              else {
                $this.callOnCancellation_0(tmp1_safe_receiver_4, tmp1__anonymous__1._get_cause__60());
                Unit_getInstance();
              }
              Unit_getInstance();
              return Unit_getInstance();
            }} else {
          }
        }
        alreadyResumedError($this, proposedUpdate);
      }
       while (false);
    }
    Unit_getInstance();
  }
  function resumeImpl$default($this, proposedUpdate, resumeMode, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      onCancellation = null;
    return resumeImpl($this, proposedUpdate, resumeMode, onCancellation);
  }
  function tryResumeImpl($this, proposedUpdate, idempotent, onCancellation) {
    var tmp0_loop_0 = $this.__state;
    while (true) {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp1__anonymous__1 = tmp0_loop_0._value_2;
        var tmp0_subject_2 = tmp1__anonymous__1;
        if (!(tmp0_subject_2 == null) ? isInterface(tmp0_subject_2, NotCompleted) : false) {
          var update_3 = resumedState($this, tmp1__anonymous__1, proposedUpdate, $this._get_resumeMode__1(), onCancellation, idempotent);
          if (!$this.__state.atomicfu$compareAndSet(tmp1__anonymous__1, update_3)) {
            tmp$ret$0 = Unit_getInstance();
            break l$ret$1;
          }detachChildIfNonResuable($this);
          return RESUME_TOKEN;
        } else {
          if (tmp0_subject_2 instanceof CompletedContinuation_0) {
            var tmp;
            if (!(idempotent == null) ? tmp1__anonymous__1._idempotentResume === idempotent : false) {
              tmp = RESUME_TOKEN;
            } else {
              tmp = null;
            }
            return tmp;
          } else {
            return null;
          }
        }
      }
       while (false);
    }
    Unit_getInstance();
  }
  function alreadyResumedError($this, proposedUpdate) {
    var tmp0_error_0 = '' + 'Already resumed, but proposed with update ' + proposedUpdate;
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  }
  function detachChildIfNonResuable($this) {
    if (!isReusable($this))
      $this.detachChild_0();
  }
  function CancellableContinuationImpl(delegate, resumeMode) {
    DispatchedTask.call(this, resumeMode);
    this._delegate = delegate;
    this._context_0 = this._delegate._get_context__113();
    this.__decision = atomic_1(0);
    this.__state = atomic(Active_getInstance());
    this.__parentHandle = atomic(null);
  }
  CancellableContinuationImpl.prototype._get_delegate__2 = function () {
    return this._delegate;
  };
  CancellableContinuationImpl.prototype._get_context__113 = function () {
    return this._context_0;
  };
  CancellableContinuationImpl.prototype._get_state__15 = function () {
    return this.__state._value_2;
  };
  CancellableContinuationImpl.prototype._get_isCompleted__12 = function () {
    var tmp = this._get_state__15();
    return !(!(tmp == null) ? isInterface(tmp, NotCompleted) : false);
  };
  CancellableContinuationImpl.prototype._get_isCancelled__1 = function () {
    var tmp = this._get_state__15();
    return tmp instanceof CancelledContinuation;
  };
  CancellableContinuationImpl.prototype.initCancellability_0 = function () {
    setupCancellation(this);
  };
  CancellableContinuationImpl.prototype.resetStateReusable_0 = function () {
    var state = this.__state._value_2;
    var tmp;
    if (state instanceof CompletedContinuation_0) {
      tmp = !(state._idempotentResume == null);
    } else {
      {
        tmp = false;
      }
    }
    if (tmp) {
      this.detachChild_0();
      return false;
    } else {
    }
    this.__decision._value_4 = 0;
    this.__state._value_2 = Active_getInstance();
    return true;
  };
  CancellableContinuationImpl.prototype.takeState_2 = function () {
    return this._get_state__15();
  };
  CancellableContinuationImpl.prototype.cancelCompletedResult_2 = function (takenState, cause) {
    var tmp0_loop_0 = this.__state;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_2;
      var tmp0_subject_2 = tmp1__anonymous__1;
      if (!(tmp0_subject_2 == null) ? isInterface(tmp0_subject_2, NotCompleted) : false) {
        var tmp0_error_0_3 = 'Not completed';
        throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0_3));
      } else {
        if (tmp0_subject_2 instanceof CompletedExceptionally)
          return Unit_getInstance();
        else {
          if (tmp0_subject_2 instanceof CompletedContinuation_0) {
            var tmp1_check_0_4 = !tmp1__anonymous__1._get_cancelled_();
            if (!tmp1_check_0_4) {
              var message_1_5 = 'Must be called at most once';
              throw IllegalStateException_init_$Create$(toString_1(message_1_5));
            }var tmp = tmp1__anonymous__1;
            var update_6 = tmp.copy$default(null, null, null, null, cause, 15, null);
            if (this.__state.atomicfu$compareAndSet(tmp1__anonymous__1, update_6)) {
              tmp1__anonymous__1.invokeHandlers(this, cause);
              return Unit_getInstance();
            }} else {
            {
              if (this.__state.atomicfu$compareAndSet(tmp1__anonymous__1, CompletedContinuation_init_$Create$(tmp1__anonymous__1, null, null, null, cause, 14, null))) {
                return Unit_getInstance();
              } else {
              }
            }
          }
        }
      }
    }
    Unit_getInstance();
  };
  CancellableContinuationImpl.prototype.cancel_25 = function (cause) {
    var tmp0_loop_0 = this.__state;
    while (true) {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp1__anonymous__1 = tmp0_loop_0._value_2;
        if (!(!(tmp1__anonymous__1 == null) ? isInterface(tmp1__anonymous__1, NotCompleted) : false))
          return false;
        else {
        }
        var update_2 = new CancelledContinuation(this, cause, tmp1__anonymous__1 instanceof CancelHandler);
        if (!this.__state.atomicfu$compareAndSet(tmp1__anonymous__1, update_2)) {
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        }var tmp0_safe_receiver_3 = tmp1__anonymous__1 instanceof CancelHandler ? tmp1__anonymous__1 : null;
        if (tmp0_safe_receiver_3 == null)
          null;
        else {
          this.callCancelHandler_0(tmp0_safe_receiver_3, cause);
          Unit_getInstance();
        }
        Unit_getInstance();
        detachChildIfNonResuable(this);
        dispatchResume(this, this._get_resumeMode__1());
        return true;
      }
       while (false);
    }
    Unit_getInstance();
  };
  CancellableContinuationImpl.prototype.parentCancelled_7 = function (cause) {
    if (cancelLater(this, cause))
      return Unit_getInstance();
    this.cancel_25(cause);
    Unit_getInstance();
    detachChildIfNonResuable(this);
  };
  CancellableContinuationImpl.prototype.callCancelHandler_0 = function (handler, cause) {
    var tmp;
    try {
      tmp = handler.invoke(cause);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = handleCoroutineException(this._get_context__113(), new CompletionHandlerException('' + 'Exception in invokeOnCancellation handler for ' + this, $p));
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.callOnCancellation_0 = function (onCancellation, cause) {
    try {
      onCancellation(cause);
    } catch ($p) {
      if ($p instanceof Error) {
        handleCoroutineException(this._get_context__113(), new CompletionHandlerException('' + 'Exception in resume onCancellation handler for ' + this, $p));
      } else {
        {
          throw $p;
        }
      }
    }
  };
  CancellableContinuationImpl.prototype.getContinuationCancellationCause_0 = function (parent) {
    return parent.getCancellationException_11();
  };
  CancellableContinuationImpl.prototype.getResult_0 = function () {
    setupCancellation(this);
    if (trySuspend(this))
      return _get_COROUTINE_SUSPENDED_();
    var state = this._get_state__15();
    if (state instanceof CompletedExceptionally)
      throw recoverStackTrace(state._cause, this);
    else {
    }
    if (_get_isCancellableMode_(this._get_resumeMode__1())) {
      var job = this._get_context__113().get_63(Key_getInstance_3());
      if (!(job == null) ? !job._get_isActive__26() : false) {
        var cause = job.getCancellationException_11();
        this.cancelCompletedResult_2(state, cause);
        throw recoverStackTrace(cause, this);
      }}return this.getSuccessfulResult_2(state);
  };
  CancellableContinuationImpl.prototype.resumeWith_46 = function (result) {
    var tmp = toState(result, this);
    var tmp_0 = this._get_resumeMode__1();
    return resumeImpl$default(this, tmp, tmp_0, null, 8, null);
  };
  CancellableContinuationImpl.prototype.resume_2 = function (value, onCancellation) {
    return resumeImpl(this, value, this._get_resumeMode__1(), onCancellation);
  };
  CancellableContinuationImpl.prototype.invokeOnCancellation_1 = function (handler) {
    var cancelHandler = makeCancelHandler(this, handler);
    var tmp0_loop_0 = this.__state;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_2;
      var tmp0_subject_2 = tmp1__anonymous__1;
      if (tmp0_subject_2 instanceof Active) {
        if (this.__state.atomicfu$compareAndSet(tmp1__anonymous__1, cancelHandler))
          return Unit_getInstance();
      } else {
        if (tmp0_subject_2 instanceof CancelHandler)
          multipleHandlersError(this, handler, tmp1__anonymous__1);
        else {
          if (tmp0_subject_2 instanceof CompletedExceptionally) {
            if (!tmp1__anonymous__1.makeHandled_0())
              multipleHandlersError(this, handler, tmp1__anonymous__1);
            if (tmp1__anonymous__1 instanceof CancelledContinuation) {
              var tmp1_safe_receiver_3 = tmp1__anonymous__1 instanceof CompletedExceptionally ? tmp1__anonymous__1 : null;
              callCancelHandler(this, handler, tmp1_safe_receiver_3 == null ? null : tmp1_safe_receiver_3._cause);
            } else {
            }
            return Unit_getInstance();
          } else {
            if (tmp0_subject_2 instanceof CompletedContinuation_0) {
              if (!(tmp1__anonymous__1._cancelHandler == null))
                multipleHandlersError(this, handler, tmp1__anonymous__1);
              if (cancelHandler instanceof BeforeResumeCancelHandler)
                return Unit_getInstance();
              else {
              }
              if (tmp1__anonymous__1._get_cancelled_()) {
                callCancelHandler(this, handler, tmp1__anonymous__1._cancelCause);
                return Unit_getInstance();
              }var tmp = tmp1__anonymous__1;
              var update_4 = tmp.copy$default(null, cancelHandler, null, null, null, 29, null);
              if (this.__state.atomicfu$compareAndSet(tmp1__anonymous__1, update_4))
                return Unit_getInstance();
            } else {
              {
                if (cancelHandler instanceof BeforeResumeCancelHandler)
                  return Unit_getInstance();
                else {
                }
                var update_5 = CompletedContinuation_init_$Create$(tmp1__anonymous__1, cancelHandler, null, null, null, 28, null);
                if (this.__state.atomicfu$compareAndSet(tmp1__anonymous__1, update_5))
                  return Unit_getInstance();
              }
            }
          }
        }
      }
    }
    Unit_getInstance();
  };
  CancellableContinuationImpl.prototype.detachChild_0 = function () {
    var handle = _get_parentHandle_(this);
    var tmp0_safe_receiver = handle;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.dispose_29();
      Unit_getInstance();
    }
    Unit_getInstance();
    _set_parentHandle_(this, NonDisposableHandle_getInstance());
  };
  CancellableContinuationImpl.prototype.tryResume_3 = function (value, idempotent) {
    return tryResumeImpl(this, value, idempotent, null);
  };
  CancellableContinuationImpl.prototype.tryResume_4 = function (value, idempotent, onCancellation) {
    return tryResumeImpl(this, value, idempotent, onCancellation);
  };
  CancellableContinuationImpl.prototype.tryResumeWithException_1 = function (exception) {
    return tryResumeImpl(this, CompletedExceptionally_init_$Create$(exception, false, 2, null), null, null);
  };
  CancellableContinuationImpl.prototype.completeResume_1 = function (token) {
    dispatchResume(this, this._get_resumeMode__1());
  };
  CancellableContinuationImpl.prototype.resumeUndispatched_1 = function (_this__0, value) {
    var tmp = this._delegate;
    var dc = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp_0;
    var tmp0_safe_receiver = dc;
    if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver._dispatcher) === _this__0) {
      tmp_0 = 4;
    } else {
      {
        tmp_0 = this._get_resumeMode__1();
      }
    }
    var tmp_1 = tmp_0;
    resumeImpl$default(this, value, tmp_1, null, 8, null);
  };
  CancellableContinuationImpl.prototype.getSuccessfulResult_2 = function (state) {
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof CompletedContinuation_0) {
      var tmp_0 = state._result_0;
      tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
    } else {
      {
        tmp = (state == null ? true : isObject(state)) ? state : THROW_CCE();
      }
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.getExceptionalResult_2 = function (state) {
    var tmp0_safe_receiver = DispatchedTask.prototype.getExceptionalResult_2.call(this, state);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = recoverStackTrace(tmp0_safe_receiver, this._delegate);
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.toString = function () {
    return '' + this.nameString_11() + '(' + toDebugString(this._delegate) + '){' + _get_stateDebugRepresentation_(this) + '}@' + _get_hexAddress_(this);
  };
  CancellableContinuationImpl.prototype.nameString_11 = function () {
    return 'CancellableContinuation';
  };
  CancellableContinuationImpl.$metadata$ = {
    simpleName: 'CancellableContinuationImpl',
    kind: 'class',
    interfaces: [CancellableContinuation, CoroutineStackFrame]
  };
  function CancelHandler() {
    CancelHandlerBase.call(this);
  }
  CancelHandler.$metadata$ = {
    simpleName: 'CancelHandler',
    kind: 'class',
    interfaces: [NotCompleted]
  };
  function Active() {
    Active_instance = this;
  }
  Active.prototype.toString = function () {
    return 'Active';
  };
  Active.$metadata$ = {
    simpleName: 'Active',
    kind: 'object',
    interfaces: [NotCompleted]
  };
  var Active_instance;
  function Active_getInstance() {
    if (Active_instance == null)
      new Active();
    return Active_instance;
  }
  function NotCompleted() {
  }
  NotCompleted.$metadata$ = {
    simpleName: 'NotCompleted',
    kind: 'interface',
    interfaces: []
  };
  function CompletedContinuation_init_$Init$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      cancelHandler = null;
    if (!(($mask0 & 4) === 0))
      onCancellation = null;
    if (!(($mask0 & 8) === 0))
      idempotentResume = null;
    if (!(($mask0 & 16) === 0))
      cancelCause = null;
    CompletedContinuation_0.call($this, result, cancelHandler, onCancellation, idempotentResume, cancelCause);
    return $this;
  }
  function CompletedContinuation_init_$Create$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker) {
    return CompletedContinuation_init_$Init$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker, Object.create(CompletedContinuation_0.prototype));
  }
  function CompletedContinuation_0(result, cancelHandler, onCancellation, idempotentResume, cancelCause) {
    this._result_0 = result;
    this._cancelHandler = cancelHandler;
    this._onCancellation = onCancellation;
    this._idempotentResume = idempotentResume;
    this._cancelCause = cancelCause;
  }
  CompletedContinuation_0.prototype._get_cancelled_ = function () {
    return !(this._cancelCause == null);
  };
  CompletedContinuation_0.prototype.invokeHandlers = function (cont, cause) {
    var tmp0_safe_receiver = this._cancelHandler;
    if (tmp0_safe_receiver == null)
      null;
    else {
      cont.callCancelHandler_0(tmp0_safe_receiver, cause);
      Unit_getInstance();
    }
    Unit_getInstance();
    var tmp1_safe_receiver = this._onCancellation;
    if (tmp1_safe_receiver == null)
      null;
    else {
      cont.callOnCancellation_0(tmp1_safe_receiver, cause);
      Unit_getInstance();
    }
    Unit_getInstance();
  };
  CompletedContinuation_0.prototype.copy_0 = function (result, cancelHandler, onCancellation, idempotentResume, cancelCause) {
    return new CompletedContinuation_0(result, cancelHandler, onCancellation, idempotentResume, cancelCause);
  };
  CompletedContinuation_0.prototype.copy$default = function (result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      result = this._result_0;
    if (!(($mask0 & 2) === 0))
      cancelHandler = this._cancelHandler;
    if (!(($mask0 & 4) === 0))
      onCancellation = this._onCancellation;
    if (!(($mask0 & 8) === 0))
      idempotentResume = this._idempotentResume;
    if (!(($mask0 & 16) === 0))
      cancelCause = this._cancelCause;
    return this.copy_0(result, cancelHandler, onCancellation, idempotentResume, cancelCause);
  };
  CompletedContinuation_0.prototype.toString = function () {
    return '' + 'CompletedContinuation(result=' + this._result_0 + ', cancelHandler=' + this._cancelHandler + ', onCancellation=' + this._onCancellation + ', idempotentResume=' + this._idempotentResume + ', cancelCause=' + this._cancelCause + ')';
  };
  CompletedContinuation_0.prototype.hashCode = function () {
    var result = this._result_0 == null ? 0 : hashCode(this._result_0);
    result = imul(result, 31) + (this._cancelHandler == null ? 0 : hashCode(this._cancelHandler)) | 0;
    result = imul(result, 31) + (this._onCancellation == null ? 0 : hashCode(this._onCancellation)) | 0;
    result = imul(result, 31) + (this._idempotentResume == null ? 0 : hashCode(this._idempotentResume)) | 0;
    result = imul(result, 31) + (this._cancelCause == null ? 0 : hashCode(this._cancelCause)) | 0;
    return result;
  };
  CompletedContinuation_0.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CompletedContinuation_0))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof CompletedContinuation_0 ? other : THROW_CCE();
    if (!equals_1(this._result_0, tmp0_other_with_cast._result_0))
      return false;
    if (!equals_1(this._cancelHandler, tmp0_other_with_cast._cancelHandler))
      return false;
    if (!equals_1(this._onCancellation, tmp0_other_with_cast._onCancellation))
      return false;
    if (!equals_1(this._idempotentResume, tmp0_other_with_cast._idempotentResume))
      return false;
    if (!equals_1(this._cancelCause, tmp0_other_with_cast._cancelCause))
      return false;
    return true;
  };
  CompletedContinuation_0.$metadata$ = {
    simpleName: 'CompletedContinuation',
    kind: 'class',
    interfaces: []
  };
  function BeforeResumeCancelHandler() {
    CancelHandler.call(this);
  }
  BeforeResumeCancelHandler.$metadata$ = {
    simpleName: 'BeforeResumeCancelHandler',
    kind: 'class',
    interfaces: []
  };
  function InvokeOnCancel(handler) {
    CancelHandler.call(this);
    this._handler = handler;
  }
  InvokeOnCancel.prototype.invoke_310 = function (cause) {
    this._handler(cause);
  };
  InvokeOnCancel.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  InvokeOnCancel.prototype.toString = function () {
    return '' + 'InvokeOnCancel[' + _get_classSimpleName_(this._handler) + '@' + _get_hexAddress_(this) + ']';
  };
  InvokeOnCancel.$metadata$ = {
    simpleName: 'InvokeOnCancel',
    kind: 'class',
    interfaces: []
  };
  function CompletableDeferred() {
  }
  CompletableDeferred.$metadata$ = {
    simpleName: 'CompletableDeferred',
    kind: 'interface',
    interfaces: [Deferred]
  };
  function CompletableDeferred_0(parent) {
    return new CompletableDeferredImpl(parent);
  }
  function CompletableDeferred$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return CompletableDeferred_0(parent);
  }
  function $awaitCOROUTINE$2(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__1 = _this_;
  }
  $awaitCOROUTINE$2.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this.__this__1.awaitInternal_2(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var tmp_0 = suspendResult;
            return (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $awaitCOROUTINE$2.$metadata$ = {
    simpleName: '$awaitCOROUTINE$2',
    kind: 'class',
    interfaces: []
  };
  function CompletableDeferredImpl(parent) {
    JobSupport.call(this, true);
    this.initParentJobInternal_9(parent);
  }
  CompletableDeferredImpl.prototype._get_onCancelComplete__9 = function () {
    return true;
  };
  CompletableDeferredImpl.prototype.getCompleted_2 = function () {
    var tmp = this.getCompletedInternal_2();
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  CompletableDeferredImpl.prototype.await_3 = function ($cont) {
    var tmp = new $awaitCOROUTINE$2(this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  CompletableDeferredImpl.prototype.complete_0 = function (value) {
    return this.makeCompleting_2(value);
  };
  CompletableDeferredImpl.prototype.completeExceptionally_3 = function (exception) {
    return this.makeCompleting_2(CompletedExceptionally_init_$Create$(exception, false, 2, null));
  };
  CompletableDeferredImpl.$metadata$ = {
    simpleName: 'CompletableDeferredImpl',
    kind: 'class',
    interfaces: [CompletableDeferred, SelectClause1]
  };
  function CompletableJob() {
  }
  CompletableJob.$metadata$ = {
    simpleName: 'CompletableJob',
    kind: 'interface',
    interfaces: [Job]
  };
  function CompletedExceptionally_init_$Init$(cause, handled, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      handled = false;
    CompletedExceptionally.call($this, cause, handled);
    return $this;
  }
  function CompletedExceptionally_init_$Create$(cause, handled, $mask0, $marker) {
    return CompletedExceptionally_init_$Init$(cause, handled, $mask0, $marker, Object.create(CompletedExceptionally.prototype));
  }
  function CompletedExceptionally(cause, handled) {
    this._cause = cause;
    this.__handled = atomic_0(handled);
  }
  CompletedExceptionally.prototype._get_cause__60 = function () {
    return this._cause;
  };
  CompletedExceptionally.prototype._get_handled__0 = function () {
    return this.__handled._value_3;
  };
  CompletedExceptionally.prototype.makeHandled_0 = function () {
    return this.__handled.atomicfu$compareAndSet(false, true);
  };
  CompletedExceptionally.prototype.toString = function () {
    return '' + _get_classSimpleName_(this) + '[' + this._cause + ']';
  };
  CompletedExceptionally.$metadata$ = {
    simpleName: 'CompletedExceptionally',
    kind: 'class',
    interfaces: []
  };
  function CancelledContinuation(continuation, cause, handled) {
    var tmp0_elvis_lhs = cause;
    CompletedExceptionally.call(this, tmp0_elvis_lhs == null ? CancellationException_init_$Create$('' + 'Continuation ' + continuation + ' was cancelled normally') : tmp0_elvis_lhs, handled);
    this.__resumed = atomic_0(false);
  }
  CancelledContinuation.prototype.makeResumed = function () {
    return this.__resumed.atomicfu$compareAndSet(false, true);
  };
  CancelledContinuation.$metadata$ = {
    simpleName: 'CancelledContinuation',
    kind: 'class',
    interfaces: []
  };
  function toState(_this_, caller) {
    var exception_1 = Result__exceptionOrNull_impl(_this_);
    var tmp;
    if (exception_1 == null) {
      var tmp_0 = _Result___get_value__impl_(_this_);
      var tmp0__anonymous__2 = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
      tmp = tmp0__anonymous__2;
    } else {
      var tmp_1 = recoverStackTrace(exception_1, caller);
      tmp = CompletedExceptionally_init_$Create$(tmp_1, false, 2, null);
    }
    return tmp;
  }
  function toState_0(_this_, onCancellation) {
    var exception_1 = Result__exceptionOrNull_impl(_this_);
    var tmp;
    if (exception_1 == null) {
      var tmp_0 = _Result___get_value__impl_(_this_);
      var tmp0__anonymous__2 = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
      tmp = !(onCancellation == null) ? new CompletedWithCancellation(tmp0__anonymous__2, onCancellation) : tmp0__anonymous__2;
    } else {
      tmp = CompletedExceptionally_init_$Create$(exception_1, false, 2, null);
    }
    return tmp;
  }
  function toState$default(_this_, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      onCancellation = null;
    return toState_0(_this_, onCancellation);
  }
  function CompletedWithCancellation(result, onCancellation) {
    this._result_1 = result;
    this._onCancellation_0 = onCancellation;
  }
  CompletedWithCancellation.prototype.toString = function () {
    return '' + 'CompletedWithCancellation(result=' + this._result_1 + ', onCancellation=' + this._onCancellation_0 + ')';
  };
  CompletedWithCancellation.prototype.hashCode = function () {
    var result = this._result_1 == null ? 0 : hashCode(this._result_1);
    result = imul(result, 31) + hashCode(this._onCancellation_0) | 0;
    return result;
  };
  CompletedWithCancellation.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CompletedWithCancellation))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof CompletedWithCancellation ? other : THROW_CCE();
    if (!equals_1(this._result_1, tmp0_other_with_cast._result_1))
      return false;
    if (!equals_1(this._onCancellation_0, tmp0_other_with_cast._onCancellation_0))
      return false;
    return true;
  };
  CompletedWithCancellation.$metadata$ = {
    simpleName: 'CompletedWithCancellation',
    kind: 'class',
    interfaces: []
  };
  function recoverResult(state, uCont) {
    var tmp;
    if (state instanceof CompletedExceptionally) {
      var tmp0_failure_0 = Companion_getInstance_3();
      var tmp1_failure_0 = recoverStackTrace(state._cause, uCont);
      tmp = _Result___init__impl_(createFailure(tmp1_failure_0));
    } else {
      {
        var tmp2_success_0 = Companion_getInstance_3();
        var tmp3_success_0 = (state == null ? true : isObject(state)) ? state : THROW_CCE();
        tmp = _Result___init__impl_(tmp3_success_0);
      }
    }
    return tmp;
  }
  function _no_name_provided__48() {
  }
  _no_name_provided__48.prototype.invoke_74 = function (it) {
    return it instanceof CoroutineDispatcher ? it : null;
  };
  _no_name_provided__48.prototype.invoke_420 = function (p1) {
    return this.invoke_74((!(p1 == null) ? isInterface(p1, Element_0) : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__48.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function Key_1() {
    Key_instance_0 = this;
    var tmp = Key_getInstance();
    AbstractCoroutineContextKey.call(this, tmp, _no_name_provided_$factory_34());
  }
  Key_1.$metadata$ = {
    simpleName: 'Key',
    kind: 'object',
    interfaces: []
  };
  var Key_instance_0;
  function Key_getInstance_0() {
    if (Key_instance_0 == null)
      new Key_1();
    return Key_instance_0;
  }
  function CoroutineDispatcher() {
    Key_getInstance_0();
    AbstractCoroutineContextElement.call(this, Key_getInstance());
  }
  CoroutineDispatcher.prototype.isDispatchNeeded_8 = function (context) {
    return true;
  };
  CoroutineDispatcher.prototype.interceptContinuation_9 = function (continuation) {
    return new DispatchedContinuation(this, continuation);
  };
  CoroutineDispatcher.prototype.releaseInterceptedContinuation_9 = function (continuation) {
    var tmp0_safe_receiver = (continuation instanceof DispatchedContinuation ? continuation : THROW_CCE())._get_reusableCancellableContinuation_();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.detachChild_0();
      Unit_getInstance();
    }
    Unit_getInstance();
  };
  CoroutineDispatcher.prototype.toString = function () {
    return '' + _get_classSimpleName_(this) + '@' + _get_hexAddress_(this);
  };
  CoroutineDispatcher.$metadata$ = {
    simpleName: 'CoroutineDispatcher',
    kind: 'class',
    interfaces: [ContinuationInterceptor]
  };
  function _no_name_provided_$factory_34() {
    var i = new _no_name_provided__48();
    return function (p1) {
      return i.invoke_74(p1);
    };
  }
  function Key_2() {
    Key_instance_1 = this;
  }
  Key_2.$metadata$ = {
    simpleName: 'Key',
    kind: 'object',
    interfaces: [Key_0]
  };
  var Key_instance_1;
  function Key_getInstance_1() {
    if (Key_instance_1 == null)
      new Key_2();
    return Key_instance_1;
  }
  function CoroutineExceptionHandler() {
  }
  CoroutineExceptionHandler.$metadata$ = {
    simpleName: 'CoroutineExceptionHandler',
    kind: 'interface',
    interfaces: [Element_0]
  };
  function handleCoroutineException(context, exception) {
    try {
      var tmp0_safe_receiver = context.get_63(Key_getInstance_1());
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.handleException_0(context, exception);
        return Unit_getInstance();
      }
      Unit_getInstance();
    } catch ($p) {
      if ($p instanceof Error) {
        handleCoroutineExceptionImpl(context, handlerException(exception, $p));
        return Unit_getInstance();
      } else {
        {
          throw $p;
        }
      }
    }
    handleCoroutineExceptionImpl(context, exception);
  }
  function handlerException(originalException, thrownException) {
    if (originalException === thrownException)
      return originalException;
    var tmp0_apply_0 = RuntimeException_init_$Create$('Exception while trying to handle coroutine exception', thrownException);
    return tmp0_apply_0;
  }
  function Key_3() {
    Key_instance_2 = this;
  }
  Key_3.$metadata$ = {
    simpleName: 'Key',
    kind: 'object',
    interfaces: [Key_0]
  };
  var Key_instance_2;
  function Key_getInstance_2() {
    if (Key_instance_2 == null)
      new Key_3();
    return Key_instance_2;
  }
  function CoroutineName(name) {
    Key_getInstance_2();
    AbstractCoroutineContextElement.call(this, Key_getInstance_2());
    this._name_0 = name;
  }
  CoroutineName.prototype.toString = function () {
    return '' + 'CoroutineName(' + this._name_0 + ')';
  };
  CoroutineName.prototype.hashCode = function () {
    return getStringHashCode(this._name_0);
  };
  CoroutineName.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CoroutineName))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof CoroutineName ? other : THROW_CCE();
    if (!(this._name_0 === tmp0_other_with_cast._name_0))
      return false;
    return true;
  };
  CoroutineName.$metadata$ = {
    simpleName: 'CoroutineName',
    kind: 'class',
    interfaces: []
  };
  function CoroutineScope() {
  }
  CoroutineScope.$metadata$ = {
    simpleName: 'CoroutineScope',
    kind: 'interface',
    interfaces: []
  };
  function cancel(_this_, cause) {
    var tmp0_elvis_lhs = _this_._get_coroutineContext__27().get_63(Key_getInstance_3());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_error_0 = '' + 'Scope cannot be cancelled because it does not have a job: ' + _this_;
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var job = tmp;
    job.cancel_22(cause);
  }
  function cancel$default(_this_, cause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    return cancel(_this_, cause);
  }
  function cancel_0(_this_, message, cause) {
    return cancel(_this_, new CancellationException(message, cause));
  }
  function GlobalScope() {
    GlobalScope_instance = this;
  }
  GlobalScope.prototype._get_coroutineContext__27 = function () {
    return EmptyCoroutineContext_getInstance();
  };
  GlobalScope.$metadata$ = {
    simpleName: 'GlobalScope',
    kind: 'object',
    interfaces: [CoroutineScope]
  };
  var GlobalScope_instance;
  function GlobalScope_getInstance() {
    if (GlobalScope_instance == null)
      new GlobalScope();
    return GlobalScope_instance;
  }
  function CoroutineScope_0(context) {
    var tmp;
    if (!(context.get_63(Key_getInstance_3()) == null)) {
      tmp = context;
    } else {
      tmp = context.plus_31(Job$default(null, 1, null));
    }
    return new ContextScope(tmp);
  }
  var CoroutineStart_DEFAULT_instance;
  var CoroutineStart_LAZY_instance;
  var CoroutineStart_ATOMIC_instance;
  var CoroutineStart_UNDISPATCHED_instance;
  var CoroutineStart_entriesInitialized;
  function CoroutineStart_initEntries() {
    if (CoroutineStart_entriesInitialized)
      return Unit_getInstance();
    CoroutineStart_entriesInitialized = true;
    CoroutineStart_DEFAULT_instance = new CoroutineStart('DEFAULT', 0);
    CoroutineStart_LAZY_instance = new CoroutineStart('LAZY', 1);
    CoroutineStart_ATOMIC_instance = new CoroutineStart('ATOMIC', 2);
    CoroutineStart_UNDISPATCHED_instance = new CoroutineStart('UNDISPATCHED', 3);
  }
  function CoroutineStart(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CoroutineStart.prototype.invoke_76 = function (block, receiver, completion) {
    var tmp0_subject = this;
    var tmp;
    if (tmp0_subject.equals(CoroutineStart_DEFAULT_getInstance())) {
      tmp = startCoroutineCancellable$default(block, receiver, completion, null, 4, null);
    } else if (tmp0_subject.equals(CoroutineStart_ATOMIC_getInstance())) {
      tmp = startCoroutine(block, receiver, completion);
    } else if (tmp0_subject.equals(CoroutineStart_UNDISPATCHED_getInstance())) {
      tmp = startCoroutineUndispatched(block, receiver, completion);
    } else if (tmp0_subject.equals(CoroutineStart_LAZY_getInstance())) {
      tmp = Unit_getInstance();
    } else {
      noWhenBranchMatchedException();
    }
    return tmp;
  };
  CoroutineStart.prototype._get_isLazy_ = function () {
    return this === CoroutineStart_LAZY_getInstance();
  };
  CoroutineStart.$metadata$ = {
    simpleName: 'CoroutineStart',
    kind: 'class',
    interfaces: []
  };
  function CoroutineStart_DEFAULT_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_DEFAULT_instance;
  }
  function CoroutineStart_LAZY_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_LAZY_instance;
  }
  function CoroutineStart_ATOMIC_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_ATOMIC_instance;
  }
  function CoroutineStart_UNDISPATCHED_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_UNDISPATCHED_instance;
  }
  function CopyableThrowable() {
  }
  CopyableThrowable.$metadata$ = {
    simpleName: 'CopyableThrowable',
    kind: 'interface',
    interfaces: []
  };
  function Deferred() {
  }
  Deferred.$metadata$ = {
    simpleName: 'Deferred',
    kind: 'interface',
    interfaces: [Job]
  };
  function delay(timeMillis, $cont) {
    if (timeMillis.compareTo_59(new Long(0, 0)) <= 0)
      return Unit_getInstance();
    var tmp0__anonymous__1_1 = $cont;
    var cancellable_2_2 = new CancellableContinuationImpl(intercepted(tmp0__anonymous__1_1), 1);
    cancellable_2_2.initCancellability_0();
    Companion_getInstance_15();
    if (timeMillis.compareTo_59(new Long(-1, 2147483647)) < 0) {
      _get_delay_(cancellable_2_2._get_context__113()).scheduleResumeAfterDelay_3(timeMillis, cancellable_2_2);
    } else {
    }
    return cancellable_2_2.getResult_0();
  }
  function Delay() {
  }
  Delay.$metadata$ = {
    simpleName: 'Delay',
    kind: 'interface',
    interfaces: []
  };
  function _get_delay_(_this_) {
    var tmp = _this_.get_63(Key_getInstance());
    var tmp0_elvis_lhs = (!(tmp == null) ? isInterface(tmp, Delay) : false) ? tmp : null;
    return tmp0_elvis_lhs == null ? _get_DefaultDelay_() : tmp0_elvis_lhs;
  }
  function delta($this, unconfined) {
    return unconfined ? new Long(0, 1) : new Long(1, 0);
  }
  function EventLoop() {
    CoroutineDispatcher.call(this);
    this._useCount = new Long(0, 0);
    this._shared = false;
    this._unconfinedQueue = null;
  }
  EventLoop.prototype.processUnconfinedEvent_0 = function () {
    var tmp0_elvis_lhs = this._unconfinedQueue;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    var tmp1_elvis_lhs = queue.removeFirstOrNull_4();
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var task = tmp_0;
    task.run_5();
    return true;
  };
  EventLoop.prototype.dispatchUnconfined_0 = function (task) {
    var tmp0_elvis_lhs = this._unconfinedQueue;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_also_0 = new ArrayQueue();
      this._unconfinedQueue = tmp0_also_0;
      tmp = tmp0_also_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    queue.addLast_17(task);
  };
  EventLoop.prototype._get_isUnconfinedLoopActive__0 = function () {
    return this._useCount.compareTo_59(delta(this, true)) >= 0;
  };
  EventLoop.prototype._get_isUnconfinedQueueEmpty__0 = function () {
    var tmp0_safe_receiver = this._unconfinedQueue;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_isEmpty__6();
    return tmp1_elvis_lhs == null ? true : tmp1_elvis_lhs;
  };
  EventLoop.prototype.incrementUseCount_0 = function (unconfined) {
    var tmp0_this = this;
    tmp0_this._useCount = tmp0_this._useCount.plus_59(delta(this, unconfined));
    if (!unconfined)
      this._shared = true;
  };
  EventLoop.prototype.decrementUseCount_0 = function (unconfined) {
    var tmp0_this = this;
    tmp0_this._useCount = tmp0_this._useCount.minus_30(delta(this, unconfined));
    if (this._useCount.compareTo_59(new Long(0, 0)) > 0)
      return Unit_getInstance();
    if (this._shared) {
      this.shutdown_0();
    }};
  EventLoop.prototype.shutdown_0 = function () {
  };
  EventLoop.$metadata$ = {
    simpleName: 'EventLoop',
    kind: 'class',
    interfaces: []
  };
  function ThreadLocalEventLoop() {
    ThreadLocalEventLoop_instance = this;
    this._ref = new CommonThreadLocal();
  }
  ThreadLocalEventLoop.prototype._get_eventLoop_ = function () {
    var tmp0_elvis_lhs = this._ref.get_46();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_also_0 = createEventLoop();
      ThreadLocalEventLoop_getInstance()._ref.set_3(tmp0_also_0);
      tmp = tmp0_also_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  ThreadLocalEventLoop.$metadata$ = {
    simpleName: 'ThreadLocalEventLoop',
    kind: 'object',
    interfaces: []
  };
  var ThreadLocalEventLoop_instance;
  function ThreadLocalEventLoop_getInstance() {
    if (ThreadLocalEventLoop_instance == null)
      new ThreadLocalEventLoop();
    return ThreadLocalEventLoop_instance;
  }
  function CompletionHandlerException(message, cause) {
    RuntimeException_init_$Init$_1(message, cause, this);
    captureStack(this, CompletionHandlerException);
  }
  CompletionHandlerException.$metadata$ = {
    simpleName: 'CompletionHandlerException',
    kind: 'class',
    interfaces: []
  };
  function CoroutinesInternalError(message, cause) {
    Error_init_$Init$_0(message, cause, this);
    captureStack(this, CoroutinesInternalError);
  }
  CoroutinesInternalError.$metadata$ = {
    simpleName: 'CoroutinesInternalError',
    kind: 'class',
    interfaces: []
  };
  function DisposableHandle() {
  }
  DisposableHandle.$metadata$ = {
    simpleName: 'DisposableHandle',
    kind: 'interface',
    interfaces: []
  };
  function Key_4() {
    Key_instance_3 = this;
    Key_getInstance_1();
    Unit_getInstance();
  }
  Key_4.$metadata$ = {
    simpleName: 'Key',
    kind: 'object',
    interfaces: [Key_0]
  };
  var Key_instance_3;
  function Key_getInstance_3() {
    if (Key_instance_3 == null)
      new Key_4();
    return Key_instance_3;
  }
  function Job() {
  }
  Job.prototype.cancel$default_17 = function (cause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    return $handler == null ? this.cancel_22(cause) : $handler(cause);
  };
  Job.prototype.invokeOnCompletion$default_11 = function (onCancelling, invokeImmediately, handler, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      onCancelling = false;
    if (!(($mask0 & 2) === 0))
      invokeImmediately = true;
    return $handler == null ? this.invokeOnCompletion_26(onCancelling, invokeImmediately, handler) : $handler(onCancelling, invokeImmediately, handler);
  };
  Job.$metadata$ = {
    simpleName: 'Job',
    kind: 'interface',
    interfaces: [Element_0]
  };
  function ChildJob() {
  }
  ChildJob.$metadata$ = {
    simpleName: 'ChildJob',
    kind: 'interface',
    interfaces: [Job]
  };
  function ParentJob() {
  }
  ParentJob.$metadata$ = {
    simpleName: 'ParentJob',
    kind: 'interface',
    interfaces: [Job]
  };
  function ChildHandle() {
  }
  ChildHandle.$metadata$ = {
    simpleName: 'ChildHandle',
    kind: 'interface',
    interfaces: [DisposableHandle]
  };
  function NonDisposableHandle() {
    NonDisposableHandle_instance = this;
  }
  NonDisposableHandle.prototype.dispose_29 = function () {
  };
  NonDisposableHandle.prototype.childCancelled_12 = function (cause) {
    return false;
  };
  NonDisposableHandle.prototype.toString = function () {
    return 'NonDisposableHandle';
  };
  NonDisposableHandle.$metadata$ = {
    simpleName: 'NonDisposableHandle',
    kind: 'object',
    interfaces: [DisposableHandle, ChildHandle]
  };
  var NonDisposableHandle_instance;
  function NonDisposableHandle_getInstance() {
    if (NonDisposableHandle_instance == null)
      new NonDisposableHandle();
    return NonDisposableHandle_instance;
  }
  function Job_0(parent) {
    return new JobImpl(parent);
  }
  function Job$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return Job_0(parent);
  }
  function cancel_1(_this_, message, cause) {
    return _this_.cancel_22(new CancellationException(message, cause));
  }
  function cancel_2(_this_, cause) {
    var tmp0_safe_receiver = _this_.get_63(Key_getInstance_3());
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.cancel_22(cause);
      Unit_getInstance();
    }
    Unit_getInstance();
  }
  var COMPLETING_ALREADY;
  var COMPLETING_WAITING_CHILDREN;
  var COMPLETING_RETRY;
  var TOO_LATE_TO_CANCEL;
  var SEALED;
  var EMPTY_NEW;
  var EMPTY_ACTIVE;
  function Empty(isActive) {
    this._isActive = isActive;
  }
  Empty.prototype._get_isActive__26 = function () {
    return this._isActive;
  };
  Empty.prototype._get_list__13 = function () {
    return null;
  };
  Empty.prototype.toString = function () {
    return '' + 'Empty{' + (this._isActive ? 'Active' : 'New') + '}';
  };
  Empty.$metadata$ = {
    simpleName: 'Empty',
    kind: 'class',
    interfaces: [Incomplete]
  };
  function Incomplete() {
  }
  Incomplete.$metadata$ = {
    simpleName: 'Incomplete',
    kind: 'interface',
    interfaces: []
  };
  function NodeList_0() {
    LinkedListHead.call(this);
  }
  NodeList_0.prototype._get_isActive__26 = function () {
    return true;
  };
  NodeList_0.prototype._get_list__13 = function () {
    return this;
  };
  NodeList_0.prototype.getString = function (state) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    tmp0_apply_0_1.append_6('List{');
    Unit_getInstance();
    tmp0_apply_0_1.append_6(state);
    Unit_getInstance();
    tmp0_apply_0_1.append_6('}[');
    Unit_getInstance();
    var first_3 = true;
    var cur_1_4 = this._get__next__2();
    while (!equals_1(cur_1_4, this)) {
      if (cur_1_4 instanceof JobNode) {
        var tmp0__anonymous__2_5 = cur_1_4;
        if (first_3)
          first_3 = false;
        else {
          tmp0_apply_0_1.append_6(', ');
          Unit_getInstance();
        }
        tmp0_apply_0_1.append_5(tmp0__anonymous__2_5);
        Unit_getInstance();
      } else {
      }
      cur_1_4 = cur_1_4.__next;
    }
    tmp0_apply_0_1.append_6(']');
    Unit_getInstance();
    return tmp0_apply_0_1.toString();
  };
  NodeList_0.prototype.toString = function () {
    return DEBUG ? this.getString('Active') : anyToString(this);
  };
  NodeList_0.$metadata$ = {
    simpleName: 'NodeList',
    kind: 'class',
    interfaces: [Incomplete]
  };
  function JobNode() {
    CompletionHandlerBase.call(this);
  }
  JobNode.prototype._get_job__8 = function () {
    var tmp = this._job;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('job');
    }
  };
  JobNode.prototype._get_isActive__26 = function () {
    return true;
  };
  JobNode.prototype._get_list__13 = function () {
    return null;
  };
  JobNode.prototype.dispose_29 = function () {
    return this._get_job__8().removeNode_9(this);
  };
  JobNode.prototype.toString = function () {
    return '' + _get_classSimpleName_(this) + '@' + _get_hexAddress_(this) + '[job@' + _get_hexAddress_(this._get_job__8()) + ']';
  };
  JobNode.$metadata$ = {
    simpleName: 'JobNode',
    kind: 'class',
    interfaces: [DisposableHandle, Incomplete]
  };
  function _set_exceptionsHolder_($this, value) {
    $this.__exceptionsHolder._value_2 = value;
  }
  function _get_exceptionsHolder_($this) {
    return $this.__exceptionsHolder._value_2;
  }
  function allocateList($this) {
    return ArrayList_init_$Create$_0(4);
  }
  function finalizeFinishingState($this, state, proposedUpdate) {
    var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
    var proposedException = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._cause;
    var wasCancelling = false;
    wasCancelling = state._get_isCancelling_();
    var exceptions_2 = state.sealLocked(proposedException);
    var finalCause_3 = getFinalRootCause($this, state, exceptions_2);
    if (!(finalCause_3 == null))
      addSuppressedExceptions($this, finalCause_3, exceptions_2);
    var finalException = finalCause_3;
    var tmp;
    if (finalException == null) {
      tmp = proposedUpdate;
    } else if (finalException === proposedException) {
      tmp = proposedUpdate;
    } else {
      tmp = CompletedExceptionally_init_$Create$(finalException, false, 2, null);
    }
    var finalState = tmp;
    if (!(finalException == null)) {
      var handled = cancelParent($this, finalException) ? true : $this.handleJobException_9(finalException);
      if (handled) {
        (finalState instanceof CompletedExceptionally ? finalState : THROW_CCE()).makeHandled_0();
        Unit_getInstance();
      }}if (!wasCancelling)
      $this.onCancelling_9(finalException);
    $this.onCompletionInternal_9(finalState);
    var casSuccess = $this.__state_0.atomicfu$compareAndSet(state, boxIncomplete(finalState));
    completeStateFinalization($this, state, finalState);
    return finalState;
  }
  function getFinalRootCause($this, state, exceptions) {
    if (exceptions.isEmpty_50()) {
      if (state._get_isCancelling_()) {
        var tmp0_defaultCancellationException_0 = null;
        var tmp1_defaultCancellationException_0 = null;
        var tmp0_elvis_lhs_1 = tmp0_defaultCancellationException_0;
        return new JobCancellationException(tmp0_elvis_lhs_1 == null ? $this.cancellationExceptionMessage_9() : tmp0_elvis_lhs_1, tmp1_defaultCancellationException_0, $this);
      }return null;
    }var tmp$ret$0;
    l$ret$1: do {
      var tmp0_iterator_1 = exceptions.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (!(element_2 instanceof CancellationException)) {
          tmp$ret$0 = element_2;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = null;
    }
     while (false);
    var firstNonCancellation = tmp$ret$0;
    if (!(firstNonCancellation == null))
      return firstNonCancellation;
    var first_1 = exceptions.get_77(0);
    if (first_1 instanceof TimeoutCancellationException) {
      var tmp$ret$2;
      l$ret$3: do {
        var tmp0_iterator_1_0 = exceptions.iterator_62();
        while (tmp0_iterator_1_0.hasNext_29()) {
          var element_2_0 = tmp0_iterator_1_0.next_31();
          var tmp;
          if (!(element_2_0 === first_1)) {
            tmp = element_2_0 instanceof TimeoutCancellationException;
          } else {
            tmp = false;
          }
          if (tmp) {
            tmp$ret$2 = element_2_0;
            break l$ret$3;
          } else {
          }
        }
        tmp$ret$2 = null;
      }
       while (false);
      var detailedTimeoutException = tmp$ret$2;
      if (!(detailedTimeoutException == null))
        return detailedTimeoutException;
    } else {
    }
    return first_1;
  }
  function addSuppressedExceptions($this, rootCause, exceptions) {
    if (exceptions._get_size__48() <= 1)
      return Unit_getInstance();
    var seenExceptions = identitySet(exceptions._get_size__48());
    var unwrappedCause = unwrap(rootCause);
    var tmp0_iterator = exceptions.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var exception = tmp0_iterator.next_31();
      var unwrapped = unwrap(exception);
      var tmp;
      var tmp_0;
      if (!(unwrapped === rootCause) ? !(unwrapped === unwrappedCause) : false) {
        tmp_0 = !(unwrapped instanceof CancellationException);
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = seenExceptions.add_32(unwrapped);
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
      } else {
      }
    }
  }
  function tryFinalizeSimpleState($this, state, update) {
    if (!$this.__state_0.atomicfu$compareAndSet(state, boxIncomplete(update)))
      return false;
    $this.onCancelling_9(null);
    $this.onCompletionInternal_9(update);
    completeStateFinalization($this, state, update);
    return true;
  }
  function completeStateFinalization($this, state, update) {
    var tmp0_safe_receiver = $this._get_parentHandle__9();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.dispose_29();
      $this._set_parentHandle__9(NonDisposableHandle_getInstance());
      Unit_getInstance();
    }
    Unit_getInstance();
    var tmp1_safe_receiver = update instanceof CompletedExceptionally ? update : null;
    var cause = tmp1_safe_receiver == null ? null : tmp1_safe_receiver._cause;
    if (state instanceof JobNode) {
      try {
        state.invoke(cause);
      } catch ($p) {
        if ($p instanceof Error) {
          $this.handleOnCompletionException_9(new CompletionHandlerException('' + 'Exception in completion handler ' + state + ' for ' + $this, $p));
        } else {
          {
            throw $p;
          }
        }
      }
    } else {
      {
        var tmp2_safe_receiver = state._get_list__13();
        if (tmp2_safe_receiver == null)
          null;
        else {
          notifyCompletion(tmp2_safe_receiver, $this, cause);
          Unit_getInstance();
        }
        Unit_getInstance();
      }
    }
  }
  function notifyCancelling($this, list, cause) {
    $this.onCancelling_9(cause);
    var exception_1 = null;
    var cur_1 = list._get__next__2();
    while (!equals_1(cur_1, list)) {
      if (cur_1 instanceof JobCancellingNode) {
        var tmp0__anonymous__2_2 = cur_1;
        try {
          tmp0__anonymous__2_2.invoke(cause);
        } catch ($p) {
          if ($p instanceof Error) {
            var tmp0_safe_receiver_5_5 = exception_1;
            var tmp;
            if (tmp0_safe_receiver_5_5 == null) {
              tmp = null;
            } else {
              tmp = tmp0_safe_receiver_5_5;
            }
            var tmp1_elvis_lhs_4_4 = tmp;
            if (tmp1_elvis_lhs_4_4 == null) {
              exception_1 = new CompletionHandlerException('' + 'Exception in completion handler ' + tmp0__anonymous__2_2 + ' for ' + $this, $p);
              Unit_getInstance();
            } else
              tmp1_elvis_lhs_4_4;
            Unit_getInstance();
          } else {
            {
              throw $p;
            }
          }
        }
      } else {
      }
      cur_1 = cur_1.__next;
    }
    var tmp0_safe_receiver_8 = exception_1;
    if (tmp0_safe_receiver_8 == null)
      null;
    else {
      $this.handleOnCompletionException_9(tmp0_safe_receiver_8);
      Unit_getInstance();
    }
    Unit_getInstance();
    cancelParent($this, cause);
    Unit_getInstance();
  }
  function cancelParent($this, cause) {
    if ($this._get_isScopedCoroutine__9())
      return true;
    var isCancellation = cause instanceof CancellationException;
    var parent = $this._get_parentHandle__9();
    if (parent === null ? true : parent === NonDisposableHandle_getInstance()) {
      return isCancellation;
    }return parent.childCancelled_12(cause) ? true : isCancellation;
  }
  function notifyCompletion(_this_, $this, cause) {
    var exception_1 = null;
    var cur_1 = _this_._get__next__2();
    while (!equals_1(cur_1, _this_)) {
      if (cur_1 instanceof JobNode) {
        var tmp0__anonymous__2_2 = cur_1;
        try {
          tmp0__anonymous__2_2.invoke(cause);
        } catch ($p) {
          if ($p instanceof Error) {
            var tmp0_safe_receiver_5_5 = exception_1;
            var tmp;
            if (tmp0_safe_receiver_5_5 == null) {
              tmp = null;
            } else {
              tmp = tmp0_safe_receiver_5_5;
            }
            var tmp1_elvis_lhs_4_4 = tmp;
            if (tmp1_elvis_lhs_4_4 == null) {
              exception_1 = new CompletionHandlerException('' + 'Exception in completion handler ' + tmp0__anonymous__2_2 + ' for ' + $this, $p);
              Unit_getInstance();
            } else
              tmp1_elvis_lhs_4_4;
            Unit_getInstance();
          } else {
            {
              throw $p;
            }
          }
        }
      } else {
      }
      cur_1 = cur_1.__next;
    }
    var tmp0_safe_receiver_8 = exception_1;
    if (tmp0_safe_receiver_8 == null)
      null;
    else {
      $this.handleOnCompletionException_9(tmp0_safe_receiver_8);
      Unit_getInstance();
    }
    return Unit_getInstance();
  }
  function startInternal($this, state) {
    var tmp0_subject = state;
    if (tmp0_subject instanceof Empty) {
      if (state._isActive)
        return 0;
      if (!$this.__state_0.atomicfu$compareAndSet(state, EMPTY_ACTIVE))
        return -1;
      $this.onStartInternal_9();
      return 1;
    } else {
      if (tmp0_subject instanceof InactiveNodeList) {
        if (!$this.__state_0.atomicfu$compareAndSet(state, state._list_0))
          return -1;
        $this.onStartInternal_9();
        return 1;
      } else {
        return 0;
      }
    }
  }
  function makeNode($this, handler, onCancelling) {
    var tmp;
    if (onCancelling) {
      var tmp0_elvis_lhs = handler instanceof JobCancellingNode ? handler : null;
      tmp = tmp0_elvis_lhs == null ? new InvokeOnCancelling(handler) : tmp0_elvis_lhs;
    } else {
      var tmp1_safe_receiver = handler instanceof JobNode ? handler : null;
      var tmp_0;
      if (tmp1_safe_receiver == null) {
        tmp_0 = null;
      } else {
        tmp_0 = tmp1_safe_receiver;
      }
      var tmp2_elvis_lhs = tmp_0;
      tmp = tmp2_elvis_lhs == null ? new InvokeOnCompletion(handler) : tmp2_elvis_lhs;
    }
    var node = tmp;
    node._job = $this;
    return node;
  }
  function addLastAtomic($this, expect, list, node) {
    var tmp$ret$0;
    l$ret$1: do {
      if (!($this._get_state__15() === expect)) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      list.addLast_26(node);
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  }
  function promoteEmptyToNodeList($this, state) {
    var list = new NodeList_0();
    var update = state._isActive ? list : new InactiveNodeList(list);
    $this.__state_0.atomicfu$compareAndSet(state, update);
    Unit_getInstance();
  }
  function promoteSingleToNodeList($this, state) {
    state.addOneIfEmpty_9(new NodeList_0());
    Unit_getInstance();
    var list = state.__next;
    $this.__state_0.atomicfu$compareAndSet(state, list);
    Unit_getInstance();
  }
  function joinInternal($this) {
    while (true) {
      var tmp0__anonymous__1 = $this._get_state__15();
      if (!(!(tmp0__anonymous__1 == null) ? isInterface(tmp0__anonymous__1, Incomplete) : false))
        return false;
      else {
      }
      if (startInternal($this, tmp0__anonymous__1) >= 0)
        return true;
    }
    Unit_getInstance();
  }
  function joinSuspend($this, $cont) {
    var tmp0__anonymous__1_1 = $cont;
    var cancellable_2_2 = new CancellableContinuationImpl(intercepted(tmp0__anonymous__1_1), 1);
    cancellable_2_2.initCancellability_0();
    var tmp0__get_asHandler__0_4 = new ResumeOnCompletion(cancellable_2_2);
    disposeOnCancellation(cancellable_2_2, $this.invokeOnCompletion_27(tmp0__get_asHandler__0_4));
    return cancellable_2_2.getResult_0();
  }
  function cancelMakeCompleting($this, cause) {
    while (true) {
      var tmp0__anonymous__1 = $this._get_state__15();
      var tmp;
      if (!(!(tmp0__anonymous__1 == null) ? isInterface(tmp0__anonymous__1, Incomplete) : false)) {
        tmp = true;
      } else {
        {
          var tmp_0;
          if (tmp0__anonymous__1 instanceof Finishing) {
            tmp_0 = tmp0__anonymous__1._get_isCompleting_();
          } else {
            {
              tmp_0 = false;
            }
          }
          tmp = tmp_0;
        }
      }
      if (tmp) {
        return COMPLETING_ALREADY;
      } else {
      }
      var tmp_1 = createCauseException($this, cause);
      var proposedUpdate_2 = CompletedExceptionally_init_$Create$(tmp_1, false, 2, null);
      var finalState_3 = tryMakeCompleting($this, tmp0__anonymous__1, proposedUpdate_2);
      if (!(finalState_3 === COMPLETING_RETRY))
        return finalState_3;
    }
    Unit_getInstance();
  }
  function createCauseException($this, cause) {
    var tmp0_subject = cause;
    var tmp;
    if (tmp0_subject == null ? true : tmp0_subject instanceof Error) {
      var tmp1_elvis_lhs = cause;
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var tmp0_defaultCancellationException_0 = null;
        var tmp1_defaultCancellationException_0 = null;
        var tmp0_elvis_lhs_1 = tmp0_defaultCancellationException_0;
        tmp_0 = new JobCancellationException(tmp0_elvis_lhs_1 == null ? $this.cancellationExceptionMessage_9() : tmp0_elvis_lhs_1, tmp1_defaultCancellationException_0, $this);
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      {
        tmp = ((!(cause == null) ? isInterface(cause, ParentJob) : false) ? cause : THROW_CCE()).getChildJobCancellationCause_10();
      }
    }
    return tmp;
  }
  function makeCancelling($this, cause) {
    var causeExceptionCache = null;
    while (true) {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp0__anonymous__1 = $this._get_state__15();
        var tmp0_subject_2 = tmp0__anonymous__1;
        if (tmp0_subject_2 instanceof Finishing) {
          if (tmp0__anonymous__1._get_isSealed_())
            return TOO_LATE_TO_CANCEL;
          var wasCancelling_2_4 = tmp0__anonymous__1._get_isCancelling_();
          if (!(cause == null) ? true : !wasCancelling_2_4) {
            var tmp0_elvis_lhs_4_6 = causeExceptionCache;
            var tmp;
            if (tmp0_elvis_lhs_4_6 == null) {
              var tmp0_also_0_5_7 = createCauseException($this, cause);
              causeExceptionCache = tmp0_also_0_5_7;
              tmp = tmp0_also_0_5_7;
            } else {
              tmp = tmp0_elvis_lhs_4_6;
            }
            var causeException_3_5 = tmp;
            tmp0__anonymous__1.addExceptionLocked(causeException_3_5);
          }var tmp1_takeIf_0_6_8 = tmp0__anonymous__1._get_rootCause_();
          var tmp_0;
          if (!wasCancelling_2_4) {
            tmp_0 = tmp1_takeIf_0_6_8;
          } else {
            {
              tmp_0 = null;
            }
          }
          var notifyRootCause_3 = tmp_0;
          var tmp1_safe_receiver_9 = notifyRootCause_3;
          if (tmp1_safe_receiver_9 == null)
            null;
          else {
            notifyCancelling($this, tmp0__anonymous__1._list, tmp1_safe_receiver_9);
            Unit_getInstance();
          }
          Unit_getInstance();
          return COMPLETING_ALREADY;
        } else {
          if (!(tmp0_subject_2 == null) ? isInterface(tmp0_subject_2, Incomplete) : false) {
            var tmp2_elvis_lhs_11 = causeExceptionCache;
            var tmp_1;
            if (tmp2_elvis_lhs_11 == null) {
              var tmp0_also_0_12 = createCauseException($this, cause);
              causeExceptionCache = tmp0_also_0_12;
              tmp_1 = tmp0_also_0_12;
            } else {
              tmp_1 = tmp2_elvis_lhs_11;
            }
            var causeException_10 = tmp_1;
            if (tmp0__anonymous__1._get_isActive__26()) {
              if (tryMakeCancelling($this, tmp0__anonymous__1, causeException_10))
                return COMPLETING_ALREADY;
            } else {
              var finalState_13 = tryMakeCompleting($this, tmp0__anonymous__1, CompletedExceptionally_init_$Create$(causeException_10, false, 2, null));
              if (finalState_13 === COMPLETING_ALREADY) {
                var tmp1_error_0_14 = '' + 'Cannot happen in ' + tmp0__anonymous__1;
                throw IllegalStateException_init_$Create$(toString_1(tmp1_error_0_14));
              } else if (finalState_13 === COMPLETING_RETRY) {
                tmp$ret$0 = Unit_getInstance();
                break l$ret$1;
              } else
                return finalState_13;
            }
          } else {
            return TOO_LATE_TO_CANCEL;
          }
        }
      }
       while (false);
    }
    Unit_getInstance();
  }
  function getOrPromoteCancellingList($this, state) {
    var tmp1_elvis_lhs = state._get_list__13();
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_subject = state;
      var tmp_0;
      if (tmp0_subject instanceof Empty) {
        tmp_0 = new NodeList_0();
      } else {
        if (tmp0_subject instanceof JobNode) {
          promoteSingleToNodeList($this, state);
          tmp_0 = null;
        } else {
          {
            var tmp0_error_0 = '' + 'State should have list: ' + state;
            throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
          }
        }
      }
      tmp = tmp_0;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function tryMakeCancelling($this, state, rootCause) {
    var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var list = tmp;
    var cancelling = new Finishing(list, false, rootCause);
    if (!$this.__state_0.atomicfu$compareAndSet(state, cancelling))
      return false;
    notifyCancelling($this, list, rootCause);
    return true;
  }
  function tryMakeCompleting($this, state, proposedUpdate) {
    if (!(!(state == null) ? isInterface(state, Incomplete) : false))
      return COMPLETING_ALREADY;
    else {
    }
    var tmp;
    var tmp_0;
    var tmp_1;
    if (state instanceof Empty) {
      tmp_1 = true;
    } else {
      {
        tmp_1 = state instanceof JobNode;
      }
    }
    if (tmp_1) {
      tmp_0 = !(state instanceof ChildHandleNode);
    } else {
      {
        tmp_0 = false;
      }
    }
    if (tmp_0) {
      tmp = !(proposedUpdate instanceof CompletedExceptionally);
    } else {
      {
        tmp = false;
      }
    }
    if (tmp) {
      if (tryFinalizeSimpleState($this, state, proposedUpdate)) {
        return proposedUpdate;
      }return COMPLETING_RETRY;
    } else {
    }
    return tryMakeCompletingSlowPath($this, state, proposedUpdate);
  }
  function tryMakeCompletingSlowPath($this, state, proposedUpdate) {
    var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return COMPLETING_RETRY;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var list = tmp;
    var tmp1_elvis_lhs = state instanceof Finishing ? state : null;
    var finishing = tmp1_elvis_lhs == null ? new Finishing(list, false, null) : tmp1_elvis_lhs;
    var notifyRootCause = null;
    if (finishing._get_isCompleting_())
      return COMPLETING_ALREADY;
    finishing._set_isCompleting_(true);
    if (!(finishing === state)) {
      if (!$this.__state_0.atomicfu$compareAndSet(state, finishing))
        return COMPLETING_RETRY;
    }var wasCancelling_2 = finishing._get_isCancelling_();
    var tmp0_safe_receiver_3 = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
    if (tmp0_safe_receiver_3 == null)
      null;
    else {
      finishing.addExceptionLocked(tmp0_safe_receiver_3._cause);
      Unit_getInstance();
    }
    Unit_getInstance();
    var tmp0_takeIf_0_4 = finishing._get_rootCause_();
    var tmp_0;
    if (!wasCancelling_2) {
      tmp_0 = tmp0_takeIf_0_4;
    } else {
      {
        tmp_0 = null;
      }
    }
    notifyRootCause = tmp_0;
    var tmp2_safe_receiver = notifyRootCause;
    if (tmp2_safe_receiver == null)
      null;
    else {
      notifyCancelling($this, list, tmp2_safe_receiver);
      Unit_getInstance();
    }
    Unit_getInstance();
    var child = firstChild($this, state);
    if (!(child == null) ? tryWaitForChild($this, finishing, child, proposedUpdate) : false)
      return COMPLETING_WAITING_CHILDREN;
    return finalizeFinishingState($this, finishing, proposedUpdate);
  }
  function _get_exceptionOrNull_(_this_, $this) {
    var tmp0_safe_receiver = _this_ instanceof CompletedExceptionally ? _this_ : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver._cause;
  }
  function firstChild($this, state) {
    var tmp1_elvis_lhs = state instanceof ChildHandleNode ? state : null;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_safe_receiver = state._get_list__13();
      tmp = tmp0_safe_receiver == null ? null : nextChild(tmp0_safe_receiver, $this);
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function tryWaitForChild($this, state, child, proposedUpdate) {
    var $this_0 = $this;
    var state_0 = state;
    var child_0 = child;
    var proposedUpdate_0 = proposedUpdate;
    while (true) {
      var $this_1 = $this_0;
      var state_1 = state_0;
      var child_1 = child_0;
      var proposedUpdate_1 = proposedUpdate_0;
      var tmp0__get_asHandler__0 = new ChildCompletion($this_1, state_1, child_1, proposedUpdate_1);
      var handle = child_1._childJob.invokeOnCompletion$default_11(false, false, tmp0__get_asHandler__0, 1, null);
      if (!(handle === NonDisposableHandle_getInstance()))
        return true;
      var tmp0_elvis_lhs = nextChild(child_1, $this_1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var nextChild_0 = tmp;
      $this_0 = $this_1;
      state_0 = state_1;
      child_0 = nextChild_0;
      proposedUpdate_0 = proposedUpdate_1;
      continue;
    }
  }
  function continueCompleting($this, state, lastChild, proposedUpdate) {
    var waitChild = nextChild(lastChild, $this);
    if (!(waitChild == null) ? tryWaitForChild($this, state, waitChild, proposedUpdate) : false)
      return Unit_getInstance();
    var finalState = finalizeFinishingState($this, state, proposedUpdate);
    $this.afterCompletion_9(finalState);
  }
  function nextChild(_this_, $this) {
    var cur = _this_;
    $l$break: while (true) {
      var tmp0__get_isRemoved__0 = cur;
      if (!tmp0__get_isRemoved__0.__removed) {
        break $l$break;
      }var tmp1__get_prevNode__0 = cur;
      cur = tmp1__get_prevNode__0.__prev;
    }
    while (true) {
      var tmp2__get_nextNode__0 = cur;
      cur = tmp2__get_nextNode__0.__next;
      var tmp3__get_isRemoved__0 = cur;
      if (tmp3__get_isRemoved__0.__removed)
        continue;
      else {
      }
      if (cur instanceof ChildHandleNode)
        return cur;
      else {
      }
      if (cur instanceof NodeList_0)
        return null;
      else {
      }
    }
  }
  function stateString($this, state) {
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof Finishing) {
      tmp = state._get_isCancelling_() ? 'Cancelling' : state._get_isCompleting_() ? 'Completing' : 'Active';
    } else {
      if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
        tmp = state._get_isActive__26() ? 'Active' : 'New';
      } else {
        if (tmp0_subject instanceof CompletedExceptionally) {
          tmp = 'Cancelled';
        } else {
          {
            tmp = 'Completed';
          }
        }
      }
    }
    return tmp;
  }
  function Finishing(list, isCompleting, rootCause) {
    this._list = list;
    this.__isCompleting = atomic_0(isCompleting);
    this.__rootCause = atomic(rootCause);
    this.__exceptionsHolder = atomic(null);
  }
  Finishing.prototype._get_list__13 = function () {
    return this._list;
  };
  Finishing.prototype._set_isCompleting_ = function (value) {
    this.__isCompleting._value_3 = value;
  };
  Finishing.prototype._get_isCompleting_ = function () {
    return this.__isCompleting._value_3;
  };
  Finishing.prototype._set_rootCause_ = function (value) {
    this.__rootCause._value_2 = value;
  };
  Finishing.prototype._get_rootCause_ = function () {
    return this.__rootCause._value_2;
  };
  Finishing.prototype._get_isSealed_ = function () {
    return _get_exceptionsHolder_(this) === SEALED;
  };
  Finishing.prototype._get_isCancelling_ = function () {
    return !(this._get_rootCause_() == null);
  };
  Finishing.prototype._get_isActive__26 = function () {
    return this._get_rootCause_() == null;
  };
  Finishing.prototype.sealLocked = function (proposedException) {
    var eh = _get_exceptionsHolder_(this);
    var tmp;
    if (eh == null) {
      tmp = allocateList(this);
    } else {
      if (eh instanceof Error) {
        var tmp0_also_0 = allocateList(this);
        tmp0_also_0.add_32(eh);
        Unit_getInstance();
        tmp = tmp0_also_0;
      } else {
        if (eh instanceof ArrayList) {
          tmp = eh instanceof ArrayList ? eh : THROW_CCE();
        } else {
          {
            var tmp1_error_0 = '' + 'State is ' + eh;
            throw IllegalStateException_init_$Create$(toString_1(tmp1_error_0));
          }
        }
      }
    }
    var list = tmp;
    var rootCause = this._get_rootCause_();
    var tmp0_safe_receiver = rootCause;
    if (tmp0_safe_receiver == null)
      null;
    else {
      list.add_26(0, tmp0_safe_receiver);
      Unit_getInstance();
    }
    Unit_getInstance();
    if (!(proposedException == null) ? !equals_1(proposedException, rootCause) : false) {
      list.add_32(proposedException);
      Unit_getInstance();
    }_set_exceptionsHolder_(this, SEALED);
    return list;
  };
  Finishing.prototype.addExceptionLocked = function (exception) {
    var rootCause = this._get_rootCause_();
    if (rootCause == null) {
      this._set_rootCause_(exception);
      return Unit_getInstance();
    }if (exception === rootCause)
      return Unit_getInstance();
    var eh = _get_exceptionsHolder_(this);
    if (eh == null)
      _set_exceptionsHolder_(this, exception);
    else {
      if (eh instanceof Error) {
        if (exception === eh)
          return Unit_getInstance();
        var tmp0_apply_0 = allocateList(this);
        tmp0_apply_0.add_32(eh);
        Unit_getInstance();
        tmp0_apply_0.add_32(exception);
        Unit_getInstance();
        _set_exceptionsHolder_(this, tmp0_apply_0);
      } else {
        if (eh instanceof ArrayList) {
          (eh instanceof ArrayList ? eh : THROW_CCE()).add_32(exception);
          Unit_getInstance();
        } else {
          {
            var tmp1_error_0 = '' + 'State is ' + eh;
            throw IllegalStateException_init_$Create$(toString_1(tmp1_error_0));
          }
        }
      }
    }
  };
  Finishing.prototype.toString = function () {
    return '' + 'Finishing[cancelling=' + this._get_isCancelling_() + ', completing=' + this._get_isCompleting_() + ', rootCause=' + this._get_rootCause_() + ', exceptions=' + _get_exceptionsHolder_(this) + ', list=' + this._list + ']';
  };
  Finishing.$metadata$ = {
    simpleName: 'Finishing',
    kind: 'class',
    interfaces: [Incomplete]
  };
  function ChildCompletion(parent, state, child, proposedUpdate) {
    JobNode.call(this);
    this._parent = parent;
    this._state_1 = state;
    this._child = child;
    this._proposedUpdate = proposedUpdate;
  }
  ChildCompletion.prototype.invoke_310 = function (cause) {
    continueCompleting(this._parent, this._state_1, this._child, this._proposedUpdate);
  };
  ChildCompletion.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  ChildCompletion.$metadata$ = {
    simpleName: 'ChildCompletion',
    kind: 'class',
    interfaces: []
  };
  function AwaitContinuation(delegate, job) {
    CancellableContinuationImpl.call(this, delegate, 1);
    this._job_0 = job;
  }
  AwaitContinuation.prototype.getContinuationCancellationCause_0 = function (parent) {
    var state = this._job_0._get_state__15();
    if (state instanceof Finishing) {
      var tmp0_safe_receiver = state._get_rootCause_();
      if (tmp0_safe_receiver == null)
        null;
      else {
        return tmp0_safe_receiver;
      }
      Unit_getInstance();
    } else {
    }
    if (state instanceof CompletedExceptionally)
      return state._cause;
    else {
    }
    return parent.getCancellationException_11();
  };
  AwaitContinuation.prototype.nameString_11 = function () {
    return 'AwaitContinuation';
  };
  AwaitContinuation.$metadata$ = {
    simpleName: 'AwaitContinuation',
    kind: 'class',
    interfaces: []
  };
  function awaitSuspend($this, $cont) {
    var tmp0__anonymous__1 = $cont;
    var cont_2 = new AwaitContinuation(intercepted(tmp0__anonymous__1), $this);
    var tmp0__get_asHandler__0_3 = new ResumeAwaitOnCompletion(cont_2);
    disposeOnCancellation(cont_2, $this.invokeOnCompletion_27(tmp0__get_asHandler__0_3));
    return cont_2.getResult_0();
  }
  function JobSupport(active) {
    this.__state_0 = atomic(active ? EMPTY_ACTIVE : EMPTY_NEW);
    this.__parentHandle_0 = atomic(null);
  }
  JobSupport.prototype._get_key__52 = function () {
    return Key_getInstance_3();
  };
  JobSupport.prototype._set_parentHandle__9 = function (value) {
    this.__parentHandle_0._value_2 = value;
  };
  JobSupport.prototype._get_parentHandle__9 = function () {
    return this.__parentHandle_0._value_2;
  };
  JobSupport.prototype.initParentJobInternal_9 = function (parent) {
    if (parent == null) {
      this._set_parentHandle__9(NonDisposableHandle_getInstance());
      return Unit_getInstance();
    }parent.start_18();
    Unit_getInstance();
    var handle = parent.attachChild_11(this);
    this._set_parentHandle__9(handle);
    if (this._get_isCompleted__12()) {
      handle.dispose_29();
      this._set_parentHandle__9(NonDisposableHandle_getInstance());
    }};
  JobSupport.prototype._get_state__15 = function () {
    var tmp0_loop_0 = this.__state_0;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_2;
      if (!(tmp1__anonymous__1 instanceof OpDescriptor))
        return tmp1__anonymous__1;
      else {
      }
      tmp1__anonymous__1.perform_1(this);
      Unit_getInstance();
    }
    Unit_getInstance();
  };
  JobSupport.prototype._get_isActive__26 = function () {
    var state = this._get_state__15();
    var tmp;
    if (!(state == null) ? isInterface(state, Incomplete) : false) {
      tmp = state._get_isActive__26();
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  JobSupport.prototype._get_isCompleted__12 = function () {
    var tmp = this._get_state__15();
    return !(!(tmp == null) ? isInterface(tmp, Incomplete) : false);
  };
  JobSupport.prototype.start_18 = function () {
    while (true) {
      var tmp0__anonymous__1 = this._get_state__15();
      var tmp0_subject_2 = startInternal(this, tmp0__anonymous__1);
      if (tmp0_subject_2 === 0)
        return false;
      else if (tmp0_subject_2 === 1)
        return true;
    }
    Unit_getInstance();
  };
  JobSupport.prototype.onStartInternal_9 = function () {
  };
  JobSupport.prototype.getCancellationException_11 = function () {
    var state = this._get_state__15();
    var tmp;
    if (state instanceof Finishing) {
      var tmp0_safe_receiver = state._get_rootCause_();
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.toCancellationException_9(tmp0_safe_receiver, '' + _get_classSimpleName_(this) + ' is cancelling');
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var tmp0_error_0 = '' + 'Job is still new or active: ' + this;
        throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      if (!(state == null) ? isInterface(state, Incomplete) : false) {
        var tmp1_error_0 = '' + 'Job is still new or active: ' + this;
        throw IllegalStateException_init_$Create$(toString_1(tmp1_error_0));
      } else {
        if (state instanceof CompletedExceptionally) {
          var tmp_1 = state._cause;
          tmp = this.toCancellationException$default_9(tmp_1, null, 1, null);
        } else {
          {
            tmp = new JobCancellationException('' + _get_classSimpleName_(this) + ' has completed normally', null, this);
          }
        }
      }
    }
    return tmp;
  };
  JobSupport.prototype.toCancellationException_9 = function (_this__0, message) {
    var tmp0_elvis_lhs = _this__0 instanceof CancellationException ? _this__0 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_elvis_lhs_1 = message;
      tmp = new JobCancellationException(tmp0_elvis_lhs_1 == null ? this.cancellationExceptionMessage_9() : tmp0_elvis_lhs_1, _this__0, this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  JobSupport.prototype.toCancellationException$default_9 = function (_this__0, message, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      message = null;
    return this.toCancellationException_9(_this__0, message);
  };
  JobSupport.prototype.invokeOnCompletion_27 = function (handler) {
    return this.invokeOnCompletion_26(false, true, handler);
  };
  JobSupport.prototype.invokeOnCompletion_26 = function (onCancelling, invokeImmediately, handler) {
    var node = makeNode(this, handler, onCancelling);
    while (true) {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp0__anonymous__1 = this._get_state__15();
        var tmp0_subject_2 = tmp0__anonymous__1;
        if (tmp0_subject_2 instanceof Empty) {
          if (tmp0__anonymous__1._isActive) {
            if (this.__state_0.atomicfu$compareAndSet(tmp0__anonymous__1, node))
              return node;
          } else
            promoteEmptyToNodeList(this, tmp0__anonymous__1);
        } else {
          if (!(tmp0_subject_2 == null) ? isInterface(tmp0_subject_2, Incomplete) : false) {
            var list_3 = tmp0__anonymous__1._get_list__13();
            if (list_3 == null) {
              promoteSingleToNodeList(this, tmp0__anonymous__1 instanceof JobNode ? tmp0__anonymous__1 : THROW_CCE());
            } else {
              var rootCause_4 = null;
              var handle_5 = NonDisposableHandle_getInstance();
              var tmp;
              if (onCancelling) {
                tmp = tmp0__anonymous__1 instanceof Finishing;
              } else {
                tmp = false;
              }
              if (tmp) {
                rootCause_4 = tmp0__anonymous__1._get_rootCause_();
                var tmp_0;
                if (rootCause_4 == null) {
                  tmp_0 = true;
                } else {
                  var tmp_1;
                  if (handler instanceof ChildHandleNode) {
                    tmp_1 = !tmp0__anonymous__1._get_isCompleting_();
                  } else {
                    {
                      tmp_1 = false;
                    }
                  }
                  tmp_0 = tmp_1;
                }
                if (tmp_0) {
                  if (!addLastAtomic(this, tmp0__anonymous__1, list_3, node)) {
                    tmp$ret$0 = Unit_getInstance();
                    break l$ret$1;
                  }if (rootCause_4 == null)
                    return node;
                  handle_5 = node;
                } else {
                }
              } else {
              }
              if (!(rootCause_4 == null)) {
                if (invokeImmediately)
                  invokeIt(handler, rootCause_4);
                return handle_5;
              } else {
                if (addLastAtomic(this, tmp0__anonymous__1, list_3, node))
                  return node;
              }
            }
          } else {
            {
              if (invokeImmediately) {
                var tmp1_safe_receiver_6 = tmp0__anonymous__1 instanceof CompletedExceptionally ? tmp0__anonymous__1 : null;
                invokeIt(handler, tmp1_safe_receiver_6 == null ? null : tmp1_safe_receiver_6._cause);
              }return NonDisposableHandle_getInstance();
            }
          }
        }
      }
       while (false);
    }
    Unit_getInstance();
  };
  JobSupport.prototype.join_3 = function ($cont) {
    if (!joinInternal(this)) {
      checkCompletion($cont._get_context__113());
      return Unit_getInstance();
    }return joinSuspend(this, $cont);
  };
  JobSupport.prototype.removeNode_9 = function (node) {
    while (true) {
      var tmp0__anonymous__1 = this._get_state__15();
      var tmp0_subject_2 = tmp0__anonymous__1;
      if (tmp0_subject_2 instanceof JobNode) {
        if (!(tmp0__anonymous__1 === node))
          return Unit_getInstance();
        if (this.__state_0.atomicfu$compareAndSet(tmp0__anonymous__1, EMPTY_ACTIVE))
          return Unit_getInstance();
      } else {
        if (!(tmp0_subject_2 == null) ? isInterface(tmp0_subject_2, Incomplete) : false) {
          if (!(tmp0__anonymous__1._get_list__13() == null)) {
            node.remove_37();
            Unit_getInstance();
          }return Unit_getInstance();
        } else {
          return Unit_getInstance();
        }
      }
    }
    Unit_getInstance();
  };
  JobSupport.prototype._get_onCancelComplete__9 = function () {
    return false;
  };
  JobSupport.prototype.cancel_22 = function (cause) {
    var tmp0_elvis_lhs = cause;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_defaultCancellationException_0 = null;
      var tmp1_defaultCancellationException_0 = null;
      var tmp0_elvis_lhs_1 = tmp0_defaultCancellationException_0;
      tmp = new JobCancellationException(tmp0_elvis_lhs_1 == null ? this.cancellationExceptionMessage_9() : tmp0_elvis_lhs_1, tmp1_defaultCancellationException_0, this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    this.cancelInternal_14(tmp);
  };
  JobSupport.prototype.cancellationExceptionMessage_9 = function () {
    return 'Job was cancelled';
  };
  JobSupport.prototype.cancelInternal_14 = function (cause) {
    this.cancelImpl_9(cause);
    Unit_getInstance();
  };
  JobSupport.prototype.parentCancelled_12 = function (parentJob) {
    this.cancelImpl_9(parentJob);
    Unit_getInstance();
  };
  JobSupport.prototype.childCancelled_12 = function (cause) {
    if (cause instanceof CancellationException)
      return true;
    else {
    }
    return this.cancelImpl_9(cause) ? this._get_handlesException__9() : false;
  };
  JobSupport.prototype.cancelImpl_9 = function (cause) {
    var finalState = COMPLETING_ALREADY;
    if (this._get_onCancelComplete__9()) {
      finalState = cancelMakeCompleting(this, cause);
      if (finalState === COMPLETING_WAITING_CHILDREN)
        return true;
    }if (finalState === COMPLETING_ALREADY) {
      finalState = makeCancelling(this, cause);
    }var tmp;
    if (finalState === COMPLETING_ALREADY) {
      tmp = true;
    } else if (finalState === COMPLETING_WAITING_CHILDREN) {
      tmp = true;
    } else if (finalState === TOO_LATE_TO_CANCEL) {
      tmp = false;
    } else {
      this.afterCompletion_9(finalState);
      tmp = true;
    }
    return tmp;
  };
  JobSupport.prototype.getChildJobCancellationCause_10 = function () {
    var state = this._get_state__15();
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof Finishing) {
      tmp = state._get_rootCause_();
    } else {
      if (tmp0_subject instanceof CompletedExceptionally) {
        tmp = state._cause;
      } else {
        if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
          var tmp0_error_0 = '' + 'Cannot be cancelling child in this state: ' + state;
          throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
        } else {
          {
            tmp = null;
          }
        }
      }
    }
    var rootCause = tmp;
    var tmp1_elvis_lhs = rootCause instanceof CancellationException ? rootCause : null;
    return tmp1_elvis_lhs == null ? new JobCancellationException('' + 'Parent job is ' + stateString(this, state), rootCause, this) : tmp1_elvis_lhs;
  };
  JobSupport.prototype.makeCompleting_2 = function (proposedUpdate) {
    while (true) {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp0__anonymous__1 = this._get_state__15();
        var finalState_2 = tryMakeCompleting(this, tmp0__anonymous__1, proposedUpdate);
        if (finalState_2 === COMPLETING_ALREADY)
          return false;
        else if (finalState_2 === COMPLETING_WAITING_CHILDREN)
          return true;
        else if (finalState_2 === COMPLETING_RETRY) {
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        } else {
          this.afterCompletion_9(finalState_2);
          return true;
        }
      }
       while (false);
    }
    Unit_getInstance();
  };
  JobSupport.prototype.makeCompletingOnce_6 = function (proposedUpdate) {
    while (true) {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp0__anonymous__1 = this._get_state__15();
        var finalState_2 = tryMakeCompleting(this, tmp0__anonymous__1, proposedUpdate);
        if (finalState_2 === COMPLETING_ALREADY)
          throw IllegalStateException_init_$Create$_0('' + 'Job ' + this + ' is already complete or completing, ' + ('' + 'but is being completed with ' + proposedUpdate), _get_exceptionOrNull_(proposedUpdate, this));
        else if (finalState_2 === COMPLETING_RETRY) {
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        } else
          return finalState_2;
      }
       while (false);
    }
    Unit_getInstance();
  };
  JobSupport.prototype.attachChild_11 = function (child) {
    var tmp0__get_asHandler__0 = new ChildHandleNode(child);
    var tmp = this.invokeOnCompletion$default_11(true, false, tmp0__get_asHandler__0, 2, null);
    return isInterface(tmp, ChildHandle) ? tmp : THROW_CCE();
  };
  JobSupport.prototype.handleOnCompletionException_9 = function (exception) {
    throw exception;
  };
  JobSupport.prototype.onCancelling_9 = function (cause) {
  };
  JobSupport.prototype._get_isScopedCoroutine__9 = function () {
    return false;
  };
  JobSupport.prototype._get_handlesException__9 = function () {
    return true;
  };
  JobSupport.prototype.handleJobException_9 = function (exception) {
    return false;
  };
  JobSupport.prototype.onCompletionInternal_9 = function (state) {
  };
  JobSupport.prototype.afterCompletion_9 = function (state) {
  };
  JobSupport.prototype.toString = function () {
    return '' + this.toDebugString_9() + '@' + _get_hexAddress_(this);
  };
  JobSupport.prototype.toDebugString_9 = function () {
    return '' + this.nameString_11() + '{' + stateString(this, this._get_state__15()) + '}';
  };
  JobSupport.prototype.nameString_11 = function () {
    return _get_classSimpleName_(this);
  };
  JobSupport.prototype.getCompletedInternal_2 = function () {
    var state = this._get_state__15();
    var tmp0_check_0 = !(!(state == null) ? isInterface(state, Incomplete) : false);
    if (!tmp0_check_0) {
      var message_1 = 'This job has not completed yet';
      throw IllegalStateException_init_$Create$(toString_1(message_1));
    }if (state instanceof CompletedExceptionally)
      throw state._cause;
    else {
    }
    return unboxState(state);
  };
  JobSupport.prototype.awaitInternal_2 = function ($cont) {
    $l$break: while (true) {
      var state = this._get_state__15();
      if (!(!(state == null) ? isInterface(state, Incomplete) : false)) {
        if (state instanceof CompletedExceptionally) {
          var tmp0_recoverAndThrow_0 = state._cause;
          throw tmp0_recoverAndThrow_0;
        } else {
        }
        return unboxState(state);
      } else {
      }
      if (startInternal(this, state) >= 0)
        break $l$break;
    }
    return awaitSuspend(this, $cont);
  };
  JobSupport.$metadata$ = {
    simpleName: 'JobSupport',
    kind: 'class',
    interfaces: [Job, ChildJob, ParentJob, SelectClause0]
  };
  function boxIncomplete(_this_) {
    var tmp;
    if (!(_this_ == null) ? isInterface(_this_, Incomplete) : false) {
      tmp = new IncompleteStateBox(_this_);
    } else {
      {
        tmp = _this_;
      }
    }
    return tmp;
  }
  function JobCancellingNode() {
    JobNode.call(this);
  }
  JobCancellingNode.$metadata$ = {
    simpleName: 'JobCancellingNode',
    kind: 'class',
    interfaces: []
  };
  function InactiveNodeList(list) {
    this._list_0 = list;
  }
  InactiveNodeList.prototype._get_list__13 = function () {
    return this._list_0;
  };
  InactiveNodeList.prototype._get_isActive__26 = function () {
    return false;
  };
  InactiveNodeList.prototype.toString = function () {
    return DEBUG ? this._list_0.getString('New') : anyToString(this);
  };
  InactiveNodeList.$metadata$ = {
    simpleName: 'InactiveNodeList',
    kind: 'class',
    interfaces: [Incomplete]
  };
  function ChildHandleNode(childJob) {
    JobCancellingNode.call(this);
    this._childJob = childJob;
  }
  ChildHandleNode.prototype.invoke_310 = function (cause) {
    return this._childJob.parentCancelled_12(this._get_job__8());
  };
  ChildHandleNode.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  ChildHandleNode.prototype.childCancelled_12 = function (cause) {
    return this._get_job__8().childCancelled_12(cause);
  };
  ChildHandleNode.$metadata$ = {
    simpleName: 'ChildHandleNode',
    kind: 'class',
    interfaces: [ChildHandle]
  };
  function InvokeOnCancelling(handler) {
    JobCancellingNode.call(this);
    this._handler_0 = handler;
    this.__invoked = atomic_1(0);
  }
  InvokeOnCancelling.prototype.invoke_310 = function (cause) {
    if (this.__invoked.atomicfu$compareAndSet(0, 1))
      this._handler_0(cause);
  };
  InvokeOnCancelling.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  InvokeOnCancelling.$metadata$ = {
    simpleName: 'InvokeOnCancelling',
    kind: 'class',
    interfaces: []
  };
  function InvokeOnCompletion(handler) {
    JobNode.call(this);
    this._handler_1 = handler;
  }
  InvokeOnCompletion.prototype.invoke_310 = function (cause) {
    return this._handler_1(cause);
  };
  InvokeOnCompletion.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  InvokeOnCompletion.$metadata$ = {
    simpleName: 'InvokeOnCompletion',
    kind: 'class',
    interfaces: []
  };
  function ResumeOnCompletion(continuation) {
    JobNode.call(this);
    this._continuation_2 = continuation;
  }
  ResumeOnCompletion.prototype.invoke_310 = function (cause) {
    var tmp0_resume_0 = this._continuation_2;
    var tmp1_resume_0 = Unit_getInstance();
    var tmp0_success_0_1 = Companion_getInstance_3();
    return tmp0_resume_0.resumeWith_46(_Result___init__impl_(Unit_getInstance()));
  };
  ResumeOnCompletion.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  ResumeOnCompletion.$metadata$ = {
    simpleName: 'ResumeOnCompletion',
    kind: 'class',
    interfaces: []
  };
  function unboxState(_this_) {
    var tmp0_safe_receiver = _this_ instanceof IncompleteStateBox ? _this_ : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._state_2;
    return tmp1_elvis_lhs == null ? _this_ : tmp1_elvis_lhs;
  }
  function ResumeAwaitOnCompletion(continuation) {
    JobNode.call(this);
    this._continuation_3 = continuation;
  }
  ResumeAwaitOnCompletion.prototype.invoke_310 = function (cause) {
    var state = this._get_job__8()._get_state__15();
    if (state instanceof CompletedExceptionally) {
      var tmp0_resumeWithException_0 = this._continuation_3;
      var tmp1_resumeWithException_0 = state._cause;
      var tmp0_failure_0_1 = Companion_getInstance_3();
      tmp0_resumeWithException_0.resumeWith_46(_Result___init__impl_(createFailure(tmp1_resumeWithException_0)));
    } else {
      {
        var tmp2_resume_0 = this._continuation_3;
        var tmp = unboxState(state);
        var tmp3_resume_0 = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
        var tmp0_success_0_1 = Companion_getInstance_3();
        tmp2_resume_0.resumeWith_46(_Result___init__impl_(tmp3_resume_0));
      }
    }
  };
  ResumeAwaitOnCompletion.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  ResumeAwaitOnCompletion.$metadata$ = {
    simpleName: 'ResumeAwaitOnCompletion',
    kind: 'class',
    interfaces: []
  };
  function IncompleteStateBox(state) {
    this._state_2 = state;
  }
  IncompleteStateBox.$metadata$ = {
    simpleName: 'IncompleteStateBox',
    kind: 'class',
    interfaces: []
  };
  function ChildContinuation(child) {
    JobCancellingNode.call(this);
    this._child_0 = child;
  }
  ChildContinuation.prototype.invoke_310 = function (cause) {
    this._child_0.parentCancelled_7(this._child_0.getContinuationCancellationCause_0(this._get_job__8()));
  };
  ChildContinuation.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  ChildContinuation.$metadata$ = {
    simpleName: 'ChildContinuation',
    kind: 'class',
    interfaces: []
  };
  function handlesException($this) {
    var tmp = $this._get_parentHandle__9();
    var tmp0_safe_receiver = tmp instanceof ChildHandleNode ? tmp : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_job__8();
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var parentJob = tmp_0;
    while (true) {
      if (parentJob._get_handlesException__9())
        return true;
      var tmp_1 = parentJob._get_parentHandle__9();
      var tmp2_safe_receiver = tmp_1 instanceof ChildHandleNode ? tmp_1 : null;
      var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver._get_job__8();
      var tmp_2;
      if (tmp3_elvis_lhs == null) {
        return false;
      } else {
        tmp_2 = tmp3_elvis_lhs;
      }
      parentJob = tmp_2;
    }
  }
  function JobImpl(parent) {
    JobSupport.call(this, true);
    this.initParentJobInternal_9(parent);
    this._handlesException = handlesException(this);
  }
  JobImpl.prototype._get_onCancelComplete__9 = function () {
    return true;
  };
  JobImpl.prototype._get_handlesException__9 = function () {
    return this._handlesException;
  };
  JobImpl.prototype.complete_3 = function () {
    return this.makeCompleting_2(Unit_getInstance());
  };
  JobImpl.prototype.completeExceptionally_3 = function (exception) {
    return this.makeCompleting_2(CompletedExceptionally_init_$Create$(exception, false, 2, null));
  };
  JobImpl.$metadata$ = {
    simpleName: 'JobImpl',
    kind: 'class',
    interfaces: [CompletableJob]
  };
  function MainCoroutineDispatcher() {
    CoroutineDispatcher.call(this);
  }
  MainCoroutineDispatcher.prototype.toString = function () {
    var tmp0_elvis_lhs = this.toStringInternalImpl_0();
    return tmp0_elvis_lhs == null ? '' + _get_classSimpleName_(this) + '@' + _get_hexAddress_(this) : tmp0_elvis_lhs;
  };
  MainCoroutineDispatcher.prototype.toStringInternalImpl_0 = function () {
    var main_0 = Dispatchers_getInstance()._Main;
    if (this === main_0)
      return 'Dispatchers.Main';
    var tmp;
    try {
      tmp = main_0._get_immediate__0();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof UnsupportedOperationException) {
        tmp_0 = null;
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_0;
    }
    var immediate = tmp;
    if (this === immediate)
      return 'Dispatchers.Main.immediate';
    return null;
  };
  MainCoroutineDispatcher.$metadata$ = {
    simpleName: 'MainCoroutineDispatcher',
    kind: 'class',
    interfaces: []
  };
  function SupervisorJob(parent) {
    return new SupervisorJobImpl(parent);
  }
  function SupervisorJob$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return SupervisorJob(parent);
  }
  function SupervisorJobImpl(parent) {
    JobImpl.call(this, parent);
  }
  SupervisorJobImpl.prototype.childCancelled_12 = function (cause) {
    return false;
  };
  SupervisorJobImpl.$metadata$ = {
    simpleName: 'SupervisorJobImpl',
    kind: 'class',
    interfaces: []
  };
  function supervisorScope(block, $cont) {
    var tmp0__anonymous__1 = $cont;
    var coroutine_2 = new SupervisorCoroutine(tmp0__anonymous__1._get_context__113(), tmp0__anonymous__1);
    return startUndispatchedOrReturn(coroutine_2, coroutine_2, block);
  }
  function SupervisorCoroutine(context, uCont) {
    ScopeCoroutine.call(this, context, uCont);
  }
  SupervisorCoroutine.prototype.childCancelled_12 = function (cause) {
    return false;
  };
  SupervisorCoroutine.$metadata$ = {
    simpleName: 'SupervisorCoroutine',
    kind: 'class',
    interfaces: []
  };
  function TimeoutCancellationException() {
  }
  TimeoutCancellationException.$metadata$ = {
    simpleName: 'TimeoutCancellationException',
    kind: 'class',
    interfaces: [CopyableThrowable]
  };
  function Unconfined() {
    Unconfined_instance = this;
    CoroutineDispatcher.call(this);
  }
  Unconfined.prototype.isDispatchNeeded_8 = function (context) {
    return false;
  };
  Unconfined.prototype.dispatch_8 = function (context, block) {
    var yieldContext = context.get_63(Key_getInstance_4());
    if (!(yieldContext == null)) {
      yieldContext.dispatcherWasUnconfined__error = true;
      return Unit_getInstance();
    }throw UnsupportedOperationException_init_$Create$_0('Dispatchers.Unconfined.dispatch function can only be used by the yield function. If you wrap Unconfined dispatcher in your code, make sure you properly delegate isDispatchNeeded and dispatch calls.');
  };
  Unconfined.prototype.toString = function () {
    return 'Dispatchers.Unconfined';
  };
  Unconfined.$metadata$ = {
    simpleName: 'Unconfined',
    kind: 'object',
    interfaces: []
  };
  var Unconfined_instance;
  function Unconfined_getInstance() {
    if (Unconfined_instance == null)
      new Unconfined();
    return Unconfined_instance;
  }
  function Key_5() {
    Key_instance_4 = this;
  }
  Key_5.$metadata$ = {
    simpleName: 'Key',
    kind: 'object',
    interfaces: [Key_0]
  };
  var Key_instance_4;
  function Key_getInstance_4() {
    if (Key_instance_4 == null)
      new Key_5();
    return Key_instance_4;
  }
  function checkCompletion(_this_) {
    var job = _this_.get_63(Key_getInstance_3());
    if (!(job == null) ? !job._get_isActive__26() : false)
      throw job.getCancellationException_11();
  }
  var EMPTY;
  var OFFER_SUCCESS;
  var OFFER_FAILED;
  var POLL_FAILED;
  var ENQUEUE_FAILED;
  var HANDLER_INVOKED;
  function hasNextResult($this, result) {
    if (result instanceof Closed) {
      if (!(result._closeCause == null))
        throw recoverStackTrace_0(result._get_receiveException_());
      return false;
    } else {
    }
    return true;
  }
  function hasNextSuspend($this, $cont) {
    var tmp0__anonymous__1_1 = $cont;
    var cancellable_2_2 = getOrCreateCancellableContinuation(intercepted(tmp0__anonymous__1_1));
    var tmp$ret$0;
    l$ret$1: do {
      var receive_4 = new ReceiveHasNext($this, cancellable_2_2);
      while (true) {
        if (enqueueReceive($this._channel, receive_4)) {
          removeReceiveOnCancel($this._channel, cancellable_2_2, receive_4);
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        }var result_5 = $this._channel.pollInternal_3();
        $this._result_2 = result_5;
        if (result_5 instanceof Closed) {
          if (result_5._closeCause == null) {
            var tmp0_resume_0_6 = false;
            var tmp0_success_0_1_7 = Companion_getInstance_3();
            cancellable_2_2.resumeWith_46(_Result___init__impl_(tmp0_resume_0_6));
          } else {
            var tmp1_resumeWithException_0_8 = result_5._get_receiveException_();
            var tmp0_failure_0_1_9 = Companion_getInstance_3();
            cancellable_2_2.resumeWith_46(_Result___init__impl_(createFailure(tmp1_resumeWithException_0_8)));
          }
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        } else {
        }
        if (!(result_5 === POLL_FAILED)) {
          var tmp0_safe_receiver_10 = $this._channel._get_onUndeliveredElement__4();
          var tmp;
          if (tmp0_safe_receiver_10 == null) {
            tmp = null;
          } else {
            tmp = bindCancellationFun(tmp0_safe_receiver_10, (result_5 == null ? true : isObject(result_5)) ? result_5 : THROW_CCE(), cancellable_2_2._get_context__113());
          }
          cancellable_2_2.resume_2(true, tmp);
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        }}
    }
     while (false);
    return cancellable_2_2.getResult_0();
  }
  function enqueueReceive($this, receive) {
    var tmp0_also_0 = $this.enqueueReceiveInternal_3(receive);
    if (tmp0_also_0)
      $this.onReceiveEnqueued_3();
    return tmp0_also_0;
  }
  function removeReceiveOnCancel($this, cont, receive) {
    var tmp0__get_asHandler__0 = new RemoveReceiveOnCancel($this, receive);
    return cont.invokeOnCancellation_1(tmp0__get_asHandler__0);
  }
  function RemoveReceiveOnCancel($outer, receive) {
    this._$this_7 = $outer;
    BeforeResumeCancelHandler.call(this);
    this._receive = receive;
  }
  RemoveReceiveOnCancel.prototype.invoke_310 = function (cause) {
    if (this._receive.remove_37())
      this._$this_7.onReceiveDequeued_3();
  };
  RemoveReceiveOnCancel.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  RemoveReceiveOnCancel.prototype.toString = function () {
    return '' + 'RemoveReceiveOnCancel[' + this._receive + ']';
  };
  RemoveReceiveOnCancel.$metadata$ = {
    simpleName: 'RemoveReceiveOnCancel',
    kind: 'class',
    interfaces: []
  };
  function Itr(channel) {
    this._channel = channel;
    this._result_2 = POLL_FAILED;
  }
  Itr.prototype.hasNext_29 = function ($cont) {
    if (!(this._result_2 === POLL_FAILED))
      return hasNextResult(this, this._result_2);
    this._result_2 = this._channel.pollInternal_3();
    if (!(this._result_2 === POLL_FAILED))
      return hasNextResult(this, this._result_2);
    return hasNextSuspend(this, $cont);
  };
  Itr.prototype.next_31 = function () {
    var result = this._result_2;
    if (result instanceof Closed)
      throw recoverStackTrace_0(result._get_receiveException_());
    else {
    }
    if (!(result === POLL_FAILED)) {
      this._result_2 = POLL_FAILED;
      return (result == null ? true : isObject(result)) ? result : THROW_CCE();
    }throw IllegalStateException_init_$Create$("'hasNext' should be called prior to 'next' invocation");
  };
  Itr.$metadata$ = {
    simpleName: 'Itr',
    kind: 'class',
    interfaces: [ChannelIterator]
  };
  function ReceiveHasNext(iterator, cont) {
    Receive.call(this);
    this._iterator_2 = iterator;
    this._cont = cont;
  }
  ReceiveHasNext.prototype.tryResumeReceive_2 = function (value, otherOp) {
    var tmp0_safe_receiver = otherOp;
    var tmp1_elvis_lhs = this._cont.tryResume_4(true, tmp0_safe_receiver == null ? null : tmp0_safe_receiver.desc__error, this.resumeOnCancellationFun(value));
    var tmp;
    if (tmp1_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var token = tmp;
    var tmp2_safe_receiver = otherOp;
    if (tmp2_safe_receiver == null)
      null;
    else {
      tmp2_safe_receiver.finishPrepare__error();
      Unit_getInstance();
    }
    Unit_getInstance();
    return RESUME_TOKEN;
  };
  ReceiveHasNext.prototype.completeResumeReceive_2 = function (value) {
    this._iterator_2._result_2 = value;
    this._cont.completeResume_1(RESUME_TOKEN);
  };
  ReceiveHasNext.prototype.resumeReceiveClosed_0 = function (closed) {
    var tmp;
    if (closed._closeCause == null) {
      tmp = this._cont.tryResume$default_1(false, null, 2, null);
    } else {
      tmp = this._cont.tryResumeWithException_1(closed._get_receiveException_());
    }
    var token = tmp;
    if (!(token == null)) {
      this._iterator_2._result_2 = closed;
      this._cont.completeResume_1(token);
    }};
  ReceiveHasNext.prototype.resumeOnCancellationFun = function (value) {
    var tmp0_safe_receiver = this._iterator_2._channel._get_onUndeliveredElement__4();
    return tmp0_safe_receiver == null ? null : bindCancellationFun(tmp0_safe_receiver, value, this._cont._get_context__113());
  };
  ReceiveHasNext.prototype.toString = function () {
    return '' + 'ReceiveHasNext@' + _get_hexAddress_(this);
  };
  ReceiveHasNext.$metadata$ = {
    simpleName: 'ReceiveHasNext',
    kind: 'class',
    interfaces: []
  };
  function AbstractChannel(onUndeliveredElement) {
    AbstractSendChannel.call(this, onUndeliveredElement);
  }
  AbstractChannel.prototype.pollInternal_3 = function () {
    while (true) {
      var tmp0_elvis_lhs = this.takeFirstSendOrPeekClosed_4();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return POLL_FAILED;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var send = tmp;
      var token = send.tryResumeSend_3(null);
      if (!(token == null)) {
        send.completeResumeSend_3();
        return send._get_pollResult__3();
      }send.undeliveredElement_3();
    }
  };
  AbstractChannel.prototype._get_isClosedForReceive__3 = function () {
    return !(this._get_closedForReceive__4() == null) ? this._get_isBufferEmpty__3() : false;
  };
  AbstractChannel.prototype.enqueueReceiveInternal_3 = function (receive) {
    var tmp;
    if (this._get_isBufferAlwaysEmpty__3()) {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp0_addLastIfPrev_0 = this._get_queue__4();
        var tmp1__anonymous__1 = tmp0_addLastIfPrev_0.__prev;
        if (!!(tmp1__anonymous__1 instanceof Send)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
        tmp0_addLastIfPrev_0.addLast_26(receive);
        tmp$ret$0 = true;
      }
       while (false);
      tmp = tmp$ret$0;
    } else {
      var tmp$ret$2;
      l$ret$3: do {
        var tmp2_addLastIfPrevAndIf_0 = this._get_queue__4();
        var tmp3__anonymous__1 = tmp2_addLastIfPrevAndIf_0.__prev;
        if (!!(tmp3__anonymous__1 instanceof Send)) {
          tmp$ret$2 = false;
          break l$ret$3;
        } else {
        }
        if (!this._get_isBufferEmpty__3()) {
          tmp$ret$2 = false;
          break l$ret$3;
        } else {
        }
        tmp2_addLastIfPrevAndIf_0.addLast_26(receive);
        tmp$ret$2 = true;
      }
       while (false);
      tmp = tmp$ret$2;
    }
    return tmp;
  };
  AbstractChannel.prototype.cancel_22 = function (cause) {
    if (this._get_isClosedForReceive__3())
      return Unit_getInstance();
    var tmp0_elvis_lhs = cause;
    this.cancelInternal_13(tmp0_elvis_lhs == null ? CancellationException_init_$Create$('' + _get_classSimpleName_(this) + ' was cancelled') : tmp0_elvis_lhs);
    Unit_getInstance();
  };
  AbstractChannel.prototype.cancelInternal_13 = function (cause) {
    var tmp0_also_0 = this.close_27(cause);
    this.onCancelIdempotent_3(tmp0_also_0);
    return tmp0_also_0;
  };
  AbstractChannel.prototype.onCancelIdempotent_3 = function (wasClosed) {
    var tmp0_elvis_lhs = this._get_closedForSend__4();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_error_0 = 'Cannot happen';
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var closed = tmp;
    var list = _InlineList___init__impl__0(null, 1, null);
    $l$break: while (true) {
      var previous = closed.__prev;
      if (previous instanceof LinkedListHead) {
        break $l$break;
      } else {
      }
      if (!previous.remove_37()) {
        previous.helpRemove_22();
        continue $l$break;
      }var tmp_0 = list;
      list = InlineList__plus_impl(tmp_0, previous instanceof Send ? previous : THROW_CCE());
    }
    this.onCancelIdempotentList_3(list, closed);
  };
  AbstractChannel.prototype.onCancelIdempotentList_3 = function (list, closed) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_subject_1 = _get_holder_(list);
      if (tmp0_subject_1 == null) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
        if (!(tmp0_subject_1 instanceof ArrayList)) {
          var tmp = _get_holder_(list);
          var tmp0__anonymous__5 = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
          tmp0__anonymous__5.resumeSendClosed_3(closed);
        } else {
          {
            var tmp_0 = _get_holder_(list);
            var list_2 = tmp_0 instanceof ArrayList ? tmp_0 : THROW_CCE();
            var inductionVariable = list_2._get_size__48() - 1 | 0;
            if (0 <= inductionVariable)
              do {
                var i_4 = inductionVariable;
                inductionVariable = inductionVariable + -1 | 0;
                var tmp1__anonymous__5 = list_2.get_77(i_4);
                tmp1__anonymous__5.resumeSendClosed_3(closed);
              }
               while (0 <= inductionVariable);
          }
        }
      }
    }
     while (false);
  };
  AbstractChannel.prototype.iterator_62 = function () {
    return new Itr(this);
  };
  AbstractChannel.prototype.takeFirstReceiveOrPeekClosed_4 = function () {
    var tmp0_also_0 = AbstractSendChannel.prototype.takeFirstReceiveOrPeekClosed_4.call(this);
    var tmp;
    if (!(tmp0_also_0 == null)) {
      tmp = !(tmp0_also_0 instanceof Closed);
    } else {
      tmp = false;
    }
    if (tmp)
      this.onReceiveDequeued_3();
    else {
    }
    return tmp0_also_0;
  };
  AbstractChannel.prototype.onReceiveEnqueued_3 = function () {
  };
  AbstractChannel.prototype.onReceiveDequeued_3 = function () {
  };
  AbstractChannel.$metadata$ = {
    simpleName: 'AbstractChannel',
    kind: 'class',
    interfaces: [Channel]
  };
  function helpCloseAndGetSendException($this, element, closed) {
    helpClose($this, closed);
    var tmp0_safe_receiver = $this._onUndeliveredElement;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = callUndeliveredElementCatchingException$default(tmp0_safe_receiver, element, null, 2, null);
    }
    var tmp1_safe_receiver = tmp;
    if (tmp1_safe_receiver == null)
      null;
    else {
      addSuppressed(tmp1_safe_receiver, closed._get_sendException_());
      throw tmp1_safe_receiver;
    }
    Unit_getInstance();
    return closed._get_sendException_();
  }
  function sendSuspend($this, element, $cont) {
    var tmp0__anonymous__1_1 = $cont;
    var cancellable_2_2 = getOrCreateCancellableContinuation(intercepted(tmp0__anonymous__1_1));
    var tmp$ret$0;
    l$ret$1: do {
      loop: while (true) {
        if ($this._get_isFullImpl__4()) {
          var send_4 = $this._onUndeliveredElement == null ? new SendElement(element, cancellable_2_2) : new SendElementWithUndeliveredHandler(element, cancellable_2_2, $this._onUndeliveredElement);
          var enqueueResult_5 = $this.enqueueSend_4(send_4);
          if (enqueueResult_5 == null) {
            removeOnCancellation(cancellable_2_2, send_4);
            tmp$ret$0 = Unit_getInstance();
            break l$ret$1;
          } else {
            if (enqueueResult_5 instanceof Closed) {
              helpCloseAndResumeWithSendException(cancellable_2_2, $this, element, enqueueResult_5);
              tmp$ret$0 = Unit_getInstance();
              break l$ret$1;
            } else {
              if (enqueueResult_5 === ENQUEUE_FAILED) {
              } else {
                if (enqueueResult_5 instanceof Receive) {
                } else {
                  {
                    var tmp0_error_0_6 = '' + 'enqueueSend returned ' + enqueueResult_5;
                    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0_6));
                  }
                }
              }
            }
          }
        }var offerResult_7 = $this.offerInternal_4(element);
        if (offerResult_7 === OFFER_SUCCESS) {
          var tmp1_resume_0_8 = Unit_getInstance();
          var tmp0_success_0_1_9 = Companion_getInstance_3();
          cancellable_2_2.resumeWith_46(_Result___init__impl_(Unit_getInstance()));
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        } else {
          if (offerResult_7 === OFFER_FAILED)
            continue loop;
          else {
            if (offerResult_7 instanceof Closed) {
              helpCloseAndResumeWithSendException(cancellable_2_2, $this, element, offerResult_7);
              tmp$ret$0 = Unit_getInstance();
              break l$ret$1;
            } else {
              {
                var tmp2_error_0_10 = '' + 'offerInternal returned ' + offerResult_7;
                throw IllegalStateException_init_$Create$(toString_1(tmp2_error_0_10));
              }
            }
          }
        }
      }
    }
     while (false);
    return cancellable_2_2.getResult_0();
  }
  function helpCloseAndResumeWithSendException(_this_, $this, element, closed) {
    helpClose($this, closed);
    var sendException = closed._get_sendException_();
    var tmp0_safe_receiver = $this._onUndeliveredElement;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = callUndeliveredElementCatchingException$default(tmp0_safe_receiver, element, null, 2, null);
    }
    var tmp1_safe_receiver = tmp;
    if (tmp1_safe_receiver == null)
      null;
    else {
      addSuppressed(tmp1_safe_receiver, sendException);
      var tmp0_failure_0_1_2 = Companion_getInstance_3();
      _this_.resumeWith_46(_Result___init__impl_(createFailure(tmp1_safe_receiver)));
      return Unit_getInstance();
    }
    Unit_getInstance();
    var tmp0_failure_0_1 = Companion_getInstance_3();
    _this_.resumeWith_46(_Result___init__impl_(createFailure(sendException)));
  }
  function invokeOnCloseHandler($this, cause) {
    var handler = $this._onCloseHandler._value_2;
    if ((!(handler === null) ? !(handler === HANDLER_INVOKED) : false) ? $this._onCloseHandler.atomicfu$compareAndSet(handler, HANDLER_INVOKED) : false) {
      ((!(handler == null) ? typeof handler === 'function' : false) ? handler : THROW_CCE())(cause);
    }}
  function helpClose($this, closed) {
    var closedList = _InlineList___init__impl__0(null, 1, null);
    $l$break: while (true) {
      var tmp = closed.__prev;
      var tmp0_elvis_lhs = tmp instanceof Receive ? tmp : null;
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        break $l$break;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      var previous = tmp_0;
      if (!previous.remove_37()) {
        previous.helpRemove_22();
        continue $l$break;
      }closedList = InlineList__plus_impl(closedList, previous);
    }
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_forEachReversed_0 = closedList;
      var tmp0_subject_1 = _get_holder_(tmp0_forEachReversed_0);
      if (tmp0_subject_1 == null) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
        if (!(tmp0_subject_1 instanceof ArrayList)) {
          var tmp_1 = _get_holder_(tmp0_forEachReversed_0);
          var tmp1__anonymous__5 = (tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE();
          tmp1__anonymous__5.resumeReceiveClosed_0(closed);
        } else {
          {
            var tmp_2 = _get_holder_(tmp0_forEachReversed_0);
            var list_2 = tmp_2 instanceof ArrayList ? tmp_2 : THROW_CCE();
            var inductionVariable = list_2._get_size__48() - 1 | 0;
            if (0 <= inductionVariable)
              do {
                var i_4 = inductionVariable;
                inductionVariable = inductionVariable + -1 | 0;
                var tmp2__anonymous__5 = list_2.get_77(i_4);
                tmp2__anonymous__5.resumeReceiveClosed_0(closed);
              }
               while (0 <= inductionVariable);
          }
        }
      }
    }
     while (false);
    $this.onClosedIdempotent_4(closed);
  }
  function _get_queueDebugStateString_($this) {
    var tmp0__get_nextNode__0 = $this._queue;
    var head = tmp0__get_nextNode__0.__next;
    if (head === $this._queue)
      return 'EmptyQueue';
    var tmp0_subject = head;
    var tmp;
    if (tmp0_subject instanceof Closed) {
      tmp = toString_1(head);
    } else {
      if (tmp0_subject instanceof Receive) {
        tmp = 'ReceiveQueued';
      } else {
        if (tmp0_subject instanceof Send) {
          tmp = 'SendQueued';
        } else {
          {
            tmp = '' + 'UNEXPECTED:' + head;
          }
        }
      }
    }
    var result = tmp;
    var tmp1__get_prevNode__0 = $this._queue;
    var tail = tmp1__get_prevNode__0.__prev;
    if (!(tail === head)) {
      result = result + ('' + ',queueSize=' + countQueueSize($this));
      if (tail instanceof Closed)
        result = result + ('' + ',closedForSend=' + tail);
      else {
      }
    }return result;
  }
  function countQueueSize($this) {
    var size_0 = 0;
    var tmp0_forEach_0 = $this._queue;
    var cur_1 = tmp0_forEach_0._get__next__2();
    while (!equals_1(cur_1, tmp0_forEach_0)) {
      if (cur_1 instanceof LinkedListNode) {
        var tmp1__anonymous__2 = cur_1;
        var tmp0_3 = size_0;
        size_0 = tmp0_3 + 1 | 0;
        Unit_getInstance();
      } else {
      }
      cur_1 = cur_1.__next;
    }
    return size_0;
  }
  function SendBuffered(element) {
    Send.call(this);
    this._element_0 = element;
  }
  SendBuffered.prototype._get_pollResult__3 = function () {
    return this._element_0;
  };
  SendBuffered.prototype.tryResumeSend_3 = function (otherOp) {
    var tmp0_also_0 = RESUME_TOKEN;
    var tmp0_safe_receiver_2 = otherOp;
    if (tmp0_safe_receiver_2 == null)
      null;
    else {
      tmp0_safe_receiver_2.finishPrepare__error();
      Unit_getInstance();
    }
    Unit_getInstance();
    return tmp0_also_0;
  };
  SendBuffered.prototype.completeResumeSend_3 = function () {
  };
  SendBuffered.prototype.resumeSendClosed_3 = function (closed) {
  };
  SendBuffered.prototype.toString = function () {
    return '' + 'SendBuffered@' + _get_hexAddress_(this) + '(' + this._element_0 + ')';
  };
  SendBuffered.$metadata$ = {
    simpleName: 'SendBuffered',
    kind: 'class',
    interfaces: []
  };
  function AbstractSendChannel(onUndeliveredElement) {
    this._onUndeliveredElement = onUndeliveredElement;
    this._queue = new LinkedListHead();
    this._onCloseHandler = atomic(null);
  }
  AbstractSendChannel.prototype._get_onUndeliveredElement__4 = function () {
    return this._onUndeliveredElement;
  };
  AbstractSendChannel.prototype._get_queue__4 = function () {
    return this._queue;
  };
  AbstractSendChannel.prototype.offerInternal_4 = function (element) {
    while (true) {
      var tmp0_elvis_lhs = this.takeFirstReceiveOrPeekClosed_4();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return OFFER_FAILED;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var receive = tmp;
      var token = receive.tryResumeReceive_2(element, null);
      if (!(token == null)) {
        receive.completeResumeReceive_2(element);
        return receive._get_offerResult__2();
      }}
  };
  AbstractSendChannel.prototype._get_closedForSend__4 = function () {
    var tmp0__get_prevNode__0 = this._queue;
    var tmp = tmp0__get_prevNode__0.__prev;
    var tmp0_safe_receiver = tmp instanceof Closed ? tmp : null;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      helpClose(this, tmp0_safe_receiver);
      tmp_0 = tmp0_safe_receiver;
    }
    return tmp_0;
  };
  AbstractSendChannel.prototype._get_closedForReceive__4 = function () {
    var tmp0__get_nextNode__0 = this._queue;
    var tmp = tmp0__get_nextNode__0.__next;
    var tmp0_safe_receiver = tmp instanceof Closed ? tmp : null;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      helpClose(this, tmp0_safe_receiver);
      tmp_0 = tmp0_safe_receiver;
    }
    return tmp_0;
  };
  AbstractSendChannel.prototype.takeFirstSendOrPeekClosed_4 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp1_removeFirstIfIsInstanceOfOrPeekIf_0 = this._queue;
      var next_1 = tmp1_removeFirstIfIsInstanceOfOrPeekIf_0.__next;
      if (next_1 === tmp1_removeFirstIfIsInstanceOfOrPeekIf_0) {
        tmp$ret$0 = null;
        break l$ret$1;
      }if (!(next_1 instanceof Send)) {
        tmp$ret$0 = null;
        break l$ret$1;
      } else {
      }
      var tmp2__anonymous__3 = next_1;
      if (tmp2__anonymous__3 instanceof Closed) {
        tmp$ret$0 = next_1;
        break l$ret$1;
      } else {
      }
      var tmp0_check_0 = next_1.remove_37();
      if (!tmp0_check_0) {
        var message_1 = 'Should remove';
        throw IllegalStateException_init_$Create$(toString_1(message_1));
      }tmp$ret$0 = next_1;
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractSendChannel.prototype.sendBuffered_0 = function (element) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_addLastIfPrev_0 = this._queue;
      var tmp1_addLastIfPrev_0 = new SendBuffered(element);
      var tmp2__anonymous__1 = tmp0_addLastIfPrev_0.__prev;
      if (isInterface(tmp2__anonymous__1, ReceiveOrClosed))
        return tmp2__anonymous__1;
      else {
      }
      if (false) {} else {
      }
      tmp0_addLastIfPrev_0.addLast_26(tmp1_addLastIfPrev_0);
      tmp$ret$0 = true;
    }
     while (false);
    Unit_getInstance();
    return null;
  };
  AbstractSendChannel.prototype._get_isFullImpl__4 = function () {
    var tmp;
    var tmp0__get_nextNode__0 = this._queue;
    var tmp_0 = tmp0__get_nextNode__0.__next;
    if (!isInterface(tmp_0, ReceiveOrClosed)) {
      tmp = this._get_isBufferFull__4();
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  AbstractSendChannel.prototype.send_6 = function (element, $cont) {
    if (this.offerInternal_4(element) === OFFER_SUCCESS)
      return Unit_getInstance();
    return sendSuspend(this, element, $cont);
  };
  AbstractSendChannel.prototype.offer_5 = function (element) {
    var result = this.offerInternal_4(element);
    var tmp;
    if (result === OFFER_SUCCESS) {
      tmp = true;
    } else {
      if (result === OFFER_FAILED) {
        var tmp0_elvis_lhs = this._get_closedForSend__4();
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          return false;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        throw recoverStackTrace_0(helpCloseAndGetSendException(this, element, tmp_0));
      } else {
        if (result instanceof Closed) {
          throw recoverStackTrace_0(helpCloseAndGetSendException(this, element, result));
        } else {
          {
            var tmp0_error_0 = '' + 'offerInternal returned ' + result;
            throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
          }
        }
      }
    }
    return tmp;
  };
  AbstractSendChannel.prototype.enqueueSend_4 = function (send) {
    if (this._get_isBufferAlwaysFull__4()) {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp0_addLastIfPrev_0 = this._queue;
        var tmp1__anonymous__1 = tmp0_addLastIfPrev_0.__prev;
        if (isInterface(tmp1__anonymous__1, ReceiveOrClosed))
          return tmp1__anonymous__1;
        else {
        }
        if (false) {} else {
        }
        tmp0_addLastIfPrev_0.addLast_26(send);
        tmp$ret$0 = true;
      }
       while (false);
      Unit_getInstance();
    } else {
      var tmp$ret$2;
      l$ret$3: do {
        var tmp2_addLastIfPrevAndIf_0 = this._queue;
        var tmp3__anonymous__1 = tmp2_addLastIfPrevAndIf_0.__prev;
        if (isInterface(tmp3__anonymous__1, ReceiveOrClosed))
          return tmp3__anonymous__1;
        else {
        }
        if (false) {} else {
        }
        if (!this._get_isBufferFull__4()) {
          tmp$ret$2 = false;
          break l$ret$3;
        } else {
        }
        tmp2_addLastIfPrevAndIf_0.addLast_26(send);
        tmp$ret$2 = true;
      }
       while (false);
      if (!tmp$ret$2)
        return ENQUEUE_FAILED;
      else {
      }
    }
    return null;
  };
  AbstractSendChannel.prototype.close_27 = function (cause) {
    var closed = new Closed(cause);
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_addLastIfPrev_0 = this._queue;
      var tmp1__anonymous__1 = tmp0_addLastIfPrev_0.__prev;
      if (!!(tmp1__anonymous__1 instanceof Closed)) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      tmp0_addLastIfPrev_0.addLast_26(closed);
      tmp$ret$0 = true;
    }
     while (false);
    var closeAdded = tmp$ret$0;
    var tmp;
    if (closeAdded) {
      tmp = closed;
    } else {
      var tmp2__get_prevNode__0 = this._queue;
      var tmp_0 = tmp2__get_prevNode__0.__prev;
      tmp = tmp_0 instanceof Closed ? tmp_0 : THROW_CCE();
    }
    var actuallyClosed = tmp;
    helpClose(this, actuallyClosed);
    if (closeAdded)
      invokeOnCloseHandler(this, cause);
    return closeAdded;
  };
  AbstractSendChannel.prototype.onClosedIdempotent_4 = function (closed) {
  };
  AbstractSendChannel.prototype.takeFirstReceiveOrPeekClosed_4 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp1_removeFirstIfIsInstanceOfOrPeekIf_0 = this._queue;
      var next_1 = tmp1_removeFirstIfIsInstanceOfOrPeekIf_0.__next;
      if (next_1 === tmp1_removeFirstIfIsInstanceOfOrPeekIf_0) {
        tmp$ret$0 = null;
        break l$ret$1;
      }if (!isInterface(next_1, ReceiveOrClosed)) {
        tmp$ret$0 = null;
        break l$ret$1;
      } else {
      }
      var tmp2__anonymous__3 = next_1;
      if (tmp2__anonymous__3 instanceof Closed) {
        tmp$ret$0 = next_1;
        break l$ret$1;
      } else {
      }
      var tmp0_check_0 = next_1.remove_37();
      if (!tmp0_check_0) {
        var message_1 = 'Should remove';
        throw IllegalStateException_init_$Create$(toString_1(message_1));
      }tmp$ret$0 = next_1;
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractSendChannel.prototype.toString = function () {
    return '' + _get_classSimpleName_(this) + '@' + _get_hexAddress_(this) + '{' + _get_queueDebugStateString_(this) + '}' + this._get_bufferDebugString__4();
  };
  AbstractSendChannel.prototype._get_bufferDebugString__4 = function () {
    return '';
  };
  AbstractSendChannel.$metadata$ = {
    simpleName: 'AbstractSendChannel',
    kind: 'class',
    interfaces: [SendChannel]
  };
  function Send() {
    LinkedListNode.call(this);
  }
  Send.prototype.undeliveredElement_3 = function () {
  };
  Send.$metadata$ = {
    simpleName: 'Send',
    kind: 'class',
    interfaces: []
  };
  function ReceiveOrClosed() {
  }
  ReceiveOrClosed.$metadata$ = {
    simpleName: 'ReceiveOrClosed',
    kind: 'interface',
    interfaces: []
  };
  function Closed(closeCause) {
    Send.call(this);
    this._closeCause = closeCause;
  }
  Closed.prototype._get_sendException_ = function () {
    var tmp0_elvis_lhs = this._closeCause;
    return tmp0_elvis_lhs == null ? new ClosedSendChannelException('Channel was closed') : tmp0_elvis_lhs;
  };
  Closed.prototype._get_receiveException_ = function () {
    var tmp0_elvis_lhs = this._closeCause;
    return tmp0_elvis_lhs == null ? new ClosedReceiveChannelException('Channel was closed') : tmp0_elvis_lhs;
  };
  Closed.prototype._get_offerResult__2 = function () {
    return this;
  };
  Closed.prototype._get_pollResult__3 = function () {
    return this;
  };
  Closed.prototype.tryResumeSend_3 = function (otherOp) {
    var tmp0_also_0 = RESUME_TOKEN;
    var tmp0_safe_receiver_2 = otherOp;
    if (tmp0_safe_receiver_2 == null)
      null;
    else {
      tmp0_safe_receiver_2.finishPrepare__error();
      Unit_getInstance();
    }
    Unit_getInstance();
    return tmp0_also_0;
  };
  Closed.prototype.completeResumeSend_3 = function () {
  };
  Closed.prototype.tryResumeReceive_2 = function (value, otherOp) {
    var tmp0_also_0 = RESUME_TOKEN;
    var tmp0_safe_receiver_2 = otherOp;
    if (tmp0_safe_receiver_2 == null)
      null;
    else {
      tmp0_safe_receiver_2.finishPrepare__error();
      Unit_getInstance();
    }
    Unit_getInstance();
    return tmp0_also_0;
  };
  Closed.prototype.completeResumeReceive_2 = function (value) {
  };
  Closed.prototype.resumeSendClosed_3 = function (closed) {
    return Unit_getInstance();
  };
  Closed.prototype.toString = function () {
    return '' + 'Closed@' + _get_hexAddress_(this) + '[' + this._closeCause + ']';
  };
  Closed.$metadata$ = {
    simpleName: 'Closed',
    kind: 'class',
    interfaces: [ReceiveOrClosed]
  };
  function Receive() {
    LinkedListNode.call(this);
  }
  Receive.prototype._get_offerResult__2 = function () {
    return OFFER_SUCCESS;
  };
  Receive.$metadata$ = {
    simpleName: 'Receive',
    kind: 'class',
    interfaces: [ReceiveOrClosed]
  };
  function SendElement(pollResult, cont) {
    Send.call(this);
    this._pollResult = pollResult;
    this._cont_0 = cont;
  }
  SendElement.prototype._get_pollResult__3 = function () {
    return this._pollResult;
  };
  SendElement.prototype._get_cont__0 = function () {
    return this._cont_0;
  };
  SendElement.prototype.tryResumeSend_3 = function (otherOp) {
    var tmp0_safe_receiver = otherOp;
    var tmp1_elvis_lhs = this._cont_0.tryResume_3(Unit_getInstance(), tmp0_safe_receiver == null ? null : tmp0_safe_receiver.desc__error);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var token = tmp;
    var tmp2_safe_receiver = otherOp;
    if (tmp2_safe_receiver == null)
      null;
    else {
      tmp2_safe_receiver.finishPrepare__error();
      Unit_getInstance();
    }
    Unit_getInstance();
    return RESUME_TOKEN;
  };
  SendElement.prototype.completeResumeSend_3 = function () {
    return this._cont_0.completeResume_1(RESUME_TOKEN);
  };
  SendElement.prototype.resumeSendClosed_3 = function (closed) {
    var tmp0_resumeWithException_0 = this._cont_0;
    var tmp1_resumeWithException_0 = closed._get_sendException_();
    var tmp0_failure_0_1 = Companion_getInstance_3();
    return tmp0_resumeWithException_0.resumeWith_46(_Result___init__impl_(createFailure(tmp1_resumeWithException_0)));
  };
  SendElement.prototype.toString = function () {
    return '' + _get_classSimpleName_(this) + '@' + _get_hexAddress_(this) + '(' + this._get_pollResult__3() + ')';
  };
  SendElement.$metadata$ = {
    simpleName: 'SendElement',
    kind: 'class',
    interfaces: []
  };
  function SendElementWithUndeliveredHandler(pollResult, cont, onUndeliveredElement) {
    SendElement.call(this, pollResult, cont);
    this._onUndeliveredElement_0 = onUndeliveredElement;
  }
  SendElementWithUndeliveredHandler.prototype.remove_37 = function () {
    if (!SendElement.prototype.remove_37.call(this))
      return false;
    this.undeliveredElement_3();
    return true;
  };
  SendElementWithUndeliveredHandler.prototype.undeliveredElement_3 = function () {
    callUndeliveredElement(this._onUndeliveredElement_0, this._get_pollResult__3(), this._get_cont__0()._get_context__113());
  };
  SendElementWithUndeliveredHandler.$metadata$ = {
    simpleName: 'SendElementWithUndeliveredHandler',
    kind: 'class',
    interfaces: []
  };
  function updateBufferSize($this, currentSize) {
    if (currentSize < $this._capacity) {
      $this._size_1._value_4 = currentSize + 1 | 0;
      return null;
    }var tmp0_subject = $this._onBufferOverflow;
    var tmp;
    if (tmp0_subject.equals(BufferOverflow_SUSPEND_getInstance())) {
      tmp = OFFER_FAILED;
    } else if (tmp0_subject.equals(BufferOverflow_DROP_LATEST_getInstance())) {
      tmp = OFFER_SUCCESS;
    } else if (tmp0_subject.equals(BufferOverflow_DROP_OLDEST_getInstance())) {
      tmp = null;
    } else {
      noWhenBranchMatchedException();
    }
    return tmp;
  }
  function enqueueElement($this, currentSize, element) {
    if (currentSize < $this._capacity) {
      ensureCapacity($this, currentSize);
      $this._buffer_0[($this._head_0 + currentSize | 0) % $this._buffer_0.length] = element;
    } else {
      $this._buffer_0[$this._head_0 % $this._buffer_0.length] = null;
      $this._buffer_0[($this._head_0 + currentSize | 0) % $this._buffer_0.length] = element;
      $this._head_0 = ($this._head_0 + 1 | 0) % $this._buffer_0.length;
    }
  }
  function ensureCapacity($this, currentSize) {
    if (currentSize >= $this._buffer_0.length) {
      var tmp0_min_0 = imul($this._buffer_0.length, 2);
      var tmp1_min_0 = $this._capacity;
      var newSize = function () {
        var $externalVarargReceiverTmp = Math;
        return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_min_0, tmp1_min_0]))));
      }.call(this);
      var newBuffer = fillArrayVal(Array(newSize), null);
      var inductionVariable = 0;
      if (inductionVariable < currentSize)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          newBuffer[i] = $this._buffer_0[($this._head_0 + i | 0) % $this._buffer_0.length];
        }
         while (inductionVariable < currentSize);
      fill(newBuffer, EMPTY, currentSize, newSize);
      $this._buffer_0 = newBuffer;
      $this._head_0 = 0;
    }}
  function ArrayChannel(capacity, onBufferOverflow, onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
    this._capacity = capacity;
    this._onBufferOverflow = onBufferOverflow;
    var tmp0_require_0 = this._capacity >= 1;
    if (!tmp0_require_0) {
      var message_1 = '' + 'ArrayChannel capacity must be at least 1, but ' + this._capacity + ' was specified';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }this._lock = new NoOpLock();
    var tmp = this;
    var tmp0_min_0 = this._capacity;
    var tmp1_min_0 = 8;
    var tmp2_arrayOfNulls_0 = function () {
      var $externalVarargReceiverTmp = Math;
      return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_min_0, tmp1_min_0]))));
    }.call(this);
    var tmp3_apply_0 = fillArrayVal(Array(tmp2_arrayOfNulls_0), null);
    fill$default(tmp3_apply_0, EMPTY, 0, 0, 6, null);
    tmp._buffer_0 = tmp3_apply_0;
    this._head_0 = 0;
    this._size_1 = atomic_1(0);
  }
  ArrayChannel.prototype._get_isBufferAlwaysEmpty__3 = function () {
    return false;
  };
  ArrayChannel.prototype._get_isBufferEmpty__3 = function () {
    return this._size_1._value_4 === 0;
  };
  ArrayChannel.prototype._get_isBufferAlwaysFull__4 = function () {
    return false;
  };
  ArrayChannel.prototype._get_isBufferFull__4 = function () {
    return this._size_1._value_4 === this._capacity ? this._onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance()) : false;
  };
  ArrayChannel.prototype._get_isClosedForReceive__3 = function () {
    var tmp0_withLock_0 = this._lock;
    return AbstractChannel.prototype._get_isClosedForReceive__3.call(this);
  };
  ArrayChannel.prototype.offerInternal_4 = function (element) {
    var receive = null;
    var tmp0_withLock_0 = this._lock;
    var tmp$ret$0;
    l$ret$1: do {
      var size_2 = this._size_1._value_4;
      var tmp0_safe_receiver_3 = this._get_closedForSend__4();
      if (tmp0_safe_receiver_3 == null)
        null;
      else {
        return tmp0_safe_receiver_3;
      }
      Unit_getInstance();
      var tmp1_safe_receiver_4 = updateBufferSize(this, size_2);
      if (tmp1_safe_receiver_4 == null)
        null;
      else {
        return tmp1_safe_receiver_4;
      }
      Unit_getInstance();
      if (size_2 === 0) {
        loop: while (true) {
          var tmp2_elvis_lhs_5 = this.takeFirstReceiveOrPeekClosed_4();
          var tmp;
          if (tmp2_elvis_lhs_5 == null) {
            break loop;
          } else {
            tmp = tmp2_elvis_lhs_5;
          }
          receive = tmp;
          if (receive instanceof Closed) {
            this._size_1._value_4 = size_2;
            return ensureNotNull(receive);
          } else {
          }
          var token_6 = ensureNotNull(receive).tryResumeReceive_2(element, null);
          if (!(token_6 == null)) {
            this._size_1._value_4 = size_2;
            tmp$ret$0 = Unit_getInstance();
            break l$ret$1;
          }}
      }enqueueElement(this, size_2, element);
      return OFFER_SUCCESS;
    }
     while (false);
    ensureNotNull(receive).completeResumeReceive_2(element);
    return ensureNotNull(receive)._get_offerResult__2();
  };
  ArrayChannel.prototype.enqueueSend_4 = function (send) {
    var tmp0_withLock_0 = this._lock;
    return AbstractChannel.prototype.enqueueSend_4.call(this, send);
  };
  ArrayChannel.prototype.pollInternal_3 = function () {
    var send = null;
    var resumed = false;
    var result = null;
    var tmp0_withLock_0 = this._lock;
    var size_2 = this._size_1._value_4;
    if (size_2 === 0) {
      var tmp0_elvis_lhs_3 = this._get_closedForSend__4();
      return tmp0_elvis_lhs_3 == null ? POLL_FAILED : tmp0_elvis_lhs_3;
    }result = this._buffer_0[this._head_0];
    this._buffer_0[this._head_0] = null;
    this._size_1._value_4 = size_2 - 1 | 0;
    var replacement_4 = POLL_FAILED;
    if (size_2 === this._capacity) {
      loop: while (true) {
        var tmp1_elvis_lhs_5 = this.takeFirstSendOrPeekClosed_4();
        var tmp;
        if (tmp1_elvis_lhs_5 == null) {
          break loop;
        } else {
          tmp = tmp1_elvis_lhs_5;
        }
        send = tmp;
        var token_6 = ensureNotNull(send).tryResumeSend_3(null);
        if (!(token_6 == null)) {
          resumed = true;
          replacement_4 = ensureNotNull(send)._get_pollResult__3();
          break loop;
        }ensureNotNull(send).undeliveredElement_3();
      }
    }var tmp_0;
    if (!(replacement_4 === POLL_FAILED)) {
      tmp_0 = !(replacement_4 instanceof Closed);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      this._size_1._value_4 = size_2;
      this._buffer_0[(this._head_0 + size_2 | 0) % this._buffer_0.length] = replacement_4;
    } else {
    }
    this._head_0 = (this._head_0 + 1 | 0) % this._buffer_0.length;
    if (resumed)
      ensureNotNull(send).completeResumeSend_3();
    return result;
  };
  ArrayChannel.prototype.enqueueReceiveInternal_3 = function (receive) {
    var tmp0_withLock_0 = this._lock;
    return AbstractChannel.prototype.enqueueReceiveInternal_3.call(this, receive);
  };
  ArrayChannel.prototype.onCancelIdempotent_3 = function (wasClosed) {
    var onUndeliveredElement = this._get_onUndeliveredElement__4();
    var undeliveredElementException = null;
    var tmp0_withLock_0 = this._lock;
    var tmp0_repeat_0_2 = this._size_1._value_4;
    var inductionVariable = 0;
    if (inductionVariable < tmp0_repeat_0_2)
      do {
        var index_2_4 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var value_4_5 = this._buffer_0[this._head_0];
        if (!(onUndeliveredElement == null) ? !(value_4_5 === EMPTY) : false) {
          undeliveredElementException = callUndeliveredElementCatchingException(onUndeliveredElement, (value_4_5 == null ? true : isObject(value_4_5)) ? value_4_5 : THROW_CCE(), undeliveredElementException);
        }this._buffer_0[this._head_0] = EMPTY;
        this._head_0 = (this._head_0 + 1 | 0) % this._buffer_0.length;
      }
       while (inductionVariable < tmp0_repeat_0_2);
    this._size_1._value_4 = 0;
    AbstractChannel.prototype.onCancelIdempotent_3.call(this, wasClosed);
    var tmp0_safe_receiver = undeliveredElementException;
    if (tmp0_safe_receiver == null)
      null;
    else {
      throw tmp0_safe_receiver;
    }
    Unit_getInstance();
  };
  ArrayChannel.prototype._get_bufferDebugString__4 = function () {
    return '' + '(buffer:capacity=' + this._capacity + ',size=' + this._size_1._value_4 + ')';
  };
  ArrayChannel.$metadata$ = {
    simpleName: 'ArrayChannel',
    kind: 'class',
    interfaces: []
  };
  var BufferOverflow_SUSPEND_instance;
  var BufferOverflow_DROP_OLDEST_instance;
  var BufferOverflow_DROP_LATEST_instance;
  var BufferOverflow_entriesInitialized;
  function BufferOverflow_initEntries() {
    if (BufferOverflow_entriesInitialized)
      return Unit_getInstance();
    BufferOverflow_entriesInitialized = true;
    BufferOverflow_SUSPEND_instance = new BufferOverflow('SUSPEND', 0);
    BufferOverflow_DROP_OLDEST_instance = new BufferOverflow('DROP_OLDEST', 1);
    BufferOverflow_DROP_LATEST_instance = new BufferOverflow('DROP_LATEST', 2);
  }
  function BufferOverflow(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  BufferOverflow.$metadata$ = {
    simpleName: 'BufferOverflow',
    kind: 'class',
    interfaces: []
  };
  function BufferOverflow_SUSPEND_getInstance() {
    BufferOverflow_initEntries();
    return BufferOverflow_SUSPEND_instance;
  }
  function BufferOverflow_DROP_OLDEST_getInstance() {
    BufferOverflow_initEntries();
    return BufferOverflow_DROP_OLDEST_instance;
  }
  function BufferOverflow_DROP_LATEST_getInstance() {
    BufferOverflow_initEntries();
    return BufferOverflow_DROP_LATEST_instance;
  }
  function Factory() {
    Factory_instance = this;
    this._UNLIMITED = 2147483647;
    this._RENDEZVOUS = 0;
    this._CONFLATED = -1;
    this._BUFFERED = -2;
    this._OPTIONAL_CHANNEL = -3;
    this._DEFAULT_BUFFER_PROPERTY_NAME = 'kotlinx.coroutines.channels.defaultBuffer';
    this._CHANNEL_DEFAULT_CAPACITY = systemProp('kotlinx.coroutines.channels.defaultBuffer', 64, 1, 2147483646);
  }
  Factory.$metadata$ = {
    simpleName: 'Factory',
    kind: 'object',
    interfaces: []
  };
  var Factory_instance;
  function Factory_getInstance() {
    if (Factory_instance == null)
      new Factory();
    return Factory_instance;
  }
  function Channel() {
  }
  Channel.$metadata$ = {
    simpleName: 'Channel',
    kind: 'interface',
    interfaces: [SendChannel, ReceiveChannel]
  };
  function Channel_0(capacity, onBufferOverflow, onUndeliveredElement) {
    var tmp0_subject = capacity;
    var tmp;
    Factory_getInstance();
    if (tmp0_subject === 0) {
      tmp = onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance()) ? new RendezvousChannel(onUndeliveredElement) : new ArrayChannel(1, onBufferOverflow, onUndeliveredElement);
    } else {
      Factory_getInstance();
      if (tmp0_subject === -1) {
        var tmp0_require_0 = onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance());
        if (!tmp0_require_0) {
          var message_1 = 'CONFLATED capacity cannot be used with non-default onBufferOverflow';
          throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
        }tmp = new ConflatedChannel(onUndeliveredElement);
      } else {
        Factory_getInstance();
        if (tmp0_subject === 2147483647) {
          tmp = new LinkedListChannel(onUndeliveredElement);
        } else {
          Factory_getInstance();
          if (tmp0_subject === -2) {
            tmp = new ArrayChannel(onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance()) ? Factory_getInstance()._CHANNEL_DEFAULT_CAPACITY : 1, onBufferOverflow, onUndeliveredElement);
          } else {
            {
              tmp = (capacity === 1 ? onBufferOverflow.equals(BufferOverflow_DROP_OLDEST_getInstance()) : false) ? new ConflatedChannel(onUndeliveredElement) : new ArrayChannel(capacity, onBufferOverflow, onUndeliveredElement);
            }
          }
        }
      }
    }
    return tmp;
  }
  function Channel$default(capacity, onBufferOverflow, onUndeliveredElement, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      Factory_getInstance();
      capacity = 0;
    }if (!(($mask0 & 2) === 0))
      onBufferOverflow = BufferOverflow_SUSPEND_getInstance();
    if (!(($mask0 & 4) === 0))
      onUndeliveredElement = null;
    return Channel_0(capacity, onBufferOverflow, onUndeliveredElement);
  }
  function ReceiveChannel() {
  }
  ReceiveChannel.prototype.cancel$default_17 = function (cause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    return $handler == null ? this.cancel_22(cause) : $handler(cause);
  };
  ReceiveChannel.$metadata$ = {
    simpleName: 'ReceiveChannel',
    kind: 'interface',
    interfaces: []
  };
  function SendChannel() {
  }
  SendChannel.prototype.close$default_5 = function (cause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    return $handler == null ? this.close_27(cause) : $handler(cause);
  };
  SendChannel.$metadata$ = {
    simpleName: 'SendChannel',
    kind: 'interface',
    interfaces: []
  };
  function ChannelIterator() {
  }
  ChannelIterator.$metadata$ = {
    simpleName: 'ChannelIterator',
    kind: 'interface',
    interfaces: []
  };
  function ClosedReceiveChannelException(message) {
    NoSuchElementException_init_$Init$_0(message, this);
    captureStack(this, ClosedReceiveChannelException);
  }
  ClosedReceiveChannelException.$metadata$ = {
    simpleName: 'ClosedReceiveChannelException',
    kind: 'class',
    interfaces: []
  };
  function ClosedSendChannelException(message) {
    IllegalStateException_init_$Init$_0(message, this);
    captureStack(this, ClosedSendChannelException);
  }
  ClosedSendChannelException.$metadata$ = {
    simpleName: 'ClosedSendChannelException',
    kind: 'class',
    interfaces: []
  };
  function cancelConsumed(_this_, cause) {
    var tmp0_safe_receiver = cause;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp0_elvis_lhs_2 = tmp0_safe_receiver instanceof CancellationException ? tmp0_safe_receiver : null;
      tmp = tmp0_elvis_lhs_2 == null ? new CancellationException('Channel was consumed, consumer had failed', tmp0_safe_receiver) : tmp0_elvis_lhs_2;
    }
    _this_.cancel_22(tmp);
  }
  function updateValueLocked($this, element) {
    var old = $this._value_6;
    var tmp;
    if (old === EMPTY) {
      tmp = null;
    } else {
      var tmp0_safe_receiver = $this._get_onUndeliveredElement__4();
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp_1 = (old == null ? true : isObject(old)) ? old : THROW_CCE();
        tmp_0 = callUndeliveredElementCatchingException$default(tmp0_safe_receiver, tmp_1, null, 2, null);
      }
      tmp = tmp_0;
    }
    var undeliveredElementException = tmp;
    $this._value_6 = element;
    return undeliveredElementException;
  }
  function ConflatedChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
    this._lock_0 = new NoOpLock();
    this._value_6 = EMPTY;
  }
  ConflatedChannel.prototype._get_isBufferAlwaysEmpty__3 = function () {
    return false;
  };
  ConflatedChannel.prototype._get_isBufferEmpty__3 = function () {
    return this._value_6 === EMPTY;
  };
  ConflatedChannel.prototype._get_isBufferAlwaysFull__4 = function () {
    return false;
  };
  ConflatedChannel.prototype._get_isBufferFull__4 = function () {
    return false;
  };
  ConflatedChannel.prototype.offerInternal_4 = function (element) {
    var receive = null;
    var tmp0_withLock_0 = this._lock_0;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_safe_receiver_2 = this._get_closedForSend__4();
      if (tmp0_safe_receiver_2 == null)
        null;
      else {
        return tmp0_safe_receiver_2;
      }
      Unit_getInstance();
      if (this._value_6 === EMPTY) {
        loop: while (true) {
          var tmp1_elvis_lhs_3 = this.takeFirstReceiveOrPeekClosed_4();
          var tmp;
          if (tmp1_elvis_lhs_3 == null) {
            break loop;
          } else {
            tmp = tmp1_elvis_lhs_3;
          }
          receive = tmp;
          if (receive instanceof Closed) {
            return ensureNotNull(receive);
          } else {
          }
          var token_4 = ensureNotNull(receive).tryResumeReceive_2(element, null);
          if (!(token_4 == null)) {
            tmp$ret$0 = Unit_getInstance();
            break l$ret$1;
          }}
      }var tmp2_safe_receiver_5 = updateValueLocked(this, element);
      if (tmp2_safe_receiver_5 == null)
        null;
      else {
        throw tmp2_safe_receiver_5;
      }
      Unit_getInstance();
      return OFFER_SUCCESS;
    }
     while (false);
    ensureNotNull(receive).completeResumeReceive_2(element);
    return ensureNotNull(receive)._get_offerResult__2();
  };
  ConflatedChannel.prototype.pollInternal_3 = function () {
    var result = null;
    var tmp0_withLock_0 = this._lock_0;
    if (this._value_6 === EMPTY) {
      var tmp0_elvis_lhs_2 = this._get_closedForSend__4();
      return tmp0_elvis_lhs_2 == null ? POLL_FAILED : tmp0_elvis_lhs_2;
    }result = this._value_6;
    this._value_6 = EMPTY;
    return result;
  };
  ConflatedChannel.prototype.onCancelIdempotent_3 = function (wasClosed) {
    var undeliveredElementException = null;
    var tmp0_withLock_0 = this._lock_0;
    undeliveredElementException = updateValueLocked(this, EMPTY);
    AbstractChannel.prototype.onCancelIdempotent_3.call(this, wasClosed);
    var tmp0_safe_receiver = undeliveredElementException;
    if (tmp0_safe_receiver == null)
      null;
    else {
      throw tmp0_safe_receiver;
    }
    Unit_getInstance();
  };
  ConflatedChannel.prototype.enqueueReceiveInternal_3 = function (receive) {
    var tmp0_withLock_0 = this._lock_0;
    return AbstractChannel.prototype.enqueueReceiveInternal_3.call(this, receive);
  };
  ConflatedChannel.prototype._get_bufferDebugString__4 = function () {
    return '' + '(value=' + this._value_6 + ')';
  };
  ConflatedChannel.$metadata$ = {
    simpleName: 'ConflatedChannel',
    kind: 'class',
    interfaces: []
  };
  function LinkedListChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
  }
  LinkedListChannel.prototype._get_isBufferAlwaysEmpty__3 = function () {
    return true;
  };
  LinkedListChannel.prototype._get_isBufferEmpty__3 = function () {
    return true;
  };
  LinkedListChannel.prototype._get_isBufferAlwaysFull__4 = function () {
    return false;
  };
  LinkedListChannel.prototype._get_isBufferFull__4 = function () {
    return false;
  };
  LinkedListChannel.prototype.offerInternal_4 = function (element) {
    while (true) {
      var result = AbstractChannel.prototype.offerInternal_4.call(this, element);
      if (result === OFFER_SUCCESS)
        return OFFER_SUCCESS;
      else {
        if (result === OFFER_FAILED) {
          var sendResult = this.sendBuffered_0(element);
          if (sendResult == null)
            return OFFER_SUCCESS;
          else {
            if (sendResult instanceof Closed)
              return sendResult;
            else {
            }
          }
        } else {
          if (result instanceof Closed)
            return result;
          else {
            {
              var tmp0_error_0 = '' + 'Invalid offerInternal result ' + result;
              throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
            }
          }
        }
      }
    }
  };
  LinkedListChannel.prototype.onCancelIdempotentList_3 = function (list, closed) {
    var undeliveredElementException = null;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_subject_1 = _get_holder_(list);
      if (tmp0_subject_1 == null) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
        if (!(tmp0_subject_1 instanceof ArrayList)) {
          var tmp = _get_holder_(list);
          var tmp0__anonymous__5 = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
          var tmp0_subject_6 = tmp0__anonymous__5;
          if (tmp0_subject_6 instanceof SendBuffered) {
            var tmp1_safe_receiver_7 = this._get_onUndeliveredElement__4();
            var tmp_0;
            if (tmp1_safe_receiver_7 == null) {
              tmp_0 = null;
            } else {
              var tmp_1 = tmp0__anonymous__5._element_0;
              tmp_0 = callUndeliveredElementCatchingException(tmp1_safe_receiver_7, (tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE(), undeliveredElementException);
            }
            undeliveredElementException = tmp_0;
          } else {
            tmp0__anonymous__5.resumeSendClosed_3(closed);
          }
        } else {
          {
            var tmp_2 = _get_holder_(list);
            var list_2 = tmp_2 instanceof ArrayList ? tmp_2 : THROW_CCE();
            var inductionVariable = list_2._get_size__48() - 1 | 0;
            if (0 <= inductionVariable)
              do {
                var i_4 = inductionVariable;
                inductionVariable = inductionVariable + -1 | 0;
                var tmp1__anonymous__5 = list_2.get_77(i_4);
                var tmp0_subject_6_0 = tmp1__anonymous__5;
                if (tmp0_subject_6_0 instanceof SendBuffered) {
                  var tmp1_safe_receiver_7_0 = this._get_onUndeliveredElement__4();
                  var tmp_3;
                  if (tmp1_safe_receiver_7_0 == null) {
                    tmp_3 = null;
                  } else {
                    var tmp_4 = tmp1__anonymous__5._element_0;
                    tmp_3 = callUndeliveredElementCatchingException(tmp1_safe_receiver_7_0, (tmp_4 == null ? true : isObject(tmp_4)) ? tmp_4 : THROW_CCE(), undeliveredElementException);
                  }
                  undeliveredElementException = tmp_3;
                } else {
                  tmp1__anonymous__5.resumeSendClosed_3(closed);
                }
              }
               while (0 <= inductionVariable);
          }
        }
      }
    }
     while (false);
    var tmp0_safe_receiver = undeliveredElementException;
    if (tmp0_safe_receiver == null)
      null;
    else {
      throw tmp0_safe_receiver;
    }
    Unit_getInstance();
  };
  LinkedListChannel.$metadata$ = {
    simpleName: 'LinkedListChannel',
    kind: 'class',
    interfaces: []
  };
  function RendezvousChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
  }
  RendezvousChannel.prototype._get_isBufferAlwaysEmpty__3 = function () {
    return true;
  };
  RendezvousChannel.prototype._get_isBufferEmpty__3 = function () {
    return true;
  };
  RendezvousChannel.prototype._get_isBufferAlwaysFull__4 = function () {
    return true;
  };
  RendezvousChannel.prototype._get_isBufferFull__4 = function () {
    return true;
  };
  RendezvousChannel.$metadata$ = {
    simpleName: 'RendezvousChannel',
    kind: 'class',
    interfaces: []
  };
  function ensureCapacity_0($this) {
    var currentSize = $this._elements.length;
    var newCapacity = currentSize << 1;
    var newElements = fillArrayVal(Array(newCapacity), null);
    var tmp0_copyInto_0 = $this._elements;
    var tmp1_copyInto_0 = $this._head_1;
    var tmp2_copyInto_0 = 0;
    var tmp3_copyInto_0 = tmp0_copyInto_0.length;
    arrayCopy_0(tmp0_copyInto_0, newElements, tmp2_copyInto_0, tmp1_copyInto_0, tmp3_copyInto_0);
    Unit_getInstance();
    var tmp4_copyInto_0 = $this._elements;
    var tmp5_copyInto_0 = $this._elements.length - $this._head_1 | 0;
    var tmp6_copyInto_0 = $this._head_1;
    var tmp7_copyInto_0 = 0;
    arrayCopy_0(tmp4_copyInto_0, newElements, tmp5_copyInto_0, tmp7_copyInto_0, tmp6_copyInto_0);
    Unit_getInstance();
    $this._elements = newElements;
    $this._head_1 = 0;
    $this._tail = currentSize;
  }
  function ArrayQueue() {
    var tmp = this;
    var tmp0_arrayOfNulls_0 = 16;
    tmp._elements = fillArrayVal(Array(tmp0_arrayOfNulls_0), null);
    this._head_1 = 0;
    this._tail = 0;
  }
  ArrayQueue.prototype._get_isEmpty__6 = function () {
    return this._head_1 === this._tail;
  };
  ArrayQueue.prototype.addLast_17 = function (element) {
    this._elements[this._tail] = element;
    this._tail = (this._tail + 1 | 0) & (this._elements.length - 1 | 0);
    if (this._tail === this._head_1)
      ensureCapacity_0(this);
  };
  ArrayQueue.prototype.removeFirstOrNull_4 = function () {
    if (this._head_1 === this._tail)
      return null;
    var element = this._elements[this._head_1];
    this._elements[this._head_1] = null;
    this._head_1 = (this._head_1 + 1 | 0) & (this._elements.length - 1 | 0);
    return isObject(element) ? element : THROW_CCE();
  };
  ArrayQueue.$metadata$ = {
    simpleName: 'ArrayQueue',
    kind: 'class',
    interfaces: []
  };
  var NO_DECISION;
  function OpDescriptor() {
  }
  OpDescriptor.prototype.toString = function () {
    return '' + _get_classSimpleName_(this) + '@' + _get_hexAddress_(this);
  };
  OpDescriptor.$metadata$ = {
    simpleName: 'OpDescriptor',
    kind: 'class',
    interfaces: []
  };
  function AtomicOp() {
    OpDescriptor.call(this);
    this.__consensus = atomic(NO_DECISION);
  }
  AtomicOp.prototype.decide_0 = function (decision) {
    var current = this.__consensus._value_2;
    if (!(current === NO_DECISION))
      return current;
    if (this.__consensus.atomicfu$compareAndSet(NO_DECISION, decision))
      return decision;
    return this.__consensus._value_2;
  };
  AtomicOp.prototype.perform_1 = function (affected) {
    var decision = this.__consensus._value_2;
    if (decision === NO_DECISION) {
      decision = this.decide_0(this.prepare_1((affected == null ? true : isObject(affected)) ? affected : THROW_CCE()));
    }this.complete_6((affected == null ? true : isObject(affected)) ? affected : THROW_CCE(), decision);
    return decision;
  };
  AtomicOp.$metadata$ = {
    simpleName: 'AtomicOp',
    kind: 'class',
    interfaces: []
  };
  var UNDEFINED;
  var REUSABLE_CLAIMED;
  function resumeCancellableWith(_this_, result, onCancellation) {
    var tmp0_subject = _this_;
    var tmp;
    if (tmp0_subject instanceof DispatchedContinuation) {
      var tmp2_resumeCancellableWith_0 = _this_;
      var state_1 = toState_0(result, onCancellation);
      var tmp_0;
      if (tmp2_resumeCancellableWith_0._dispatcher.isDispatchNeeded_8(tmp2_resumeCancellableWith_0._get_context__113())) {
        tmp2_resumeCancellableWith_0.__state_1 = state_1;
        tmp2_resumeCancellableWith_0._set_resumeMode__0(1);
        tmp_0 = tmp2_resumeCancellableWith_0._dispatcher.dispatch_8(tmp2_resumeCancellableWith_0._get_context__113(), tmp2_resumeCancellableWith_0);
      } else {
        var tmp$ret$0;
        l$ret$1: do {
          var tmp0_executeUnconfined_0 = 1;
          var tmp1_executeUnconfined_0 = false;
          var eventLoop_2 = ThreadLocalEventLoop_getInstance()._get_eventLoop_();
          if (tmp1_executeUnconfined_0 ? eventLoop_2._get_isUnconfinedQueueEmpty__0() : false) {
            tmp$ret$0 = false;
            break l$ret$1;
          }var tmp_1;
          if (eventLoop_2._get_isUnconfinedLoopActive__0()) {
            tmp2_resumeCancellableWith_0.__state_1 = state_1;
            tmp2_resumeCancellableWith_0._set_resumeMode__0(tmp0_executeUnconfined_0);
            eventLoop_2.dispatchUnconfined_0(tmp2_resumeCancellableWith_0);
            tmp_1 = true;
          } else {
            eventLoop_2.incrementUseCount_0(true);
            try {
              var tmp$ret$2;
              l$ret$3: do {
                var job_1_4 = tmp2_resumeCancellableWith_0._get_context__113().get_63(Key_getInstance_3());
                if (!(job_1_4 == null) ? !job_1_4._get_isActive__26() : false) {
                  var cause_2_5 = job_1_4.getCancellationException_11();
                  tmp2_resumeCancellableWith_0.cancelCompletedResult_2(state_1, cause_2_5);
                  var tmp0_failure_0_1_6 = Companion_getInstance_3();
                  tmp2_resumeCancellableWith_0.resumeWith_46(_Result___init__impl_(createFailure(cause_2_5)));
                  tmp$ret$2 = true;
                  break l$ret$3;
                }tmp$ret$2 = false;
              }
               while (false);
              if (!tmp$ret$2) {
                var tmp0_withContinuationContext_0_7 = tmp2_resumeCancellableWith_0._continuation_4;
                var tmp1_withContinuationContext_0_8 = tmp2_resumeCancellableWith_0._countOrElement;
                tmp2_resumeCancellableWith_0._continuation_4.resumeWith_46(result);
              } else {
              }
              $l$break: while (true) {
                if (!eventLoop_2.processUnconfinedEvent_0())
                  break $l$break;
              }
            } catch ($p) {
              if ($p instanceof Error) {
                tmp2_resumeCancellableWith_0.handleFatalException_2($p, null);
              } else {
                {
                  throw $p;
                }
              }
            }
            finally {
              eventLoop_2.decrementUseCount_0(true);
            }
            tmp_1 = false;
          }
          tmp$ret$0 = tmp_1;
        }
         while (false);
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    } else {
      {
        tmp = _this_.resumeWith_46(result);
      }
    }
    return tmp;
  }
  function resumeCancellableWith$default(_this_, result, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      onCancellation = null;
    return resumeCancellableWith(_this_, result, onCancellation);
  }
  function DispatchedContinuation(dispatcher, continuation) {
    DispatchedTask.call(this, -1);
    this._dispatcher = dispatcher;
    this._continuation_4 = continuation;
    this.__state_1 = UNDEFINED;
    this._countOrElement = threadContextElements(this._get_context__113());
    this.__reusableCancellableContinuation = atomic(null);
  }
  DispatchedContinuation.prototype._get_context__113 = function () {
    return this._continuation_4._get_context__113();
  };
  DispatchedContinuation.prototype._get_reusableCancellableContinuation_ = function () {
    var tmp = this.__reusableCancellableContinuation._value_2;
    return tmp instanceof CancellableContinuationImpl ? tmp : null;
  };
  DispatchedContinuation.prototype.isReusable = function (requester) {
    var tmp0_elvis_lhs = this.__reusableCancellableContinuation._value_2;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var value = tmp;
    if (value instanceof CancellableContinuationImpl)
      return value === requester;
    else {
    }
    return true;
  };
  DispatchedContinuation.prototype.claimReusableCancellableContinuation = function () {
    var tmp0_loop_0 = this.__reusableCancellableContinuation;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_2;
      if (tmp1__anonymous__1 === null) {
        this.__reusableCancellableContinuation._value_2 = REUSABLE_CLAIMED;
        return null;
      } else {
        if (tmp1__anonymous__1 instanceof CancellableContinuationImpl) {
          if (this.__reusableCancellableContinuation.atomicfu$compareAndSet(tmp1__anonymous__1, REUSABLE_CLAIMED)) {
            return tmp1__anonymous__1 instanceof CancellableContinuationImpl ? tmp1__anonymous__1 : THROW_CCE();
          }} else {
          {
            var tmp0_error_0_2 = '' + 'Inconsistent state ' + tmp1__anonymous__1;
            throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0_2));
          }
        }
      }
    }
    Unit_getInstance();
  };
  DispatchedContinuation.prototype.checkPostponedCancellation = function (continuation) {
    var tmp0_loop_0 = this.__reusableCancellableContinuation;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_2;
      if (tmp1__anonymous__1 === REUSABLE_CLAIMED) {
        if (this.__reusableCancellableContinuation.atomicfu$compareAndSet(REUSABLE_CLAIMED, continuation))
          return null;
      } else {
        if (tmp1__anonymous__1 === null)
          return null;
        else {
          if (tmp1__anonymous__1 instanceof Error) {
            var tmp0_require_0_2 = this.__reusableCancellableContinuation.atomicfu$compareAndSet(tmp1__anonymous__1, null);
            if (!tmp0_require_0_2) {
              var message_2_1_3 = 'Failed requirement.';
              throw IllegalArgumentException_init_$Create$_0(toString_1(message_2_1_3));
            }return tmp1__anonymous__1;
          } else {
            {
              var tmp1_error_0_4 = '' + 'Inconsistent state ' + tmp1__anonymous__1;
              throw IllegalStateException_init_$Create$(toString_1(tmp1_error_0_4));
            }
          }
        }
      }
    }
    Unit_getInstance();
  };
  DispatchedContinuation.prototype.postponeCancellation = function (cause) {
    var tmp0_loop_0 = this.__reusableCancellableContinuation;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_2;
      var tmp0_subject_2 = tmp1__anonymous__1;
      if (equals_1(tmp0_subject_2, REUSABLE_CLAIMED)) {
        if (this.__reusableCancellableContinuation.atomicfu$compareAndSet(REUSABLE_CLAIMED, cause))
          return true;
      } else {
        if (tmp0_subject_2 instanceof Error)
          return true;
        else {
          {
            if (this.__reusableCancellableContinuation.atomicfu$compareAndSet(tmp1__anonymous__1, null))
              return false;
          }
        }
      }
    }
    Unit_getInstance();
  };
  DispatchedContinuation.prototype.takeState_2 = function () {
    var state = this.__state_1;
    this.__state_1 = UNDEFINED;
    return state;
  };
  DispatchedContinuation.prototype._get_delegate__2 = function () {
    return this;
  };
  DispatchedContinuation.prototype.resumeWith_46 = function (result) {
    var context = this._continuation_4._get_context__113();
    var state = toState$default(result, null, 1, null);
    if (this._dispatcher.isDispatchNeeded_8(context)) {
      this.__state_1 = state;
      this._set_resumeMode__0(0);
      this._dispatcher.dispatch_8(context, this);
    } else {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp0_executeUnconfined_0 = 0;
        var tmp1_executeUnconfined_0 = false;
        var eventLoop_2 = ThreadLocalEventLoop_getInstance()._get_eventLoop_();
        if (tmp1_executeUnconfined_0 ? eventLoop_2._get_isUnconfinedQueueEmpty__0() : false) {
          tmp$ret$0 = false;
          break l$ret$1;
        }var tmp;
        if (eventLoop_2._get_isUnconfinedLoopActive__0()) {
          this.__state_1 = state;
          this._set_resumeMode__0(tmp0_executeUnconfined_0);
          eventLoop_2.dispatchUnconfined_0(this);
          tmp = true;
        } else {
          eventLoop_2.incrementUseCount_0(true);
          try {
            var tmp0_withCoroutineContext_0_4 = this._get_context__113();
            var tmp1_withCoroutineContext_0_5 = this._countOrElement;
            this._continuation_4.resumeWith_46(result);
            $l$break: while (true) {
              if (!eventLoop_2.processUnconfinedEvent_0())
                break $l$break;
            }
          } catch ($p) {
            if ($p instanceof Error) {
              this.handleFatalException_2($p, null);
            } else {
              {
                throw $p;
              }
            }
          }
          finally {
            eventLoop_2.decrementUseCount_0(true);
          }
          tmp = false;
        }
        tmp$ret$0 = tmp;
      }
       while (false);
      Unit_getInstance();
    }
  };
  DispatchedContinuation.prototype.cancelCompletedResult_2 = function (takenState, cause) {
    if (takenState instanceof CompletedWithCancellation) {
      takenState._onCancellation_0(cause);
    } else {
    }
  };
  DispatchedContinuation.prototype.toString = function () {
    return '' + 'DispatchedContinuation[' + this._dispatcher + ', ' + toDebugString(this._continuation_4) + ']';
  };
  DispatchedContinuation.$metadata$ = {
    simpleName: 'DispatchedContinuation',
    kind: 'class',
    interfaces: [CoroutineStackFrame, Continuation]
  };
  function DispatchedTask(resumeMode) {
    SchedulerTask.call(this);
    this._resumeMode = resumeMode;
  }
  DispatchedTask.prototype._set_resumeMode__0 = function (_set___) {
    this._resumeMode = _set___;
  };
  DispatchedTask.prototype._get_resumeMode__1 = function () {
    return this._resumeMode;
  };
  DispatchedTask.prototype.cancelCompletedResult_2 = function (takenState, cause) {
  };
  DispatchedTask.prototype.getSuccessfulResult_2 = function (state) {
    return (state == null ? true : isObject(state)) ? state : THROW_CCE();
  };
  DispatchedTask.prototype.getExceptionalResult_2 = function (state) {
    var tmp0_safe_receiver = state instanceof CompletedExceptionally ? state : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver._cause;
  };
  DispatchedTask.prototype.run_5 = function () {
    var taskContext = _get_taskContext_(this);
    var fatalException = null;
    try {
      var tmp = this._get_delegate__2();
      var delegate = tmp instanceof DispatchedContinuation ? tmp : THROW_CCE();
      var continuation = delegate._continuation_4;
      var tmp0_withContinuationContext_0 = delegate._countOrElement;
      var context_2 = continuation._get_context__113();
      var state_3 = this.takeState_2();
      var exception_4 = this.getExceptionalResult_2(state_3);
      var job_5 = (exception_4 == null ? _get_isCancellableMode_(this._resumeMode) : false) ? context_2.get_63(Key_getInstance_3()) : null;
      if (!(job_5 == null) ? !job_5._get_isActive__26() : false) {
        var cause_6 = job_5.getCancellationException_11();
        this.cancelCompletedResult_2(state_3, cause_6);
        var tmp0_failure_0_7 = Companion_getInstance_3();
        var tmp1_failure_0_8 = recoverStackTrace(cause_6, continuation);
        continuation.resumeWith_46(_Result___init__impl_(createFailure(tmp1_failure_0_8)));
      } else {
        if (!(exception_4 == null)) {
          var tmp0_failure_0_1_9 = Companion_getInstance_3();
          continuation.resumeWith_46(_Result___init__impl_(createFailure(exception_4)));
        } else {
          var tmp2_resume_0_10 = this.getSuccessfulResult_2(state_3);
          var tmp0_success_0_1_11 = Companion_getInstance_3();
          continuation.resumeWith_46(_Result___init__impl_(tmp2_resume_0_10));
        }
      }
    } catch ($p) {
      if ($p instanceof Error) {
        fatalException = $p;
      } else {
        {
          throw $p;
        }
      }
    }
    finally {
      var tmp_0;
      try {
        var tmp0_success_0_1 = Companion_getInstance_3();
        var tmp1_success_0_2 = Unit_getInstance();
        tmp_0 = _Result___init__impl_(Unit_getInstance());
      } catch ($p_0) {
        var tmp_1;
        if ($p_0 instanceof Error) {
          var tmp2_failure_0_4 = Companion_getInstance_3();
          tmp_1 = _Result___init__impl_(createFailure($p_0));
        } else {
          {
            throw $p_0;
          }
        }
        tmp_0 = tmp_1;
      }
      var result = tmp_0;
      this.handleFatalException_2(fatalException, Result__exceptionOrNull_impl(result));
    }
  };
  DispatchedTask.prototype.handleFatalException_2 = function (exception, finallyException) {
    if (exception === null ? finallyException === null : false)
      return Unit_getInstance();
    if (!(exception === null) ? !(finallyException === null) : false) {
    }var tmp0_elvis_lhs = exception;
    var cause = tmp0_elvis_lhs == null ? finallyException : tmp0_elvis_lhs;
    var reason = new CoroutinesInternalError('' + 'Fatal exception in coroutines machinery for ' + this + '. ' + "Please read KDoc to 'handleFatalException' method and report this incident to maintainers", ensureNotNull(cause));
    handleCoroutineException(this._get_delegate__2()._get_context__113(), reason);
  };
  DispatchedTask.$metadata$ = {
    simpleName: 'DispatchedTask',
    kind: 'class',
    interfaces: []
  };
  function _get_isReusableMode_(_this_) {
    return _this_ === 2;
  }
  function _get_isCancellableMode_(_this_) {
    return _this_ === 1 ? true : _this_ === 2;
  }
  function dispatch(_this_, mode) {
    var delegate = _this_._get_delegate__2();
    var undispatched = mode === 4;
    var tmp;
    var tmp_0;
    if (!undispatched) {
      tmp_0 = delegate instanceof DispatchedContinuation;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = _get_isCancellableMode_(mode) === _get_isCancellableMode_(_this_._resumeMode);
    } else {
      {
        tmp = false;
      }
    }
    if (tmp) {
      var dispatcher = delegate._dispatcher;
      var context = delegate._get_context__113();
      if (dispatcher.isDispatchNeeded_8(context)) {
        dispatcher.dispatch_8(context, _this_);
      } else {
        resumeUnconfined(_this_);
      }
    } else {
      {
        resume(_this_, delegate, undispatched);
      }
    }
  }
  function resumeUnconfined(_this_) {
    var eventLoop = ThreadLocalEventLoop_getInstance()._get_eventLoop_();
    if (eventLoop._get_isUnconfinedLoopActive__0()) {
      eventLoop.dispatchUnconfined_0(_this_);
    } else {
      eventLoop.incrementUseCount_0(true);
      try {
        resume(_this_, _this_._get_delegate__2(), true);
        $l$break: while (true) {
          if (!eventLoop.processUnconfinedEvent_0())
            break $l$break;
        }
      } catch ($p) {
        if ($p instanceof Error) {
          _this_.handleFatalException_2($p, null);
        } else {
          {
            throw $p;
          }
        }
      }
      finally {
        eventLoop.decrementUseCount_0(true);
      }
    }
  }
  function resume(_this_, delegate, undispatched) {
    var state = _this_.takeState_2();
    var exception = _this_.getExceptionalResult_2(state);
    var tmp;
    if (!(exception == null)) {
      var tmp0_failure_0 = Companion_getInstance_3();
      tmp = _Result___init__impl_(createFailure(exception));
    } else {
      var tmp1_success_0 = Companion_getInstance_3();
      var tmp2_success_0 = _this_.getSuccessfulResult_2(state);
      tmp = _Result___init__impl_(tmp2_success_0);
    }
    var result = tmp;
    if (undispatched) {
      var tmp3_resumeUndispatchedWith_0 = delegate instanceof DispatchedContinuation ? delegate : THROW_CCE();
      var tmp0_withContinuationContext_0_1 = tmp3_resumeUndispatchedWith_0._continuation_4;
      var tmp1_withContinuationContext_0_2 = tmp3_resumeUndispatchedWith_0._countOrElement;
      tmp3_resumeUndispatchedWith_0._continuation_4.resumeWith_46(result);
    } else
      delegate.resumeWith_46(result);
  }
  function _InlineList___init__impl_(holder) {
    return holder;
  }
  function _InlineList___init__impl__0(holder, $mask0, $marker) {
    if (!(($mask0 & 1) === 0))
      holder = null;
    var tmp = _InlineList___init__impl_(holder);
    return tmp;
  }
  function _get_holder_($this) {
    return $this;
  }
  function InlineList__plus_impl(this_0, element) {
    var tmp0_subject = _get_holder_(this_0);
    var tmp;
    if (tmp0_subject == null) {
      tmp = _InlineList___init__impl_(element);
    } else {
      if (tmp0_subject instanceof ArrayList) {
        var tmp_0 = _get_holder_(this_0);
        (tmp_0 instanceof ArrayList ? tmp_0 : THROW_CCE()).add_32(element);
        Unit_getInstance();
        tmp = _InlineList___init__impl_(_get_holder_(this_0));
      } else {
        {
          var list = ArrayList_init_$Create$_0(4);
          var tmp_1 = _get_holder_(this_0);
          list.add_32((tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE());
          Unit_getInstance();
          list.add_32(element);
          Unit_getInstance();
          tmp = _InlineList___init__impl_(list);
        }
      }
    }
    return tmp;
  }
  function bindCancellationFun(_this_, element, context) {
    return _no_name_provided_$factory_35(_this_, element, context);
  }
  function UndeliveredElementException(message, cause) {
    RuntimeException_init_$Init$_1(message, cause, this);
    captureStack(this, UndeliveredElementException);
  }
  UndeliveredElementException.$metadata$ = {
    simpleName: 'UndeliveredElementException',
    kind: 'class',
    interfaces: []
  };
  function callUndeliveredElementCatchingException(_this_, element, undeliveredElementException) {
    try {
      _this_(element);
    } catch ($p) {
      if ($p instanceof Error) {
        if (!(undeliveredElementException == null) ? !(undeliveredElementException.cause === $p) : false) {
        } else {
          return new UndeliveredElementException('' + 'Exception in undelivered element handler for ' + element, $p);
        }
      } else {
        {
          throw $p;
        }
      }
    }
    return undeliveredElementException;
  }
  function callUndeliveredElementCatchingException$default(_this_, element, undeliveredElementException, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      undeliveredElementException = null;
    return callUndeliveredElementCatchingException(_this_, element, undeliveredElementException);
  }
  function callUndeliveredElement(_this_, element, context) {
    var tmp0_safe_receiver = callUndeliveredElementCatchingException(_this_, element, null);
    if (tmp0_safe_receiver == null)
      null;
    else {
      handleCoroutineException(context, tmp0_safe_receiver);
      Unit_getInstance();
    }
    Unit_getInstance();
  }
  function _no_name_provided__49($this_bindCancellationFun, $element, $context) {
    this._$this_bindCancellationFun = $this_bindCancellationFun;
    this._$element = $element;
    this._$context = $context;
  }
  _no_name_provided__49.prototype.invoke_289 = function (_anonymous_parameter_0_) {
    callUndeliveredElement(this._$this_bindCancellationFun, this._$element, this._$context);
  };
  _no_name_provided__49.prototype.invoke_420 = function (p1) {
    this.invoke_289(p1 instanceof Error ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__49.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_35($this_bindCancellationFun, $element, $context) {
    var i = new _no_name_provided__49($this_bindCancellationFun, $element, $context);
    return function (p1) {
      i.invoke_289(p1);
      return Unit_getInstance();
    };
  }
  function ScopeCoroutine(context, uCont) {
    AbstractCoroutine.call(this, context, true);
    this._uCont = uCont;
  }
  ScopeCoroutine.prototype._get_isScopedCoroutine__9 = function () {
    return true;
  };
  ScopeCoroutine.prototype.afterCompletion_9 = function (state) {
    var tmp = intercepted(this._uCont);
    var tmp_0 = recoverResult(state, this._uCont);
    resumeCancellableWith$default(tmp, tmp_0, null, 2, null);
  };
  ScopeCoroutine.prototype.afterResume_5 = function (state) {
    this._uCont.resumeWith_46(recoverResult(state, this._uCont));
  };
  ScopeCoroutine.$metadata$ = {
    simpleName: 'ScopeCoroutine',
    kind: 'class',
    interfaces: [CoroutineStackFrame]
  };
  function ContextScope(context) {
    this._coroutineContext = context;
  }
  ContextScope.prototype._get_coroutineContext__27 = function () {
    return this._coroutineContext;
  };
  ContextScope.prototype.toString = function () {
    return '' + 'CoroutineScope(coroutineContext=' + this._coroutineContext + ')';
  };
  ContextScope.$metadata$ = {
    simpleName: 'ContextScope',
    kind: 'class',
    interfaces: [CoroutineScope]
  };
  function Symbol(symbol) {
    this._symbol = symbol;
  }
  Symbol.prototype.toString = function () {
    return '' + '<' + this._symbol + '>';
  };
  Symbol.$metadata$ = {
    simpleName: 'Symbol',
    kind: 'class',
    interfaces: []
  };
  function systemProp(propertyName, defaultValue, minValue, maxValue) {
    return systemProp_0(propertyName, toLong_0(defaultValue), toLong_0(minValue), toLong_0(maxValue)).toInt_5();
  }
  function systemProp_0(propertyName, defaultValue, minValue, maxValue) {
    var tmp0_elvis_lhs = systemProp_1(propertyName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return defaultValue;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var value = tmp;
    var tmp1_elvis_lhs = toLongOrNull(value);
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      var tmp0_error_0 = '' + "System property '" + propertyName + "' has unrecognized value '" + value + "'";
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var parsed = tmp_0;
    if (!(minValue.compareTo_59(parsed) <= 0 ? parsed.compareTo_59(maxValue) <= 0 : false)) {
      var tmp1_error_0 = '' + "System property '" + propertyName + "' should be in range " + minValue + '..' + maxValue + ", but is '" + parsed + "'";
      throw IllegalStateException_init_$Create$(toString_1(tmp1_error_0));
    }return parsed;
  }
  function startCoroutineCancellable(_this_, receiver, completion, onCancellation) {
    var tmp;
    try {
      var tmp_0 = intercepted(createCoroutineUnintercepted(_this_, receiver, completion));
      var tmp0_success_0_3 = Companion_getInstance_3();
      var tmp1_success_0_4 = Unit_getInstance();
      tmp = resumeCancellableWith(tmp_0, _Result___init__impl_(Unit_getInstance()), onCancellation);
    } catch ($p) {
      var tmp_1;
      if ($p instanceof Error) {
        var tmp0_failure_0 = Companion_getInstance_3();
        tmp_1 = completion.resumeWith_46(_Result___init__impl_(createFailure($p)));
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_1;
    }
    return tmp;
  }
  function startCoroutineCancellable$default(_this_, receiver, completion, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      onCancellation = null;
    return startCoroutineCancellable(_this_, receiver, completion, onCancellation);
  }
  function startCoroutineCancellable_0(_this_, fatalCompletion) {
    var tmp;
    try {
      var tmp_0 = intercepted(_this_);
      var tmp0_success_0_4 = Companion_getInstance_3();
      var tmp1_success_0_5 = Unit_getInstance();
      var tmp_1 = _Result___init__impl_(Unit_getInstance());
      tmp = resumeCancellableWith$default(tmp_0, tmp_1, null, 2, null);
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Error) {
        var tmp0_failure_0_2 = Companion_getInstance_3();
        tmp_2 = fatalCompletion.resumeWith_46(_Result___init__impl_(createFailure($p)));
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function startCoroutineUndispatched(_this_, receiver, completion) {
    var tmp$ret$0;
    l$ret$1: do {
      var actualCompletion_1 = completion;
      var tmp;
      try {
        var tmp0_withCoroutineContext_0_8 = completion._get_context__113();
        var tmp1_withCoroutineContext_0_9 = null;
        tmp = _this_(receiver, actualCompletion_1);
      } catch ($p) {
        var tmp_0;
        if ($p instanceof Error) {
          var tmp0_failure_0_1_4 = Companion_getInstance_3();
          actualCompletion_1.resumeWith_46(_Result___init__impl_(createFailure($p)));
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        } else {
          {
            throw $p;
          }
        }
        tmp = tmp_0;
      }
      var value_2 = tmp;
      if (!(value_2 === _get_COROUTINE_SUSPENDED_())) {
        var tmp0_resume_0_5 = (value_2 == null ? true : isObject(value_2)) ? value_2 : THROW_CCE();
        var tmp0_success_0_1_6 = Companion_getInstance_3();
        actualCompletion_1.resumeWith_46(_Result___init__impl_(tmp0_resume_0_5));
      }}
     while (false);
  }
  function startUndispatchedOrReturn(_this_, receiver, block) {
    _this_.initParentJob_5();
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      try {
        tmp = block(receiver, _this_);
      } catch ($p) {
        var tmp_0;
        if ($p instanceof Error) {
          var tmp_1 = $p;
          tmp_0 = CompletedExceptionally_init_$Create$(tmp_1, false, 2, null);
        } else {
          {
            throw $p;
          }
        }
        tmp = tmp_0;
      }
      var result_1 = tmp;
      if (result_1 === _get_COROUTINE_SUSPENDED_()) {
        tmp$ret$0 = _get_COROUTINE_SUSPENDED_();
        break l$ret$1;
      }var state_3 = _this_.makeCompletingOnce_6(result_1);
      if (state_3 === COMPLETING_WAITING_CHILDREN) {
        tmp$ret$0 = _get_COROUTINE_SUSPENDED_();
        break l$ret$1;
      }var tmp_2;
      if (state_3 instanceof CompletedExceptionally) {
        var tmp_3;
        var tmp0__anonymous__5 = state_3._cause;
        {
          throw recoverStackTrace(state_3._cause, _this_._uCont);
        }
        tmp_2 = tmp_3;
      } else {
        {
          tmp_2 = unboxState(state_3);
        }
      }
      tmp$ret$0 = tmp_2;
    }
     while (false);
    return tmp$ret$0;
  }
  function SelectClause0() {
  }
  SelectClause0.$metadata$ = {
    simpleName: 'SelectClause0',
    kind: 'interface',
    interfaces: []
  };
  function SelectClause1() {
  }
  SelectClause1.$metadata$ = {
    simpleName: 'SelectClause1',
    kind: 'interface',
    interfaces: []
  };
  function SelectClause2() {
  }
  SelectClause2.$metadata$ = {
    simpleName: 'SelectClause2',
    kind: 'interface',
    interfaces: []
  };
  var UNLOCK_FAIL;
  var LOCKED;
  var UNLOCKED;
  var EMPTY_LOCKED;
  var EMPTY_UNLOCKED;
  function Empty_0(locked_0) {
    this._locked = locked_0;
  }
  Empty_0.prototype.toString = function () {
    return '' + 'Empty[' + this._locked + ']';
  };
  Empty_0.$metadata$ = {
    simpleName: 'Empty',
    kind: 'class',
    interfaces: []
  };
  function Mutex() {
  }
  Mutex.prototype.lock$default_0 = function (owner, $mask0, $handler, $cont) {
    if (!(($mask0 & 1) === 0))
      owner = null;
    return $handler == null ? this.lock_0(owner, $cont) : $handler(owner);
  };
  Mutex.prototype.unlock$default_0 = function (owner, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      owner = null;
    return $handler == null ? this.unlock_0(owner) : $handler(owner);
  };
  Mutex.$metadata$ = {
    simpleName: 'Mutex',
    kind: 'interface',
    interfaces: []
  };
  function Mutex_0(locked_0) {
    return new MutexImpl(locked_0);
  }
  function Mutex$default(locked_0, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      locked_0 = false;
    return Mutex_0(locked_0);
  }
  function _no_name_provided__50(this$0, this$1) {
    this._this$0_10 = this$0;
    this._this$1 = this$1;
  }
  _no_name_provided__50.prototype.invoke_289 = function (it) {
    this._this$0_10.unlock_0(this._this$1._get_owner__0());
  };
  _no_name_provided__50.prototype.invoke_420 = function (p1) {
    this.invoke_289(p1 instanceof Error ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__50.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function lockSuspend($this, owner, $cont) {
    var tmp0__anonymous__1_1 = $cont;
    var cancellable_2_2 = getOrCreateCancellableContinuation(intercepted(tmp0__anonymous__1_1));
    var tmp$ret$0;
    l$ret$1: do {
      var waiter_4 = new LockCont($this, owner, cancellable_2_2);
      var tmp0_loop_0_5 = $this.__state_2;
      while (true) {
        var tmp1__anonymous__1_6 = tmp0_loop_0_5._value_2;
        var tmp0_subject_2_7 = tmp1__anonymous__1_6;
        if (tmp0_subject_2_7 instanceof Empty_0) {
          if (!(tmp1__anonymous__1_6._locked === UNLOCKED)) {
            $this.__state_2.atomicfu$compareAndSet(tmp1__anonymous__1_6, new LockedQueue(tmp1__anonymous__1_6._locked));
            Unit_getInstance();
          } else {
            var update_3_8 = owner == null ? EMPTY_LOCKED : new Empty_0(owner);
            if ($this.__state_2.atomicfu$compareAndSet(tmp1__anonymous__1_6, update_3_8)) {
              cancellable_2_2.resume_2(Unit_getInstance(), _no_name_provided_$factory_36($this, owner));
              tmp$ret$0 = Unit_getInstance();
              break l$ret$1;
            }}
        } else {
          if (tmp0_subject_2_7 instanceof LockedQueue) {
            var curOwner_5_10 = tmp1__anonymous__1_6._owner;
            var tmp0_check_0_6_11 = !(curOwner_5_10 === owner);
            if (!tmp0_check_0_6_11) {
              var message_1_7_12 = '' + 'Already locked by ' + owner;
              throw IllegalStateException_init_$Create$(toString_1(message_1_7_12));
            }var tmp$ret$2;
            l$ret$3: do {
              var tmp1_addLastIf_0_8_13 = tmp1__anonymous__1_6;
              if (!($this.__state_2._value_2 === tmp1__anonymous__1_6)) {
                tmp$ret$2 = false;
                break l$ret$3;
              } else {
              }
              tmp1_addLastIf_0_8_13.addLast_26(waiter_4);
              tmp$ret$2 = true;
            }
             while (false);
            if (tmp$ret$2) {
              removeOnCancellation(cancellable_2_2, waiter_4);
              tmp$ret$0 = Unit_getInstance();
              break l$ret$1;
            } else {
            }
          } else {
            if (tmp0_subject_2_7 instanceof OpDescriptor) {
              tmp1__anonymous__1_6.perform_1($this);
              Unit_getInstance();
            } else {
              {
                var tmp2_error_0_9_14 = '' + 'Illegal state ' + tmp1__anonymous__1_6;
                throw IllegalStateException_init_$Create$(toString_1(tmp2_error_0_9_14));
              }
            }
          }
        }
      }
      Unit_getInstance();
    }
     while (false);
    return cancellable_2_2.getResult_0();
  }
  function LockedQueue(owner) {
    LinkedListHead.call(this);
    this._owner = owner;
  }
  LockedQueue.prototype.toString = function () {
    return '' + 'LockedQueue[' + this._owner + ']';
  };
  LockedQueue.$metadata$ = {
    simpleName: 'LockedQueue',
    kind: 'class',
    interfaces: []
  };
  function LockWaiter($outer, owner) {
    this._$this_8 = $outer;
    LinkedListNode.call(this);
    this._owner_0 = owner;
  }
  LockWaiter.prototype._get_owner__0 = function () {
    return this._owner_0;
  };
  LockWaiter.prototype.dispose_29 = function () {
    this.remove_37();
    Unit_getInstance();
  };
  LockWaiter.$metadata$ = {
    simpleName: 'LockWaiter',
    kind: 'class',
    interfaces: [DisposableHandle]
  };
  function LockCont($outer, owner, cont) {
    this._$this_9 = $outer;
    LockWaiter.call(this, $outer, owner);
    this._cont_1 = cont;
  }
  LockCont.prototype.tryResumeLockWaiter_0 = function () {
    return this._cont_1.tryResume_4(Unit_getInstance(), null, _no_name_provided_$factory_37(this._$this_9, this));
  };
  LockCont.prototype.completeResumeLockWaiter_0 = function (token) {
    return this._cont_1.completeResume_1(token);
  };
  LockCont.prototype.toString = function () {
    return '' + 'LockCont[' + this._get_owner__0() + ', ' + this._cont_1 + '] for ' + this._$this_9;
  };
  LockCont.$metadata$ = {
    simpleName: 'LockCont',
    kind: 'class',
    interfaces: []
  };
  function UnlockOp(queue) {
    AtomicOp.call(this);
    this._queue_0 = queue;
  }
  UnlockOp.prototype.prepare_0 = function (affected) {
    return this._queue_0._get_isEmpty__6() ? null : UNLOCK_FAIL;
  };
  UnlockOp.prototype.prepare_1 = function (affected) {
    return this.prepare_0(affected instanceof MutexImpl ? affected : THROW_CCE());
  };
  UnlockOp.prototype.complete_5 = function (affected, failure) {
    var update = failure == null ? EMPTY_UNLOCKED : this._queue_0;
    affected.__state_2.atomicfu$compareAndSet(this, update);
    Unit_getInstance();
  };
  UnlockOp.prototype.complete_6 = function (affected, failure) {
    return this.complete_5(affected instanceof MutexImpl ? affected : THROW_CCE(), failure);
  };
  UnlockOp.$metadata$ = {
    simpleName: 'UnlockOp',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__51(this$0, $owner) {
    this._this$0_11 = this$0;
    this._$owner = $owner;
  }
  _no_name_provided__51.prototype.invoke_289 = function (it) {
    this._this$0_11.unlock_0(this._$owner);
  };
  _no_name_provided__51.prototype.invoke_420 = function (p1) {
    this.invoke_289(p1 instanceof Error ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__51.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function MutexImpl(locked_0) {
    this.__state_2 = atomic(locked_0 ? EMPTY_LOCKED : EMPTY_UNLOCKED);
  }
  MutexImpl.prototype.tryLock = function (owner) {
    var tmp0_loop_0 = this.__state_2;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_2;
      var tmp0_subject_2 = tmp1__anonymous__1;
      if (tmp0_subject_2 instanceof Empty_0) {
        if (!(tmp1__anonymous__1._locked === UNLOCKED))
          return false;
        var update_3 = owner == null ? EMPTY_LOCKED : new Empty_0(owner);
        if (this.__state_2.atomicfu$compareAndSet(tmp1__anonymous__1, update_3))
          return true;
      } else {
        if (tmp0_subject_2 instanceof LockedQueue) {
          var tmp0_check_0_4 = !(tmp1__anonymous__1._owner === owner);
          if (!tmp0_check_0_4) {
            var message_1_5 = '' + 'Already locked by ' + owner;
            throw IllegalStateException_init_$Create$(toString_1(message_1_5));
          }return false;
        } else {
          if (tmp0_subject_2 instanceof OpDescriptor) {
            tmp1__anonymous__1.perform_1(this);
            Unit_getInstance();
          } else {
            {
              var tmp1_error_0_6 = '' + 'Illegal state ' + tmp1__anonymous__1;
              throw IllegalStateException_init_$Create$(toString_1(tmp1_error_0_6));
            }
          }
        }
      }
    }
    Unit_getInstance();
  };
  MutexImpl.prototype.lock_0 = function (owner, $cont) {
    if (this.tryLock(owner))
      return Unit_getInstance();
    return lockSuspend(this, owner, $cont);
  };
  MutexImpl.prototype.unlock_0 = function (owner) {
    var tmp0_loop_0 = this.__state_2;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_2;
      var tmp0_subject_2 = tmp1__anonymous__1;
      if (tmp0_subject_2 instanceof Empty_0) {
        if (owner == null) {
          var tmp0_check_0_3 = !(tmp1__anonymous__1._locked === UNLOCKED);
          if (!tmp0_check_0_3) {
            var message_1_4 = 'Mutex is not locked';
            throw IllegalStateException_init_$Create$(toString_1(message_1_4));
          }} else {
          var tmp1_check_0_5 = tmp1__anonymous__1._locked === owner;
          if (!tmp1_check_0_5) {
            var message_1_6 = '' + 'Mutex is locked by ' + tmp1__anonymous__1._locked + ' but expected ' + owner;
            throw IllegalStateException_init_$Create$(toString_1(message_1_6));
          }}
        if (this.__state_2.atomicfu$compareAndSet(tmp1__anonymous__1, EMPTY_UNLOCKED))
          return Unit_getInstance();
      } else {
        if (tmp0_subject_2 instanceof OpDescriptor) {
          tmp1__anonymous__1.perform_1(this);
          Unit_getInstance();
        } else {
          if (tmp0_subject_2 instanceof LockedQueue) {
            if (!(owner == null)) {
              var tmp2_check_0_7 = tmp1__anonymous__1._owner === owner;
              if (!tmp2_check_0_7) {
                var message_1_8 = '' + 'Mutex is locked by ' + tmp1__anonymous__1._owner + ' but expected ' + owner;
                throw IllegalStateException_init_$Create$(toString_1(message_1_8));
              }}var waiter_9 = tmp1__anonymous__1.removeFirstOrNull_4();
            if (waiter_9 == null) {
              var op_10 = new UnlockOp(tmp1__anonymous__1);
              if (this.__state_2.atomicfu$compareAndSet(tmp1__anonymous__1, op_10) ? op_10.perform_1(this) == null : false)
                return Unit_getInstance();
            } else {
              var token_11 = (waiter_9 instanceof LockWaiter ? waiter_9 : THROW_CCE()).tryResumeLockWaiter_0();
              if (!(token_11 == null)) {
                var tmp = tmp1__anonymous__1;
                var tmp1_elvis_lhs_12 = waiter_9._owner_0;
                tmp._owner = tmp1_elvis_lhs_12 == null ? LOCKED : tmp1_elvis_lhs_12;
                waiter_9.completeResumeLockWaiter_0(token_11);
                return Unit_getInstance();
              }}
          } else {
            {
              var tmp3_error_0_13 = '' + 'Illegal state ' + tmp1__anonymous__1;
              throw IllegalStateException_init_$Create$(toString_1(tmp3_error_0_13));
            }
          }
        }
      }
    }
    Unit_getInstance();
  };
  MutexImpl.prototype.toString = function () {
    var tmp0_loop_0 = this.__state_2;
    while (true) {
      var tmp1__anonymous__1 = tmp0_loop_0._value_2;
      var tmp0_subject_2 = tmp1__anonymous__1;
      if (tmp0_subject_2 instanceof Empty_0)
        return '' + 'Mutex[' + tmp1__anonymous__1._locked + ']';
      else {
        if (tmp0_subject_2 instanceof OpDescriptor) {
          tmp1__anonymous__1.perform_1(this);
          Unit_getInstance();
        } else {
          if (tmp0_subject_2 instanceof LockedQueue)
            return '' + 'Mutex[' + tmp1__anonymous__1._owner + ']';
          else {
            {
              var tmp0_error_0_3 = '' + 'Illegal state ' + tmp1__anonymous__1;
              throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0_3));
            }
          }
        }
      }
    }
    Unit_getInstance();
  };
  MutexImpl.$metadata$ = {
    simpleName: 'MutexImpl',
    kind: 'class',
    interfaces: [Mutex, SelectClause2]
  };
  function _no_name_provided_$factory_36(this$0, $owner) {
    var i = new _no_name_provided__51(this$0, $owner);
    return function (p1) {
      i.invoke_289(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_37(this$0, this$1) {
    var i = new _no_name_provided__50(this$0, this$1);
    return function (p1) {
      i.invoke_289(p1);
      return Unit_getInstance();
    };
  }
  function CompletionHandlerBase() {
    LinkedListNode.call(this);
  }
  CompletionHandlerBase.$metadata$ = {
    simpleName: 'CompletionHandlerBase',
    kind: 'class',
    interfaces: []
  };
  function invokeIt(_this_, cause) {
    var tmp0_subject = typeof _this_;
    if (tmp0_subject === 'function')
      _this_(cause);
    else {
      _this_.invoke(cause);
    }
  }
  function CancelHandlerBase() {
  }
  CancelHandlerBase.$metadata$ = {
    simpleName: 'CancelHandlerBase',
    kind: 'class',
    interfaces: []
  };
  function toDebugString(_this_) {
    return toString_1(_this_);
  }
  function newCoroutineContext(_this_, context) {
    var combined = _this_._get_coroutineContext__27().plus_31(context);
    return (!(combined === Dispatchers_getInstance()._Default) ? combined.get_63(Key_getInstance()) == null : false) ? combined.plus_31(Dispatchers_getInstance()._Default) : combined;
  }
  function _get_DefaultDelay_() {
    var tmp = Dispatchers_getInstance()._Default;
    return isInterface(tmp, Delay) ? tmp : THROW_CCE();
  }
  function _get_coroutineName_(_this_) {
    return null;
  }
  function createDefaultDispatcher() {
    var tmp;
    if ((!(typeof navigator === 'undefined') ? navigator != null : false) ? navigator.product == 'ReactNative' : false) {
      tmp = NodeDispatcher_getInstance();
    } else {
      if (isJsdom()) {
        tmp = NodeDispatcher_getInstance();
      } else {
        var tmp_0;
        var tmp_1;
        if (!(typeof window === 'undefined')) {
          var tmp0_asDynamic_0 = window;
          tmp_1 = tmp0_asDynamic_0 != null;
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          var tmp1_asDynamic_0 = window;
          tmp_0 = !(typeof tmp1_asDynamic_0.addEventListener === 'undefined');
        } else {
          {
            tmp_0 = false;
          }
        }
        if (tmp_0) {
          tmp = asCoroutineDispatcher(window);
        } else {
          if (typeof process === 'undefined') {
            tmp = SetTimeoutDispatcher_getInstance();
          } else {
            {
              tmp = NodeDispatcher_getInstance();
            }
          }
        }
      }
    }
    return tmp;
  }
  function isJsdom() {
    return ((((!(typeof navigator === 'undefined') ? navigator != null : false) ? navigator.userAgent != null : false) ? !(typeof navigator.userAgent === 'undefined') : false) ? !(typeof navigator.userAgent.match === 'undefined') : false) ? navigator.userAgent.match('\\bjsdom\\b') : false;
  }
  function handleCoroutineExceptionImpl(context, exception) {
    (function () {
      var $externalVarargReceiverTmp = console;
      return $externalVarargReceiverTmp.error.apply($externalVarargReceiverTmp, [].concat([exception]));
    }.call(this));
  }
  var counter;
  var DEBUG;
  function _get_classSimpleName_(_this_) {
    var tmp0_elvis_lhs = getKClassFromExpression_0(_this_)._get_simpleName__4();
    return tmp0_elvis_lhs == null ? 'Unknown' : tmp0_elvis_lhs;
  }
  function _get_hexAddress_(_this_) {
    var result = _this_.__debug_counter;
    if (!(typeof result === 'number')) {
      counter = counter + 1 | 0;
      result = counter;
      _this_.__debug_counter = result;
    }return ((!(result == null) ? typeof result === 'number' : false) ? result : THROW_CCE()).toString();
  }
  function Dispatchers() {
    Dispatchers_instance = this;
    this._Default = createDefaultDispatcher();
    this._Main = new JsMainDispatcher(this._Default, false);
    this._Unconfined = Unconfined_getInstance();
  }
  Dispatchers.$metadata$ = {
    simpleName: 'Dispatchers',
    kind: 'object',
    interfaces: []
  };
  var Dispatchers_instance;
  function Dispatchers_getInstance() {
    if (Dispatchers_instance == null)
      new Dispatchers();
    return Dispatchers_instance;
  }
  function JsMainDispatcher(delegate, invokeImmediately) {
    MainCoroutineDispatcher.call(this);
    this._delegate_0 = delegate;
    this._invokeImmediately = invokeImmediately;
    this._immediate = this._invokeImmediately ? this : new JsMainDispatcher(this._delegate_0, true);
  }
  JsMainDispatcher.prototype._get_immediate__0 = function () {
    return this._immediate;
  };
  JsMainDispatcher.prototype.isDispatchNeeded_8 = function (context) {
    return !this._invokeImmediately;
  };
  JsMainDispatcher.prototype.dispatch_8 = function (context, block) {
    return this._delegate_0.dispatch_8(context, block);
  };
  JsMainDispatcher.prototype.toString = function () {
    var tmp0_elvis_lhs = this.toStringInternalImpl_0();
    return tmp0_elvis_lhs == null ? this._delegate_0.toString() : tmp0_elvis_lhs;
  };
  JsMainDispatcher.$metadata$ = {
    simpleName: 'JsMainDispatcher',
    kind: 'class',
    interfaces: []
  };
  function createEventLoop() {
    return new UnconfinedEventLoop();
  }
  function UnconfinedEventLoop() {
    EventLoop.call(this);
  }
  UnconfinedEventLoop.prototype.dispatch_8 = function (context, block) {
    unsupported();
  };
  UnconfinedEventLoop.$metadata$ = {
    simpleName: 'UnconfinedEventLoop',
    kind: 'class',
    interfaces: []
  };
  function unsupported() {
    throw UnsupportedOperationException_init_$Create$_0('runBlocking event loop is not supported');
  }
  function JobCancellationException(message, cause, job) {
    CancellationException.call(this, message, cause);
    this._job_1 = job;
    captureStack(this, JobCancellationException);
  }
  JobCancellationException.prototype.toString = function () {
    return '' + CancellationException.prototype.toString.call(this) + '; job=' + this._job_1;
  };
  JobCancellationException.prototype.equals = function (other) {
    var tmp;
    if (other === this) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      var tmp_2;
      if (other instanceof JobCancellationException) {
        tmp_2 = other.message == this.message;
      } else {
        {
          tmp_2 = false;
        }
      }
      if (tmp_2) {
        tmp_1 = equals_1(other._job_1, this._job_1);
      } else {
        {
          tmp_1 = false;
        }
      }
      if (tmp_1) {
        tmp_0 = equals_1(other.cause, this.cause);
      } else {
        {
          tmp_0 = false;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  JobCancellationException.prototype.hashCode = function () {
    var tmp = imul(imul(getStringHashCode(ensureNotNull(this.message)), 31) + hashCode(this._job_1) | 0, 31);
    var tmp0_safe_receiver = this.cause;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
  };
  JobCancellationException.$metadata$ = {
    simpleName: 'JobCancellationException',
    kind: 'class',
    interfaces: []
  };
  function CancellationException_init_$Init$(message, $this) {
    CancellationException.call($this, message, null);
    return $this;
  }
  function CancellationException_init_$Create$(message) {
    var tmp = CancellationException_init_$Init$(message, Object.create(CancellationException.prototype));
    captureStack(tmp, CancellationException_init_$Create$);
    return tmp;
  }
  function CancellationException(message, cause) {
    IllegalStateException_init_$Init$_1(message, cause, this);
    captureStack(this, CancellationException);
  }
  CancellationException.$metadata$ = {
    simpleName: 'CancellationException',
    kind: 'class',
    interfaces: []
  };
  function NodeDispatcher() {
    NodeDispatcher_instance = this;
    SetTimeoutBasedDispatcher.call(this);
  }
  NodeDispatcher.prototype.scheduleQueueProcessing_1 = function () {
    process.nextTick(this._get_messageQueue__1()._processQueue);
  };
  NodeDispatcher.$metadata$ = {
    simpleName: 'NodeDispatcher',
    kind: 'object',
    interfaces: []
  };
  var NodeDispatcher_instance;
  function NodeDispatcher_getInstance() {
    if (NodeDispatcher_instance == null)
      new NodeDispatcher();
    return NodeDispatcher_instance;
  }
  function SetTimeoutDispatcher() {
    SetTimeoutDispatcher_instance = this;
    SetTimeoutBasedDispatcher.call(this);
  }
  SetTimeoutDispatcher.prototype.scheduleQueueProcessing_1 = function () {
    setTimeout(this._get_messageQueue__1()._processQueue, 0);
    Unit_getInstance();
  };
  SetTimeoutDispatcher.$metadata$ = {
    simpleName: 'SetTimeoutDispatcher',
    kind: 'object',
    interfaces: []
  };
  var SetTimeoutDispatcher_instance;
  function SetTimeoutDispatcher_getInstance() {
    if (SetTimeoutDispatcher_instance == null)
      new SetTimeoutDispatcher();
    return SetTimeoutDispatcher_instance;
  }
  function _no_name_provided__52(this$0) {
    this._this$0_12 = this$0;
  }
  _no_name_provided__52.prototype.invoke_147 = function () {
    this._this$0_12.process_1();
  };
  _no_name_provided__52.prototype.invoke_411 = function () {
    this.invoke_147();
    return Unit_getInstance();
  };
  _no_name_provided__52.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function ScheduledMessageQueue($outer) {
    this._$this_10 = $outer;
    MessageQueue.call(this);
    var tmp = this;
    tmp._processQueue = _no_name_provided_$factory_38(this);
  }
  ScheduledMessageQueue.prototype.schedule_1 = function () {
    this._$this_10.scheduleQueueProcessing_1();
  };
  ScheduledMessageQueue.prototype.reschedule_1 = function () {
    setTimeout(this._processQueue, 0);
    Unit_getInstance();
  };
  ScheduledMessageQueue.$metadata$ = {
    simpleName: 'ScheduledMessageQueue',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__53($continuation, this$0) {
    this._$continuation = $continuation;
    this._this$0_13 = this$0;
  }
  _no_name_provided__53.prototype.invoke_147 = function () {
    this._$continuation.resumeUndispatched_1(this._this$0_13, Unit_getInstance());
  };
  _no_name_provided__53.prototype.invoke_411 = function () {
    this.invoke_147();
    return Unit_getInstance();
  };
  _no_name_provided__53.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function SetTimeoutBasedDispatcher() {
    CoroutineDispatcher.call(this);
    this._messageQueue = new ScheduledMessageQueue(this);
  }
  SetTimeoutBasedDispatcher.prototype._get_messageQueue__1 = function () {
    return this._messageQueue;
  };
  SetTimeoutBasedDispatcher.prototype.dispatch_8 = function (context, block) {
    this._messageQueue.enqueue_1(block);
  };
  SetTimeoutBasedDispatcher.prototype.scheduleResumeAfterDelay_3 = function (timeMillis, continuation) {
    var handle = setTimeout(_no_name_provided_$factory_39(continuation, this), delayToInt(timeMillis));
    var tmp0__get_asHandler__0 = new ClearTimeout(handle);
    continuation.invokeOnCancellation_1(tmp0__get_asHandler__0);
  };
  SetTimeoutBasedDispatcher.$metadata$ = {
    simpleName: 'SetTimeoutBasedDispatcher',
    kind: 'class',
    interfaces: [Delay]
  };
  function MessageQueue() {
    ArrayQueue.call(this);
    this._yieldEvery = 16;
    this._scheduled = false;
  }
  MessageQueue.prototype.enqueue_1 = function (element) {
    this.addLast_17(element);
    if (!this._scheduled) {
      this._scheduled = true;
      this.schedule_1();
    }};
  MessageQueue.prototype.process_1 = function () {
    try {
      var tmp0_repeat_0 = this._yieldEvery;
      var inductionVariable = 0;
      if (inductionVariable < tmp0_repeat_0)
        do {
          var index_2 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp0_elvis_lhs_5 = this.removeFirstOrNull_4();
          var tmp;
          if (tmp0_elvis_lhs_5 == null) {
            return Unit_getInstance();
          } else {
            tmp = tmp0_elvis_lhs_5;
          }
          var element_4 = tmp;
          element_4.run_5();
        }
         while (inductionVariable < tmp0_repeat_0);
    }finally {
      if (this._get_isEmpty__6()) {
        this._scheduled = false;
      } else {
        this.reschedule_1();
      }
    }
  };
  MessageQueue.$metadata$ = {
    simpleName: 'MessageQueue',
    kind: 'class',
    interfaces: []
  };
  function delayToInt(timeMillis) {
    return coerceIn_0(timeMillis, new Long(0, 0), new Long(2147483647, 0)).toInt_5();
  }
  function ClearTimeout(handle) {
    CancelHandler.call(this);
    this._handle_1 = handle;
  }
  ClearTimeout.prototype.dispose_29 = function () {
    clearTimeout(this._handle_1);
  };
  ClearTimeout.prototype.invoke_310 = function (cause) {
    this.dispose_29();
  };
  ClearTimeout.prototype.invoke = function (cause) {
    return this.invoke_310(cause);
  };
  ClearTimeout.prototype.toString = function () {
    return '' + 'ClearTimeout[' + this._handle_1 + ']';
  };
  ClearTimeout.$metadata$ = {
    simpleName: 'ClearTimeout',
    kind: 'class',
    interfaces: [DisposableHandle]
  };
  function _no_name_provided__54($continuation, this$0) {
    this._$continuation_0 = $continuation;
    this._this$0_14 = this$0;
  }
  _no_name_provided__54.prototype.invoke_147 = function () {
    this._$continuation_0.resumeUndispatched_1(this._this$0_14, Unit_getInstance());
  };
  _no_name_provided__54.prototype.invoke_411 = function () {
    this.invoke_147();
    return Unit_getInstance();
  };
  _no_name_provided__54.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function WindowDispatcher(window_0) {
    CoroutineDispatcher.call(this);
    this._window = window_0;
    this._queue_1 = new WindowMessageQueue(this._window);
  }
  WindowDispatcher.prototype.dispatch_8 = function (context, block) {
    return this._queue_1.enqueue_1(block);
  };
  WindowDispatcher.prototype.scheduleResumeAfterDelay_3 = function (timeMillis, continuation) {
    (function () {
      var $externalVarargReceiverTmp = this._window;
      return $externalVarargReceiverTmp.setTimeout.apply($externalVarargReceiverTmp, [_no_name_provided_$factory_40(continuation, this), delayToInt(timeMillis)]);
    }.call(this));
    Unit_getInstance();
  };
  WindowDispatcher.$metadata$ = {
    simpleName: 'WindowDispatcher',
    kind: 'class',
    interfaces: [Delay]
  };
  function _no_name_provided__55(this$0) {
    this._this$0_15 = this$0;
  }
  _no_name_provided__55.prototype.invoke_306 = function (event) {
    if (event.source == this._this$0_15._window_0 ? event.data == this._this$0_15._messageName : false) {
      event.stopPropagation();
      this._this$0_15.process_1();
    }};
  _no_name_provided__55.prototype.invoke_420 = function (p1) {
    this.invoke_306((p1 == null ? true : p1) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__55.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__56(this$0) {
    this._this$0_16 = this$0;
  }
  _no_name_provided__56.prototype.invoke_100 = function (it) {
    this._this$0_16.process_1();
  };
  _no_name_provided__56.prototype.invoke_420 = function (p1) {
    this.invoke_100(p1 instanceof Unit ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__56.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function WindowMessageQueue(window_0) {
    MessageQueue.call(this);
    this._window_0 = window_0;
    this._messageName = 'dispatchCoroutine';
    this._window_0.addEventListener('message', _no_name_provided_$factory_41(this), true);
  }
  WindowMessageQueue.prototype.schedule_1 = function () {
    var tmp = Promise.resolve(Unit_getInstance());
    tmp.then(_no_name_provided_$factory_42(this));
    Unit_getInstance();
  };
  WindowMessageQueue.prototype.reschedule_1 = function () {
    this._window_0.postMessage(this._messageName, '*');
  };
  WindowMessageQueue.$metadata$ = {
    simpleName: 'WindowMessageQueue',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_38(this$0) {
    var i = new _no_name_provided__52(this$0);
    return function () {
      i.invoke_147();
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_39($continuation, this$0) {
    var i = new _no_name_provided__53($continuation, this$0);
    return function () {
      i.invoke_147();
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_40($continuation, this$0) {
    var i = new _no_name_provided__54($continuation, this$0);
    return function () {
      i.invoke_147();
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_41(this$0) {
    var i = new _no_name_provided__55(this$0);
    return function (p1) {
      i.invoke_306(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_42(this$0) {
    var i = new _no_name_provided__56(this$0);
    return function (p1) {
      i.invoke_100(p1);
      return Unit_getInstance();
    };
  }
  function await_0(_this_, $cont) {
    var tmp0__anonymous__1_1 = $cont;
    var cancellable_2_2 = new CancellableContinuationImpl(intercepted(tmp0__anonymous__1_1), 1);
    cancellable_2_2.initCancellability_0();
    var tmp = _no_name_provided_$factory_43(cancellable_2_2);
    _this_.then(tmp, _no_name_provided_$factory_44(cancellable_2_2));
    Unit_getInstance();
    return cancellable_2_2.getResult_0();
  }
  function _no_name_provided__57($cancellable_2_2) {
    this._$cancellable_2_2 = $cancellable_2_2;
  }
  _no_name_provided__57.prototype.invoke_186 = function (it) {
    var tmp0_success_0_1_5 = Companion_getInstance_3();
    this._$cancellable_2_2.resumeWith_46(_Result___init__impl_(it));
  };
  _no_name_provided__57.prototype.invoke_420 = function (p1) {
    this.invoke_186((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__57.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__58($cancellable_2_2) {
    this._$cancellable_2_2_0 = $cancellable_2_2;
  }
  _no_name_provided__58.prototype.invoke_289 = function (it) {
    var tmp0_failure_0_1_7 = Companion_getInstance_3();
    this._$cancellable_2_2_0.resumeWith_46(_Result___init__impl_(createFailure(it)));
  };
  _no_name_provided__58.prototype.invoke_420 = function (p1) {
    this.invoke_289(p1 instanceof Error ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__58.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_43($cancellable_2_2) {
    var i = new _no_name_provided__57($cancellable_2_2);
    return function (p1) {
      i.invoke_186(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_44($cancellable_2_2) {
    var i = new _no_name_provided__58($cancellable_2_2);
    return function (p1) {
      i.invoke_289(p1);
      return Unit_getInstance();
    };
  }
  function Runnable() {
  }
  Runnable.$metadata$ = {
    simpleName: 'Runnable',
    kind: 'interface',
    interfaces: []
  };
  function SchedulerTask() {
  }
  SchedulerTask.$metadata$ = {
    simpleName: 'SchedulerTask',
    kind: 'class',
    interfaces: [Runnable]
  };
  function _get_taskContext_(_this_) {
    return Unit_getInstance();
  }
  function asCoroutineDispatcher(_this_) {
    var tmp0_elvis_lhs = _this_.coroutineDispatcher;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_also_0 = new WindowDispatcher(_this_);
      _this_.coroutineDispatcher = tmp0_also_0;
      tmp = tmp0_also_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function identitySet(expectedSize) {
    return HashSet_init_$Create$_1(expectedSize);
  }
  function NoOpLock() {
  }
  NoOpLock.$metadata$ = {
    simpleName: 'NoOpLock',
    kind: 'class',
    interfaces: []
  };
  function LinkedListHead() {
    LinkedListNode.call(this);
  }
  LinkedListHead.prototype._get_isEmpty__6 = function () {
    return this._get__next__2() === this;
  };
  LinkedListHead.prototype.remove_37 = function () {
    throw UnsupportedOperationException_init_$Create$();
  };
  LinkedListHead.$metadata$ = {
    simpleName: 'LinkedListHead',
    kind: 'class',
    interfaces: []
  };
  function LinkedListNode() {
    this.__next = this;
    this.__prev = this;
    this.__removed = false;
  }
  LinkedListNode.prototype._get__next__2 = function () {
    return this.__next;
  };
  LinkedListNode.prototype.addLast_26 = function (node) {
    var prev = this.__prev;
    node.__next = this;
    node.__prev = prev;
    prev.__next = node;
    this.__prev = node;
  };
  LinkedListNode.prototype.remove_37 = function () {
    if (this.__removed)
      return false;
    var prev = this.__prev;
    var next = this.__next;
    prev.__next = next;
    next.__prev = prev;
    this.__removed = true;
    return true;
  };
  LinkedListNode.prototype.addOneIfEmpty_9 = function (node) {
    if (!(this.__next === this))
      return false;
    this.addLast_26(node);
    return true;
  };
  LinkedListNode.prototype.helpRemove_22 = function () {
  };
  LinkedListNode.prototype.removeFirstOrNull_4 = function () {
    var next = this.__next;
    if (next === this)
      return null;
    var tmp0_check_0 = next.remove_37();
    if (!tmp0_check_0) {
      var message_1 = 'Should remove';
      throw IllegalStateException_init_$Create$(toString_1(message_1));
    }return next;
  };
  LinkedListNode.$metadata$ = {
    simpleName: 'LinkedListNode',
    kind: 'class',
    interfaces: []
  };
  function unwrap(exception) {
    return exception;
  }
  function CoroutineStackFrame() {
  }
  CoroutineStackFrame.$metadata$ = {
    simpleName: 'CoroutineStackFrame',
    kind: 'interface',
    interfaces: []
  };
  function recoverStackTrace(exception, continuation) {
    return exception;
  }
  function recoverStackTrace_0(exception) {
    return exception;
  }
  function systemProp_1(propertyName) {
    return null;
  }
  function threadContextElements(context) {
    return 0;
  }
  function CommonThreadLocal() {
    this._value_7 = null;
  }
  CommonThreadLocal.prototype.get_46 = function () {
    var tmp = this._value_7;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  CommonThreadLocal.prototype.set_3 = function (value) {
    this._value_7 = value;
  };
  CommonThreadLocal.$metadata$ = {
    simpleName: 'CommonThreadLocal',
    kind: 'class',
    interfaces: []
  };
  function ByteReadChannel(content) {
    return ByteReadChannel_0(content, 0, content.length);
  }
  function ByteChannel() {
  }
  ByteChannel.$metadata$ = {
    simpleName: 'ByteChannel',
    kind: 'interface',
    interfaces: [ByteReadChannel_1, ByteWriteChannel]
  };
  function ByteChannelSequentialBase_init_$Init$(initial, autoFlush, pool, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      pool = Companion_getInstance_20()._Pool;
    ByteChannelSequentialBase.call($this, initial, autoFlush, pool);
    return $this;
  }
  function _get_flushSize_($this) {
    return $this._flushBuffer._get_size__48();
  }
  function _set__totalBytesRead_($this, value) {
    $this._state_3._totalBytesRead = value;
  }
  function _get__totalBytesRead_($this) {
    return $this._state_3._totalBytesRead;
  }
  function _set__totalBytesWritten_($this, value) {
    $this._state_3._totalBytesWritten = value;
  }
  function _get__totalBytesWritten_($this) {
    return $this._state_3._totalBytesWritten;
  }
  function _set_closedCause_($this, value) {
    $this._state_3._closedCause = value;
  }
  function flushImpl($this) {
    if ($this._writable._get_isEmpty__6()) {
      return false;
    }flushWrittenBytes($this);
    $this._slot.resume_3();
    return true;
  }
  function flushWrittenBytes($this) {
    var tmp0_synchronized_0 = $this._flushMutex;
    var buffer_2 = ensureNotNull($this._writable.stealAll_4());
    $this._flushBuffer.writeChunkBuffer_0(buffer_2);
  }
  function ensureNotClosed($this) {
    if ($this._get_closed__5()) {
      var tmp0_elvis_lhs = $this._get_closedCause__1();
      throw tmp0_elvis_lhs == null ? new ClosedWriteChannelException('Channel is already closed') : tmp0_elvis_lhs;
    }}
  function ensureNotFailed($this) {
    var tmp0_safe_receiver = $this._get_closedCause__1();
    if (tmp0_safe_receiver == null)
      null;
    else {
      throw tmp0_safe_receiver;
    }
    Unit_getInstance();
  }
  function ensureNotFailed_0($this, closeable) {
    var tmp0_safe_receiver = $this._get_closedCause__1();
    if (tmp0_safe_receiver == null)
      null;
    else {
      closeable.release_10();
      throw tmp0_safe_receiver;
    }
    Unit_getInstance();
  }
  function readRemainingSuspend($this, builder, limit, $cont) {
    var tmp = new $readRemainingSuspendCOROUTINE$27($this, builder, limit, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function readAvailableSuspend($this, dst, $cont) {
    var tmp = new $readAvailableSuspendCOROUTINE$31($this, dst, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function _set_lastReadAvailable_($this, value) {
    $this._state_3._lastReadAvailable = value;
  }
  function _get_lastReadAvailable_($this) {
    return $this._state_3._lastReadAvailable;
  }
  function _set_lastReadView_($this, value) {
    $this._state_3._lastReadView = value;
  }
  function _get_lastReadView_($this) {
    return $this._state_3._lastReadView;
  }
  function completeReading($this) {
    var tmp0__get_readRemaining__0 = _get_lastReadView_($this);
    var remaining = tmp0__get_readRemaining__0._get_writePosition__1() - tmp0__get_readRemaining__0._get_readPosition__1() | 0;
    var delta_0 = _get_lastReadAvailable_($this) - remaining | 0;
    if (!(_get_lastReadView_($this) === Companion_getInstance_17()._get_Empty__1())) {
      completeReadHead($this._readable, _get_lastReadView_($this));
    }if (delta_0 > 0) {
      $this.afterRead_0(delta_0);
    }_set_lastReadAvailable_($this, 0);
    _set_lastReadView_($this, Companion_getInstance_20()._get_Empty__1());
  }
  function discardSuspend($this, max, discarded0, $cont) {
    var tmp = new $discardSuspendCOROUTINE$43($this, max, discarded0, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function _no_name_provided__3_0($atLeast) {
    this._$atLeast = $atLeast;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_0.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "atLeast parameter shouldn't be negative: " + this._$atLeast);
  };
  _no_name_provided__3_0.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_1($atLeast) {
    this._$atLeast_0 = $atLeast;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_1.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "atLeast parameter shouldn't be larger than max buffer size of 4088: " + this._$atLeast_0);
  };
  _no_name_provided__3_1.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0(_this_, count_0, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__2 = _this_;
    this._count = count_0;
  }
  $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (!(this.__this__2._get_availableForWrite__0() < this._count ? !this.__this__2._get_closed__5() : false)) {
              this._state_0 = 5;
              continue $sm;
            }
            if (!flushImpl(this.__this__2)) {
              this._state_0 = 2;
              suspendResult = this.__this__2._slot.sleep(this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              this._state_0 = 3;
              continue $sm;
            }

            break;
          case 2:
            suspendResult;
            this._state_0 = 3;
            continue $sm;
          case 3:
            this._state_0 = 1;
            continue $sm;
          case 4:
            throw this._exception_0;
          case 5:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0.$metadata$ = {
    simpleName: '$awaitAtLeastNBytesAvailableForWriteCOROUTINE$0',
    kind: 'class',
    interfaces: []
  };
  function $awaitAtLeastNBytesAvailableForReadCOROUTINE$1(_this_, count_0, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__3 = _this_;
    this._count_0 = count_0;
  }
  $awaitAtLeastNBytesAvailableForReadCOROUTINE$1.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (!(this.__this__3._get_availableForRead__0() < this._count_0 ? !this.__this__3._get_closed__5() : false)) {
              this._state_0 = 4;
              continue $sm;
            }
            this._state_0 = 2;
            suspendResult = this.__this__3._slot.sleep(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            suspendResult;
            this._state_0 = 1;
            continue $sm;
          case 3:
            throw this._exception_0;
          case 4:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $awaitAtLeastNBytesAvailableForReadCOROUTINE$1.$metadata$ = {
    simpleName: '$awaitAtLeastNBytesAvailableForReadCOROUTINE$1',
    kind: 'class',
    interfaces: []
  };
  function $writePacketCOROUTINE$8(_this_, packet, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__4 = _this_;
    this._packet = packet;
  }
  $writePacketCOROUTINE$8.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this.__this__4.awaitAtLeastNBytesAvailableForWrite_0(1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            var size_0 = this._packet._get_remaining__2().toInt_5();
            this.__this__4._writable.writePacket_6(this._packet);
            this.__this__4.afterWrite_0(size_0);
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $writePacketCOROUTINE$8.$metadata$ = {
    simpleName: '$writePacketCOROUTINE$8',
    kind: 'class',
    interfaces: []
  };
  function $writeFullyCOROUTINE$9(_this_, src, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__5 = _this_;
    this._src = src;
  }
  $writeFullyCOROUTINE$9.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this.__this__5.awaitAtLeastNBytesAvailableForWrite_0(1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            var count_0 = this._src._get_writePosition__1() - this._src._get_readPosition__1() | 0;
            writeFully$default_0(this.__this__5._writable, this._src, 0, 2, null);
            this.__this__5.afterWrite_0(count_0);
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $writeFullyCOROUTINE$9.$metadata$ = {
    simpleName: '$writeFullyCOROUTINE$9',
    kind: 'class',
    interfaces: []
  };
  function $writeFullyCOROUTINE$10(_this_, src, offset, length, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__6 = _this_;
    this._src_0 = src;
    this._offset = offset;
    this._length = length;
  }
  $writeFullyCOROUTINE$10.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            this._currentIndex0 = this._offset;
            this._endIndex1 = this._offset + this._length | 0;
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (!(this._currentIndex0 < this._endIndex1)) {
              this._state_0 = 3;
              continue $sm;
            }
            this._state_0 = 2;
            suspendResult = this.__this__6.awaitAtLeastNBytesAvailableForWrite_0(1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            suspendResult;
            var tmp0_min_0 = this.__this__6._get_availableForWrite__0();
            var tmp1_min_0 = this._endIndex1 - this._currentIndex0 | 0;
            var bytesCount = function () {
              var $externalVarargReceiverTmp = Math;
              return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_min_0, tmp1_min_0]))));
            }.call(this);
            writeFully_2(this.__this__6._writable, this._src_0, this._currentIndex0, bytesCount);
            this._currentIndex0 = this._currentIndex0 + bytesCount | 0;
            this.__this__6.afterWrite_0(bytesCount);
            this._state_0 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $writeFullyCOROUTINE$10.$metadata$ = {
    simpleName: '$writeFullyCOROUTINE$10',
    kind: 'class',
    interfaces: []
  };
  function $readRemainingCOROUTINE$26(_this_, limit, headerSizeHint, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__7 = _this_;
    this._limit_0 = limit;
    this._headerSizeHint = headerSizeHint;
  }
  $readRemainingCOROUTINE$26.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            ensureNotFailed(this.__this__7);
            this._builder0 = BytePacketBuilder_0(this._headerSizeHint);
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1._tmp0_minOf_01 = this.__this__7._readable._get_remaining__2();
            tmp_0._size2 = this._limit_0.compareTo_59(this._tmp0_minOf_01) <= 0 ? this._limit_0 : this._tmp0_minOf_01;
            this._builder0.writePacket_4(this.__this__7._readable, this._size2);
            var tmp_2 = this;
            var tmp_3 = this;
            tmp_3._tmp1_minus_03 = this._builder0._get_size__48();
            tmp_2._remaining4 = this._limit_0.minus_30(toLong_0(this._tmp1_minus_03));
            if (this._remaining4.equals(new Long(0, 0)) ? true : this.__this__7._get_isClosedForRead__1()) {
              var tmp_4 = this;
              this.__this__7.afterRead_0(this._remaining4.toInt_5());
              ensureNotFailed_0(this.__this__7, this._builder0);
              tmp_4._WHEN_RESULT5 = this._builder0.build_17();
              this._state_0 = 2;
              continue $sm;
            } else {
              this._state_0 = 1;
              suspendResult = readRemainingSuspend(this.__this__7, this._builder0, this._limit_0, this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            }

            break;
          case 1:
            this._WHEN_RESULT5 = suspendResult;
            this._state_0 = 2;
            continue $sm;
          case 2:
            return this._WHEN_RESULT5;
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $readRemainingCOROUTINE$26.$metadata$ = {
    simpleName: '$readRemainingCOROUTINE$26',
    kind: 'class',
    interfaces: []
  };
  function $readRemainingSuspendCOROUTINE$27(_this_, builder, limit, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__8 = _this_;
    this._builder = builder;
    this._limit_1 = limit;
  }
  $readRemainingSuspendCOROUTINE$27.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 5;
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (!(toLong_0(this._builder._get_size__48()).compareTo_59(this._limit_1) < 0)) {
              this._state_0 = 4;
              continue $sm;
            }
            var tmp_0 = this;
            var tmp_1 = this;
            var tmp0_minus_0 = this._builder._get_size__48();
            tmp_1._tmp1_minOf_00 = this._limit_1.minus_30(toLong_0(tmp0_minus_0));
            var tmp_2 = this;
            tmp_2._tmp2_minOf_01 = this.__this__8._readable._get_remaining__2();
            tmp_0._partLimit2 = this._tmp1_minOf_00.compareTo_59(this._tmp2_minOf_01) <= 0 ? this._tmp1_minOf_00 : this._tmp2_minOf_01;
            this._builder.writePacket_4(this.__this__8._readable, this._partLimit2);
            this.__this__8.afterRead_0(this._partLimit2.toInt_5());
            ensureNotFailed_0(this.__this__8, this._builder);
            if (this.__this__8._get_isClosedForRead__1() ? true : this._builder._get_size__48() === this._limit_1.toInt_5()) {
              this._state_0 = 4;
              continue $sm;
            } else {
              this._state_0 = 2;
              continue $sm;
            }

            break;
          case 2:
            this._state_0 = 3;
            suspendResult = this.__this__8.awaitSuspend_0(1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            suspendResult;
            Unit_getInstance();
            this._state_0 = 1;
            continue $sm;
          case 4:
            ensureNotFailed_0(this.__this__8, this._builder);
            return this._builder.build_17();
          case 5:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 5) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $readRemainingSuspendCOROUTINE$27.$metadata$ = {
    simpleName: '$readRemainingSuspendCOROUTINE$27',
    kind: 'class',
    interfaces: []
  };
  function $readAvailableCOROUTINE$30(_this_, dst, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__9 = _this_;
    this._dst = dst;
  }
  $readAvailableCOROUTINE$30.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            if (!(this.__this__9._get_closedCause__1() == null)) {
              var tmp_0 = this;
              throw ensureNotNull(this.__this__9._get_closedCause__1());
            } else {
              if (this.__this__9._readable.canRead_0()) {
                var tmp_1 = this;
                var tmp0_minOf_0 = toLong_0(this._dst._get_limit__1() - this._dst._get_writePosition__1() | 0);
                var tmp1_minOf_0 = this.__this__9._readable._get_remaining__2();
                var size_0 = (tmp0_minOf_0.compareTo_59(tmp1_minOf_0) <= 0 ? tmp0_minOf_0 : tmp1_minOf_0).toInt_5();
                readFully_2(this.__this__9._readable, this._dst, size_0);
                this.__this__9.afterRead_0(size_0);
                tmp_1._WHEN_RESULT0_0 = size_0;
                this._state_0 = 2;
                continue $sm;
              } else {
                if (this.__this__9._get_closed__5()) {
                  this._WHEN_RESULT0_0 = this.__this__9.readAvailableClosed_0();
                  this._state_0 = 2;
                  continue $sm;
                } else {
                  if (!(this._dst._get_limit__1() > this._dst._get_writePosition__1())) {
                    this._WHEN_RESULT0_0 = 0;
                    this._state_0 = 2;
                    continue $sm;
                  } else {
                    {
                      this._state_0 = 1;
                      suspendResult = readAvailableSuspend(this.__this__9, this._dst, this);
                      if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                        return suspendResult;
                      }continue $sm;
                    }
                  }
                  Unit_getInstance();
                }
                Unit_getInstance();
              }
              Unit_getInstance();
            }

            break;
          case 1:
            this._WHEN_RESULT0_0 = suspendResult;
            this._state_0 = 2;
            continue $sm;
          case 2:
            return this._WHEN_RESULT0_0;
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $readAvailableCOROUTINE$30.$metadata$ = {
    simpleName: '$readAvailableCOROUTINE$30',
    kind: 'class',
    interfaces: []
  };
  function $readAvailableSuspendCOROUTINE$31(_this_, dst, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__10 = _this_;
    this._dst_0 = dst;
  }
  $readAvailableSuspendCOROUTINE$31.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            this._state_0 = 1;
            suspendResult = this.__this__10.awaitSuspend_0(1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            Unit_getInstance();
            this._state_0 = 2;
            suspendResult = this.__this__10.readAvailable_0(this._dst_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            return suspendResult;
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $readAvailableSuspendCOROUTINE$31.$metadata$ = {
    simpleName: '$readAvailableSuspendCOROUTINE$31',
    kind: 'class',
    interfaces: []
  };
  function $awaitInternalAtLeast1COROUTINE$40(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__11 = _this_;
  }
  $awaitInternalAtLeast1COROUTINE$40.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            var tmp_0 = this;
            tmp_0._tmp0__get_isNotEmpty__01 = this.__this__11._readable;
            if (!this._tmp0__get_isNotEmpty__01._get_endOfInput__4()) {
              var tmp_1 = this;
              tmp_1._WHEN_RESULT0_1 = true;
              this._state_0 = 3;
              continue $sm;
            } else {
              {
                this._state_0 = 1;
                suspendResult = this.__this__11.awaitSuspend_0(1, this);
                if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                  return suspendResult;
                }continue $sm;
              }
            }

            break;
          case 1:
            this._WHEN_RESULT0_1 = suspendResult;
            this._state_0 = 3;
            continue $sm;
          case 2:
            throw this._exception_0;
          case 3:
            return this._WHEN_RESULT0_1;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $awaitInternalAtLeast1COROUTINE$40.$metadata$ = {
    simpleName: '$awaitInternalAtLeast1COROUTINE$40',
    kind: 'class',
    interfaces: []
  };
  function $awaitSuspendCOROUTINE$41(_this_, atLeast, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__12 = _this_;
    this._atLeast = atLeast;
  }
  $awaitSuspendCOROUTINE$41.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            var tmp_0 = this;
            tmp_0._tmp0_require_00 = this._atLeast >= 0;
            if (!this._tmp0_require_00) {
              var message_2_1 = 'Failed requirement.';
              throw IllegalArgumentException_init_$Create$_0(toString_1(message_2_1));
            }
            this._state_0 = 1;
            suspendResult = this.__this__12.awaitAtLeastNBytesAvailableForRead_0(this._atLeast, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            this.__this__12.prepareFlushedBytes_0();
            var tmp0_safe_receiver = this.__this__12._get_closedCause__1();
            if (tmp0_safe_receiver == null)
              null;
            else {
              throw tmp0_safe_receiver;
            }

            Unit_getInstance();
            return !this.__this__12._get_isClosedForRead__1() ? this.__this__12._get_availableForRead__0() >= this._atLeast : false;
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $awaitSuspendCOROUTINE$41.$metadata$ = {
    simpleName: '$awaitSuspendCOROUTINE$41',
    kind: 'class',
    interfaces: []
  };
  function $discardCOROUTINE$42(_this_, max, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__13 = _this_;
    this._max = max;
  }
  $discardCOROUTINE$42.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._discarded0 = this.__this__13._readable.discard_12(this._max);
            if (this._discarded0.equals(this._max) ? true : this.__this__13._get_isClosedForRead__1()) {
              var tmp_0 = this;
              ensureNotFailed(this.__this__13);
              return this._discarded0;
            } else {
              this._state_0 = 1;
              suspendResult = discardSuspend(this.__this__13, this._max, this._discarded0, this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            }

            break;
          case 1:
            this._WHEN_RESULT1 = suspendResult;
            this._state_0 = 3;
            continue $sm;
          case 2:
            throw this._exception_0;
          case 3:
            return this._WHEN_RESULT1;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $discardCOROUTINE$42.$metadata$ = {
    simpleName: '$discardCOROUTINE$42',
    kind: 'class',
    interfaces: []
  };
  function $discardSuspendCOROUTINE$43(_this_, max, discarded0, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__14 = _this_;
    this._max_0 = max;
    this._discarded0_0 = discarded0;
  }
  $discardSuspendCOROUTINE$43.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 5;
            this._discarded0_1 = this._discarded0_0;
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._state_0 = 2;
            suspendResult = this.__this__14.await_5(1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            var ARGUMENT = suspendResult;
            if (!ARGUMENT) {
              this._state_0 = 4;
              continue $sm;
            } else {
              this._state_0 = 3;
              continue $sm;
            }

            break;
          case 3:
            this._discarded0_1 = this._discarded0_1.plus_59(this.__this__14._readable.discard_12(this._max_0.minus_30(this._discarded0_1)));
            if (this._discarded0_1.compareTo_59(this._max_0) < 0 ? !this.__this__14._get_isClosedForRead__1() : false) {
              this._state_0 = 1;
              continue $sm;
            }
            this._state_0 = 4;
            continue $sm;
          case 4:
            ensureNotFailed(this.__this__14);
            return this._discarded0_1;
          case 5:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 5) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $discardSuspendCOROUTINE$43.$metadata$ = {
    simpleName: '$discardSuspendCOROUTINE$43',
    kind: 'class',
    interfaces: []
  };
  function ByteChannelSequentialBase(initial, autoFlush, pool) {
    this._autoFlush = autoFlush;
    this._state_3 = new ByteChannelSequentialBaseSharedState();
    this._writable = new BytePacketBuilder(0, pool);
    this._readable = ByteReadPacket_init_$Create$(initial, pool);
    this._slot = new AwaitingSlot();
    this._flushMutex = new Object();
    var tmp = this;
    tmp._flushBuffer = BytePacketBuilder$default(0, 1, null);
  }
  ByteChannelSequentialBase.prototype._get_autoFlush__0 = function () {
    return this._autoFlush;
  };
  ByteChannelSequentialBase.prototype._set_closed__0 = function (value) {
    this._state_3._closed = value;
  };
  ByteChannelSequentialBase.prototype._get_closed__5 = function () {
    return this._state_3._closed;
  };
  ByteChannelSequentialBase.prototype._get_availableForRead__0 = function () {
    return _get_flushSize_(this) + this._readable._get_remaining__2().toInt_5() | 0;
  };
  ByteChannelSequentialBase.prototype._get_availableForWrite__0 = function () {
    var tmp0_maxOf_0 = 0;
    var tmp1_maxOf_0 = 4088 - (this._get_availableForRead__0() + this._writable._get_size__48() | 0) | 0;
    return function () {
      var $externalVarargReceiverTmp = Math;
      return $externalVarargReceiverTmp.max.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_maxOf_0, tmp1_maxOf_0]))));
    }.call(this);
  };
  ByteChannelSequentialBase.prototype._get_isClosedForRead__1 = function () {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (this._get_closed__5()) {
      var tmp0__get_isEmpty__0 = this._readable;
      tmp_1 = tmp0__get_isEmpty__0._get_endOfInput__4();
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = _get_flushSize_(this) === 0;
    } else {
      {
        tmp_0 = false;
      }
    }
    if (tmp_0) {
      tmp = this._writable._get_isEmpty__6();
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  ByteChannelSequentialBase.prototype._get_isClosedForWrite__1 = function () {
    return this._get_closed__5();
  };
  ByteChannelSequentialBase.prototype._get_closedCause__1 = function () {
    return this._state_3._closedCause;
  };
  ByteChannelSequentialBase.prototype.awaitAtLeastNBytesAvailableForWrite_0 = function (count_0, $cont) {
    var tmp = new $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0(this, count_0, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ByteChannelSequentialBase.prototype.awaitAtLeastNBytesAvailableForRead_0 = function (count_0, $cont) {
    var tmp = new $awaitAtLeastNBytesAvailableForReadCOROUTINE$1(this, count_0, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ByteChannelSequentialBase.prototype.flush_10 = function () {
    flushImpl(this);
    Unit_getInstance();
  };
  ByteChannelSequentialBase.prototype.prepareFlushedBytes_0 = function () {
    var tmp0_synchronized_0 = this._flushMutex;
    unsafeAppend(this._readable, this._flushBuffer);
    Unit_getInstance();
  };
  ByteChannelSequentialBase.prototype.writePacket_6 = function (packet, $cont) {
    var tmp = new $writePacketCOROUTINE$8(this, packet, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ByteChannelSequentialBase.prototype.writeFully_1 = function (src, $cont) {
    var tmp = new $writeFullyCOROUTINE$9(this, src, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ByteChannelSequentialBase.prototype.writeFully_3 = function (src, offset, length, $cont) {
    var tmp = new $writeFullyCOROUTINE$10(this, src, offset, length, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ByteChannelSequentialBase.prototype.afterRead_0 = function (count_0) {
    var tmp0_this = this;
    var tmp0_plus_0 = _get__totalBytesRead_(tmp0_this);
    _set__totalBytesRead_(tmp0_this, tmp0_plus_0.plus_59(toLong_0(count_0)));
    this._slot.resume_3();
  };
  ByteChannelSequentialBase.prototype.readRemaining_1 = function (limit, headerSizeHint, $cont) {
    var tmp = new $readRemainingCOROUTINE$26(this, limit, headerSizeHint, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ByteChannelSequentialBase.prototype.readAvailableClosed_0 = function () {
    var tmp0_safe_receiver = this._get_closedCause__1();
    if (tmp0_safe_receiver == null)
      null;
    else {
      throw tmp0_safe_receiver;
    }
    Unit_getInstance();
    return -1;
  };
  ByteChannelSequentialBase.prototype.readAvailable_0 = function (dst, $cont) {
    var tmp = new $readAvailableCOROUTINE$30(this, dst, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ByteChannelSequentialBase.prototype.await_5 = function (atLeast, $cont) {
    var tmp0_require_0 = atLeast >= 0;
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_0(atLeast);
      m_2.doFail_4_14();
    }var tmp1_require_0 = toLong_0(atLeast).compareTo_59(new Long(4088, 0)) <= 0;
    if (!tmp1_require_0) {
      var m_2_0 = new _no_name_provided__3_1(atLeast);
      m_2_0.doFail_4_14();
    }completeReading(this);
    if (atLeast === 0)
      return !this._get_isClosedForRead__1();
    if (this._readable._get_remaining__2().compareTo_59(toLong_0(atLeast)) >= 0)
      return true;
    return this.awaitSuspend_0(atLeast, $cont);
  };
  ByteChannelSequentialBase.prototype.awaitInternalAtLeast1_0 = function ($cont) {
    var tmp = new $awaitInternalAtLeast1COROUTINE$40(this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ByteChannelSequentialBase.prototype.awaitSuspend_0 = function (atLeast, $cont) {
    var tmp = new $awaitSuspendCOROUTINE$41(this, atLeast, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ByteChannelSequentialBase.prototype.discard_12 = function (max, $cont) {
    var tmp = new $discardCOROUTINE$42(this, max, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ByteChannelSequentialBase.prototype.cancel_25 = function (cause) {
    if (!(this._get_closedCause__1() == null) ? true : this._get_closed__5()) {
      return false;
    }var tmp0_elvis_lhs = cause;
    return this.close_27(tmp0_elvis_lhs == null ? CancellationException_init_$Create$('Channel cancelled') : tmp0_elvis_lhs);
  };
  ByteChannelSequentialBase.prototype.close_27 = function (cause) {
    if (this._get_closed__5() ? true : !(this._get_closedCause__1() == null))
      return false;
    _set_closedCause_(this, cause);
    this._set_closed__0(true);
    if (!(cause == null)) {
      this._readable.release_10();
      this._writable.release_10();
      this._flushBuffer.release_10();
    } else {
      this.flush_10();
    }
    this._slot.cancel_23(cause);
    return true;
  };
  ByteChannelSequentialBase.prototype.transferTo_0 = function (dst, limit) {
    var size_0 = this._readable._get_remaining__2();
    var tmp;
    if (size_0.compareTo_59(limit) <= 0) {
      dst._writable.writePacket_6(this._readable);
      dst.afterWrite_0(size_0.toInt_5());
      this.afterRead_0(size_0.toInt_5());
      tmp = size_0;
    } else {
      tmp = new Long(0, 0);
    }
    return tmp;
  };
  ByteChannelSequentialBase.prototype.afterWrite_0 = function (count_0) {
    var tmp0_this = this;
    var tmp0_plus_0 = _get__totalBytesWritten_(tmp0_this);
    _set__totalBytesWritten_(tmp0_this, tmp0_plus_0.plus_59(toLong_0(count_0)));
    if (this._get_closed__5()) {
      this._writable.release_10();
      ensureNotClosed(this);
    }if (this._get_autoFlush__0() ? true : this._get_availableForWrite__0() === 0) {
      this.flush_10();
    }};
  ByteChannelSequentialBase.$metadata$ = {
    simpleName: 'ByteChannelSequentialBase',
    kind: 'class',
    interfaces: [ByteChannel, ByteReadChannel_1, ByteWriteChannel, SuspendableReadSession, HasReadSession, HasWriteSession]
  };
  function readRemaining(_this_, $cont) {
    Companion_getInstance_15();
    return _this_.readRemaining_1(new Long(-1, 2147483647), 0, $cont);
  }
  function cancel_3(_this_) {
    return _this_.cancel_25(null);
  }
  function readRemaining_0(_this_, limit, $cont) {
    return _this_.readRemaining_1(limit, 0, $cont);
  }
  function discard(_this_, $cont) {
    Companion_getInstance_15();
    return _this_.discard_12(new Long(-1, 2147483647), $cont);
  }
  function ClosedWriteChannelException(message) {
    CancellationException_init_$Init$(message, this);
    captureStack(this, ClosedWriteChannelException);
  }
  ClosedWriteChannelException.$metadata$ = {
    simpleName: 'ClosedWriteChannelException',
    kind: 'class',
    interfaces: []
  };
  function close(_this_) {
    return _this_.close_27(null);
  }
  function writeFully(_this_, src, $cont) {
    return _this_.writeFully_3(src, 0, src.length, $cont);
  }
  function WriterJob() {
  }
  WriterJob.$metadata$ = {
    simpleName: 'WriterJob',
    kind: 'interface',
    interfaces: [Job]
  };
  function writer(_this_, coroutineContext, autoFlush, block) {
    return launchChannel(_this_, coroutineContext, ByteChannel_0(autoFlush), true, block);
  }
  function writer$default(_this_, coroutineContext, autoFlush, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      coroutineContext = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      autoFlush = false;
    return writer(_this_, coroutineContext, autoFlush, block);
  }
  function WriterScope() {
  }
  WriterScope.$metadata$ = {
    simpleName: 'WriterScope',
    kind: 'interface',
    interfaces: [CoroutineScope]
  };
  function ChannelJob(delegate, channel) {
    this._delegate_1 = delegate;
    this._channel_0 = channel;
  }
  ChannelJob.prototype._get_channel__2 = function () {
    return this._channel_0;
  };
  ChannelJob.prototype.attachChild_11 = function (child) {
    return this._delegate_1.attachChild_11(child);
  };
  ChannelJob.prototype.getCancellationException_11 = function () {
    return this._delegate_1.getCancellationException_11();
  };
  ChannelJob.prototype.invokeOnCompletion_26 = function (onCancelling, invokeImmediately, handler) {
    return this._delegate_1.invokeOnCompletion_26(onCancelling, invokeImmediately, handler);
  };
  ChannelJob.prototype.get_63 = function (key) {
    return this._delegate_1.get_63(key);
  };
  ChannelJob.prototype.fold_28 = function (initial, operation) {
    return this._delegate_1.fold_28(initial, operation);
  };
  ChannelJob.prototype.cancel_22 = function (cause) {
    this._delegate_1.cancel_22(cause);
  };
  ChannelJob.prototype.invokeOnCompletion_27 = function (handler) {
    return this._delegate_1.invokeOnCompletion_27(handler);
  };
  ChannelJob.prototype.minusKey_29 = function (key) {
    return this._delegate_1.minusKey_29(key);
  };
  ChannelJob.prototype.plus_31 = function (context) {
    return this._delegate_1.plus_31(context);
  };
  ChannelJob.prototype.start_18 = function () {
    return this._delegate_1.start_18();
  };
  ChannelJob.prototype._get_isActive__26 = function () {
    return this._delegate_1._get_isActive__26();
  };
  ChannelJob.prototype._get_key__52 = function () {
    return this._delegate_1._get_key__52();
  };
  ChannelJob.prototype.toString = function () {
    return '' + 'ChannelJob[' + this._delegate_1 + ']';
  };
  ChannelJob.$metadata$ = {
    simpleName: 'ChannelJob',
    kind: 'class',
    interfaces: [ReaderJob, WriterJob, Job]
  };
  function launchChannel(_this_, context, channel, attachJob, block) {
    var dispatcher = _this_._get_coroutineContext__27().get_63(Key_getInstance_0());
    var job = launch$default(_this_, context, null, _no_name_provided_$factory_45(attachJob, channel, block, dispatcher, null), 2, null);
    job.invokeOnCompletion_27(_no_name_provided_$factory_46(channel));
    Unit_getInstance();
    return new ChannelJob(job, channel);
  }
  function ReaderJob() {
  }
  ReaderJob.$metadata$ = {
    simpleName: 'ReaderJob',
    kind: 'interface',
    interfaces: [Job]
  };
  function ChannelScope(delegate, channel) {
    this._channel_1 = channel;
    this._$$delegate_0 = delegate;
  }
  ChannelScope.prototype._get_channel__2 = function () {
    return this._channel_1;
  };
  ChannelScope.prototype._get_coroutineContext__27 = function () {
    return this._$$delegate_0._get_coroutineContext__27();
  };
  ChannelScope.$metadata$ = {
    simpleName: 'ChannelScope',
    kind: 'class',
    interfaces: [ReaderScope, WriterScope, CoroutineScope]
  };
  function ReaderScope() {
  }
  ReaderScope.$metadata$ = {
    simpleName: 'ReaderScope',
    kind: 'interface',
    interfaces: [CoroutineScope]
  };
  function _no_name_provided__59($attachJob, $channel, $block, $dispatcher, resultContinuation) {
    this._$attachJob = $attachJob;
    this._$channel = $channel;
    this._$block = $block;
    this._$dispatcher = $dispatcher;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__59.prototype.invoke_322 = function ($this$launch, $cont) {
    var tmp = this.create_47($this$launch, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__59.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__59.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            if (this._$attachJob) {
              this._$channel.attachJob_1(ensureNotNull(this._$this$launch._get_coroutineContext__27().get_63(Key_getInstance_3())));
            }
            var tmp_0 = this;
            var tmp_1 = new ChannelScope(this._$this$launch, this._$channel);
            tmp_0._scope0 = isInterface(tmp_1, CoroutineScope) ? tmp_1 : THROW_CCE();
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this._$block(this._scope0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            this._exceptionState = 3;
            this._state_0 = 4;
            continue $sm;
          case 2:
            this._exceptionState = 3;
            var tmp_2 = this._exception_0;
            if (tmp_2 instanceof Error) {
              var cause = this._exception_0;
              if (!equals_1(this._$dispatcher, Dispatchers_getInstance()._Unconfined) ? !(this._$dispatcher == null) : false) {
                throw cause;
              }this._$channel.cancel_25(cause);
              Unit_getInstance();
              this._state_0 = 4;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 3:
            throw this._exception_0;
          case 4:
            this._exceptionState = 3;
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__59.prototype.create_47 = function ($this$launch, completion) {
    var i = new _no_name_provided__59(this._$attachJob, this._$channel, this._$block, this._$dispatcher, completion);
    i._$this$launch = $this$launch;
    return i;
  };
  _no_name_provided__59.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__60($channel) {
    this._$channel_0 = $channel;
  }
  _no_name_provided__60.prototype.invoke_310 = function (cause) {
    this._$channel_0.close_27(cause);
    Unit_getInstance();
  };
  _no_name_provided__60.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__60.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_45($attachJob, $channel, $block, $dispatcher, resultContinuation) {
    var i = new _no_name_provided__59($attachJob, $channel, $block, $dispatcher, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_46($channel) {
    var i = new _no_name_provided__60($channel);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function ReadSession() {
  }
  ReadSession.$metadata$ = {
    simpleName: 'ReadSession',
    kind: 'interface',
    interfaces: []
  };
  function SuspendableReadSession() {
  }
  SuspendableReadSession.$metadata$ = {
    simpleName: 'SuspendableReadSession',
    kind: 'interface',
    interfaces: [ReadSession]
  };
  function HasReadSession() {
  }
  HasReadSession.$metadata$ = {
    simpleName: 'HasReadSession',
    kind: 'interface',
    interfaces: []
  };
  function HasWriteSession() {
  }
  HasWriteSession.$metadata$ = {
    simpleName: 'HasWriteSession',
    kind: 'interface',
    interfaces: []
  };
  function Allocator() {
  }
  Allocator.$metadata$ = {
    simpleName: 'Allocator',
    kind: 'interface',
    interfaces: []
  };
  function encodeToImpl(_this_, destination, input, fromIndex, toIndex) {
    var start = fromIndex;
    if (start >= toIndex)
      return 0;
    var bytesWritten = 0;
    var tmp0_writeWhileSize_0 = 1;
    var tail_1 = prepareWriteHead(destination, tmp0_writeWhileSize_0, null);
    try {
      var size_2;
      $l$break: while (true) {
        var tmp1__anonymous__3 = tail_1;
        var before_4 = tmp1__anonymous__3._get_limit__1() - tmp1__anonymous__3._get_writePosition__1() | 0;
        var rc_5 = encodeImpl(_this_, input, start, toIndex, tmp1__anonymous__3);
        var tmp0_check_0_6 = rc_5 >= 0;
        if (!tmp0_check_0_6) {
          var message_2_1_7 = 'Check failed.';
          throw IllegalStateException_init_$Create$(toString_1(message_2_1_7));
        }start = start + rc_5 | 0;
        var tmp = bytesWritten;
        bytesWritten = tmp + (before_4 - (tmp1__anonymous__3._get_limit__1() - tmp1__anonymous__3._get_writePosition__1() | 0) | 0) | 0;
        size_2 = start >= toIndex ? 0 : rc_5 === 0 ? 8 : 1;
        if (size_2 <= 0)
          break $l$break;
        tail_1 = prepareWriteHead(destination, size_2, tail_1);
      }
    }finally {
      afterHeadWrite(destination, tail_1);
    }
    bytesWritten = bytesWritten + encodeCompleteImpl(_this_, destination) | 0;
    return bytesWritten;
  }
  function encodeCompleteImpl(_this_, dst) {
    var size_0 = 1;
    var bytesWritten = 0;
    var tail_1 = prepareWriteHead(dst, 1, null);
    try {
      $l$break: while (true) {
        var tmp0__anonymous__2 = tail_1;
        var before_3 = tmp0__anonymous__2._get_limit__1() - tmp0__anonymous__2._get_writePosition__1() | 0;
        if (encodeComplete(_this_, tmp0__anonymous__2)) {
          size_0 = 0;
        } else {
          var tmp0_4 = size_0;
          size_0 = tmp0_4 + 1 | 0;
          Unit_getInstance();
        }
        var tmp = bytesWritten;
        bytesWritten = tmp + (before_3 - (tmp0__anonymous__2._get_limit__1() - tmp0__anonymous__2._get_writePosition__1() | 0) | 0) | 0;
        if (!(size_0 > 0))
          break $l$break;
        else {
        }
        tail_1 = prepareWriteHead(dst, 1, tail_1);
      }
    }finally {
      afterHeadWrite(dst, tail_1);
    }
    return bytesWritten;
  }
  function decode(_this_, input, max) {
    var tmp0_minOf_0 = toLong_0(max);
    var tmp1_minOf_0 = sizeEstimate(input);
    var tmp2_buildString_0 = (tmp0_minOf_0.compareTo_59(tmp1_minOf_0) <= 0 ? tmp0_minOf_0 : tmp1_minOf_0).toInt_5();
    var tmp0_apply_0_1 = StringBuilder_init_$Create$(tmp2_buildString_0);
    decode_0(_this_, input, tmp0_apply_0_1, max);
    Unit_getInstance();
    return tmp0_apply_0_1.toString();
  }
  function decode$default(_this_, input, max, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      max = IntCompanionObject_getInstance()._MAX_VALUE_5;
    return decode(_this_, input, max);
  }
  function encodeToByteArrayImpl1(_this_, input, fromIndex, toIndex) {
    var start = fromIndex;
    if (start >= toIndex)
      return EmptyByteArray;
    var single_3 = Companion_getInstance_20()._Pool.borrow_12();
    try {
      var rc = encodeImpl(_this_, input, start, toIndex, single_3);
      start = start + rc | 0;
      if (start === toIndex) {
        var result = new Int8Array(single_3._get_writePosition__1() - single_3._get_readPosition__1() | 0);
        readFully$default(single_3, result, 0, 0, 6, null);
        return result;
      }var tmp$ret$0;
      l$ret$1: do {
        var tmp0_buildPacket_0 = 0;
        var builder_2 = BytePacketBuilder_0(tmp0_buildPacket_0);
        try {
          builder_2.appendSingleChunk_2(single_3.duplicate_0());
          encodeToImpl(_this_, builder_2, input, start, toIndex);
          Unit_getInstance();
          tmp$ret$0 = builder_2.build_17();
          break l$ret$1;
        } catch ($p) {
          if ($p instanceof Error) {
            builder_2.release_10();
            throw $p;
          } else {
            {
              throw $p;
            }
          }
        }
      }
       while (false);
      var tmp = tmp$ret$0;
      return readBytes$default(tmp, 0, 1, null);
    }finally {
      single_3.release_8(Companion_getInstance_20()._Pool);
    }
  }
  function sizeEstimate(_this_) {
    var tmp0_subject = _this_;
    var tmp;
    if (tmp0_subject instanceof ByteReadPacket) {
      tmp = _this_._get_remaining__2();
    } else {
      if (tmp0_subject instanceof AbstractInput) {
        var tmp0_maxOf_0 = _this_._get_remaining__2();
        var tmp1_maxOf_0 = new Long(16, 0);
        tmp = tmp0_maxOf_0.compareTo_59(tmp1_maxOf_0) >= 0 ? tmp0_maxOf_0 : tmp1_maxOf_0;
      } else {
        {
          tmp = new Long(16, 0);
        }
      }
    }
    return tmp;
  }
  function encode(_this_, input, fromIndex, toIndex) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_buildPacket_0 = 0;
      var builder_2 = BytePacketBuilder_0(tmp0_buildPacket_0);
      try {
        encodeToImpl(_this_, builder_2, input, fromIndex, toIndex);
        Unit_getInstance();
        tmp$ret$0 = builder_2.build_17();
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof Error) {
          builder_2.release_10();
          throw $p;
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  }
  function encode$default(_this_, input, fromIndex, toIndex, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      fromIndex = 0;
    if (!(($mask0 & 4) === 0))
      toIndex = charSequenceLength(input);
    return encode(_this_, input, fromIndex, toIndex);
  }
  function _set__head_($this, newHead) {
    $this._state_4._head_2 = newHead;
    $this._state_4._headMemory = newHead._get_memory__1();
    $this._state_4._headPosition = newHead._get_readPosition__1();
    $this._state_4._headEndExclusive = newHead._get_writePosition__1();
  }
  function _get__head_($this) {
    return $this._state_4._head_2;
  }
  function _set_tailRemaining_($this, newValue) {
    var tmp0_require_0 = newValue.compareTo_59(new Long(0, 0)) >= 0;
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_2(newValue);
      m_2.doFail_4_14();
    }$this._state_4._tailRemaining = newValue;
  }
  function _get_tailRemaining_($this) {
    return $this._state_4._tailRemaining;
  }
  function doPrefetch($this, min) {
    var tail = findTail(_get__head_($this));
    var available = numberToLong($this._get_headEndExclusive__2() - $this._get_headPosition__2() | 0).plus_59(_get_tailRemaining_($this));
    do {
      var next = $this.fill_7();
      if (next == null) {
        $this._noMoreChunksAvailable = true;
        return false;
      }var chunkSize = next._get_writePosition__1() - next._get_readPosition__1() | 0;
      if (tail === Companion_getInstance_20()._get_Empty__1()) {
        _set__head_($this, next);
        tail = next;
      } else {
        tail._set_next__0(next);
        var tmp0_this = $this;
        var tmp0_plus_0 = _get_tailRemaining_(tmp0_this);
        _set_tailRemaining_(tmp0_this, tmp0_plus_0.plus_59(toLong_0(chunkSize)));
      }
      var tmp1_plus_0 = available;
      available = tmp1_plus_0.plus_59(toLong_0(chunkSize));
    }
     while (available.compareTo_59(min) < 0);
    return true;
  }
  function readASCII($this, out, min, max) {
    if (max === 0 ? min === 0 : false)
      return 0;
    else if ($this._get_endOfInput__4())
      if (min === 0)
        return 0;
      else {
        atLeastMinCharactersRequire($this, min);
      }
     else if (max < min) {
      minShouldBeLess($this, min, max);
    }var copied = 0;
    var utf8 = false;
    var tmp$ret$0;
    l$ret$1: do {
      var release_1 = true;
      var tmp0_elvis_lhs_3 = prepareReadFirstHead($this, 1);
      var tmp;
      if (tmp0_elvis_lhs_3 == null) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
        tmp = tmp0_elvis_lhs_3;
      }
      var current_2 = tmp;
      try {
        $l$break_0: do {
          var tmp0__anonymous__6 = current_2;
          var tmp$ret$2;
          l$ret$3: do {
            var tmp0__anonymous__1_3_9 = tmp0__anonymous__6._memory;
            var tmp1__anonymous__1_3_10 = tmp0__anonymous__6._get_readPosition__1();
            var tmp2__anonymous__1_3_11 = tmp0__anonymous__6._get_writePosition__1();
            var inductionVariable = tmp1__anonymous__1_3_10;
            if (inductionVariable < tmp2__anonymous__1_3_11)
              do {
                var index_3_5_13 = inductionVariable;
                inductionVariable = inductionVariable + 1 | 0;
                var codepoint_4_6_14 = tmp0__anonymous__1_3_9._view.getInt8(index_3_5_13) & 255;
                var tmp_0;
                if ((codepoint_4_6_14 & 128) === 128) {
                  tmp_0 = true;
                } else {
                  var tmp3__anonymous__5_15 = numberToChar(codepoint_4_6_14);
                  var tmp_1;
                  if (copied === max) {
                    tmp_1 = false;
                  } else {
                    out.append_23(tmp3__anonymous__5_15);
                    Unit_getInstance();
                    var tmp0_6_16 = copied;
                    copied = tmp0_6_16 + 1 | 0;
                    Unit_getInstance();
                    tmp_1 = true;
                  }
                  tmp_0 = !tmp_1;
                }
                if (tmp_0) {
                  tmp0__anonymous__6.discardExact_5(index_3_5_13 - tmp1__anonymous__1_3_10 | 0);
                  tmp$ret$2 = false;
                  break l$ret$3;
                } else {
                }
              }
               while (inductionVariable < tmp2__anonymous__1_3_11);
            var rc_2_8 = tmp2__anonymous__1_3_11 - tmp1__anonymous__1_3_10 | 0;
            tmp0__anonymous__6.discardExact_5(rc_2_8);
            Unit_getInstance();
            tmp$ret$2 = true;
          }
           while (false);
          var rc_7 = tmp$ret$2;
          var tmp_2;
          if (rc_7) {
            tmp_2 = true;
          } else if (copied === max) {
            tmp_2 = false;
          } else {
            utf8 = true;
            tmp_2 = false;
          }
          if (!tmp_2) {
            break $l$break_0;
          } else {
          }
          release_1 = false;
          var tmp1_elvis_lhs_5 = prepareReadNextHead($this, current_2);
          var tmp_3;
          if (tmp1_elvis_lhs_5 == null) {
            break $l$break_0;
          } else {
            tmp_3 = tmp1_elvis_lhs_5;
          }
          var next_4 = tmp_3;
          current_2 = next_4;
          release_1 = true;
        }
         while (true);
      }finally {
        if (release_1) {
          completeReadHead($this, current_2);
        }}
    }
     while (false);
    if (utf8) {
      return copied + readUtf8($this, out, min - copied | 0, max - copied | 0) | 0;
    }if (copied < min) {
      prematureEndOfStreamChars($this, min, copied);
    }return copied;
  }
  function atLeastMinCharactersRequire($this, min) {
    throw new EOFException('' + 'at least ' + min + ' characters required but no bytes available');
  }
  function minShouldBeLess($this, min, max) {
    throw IllegalArgumentException_init_$Create$_0('' + 'min should be less or equal to max but min = ' + min + ', max = ' + max);
  }
  function prematureEndOfStreamChars($this, min, copied) {
    throw new MalformedUTF8InputException('' + 'Premature end of stream: expected at least ' + min + ' chars but had only ' + copied);
  }
  function readUtf8($this, out, min, max) {
    var copied = 0;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp3_takeWhileSize_0 = 1;
      var release_1 = true;
      var tmp0_elvis_lhs_3 = prepareReadFirstHead($this, tmp3_takeWhileSize_0);
      var tmp;
      if (tmp0_elvis_lhs_3 == null) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
        tmp = tmp0_elvis_lhs_3;
      }
      var current_2 = tmp;
      var size_4 = tmp3_takeWhileSize_0;
      try {
        $l$break_0: do {
          var tmp0__get_readRemaining__0 = current_2;
          var before_5 = tmp0__get_readRemaining__0._get_writePosition__1() - tmp0__get_readRemaining__0._get_readPosition__1() | 0;
          var after_6;
          if (before_5 >= size_4) {
            try {
              var tmp4__anonymous__8 = current_2;
              var tmp$ret$2;
              l$ret$3: do {
                var byteCount_1_10 = 0;
                var value_2_11 = 0;
                var lastByteCount_3_12 = 0;
                var tmp0__anonymous__4_3_14 = tmp4__anonymous__8._memory;
                var tmp1__anonymous__4_3_15 = tmp4__anonymous__8._get_readPosition__1();
                var tmp2__anonymous__4_3_16 = tmp4__anonymous__8._get_writePosition__1();
                var inductionVariable = tmp1__anonymous__4_3_15;
                if (inductionVariable < tmp2__anonymous__4_3_16)
                  do {
                    var index_6_5_18 = inductionVariable;
                    inductionVariable = inductionVariable + 1 | 0;
                    var v_7_6_19 = tmp0__anonymous__4_3_14._view.getInt8(index_6_5_18) & 255;
                    if ((v_7_6_19 & 128) === 0) {
                      if (!(byteCount_1_10 === 0)) {
                        malformedByteCount(byteCount_1_10);
                      }var tmp3__anonymous__14_20 = numberToChar(v_7_6_19);
                      var tmp_0;
                      if (copied === max) {
                        tmp_0 = false;
                      } else {
                        out.append_23(tmp3__anonymous__14_20);
                        Unit_getInstance();
                        var tmp0_15_21 = copied;
                        copied = tmp0_15_21 + 1 | 0;
                        Unit_getInstance();
                        tmp_0 = true;
                      }
                      if (!tmp_0) {
                        tmp4__anonymous__8.discardExact_5(index_6_5_18 - tmp1__anonymous__4_3_15 | 0);
                        tmp$ret$2 = -1;
                        break l$ret$3;
                      } else {
                      }
                    } else if (byteCount_1_10 === 0) {
                      var mask_8_7_22 = 128;
                      value_2_11 = v_7_6_19;
                      var inductionVariable_0 = 1;
                      if (inductionVariable_0 <= 6)
                        $l$break: do {
                          var i_10_9_24 = inductionVariable_0;
                          inductionVariable_0 = inductionVariable_0 + 1 | 0;
                          if (!((value_2_11 & mask_8_7_22) === 0)) {
                            value_2_11 = value_2_11 & ~mask_8_7_22;
                            mask_8_7_22 = mask_8_7_22 >> 1;
                            var tmp2_11_10_25 = byteCount_1_10;
                            byteCount_1_10 = tmp2_11_10_25 + 1 | 0;
                            Unit_getInstance();
                          } else {
                            break $l$break;
                          }
                        }
                         while (inductionVariable_0 <= 6);
                      lastByteCount_3_12 = byteCount_1_10;
                      var tmp3_12_11_26 = byteCount_1_10;
                      byteCount_1_10 = tmp3_12_11_26 - 1 | 0;
                      Unit_getInstance();
                      if (lastByteCount_3_12 > (tmp2__anonymous__4_3_16 - index_6_5_18 | 0)) {
                        tmp4__anonymous__8.discardExact_5(index_6_5_18 - tmp1__anonymous__4_3_15 | 0);
                        tmp$ret$2 = lastByteCount_3_12;
                        break l$ret$3;
                      }} else {
                      value_2_11 = value_2_11 << 6 | v_7_6_19 & 127;
                      var tmp4_13_12_27 = byteCount_1_10;
                      byteCount_1_10 = tmp4_13_12_27 - 1 | 0;
                      Unit_getInstance();
                      if (byteCount_1_10 === 0) {
                        if (isBmpCodePoint(value_2_11)) {
                          var tmp4__anonymous__14_28 = numberToChar(value_2_11);
                          var tmp_1;
                          if (copied === max) {
                            tmp_1 = false;
                          } else {
                            out.append_23(tmp4__anonymous__14_28);
                            Unit_getInstance();
                            var tmp0_15_29 = copied;
                            copied = tmp0_15_29 + 1 | 0;
                            Unit_getInstance();
                            tmp_1 = true;
                          }
                          if (!tmp_1) {
                            tmp4__anonymous__8.discardExact_5(((index_6_5_18 - tmp1__anonymous__4_3_15 | 0) - lastByteCount_3_12 | 0) + 1 | 0);
                            tmp$ret$2 = -1;
                            break l$ret$3;
                          } else {
                          }
                        } else if (!isValidCodePoint(value_2_11)) {
                          malformedCodePoint(value_2_11);
                        } else {
                          var tmp_2;
                          var tmp5__anonymous__14_30 = numberToChar(highSurrogate(value_2_11));
                          var tmp_3;
                          if (copied === max) {
                            tmp_3 = false;
                          } else {
                            out.append_23(tmp5__anonymous__14_30);
                            Unit_getInstance();
                            var tmp0_15_31 = copied;
                            copied = tmp0_15_31 + 1 | 0;
                            Unit_getInstance();
                            tmp_3 = true;
                          }
                          if (!tmp_3) {
                            tmp_2 = true;
                          } else {
                            {
                              var tmp6__anonymous__14_32 = numberToChar(lowSurrogate(value_2_11));
                              var tmp_4;
                              if (copied === max) {
                                tmp_4 = false;
                              } else {
                                out.append_23(tmp6__anonymous__14_32);
                                Unit_getInstance();
                                var tmp0_15_33 = copied;
                                copied = tmp0_15_33 + 1 | 0;
                                Unit_getInstance();
                                tmp_4 = true;
                              }
                              tmp_2 = !tmp_4;
                            }
                          }
                          if (tmp_2) {
                            tmp4__anonymous__8.discardExact_5(((index_6_5_18 - tmp1__anonymous__4_3_15 | 0) - lastByteCount_3_12 | 0) + 1 | 0);
                            tmp$ret$2 = -1;
                            break l$ret$3;
                          } else {
                          }
                        }
                        value_2_11 = 0;
                      }}
                  }
                   while (inductionVariable < tmp2__anonymous__4_3_16);
                var rc_2_13 = tmp2__anonymous__4_3_16 - tmp1__anonymous__4_3_15 | 0;
                tmp4__anonymous__8.discardExact_5(rc_2_13);
                Unit_getInstance();
                tmp$ret$2 = 0;
              }
               while (false);
              var size_9 = tmp$ret$2;
              size_4 = size_9 === 0 ? 1 : size_9 > 0 ? size_9 : 0;
            }finally {
              var tmp1__get_readRemaining__0 = current_2;
              after_6 = tmp1__get_readRemaining__0._get_writePosition__1() - tmp1__get_readRemaining__0._get_readPosition__1() | 0;
            }
          } else {
            after_6 = before_5;
          }
          release_1 = false;
          var tmp_5;
          if (after_6 === 0) {
            tmp_5 = prepareReadNextHead($this, current_2);
          } else {
            var tmp_6;
            if (after_6 < size_4) {
              tmp_6 = true;
            } else {
              var tmp2__get_endGap__0 = current_2;
              var tmp_7 = tmp2__get_endGap__0._capacity_0 - tmp2__get_endGap__0._get_limit__1() | 0;
              Companion_getInstance_17();
              tmp_6 = tmp_7 < 8;
            }
            if (tmp_6) {
              completeReadHead($this, current_2);
              tmp_5 = prepareReadFirstHead($this, size_4);
            } else {
              {
                tmp_5 = current_2;
              }
            }
          }
          var next_7 = tmp_5;
          if (next_7 == null) {
            break $l$break_0;
          }current_2 = next_7;
          release_1 = true;
        }
         while (size_4 > 0);
      }finally {
        if (release_1) {
          completeReadHead($this, current_2);
        }}
    }
     while (false);
    if (copied < min) {
      prematureEndOfStreamChars($this, min, copied);
    }return copied;
  }
  function discardAsMuchAsPossible($this, n, skipped) {
    var $this_0 = $this;
    var n_0 = n;
    var skipped_0 = skipped;
    while (true) {
      var $this_1 = $this_0;
      var n_1 = n_0;
      var skipped_1 = skipped_0;
      if (n_1.equals(new Long(0, 0)))
        return skipped_1;
      var tmp0_elvis_lhs = $this_1.prepareRead_2(1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return skipped_1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var current = tmp;
      var tmp0_minOf_0 = toLong_0(current._get_writePosition__1() - current._get_readPosition__1() | 0);
      var size_0 = (tmp0_minOf_0.compareTo_59(n_1) <= 0 ? tmp0_minOf_0 : n_1).toInt_5();
      current.discardExact_5(size_0);
      var tmp1_this = $this_1;
      tmp1_this._set_headPosition__2(tmp1_this._get_headPosition__2() + size_0 | 0);
      afterRead($this_1, current);
      $this_0 = $this_1;
      n_0 = n_1.minus_30(toLong_0(size_0));
      skipped_0 = skipped_1.plus_59(toLong_0(size_0));
      continue;
    }
  }
  function discardAsMuchAsPossible_0($this, n, skipped) {
    var currentCount = n;
    var currentSkipped = skipped;
    while (true) {
      if (currentCount === 0) {
        return currentSkipped;
      }var tmp0_elvis_lhs = $this.prepareRead_2(1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return currentSkipped;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var current = tmp;
      var tmp0_minOf_0 = current._get_writePosition__1() - current._get_readPosition__1() | 0;
      var tmp1_minOf_0 = currentCount;
      var size_0 = function () {
        var $externalVarargReceiverTmp = Math;
        return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_minOf_0, tmp1_minOf_0]))));
      }.call(this);
      current.discardExact_5(size_0);
      var tmp1_this = $this;
      tmp1_this._set_headPosition__2(tmp1_this._get_headPosition__2() + size_0 | 0);
      afterRead($this, current);
      currentCount = currentCount - size_0 | 0;
      currentSkipped = currentSkipped + size_0 | 0;
    }
  }
  function fixGapAfterReadFallback($this, current) {
    if ($this._noMoreChunksAvailable ? current._get_next__1() == null : false) {
      $this._set_headPosition__2(current._get_readPosition__1());
      $this._set_headEndExclusive__2(current._get_writePosition__1());
      _set_tailRemaining_($this, new Long(0, 0));
      return Unit_getInstance();
    }var size_0 = current._get_writePosition__1() - current._get_readPosition__1() | 0;
    Companion_getInstance_17();
    var tmp0_minOf_0 = 8 - (current._capacity_0 - current._get_limit__1() | 0) | 0;
    var overrun = function () {
      var $externalVarargReceiverTmp = Math;
      return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([size_0, tmp0_minOf_0]))));
    }.call(this);
    if (size_0 > overrun) {
      fixGapAfterReadFallbackUnreserved($this, current, size_0, overrun);
    } else {
      var new_0 = $this._pool.borrow_12();
      Companion_getInstance_17();
      new_0.reserveEndGap_1(8);
      new_0._set_next__0(current.cleanNext_0());
      writeBufferAppend(new_0, current, size_0);
      Unit_getInstance();
      _set__head_($this, new_0);
    }
    current.release_8($this._pool);
  }
  function fixGapAfterReadFallbackUnreserved($this, current, size_0, overrun) {
    var chunk1 = $this._pool.borrow_12();
    var chunk2 = $this._pool.borrow_12();
    Companion_getInstance_17();
    chunk1.reserveEndGap_1(8);
    Companion_getInstance_17();
    chunk2.reserveEndGap_1(8);
    chunk1._set_next__0(chunk2);
    chunk2._set_next__0(current.cleanNext_0());
    writeBufferAppend(chunk1, current, size_0 - overrun | 0);
    Unit_getInstance();
    writeBufferAppend(chunk2, current, overrun);
    Unit_getInstance();
    _set__head_($this, chunk1);
    _set_tailRemaining_($this, remainingAll(chunk2));
  }
  function ensureNext($this, current, empty) {
    var $this_0 = $this;
    var current_0 = current;
    var empty_0 = empty;
    while (true) {
      var $this_1 = $this_0;
      var current_1 = current_0;
      var empty_1 = empty_0;
      if (current_1 === empty_1) {
        return doFill($this_1);
      }var next = current_1.cleanNext_0();
      current_1.release_8($this_1._pool);
      var tmp;
      if (next == null) {
        _set__head_($this_1, empty_1);
        _set_tailRemaining_($this_1, new Long(0, 0));
        $this_0 = $this_1;
        current_0 = empty_1;
        empty_0 = empty_1;
        continue;
      } else {
        if (next._get_writePosition__1() > next._get_readPosition__1()) {
          _set__head_($this_1, next);
          var tmp0_this = $this_1;
          var tmp0_minus_0 = _get_tailRemaining_(tmp0_this);
          var tmp1_minus_0 = next._get_writePosition__1() - next._get_readPosition__1() | 0;
          _set_tailRemaining_(tmp0_this, tmp0_minus_0.minus_30(toLong_0(tmp1_minus_0)));
          tmp = next;
        } else {
          {
            $this_0 = $this_1;
            current_0 = next;
            empty_0 = empty_1;
            continue;
          }
        }
      }
      return tmp;
    }
  }
  function doFill($this) {
    if ($this._noMoreChunksAvailable)
      return null;
    var chunk = $this.fill_7();
    if (chunk == null) {
      $this._noMoreChunksAvailable = true;
      return null;
    }appendView($this, chunk);
    return chunk;
  }
  function appendView($this, chunk) {
    var tail = findTail(_get__head_($this));
    if (tail === Companion_getInstance_20()._get_Empty__1()) {
      _set__head_($this, chunk);
      var tmp0_require_0 = _get_tailRemaining_($this).equals(new Long(0, 0));
      if (!tmp0_require_0) {
        var m_2 = new _no_name_provided__3_4();
        m_2.doFail_4_14();
      }var tmp0_safe_receiver = chunk._get_next__1();
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : remainingAll(tmp0_safe_receiver);
      _set_tailRemaining_($this, tmp1_elvis_lhs == null ? new Long(0, 0) : tmp1_elvis_lhs);
    } else {
      tail._set_next__0(chunk);
      var tmp2_this = $this;
      _set_tailRemaining_(tmp2_this, _get_tailRemaining_(tmp2_this).plus_59(remainingAll(chunk)));
    }
  }
  function prepareReadLoop($this, minSize, head) {
    var $this_0 = $this;
    var minSize_0 = minSize;
    var head_0 = head;
    while (true) {
      var $this_1 = $this_0;
      var minSize_1 = minSize_0;
      var head_1 = head_0;
      var headSize = $this_1._get_headEndExclusive__2() - $this_1._get_headPosition__2() | 0;
      if (headSize >= minSize_1)
        return head_1;
      var tmp0_elvis_lhs = head_1._get_next__1();
      var tmp1_elvis_lhs = tmp0_elvis_lhs == null ? doFill($this_1) : tmp0_elvis_lhs;
      var tmp;
      if (tmp1_elvis_lhs == null) {
        return null;
      } else {
        tmp = tmp1_elvis_lhs;
      }
      var next = tmp;
      if (headSize === 0) {
        if (!(head_1 === Companion_getInstance_20()._get_Empty__1())) {
          $this_1.releaseHead_2(head_1);
          Unit_getInstance();
        }$this_0 = $this_1;
        minSize_0 = minSize_1;
        head_0 = next;
        continue;
      } else {
        var desiredExtraBytes = minSize_1 - headSize | 0;
        var copied = writeBufferAppend(head_1, next, desiredExtraBytes);
        $this_1._set_headEndExclusive__2(head_1._get_writePosition__1());
        var tmp2_this = $this_1;
        var tmp0_minus_0 = _get_tailRemaining_(tmp2_this);
        _set_tailRemaining_(tmp2_this, tmp0_minus_0.minus_30(toLong_0(copied)));
        if (!(next._get_writePosition__1() > next._get_readPosition__1())) {
          head_1._set_next__0(null);
          head_1._set_next__0(next.cleanNext_0());
          next.release_8($this_1._pool);
        } else {
          {
            next.reserveStartGap_1(copied);
          }
        }
      }
      if ((head_1._get_writePosition__1() - head_1._get_readPosition__1() | 0) >= minSize_1)
        return head_1;
      else {
      }
      Companion_getInstance_17();
      if (minSize_1 > 8) {
        minSizeIsTooBig($this_1, minSize_1);
      } else {
      }
      $this_0 = $this_1;
      minSize_0 = minSize_1;
      head_0 = head_1;
      continue;
    }
  }
  function minSizeIsTooBig($this, minSize) {
    Companion_getInstance_17();
    throw IllegalStateException_init_$Create$('' + 'minSize of ' + minSize + ' is too big (should be less than ' + 8 + ')');
  }
  function afterRead($this, head) {
    if ((head._get_writePosition__1() - head._get_readPosition__1() | 0) === 0) {
      $this.releaseHead_2(head);
      Unit_getInstance();
    } else {
    }
  }
  function Companion_17() {
    Companion_instance_16 = this;
  }
  Companion_17.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_16;
  function Companion_getInstance_16() {
    if (Companion_instance_16 == null)
      new Companion_17();
    return Companion_instance_16;
  }
  function _no_name_provided__3_2($newValue) {
    this._$newValue = $newValue;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_2.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "tailRemaining shouldn't be negative: " + this._$newValue);
  };
  _no_name_provided__3_2.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_3($n) {
    this._$n = $n;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_3.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + 'Negative discard is not allowed: ' + this._$n);
  };
  _no_name_provided__3_3.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_4() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_4.prototype.doFail_4_14 = function () {
    throw IllegalStateException_init_$Create$('It should be no tail remaining bytes if current tail is EmptyBuffer');
  };
  _no_name_provided__3_4.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function AbstractInput(head, remaining, pool) {
    Companion_getInstance_16();
    this._pool = pool;
    this._state_4 = new AbstractInputSharedState(head, remaining);
    this._noMoreChunksAvailable = false;
  }
  AbstractInput.prototype._get_pool__2 = function () {
    return this._pool;
  };
  AbstractInput.prototype._get_head__9 = function () {
    var tmp0_also_0 = _get__head_(this);
    tmp0_also_0.discardUntilIndex_1(this._get_headPosition__2());
    return tmp0_also_0;
  };
  AbstractInput.prototype._get_headMemory__2 = function () {
    return this._state_4._headMemory;
  };
  AbstractInput.prototype._set_headPosition__2 = function (value) {
    this._state_4._headPosition = value;
  };
  AbstractInput.prototype._get_headPosition__2 = function () {
    return this._state_4._headPosition;
  };
  AbstractInput.prototype._set_headEndExclusive__2 = function (value) {
    this._state_4._headEndExclusive = value;
  };
  AbstractInput.prototype._get_headEndExclusive__2 = function () {
    return this._state_4._headEndExclusive;
  };
  AbstractInput.prototype.prefetch_2 = function (min) {
    if (min.compareTo_59(new Long(0, 0)) <= 0)
      return true;
    var headRemaining = this._get_headEndExclusive__2() - this._get_headPosition__2() | 0;
    if (toLong_0(headRemaining).compareTo_59(min) >= 0 ? true : numberToLong(headRemaining).plus_59(_get_tailRemaining_(this)).compareTo_59(min) >= 0)
      return true;
    return doPrefetch(this, min);
  };
  AbstractInput.prototype.peekTo_4 = function (destination, destinationOffset, offset, min, max) {
    this.prefetch_2(min.plus_59(offset));
    Unit_getInstance();
    var current = this._get_head__9();
    var copied = new Long(0, 0);
    var skip = offset;
    var writePosition = destinationOffset;
    var tmp0_minOf_0 = toLong_0(destination._view.byteLength).minus_30(destinationOffset);
    var maxCopySize = max.compareTo_59(tmp0_minOf_0) <= 0 ? max : tmp0_minOf_0;
    $l$break: while (copied.compareTo_59(min) < 0 ? copied.compareTo_59(maxCopySize) < 0 : false) {
      var tmp1__get_readRemaining__0 = current;
      var chunkSize = tmp1__get_readRemaining__0._get_writePosition__1() - tmp1__get_readRemaining__0._get_readPosition__1() | 0;
      if (toLong_0(chunkSize).compareTo_59(skip) > 0) {
        var tmp2_minOf_0 = numberToLong(chunkSize).minus_30(skip);
        var tmp3_minOf_0 = maxCopySize.minus_30(copied);
        var size_0 = tmp2_minOf_0.compareTo_59(tmp3_minOf_0) <= 0 ? tmp2_minOf_0 : tmp3_minOf_0;
        current._get_memory__1().copyTo_0(destination, numberToLong(current._get_readPosition__1()).plus_59(skip), size_0, writePosition);
        skip = new Long(0, 0);
        copied = copied.plus_59(size_0);
        writePosition = writePosition.plus_59(size_0);
      } else {
        var tmp4_minus_0 = skip;
        skip = tmp4_minus_0.minus_30(toLong_0(chunkSize));
      }
      var tmp0_elvis_lhs = current._get_next__1();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        break $l$break;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      current = tmp;
    }
    return copied;
  };
  AbstractInput.prototype._get_remaining__2 = function () {
    return toLong_0(this._get_headEndExclusive__2() - this._get_headPosition__2() | 0).plus_59(_get_tailRemaining_(this));
  };
  AbstractInput.prototype.canRead_0 = function () {
    return !(this._get_headPosition__2() === this._get_headEndExclusive__2()) ? true : !_get_tailRemaining_(this).equals(new Long(0, 0));
  };
  AbstractInput.prototype._get_endOfInput__4 = function () {
    var tmp;
    var tmp_0;
    if ((this._get_headEndExclusive__2() - this._get_headPosition__2() | 0) === 0) {
      tmp_0 = _get_tailRemaining_(this).equals(new Long(0, 0));
    } else {
      {
        tmp_0 = false;
      }
    }
    if (tmp_0) {
      tmp = this._noMoreChunksAvailable ? true : doFill(this) == null;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  AbstractInput.prototype.release_10 = function () {
    var head = this._get_head__9();
    var empty = Companion_getInstance_20()._get_Empty__1();
    if (!(head === empty)) {
      _set__head_(this, empty);
      _set_tailRemaining_(this, new Long(0, 0));
      releaseAll(head, this._pool);
    }};
  AbstractInput.prototype.close_40 = function () {
    this.release_10();
    if (!this._noMoreChunksAvailable) {
      this._noMoreChunksAvailable = true;
    }this.closeSource_2();
  };
  AbstractInput.prototype.stealAll_4 = function () {
    var head = this._get_head__9();
    var empty = Companion_getInstance_20()._get_Empty__1();
    if (head === empty)
      return null;
    _set__head_(this, empty);
    _set_tailRemaining_(this, new Long(0, 0));
    return head;
  };
  AbstractInput.prototype.steal_0 = function () {
    var head = this._get_head__9();
    var next = head._get_next__1();
    var empty = Companion_getInstance_20()._get_Empty__1();
    if (head === empty)
      return null;
    if (next == null) {
      _set__head_(this, empty);
      _set_tailRemaining_(this, new Long(0, 0));
    } else {
      _set__head_(this, next);
      var tmp0_this = this;
      var tmp0_minus_0 = _get_tailRemaining_(tmp0_this);
      var tmp1_minus_0 = next._get_writePosition__1() - next._get_readPosition__1() | 0;
      _set_tailRemaining_(tmp0_this, tmp0_minus_0.minus_30(toLong_0(tmp1_minus_0)));
    }
    head._set_next__0(null);
    return head;
  };
  AbstractInput.prototype.append_20 = function (chain) {
    if (chain === Companion_getInstance_20()._get_Empty__1())
      return Unit_getInstance();
    var size_0 = remainingAll(chain);
    if (_get__head_(this) === Companion_getInstance_20()._get_Empty__1()) {
      _set__head_(this, chain);
      var tmp0_minus_0 = this._get_headEndExclusive__2() - this._get_headPosition__2() | 0;
      _set_tailRemaining_(this, size_0.minus_30(toLong_0(tmp0_minus_0)));
    } else {
      findTail(_get__head_(this))._set_next__0(chain);
      var tmp0_this = this;
      _set_tailRemaining_(tmp0_this, _get_tailRemaining_(tmp0_this).plus_59(size_0));
    }
  };
  AbstractInput.prototype.tryWriteAppend_0 = function (chain) {
    var tail = findTail(this._get_head__9());
    var size_0 = chain._get_writePosition__1() - chain._get_readPosition__1() | 0;
    var tmp;
    if (size_0 === 0) {
      tmp = true;
    } else {
      tmp = (tail._get_limit__1() - tail._get_writePosition__1() | 0) < size_0;
    }
    if (tmp)
      return false;
    else {
    }
    writeBufferAppend(tail, chain, size_0);
    Unit_getInstance();
    if (this._get_head__9() === tail) {
      this._set_headEndExclusive__2(tail._get_writePosition__1());
    } else {
      var tmp0_this = this;
      var tmp0_plus_0 = _get_tailRemaining_(tmp0_this);
      _set_tailRemaining_(tmp0_this, tmp0_plus_0.plus_59(toLong_0(size_0)));
    }
    return true;
  };
  AbstractInput.prototype.discard_7 = function (n) {
    var tmp0_require_0 = n >= 0;
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_3(n);
      m_2.doFail_4_14();
    }return discardAsMuchAsPossible_0(this, n, 0);
  };
  AbstractInput.prototype.discardExact_5 = function (n) {
    if (!(this.discard_7(n) === n))
      throw new EOFException('' + 'Unable to discard ' + n + ' bytes due to end of packet');
  };
  AbstractInput.prototype.discard_12 = function (n) {
    if (n.compareTo_59(new Long(0, 0)) <= 0)
      return new Long(0, 0);
    return discardAsMuchAsPossible(this, n, new Long(0, 0));
  };
  AbstractInput.prototype.readText_3 = function (min, max) {
    if (min === 0 ? max === 0 ? true : this._get_endOfInput__4() : false)
      return '';
    var remaining = this._get_remaining__2();
    if (remaining.compareTo_59(new Long(0, 0)) > 0 ? toLong_0(max).compareTo_59(remaining) >= 0 : false) {
      var tmp = remaining.toInt_5();
      return readTextExactBytes$default(this, tmp, null, 2, null);
    }var tmp0_buildString_0 = coerceAtMost(coerceAtLeast(min, 16), max);
    var tmp0_apply_0_1 = StringBuilder_init_$Create$(tmp0_buildString_0);
    readASCII(this, tmp0_apply_0_1, min, max);
    Unit_getInstance();
    return tmp0_apply_0_1.toString();
  };
  AbstractInput.prototype.readText$default_2 = function (min, max, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      min = 0;
    if (!(($mask0 & 2) === 0))
      max = IntCompanionObject_getInstance()._MAX_VALUE_5;
    return this.readText_3(min, max);
  };
  AbstractInput.prototype.prepareReadHead_2 = function (minSize) {
    return prepareReadLoop(this, minSize, this._get_head__9());
  };
  AbstractInput.prototype.ensureNextHead_2 = function (current) {
    return this.ensureNext_2(current);
  };
  AbstractInput.prototype.ensureNext_2 = function (current) {
    return ensureNext(this, current, Companion_getInstance_20()._get_Empty__1());
  };
  AbstractInput.prototype.fixGapAfterRead_2 = function (current) {
    var tmp0_elvis_lhs = current._get_next__1();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return fixGapAfterReadFallback(this, current);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var next = tmp;
    var remaining = current._get_writePosition__1() - current._get_readPosition__1() | 0;
    Companion_getInstance_17();
    var tmp0_minOf_0 = 8 - (current._capacity_0 - current._get_limit__1() | 0) | 0;
    var overrunSize = function () {
      var $externalVarargReceiverTmp = Math;
      return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([remaining, tmp0_minOf_0]))));
    }.call(this);
    if (next._get_startGap__1() < overrunSize) {
      return fixGapAfterReadFallback(this, current);
    }restoreStartGap(next, overrunSize);
    if (remaining > overrunSize) {
      current.releaseEndGap_1();
      this._set_headEndExclusive__2(current._get_writePosition__1());
      var tmp1_this = this;
      var tmp1_plus_0 = _get_tailRemaining_(tmp1_this);
      _set_tailRemaining_(tmp1_this, tmp1_plus_0.plus_59(toLong_0(overrunSize)));
    } else {
      _set__head_(this, next);
      var tmp2_this = this;
      var tmp2_minus_0 = _get_tailRemaining_(tmp2_this);
      var tmp3_minus_0 = (next._get_writePosition__1() - next._get_readPosition__1() | 0) - overrunSize | 0;
      _set_tailRemaining_(tmp2_this, tmp2_minus_0.minus_30(toLong_0(tmp3_minus_0)));
      current.cleanNext_0();
      Unit_getInstance();
      current.release_8(this._pool);
    }
  };
  AbstractInput.prototype.fill_7 = function () {
    var buffer = this._pool.borrow_12();
    try {
      Companion_getInstance_17();
      buffer.reserveEndGap_1(8);
      var tmp = buffer._get_memory__1();
      var tmp_0 = buffer._get_writePosition__1();
      var copied = this.fill_6(tmp, tmp_0, buffer._get_limit__1() - buffer._get_writePosition__1() | 0);
      if (copied === 0) {
        this._noMoreChunksAvailable = true;
        if (!(buffer._get_writePosition__1() > buffer._get_readPosition__1())) {
          buffer.release_8(this._pool);
          return null;
        } else {
        }
      }buffer.commitWritten_1(copied);
      return buffer;
    } catch ($p) {
      if ($p instanceof Error) {
        buffer.release_8(this._pool);
        throw $p;
      } else {
        {
          throw $p;
        }
      }
    }
  };
  AbstractInput.prototype.markNoMoreChunksAvailable_0 = function () {
    if (!this._noMoreChunksAvailable) {
      this._noMoreChunksAvailable = true;
    }};
  AbstractInput.prototype.prepareRead_2 = function (minSize) {
    var head = this._get_head__9();
    if ((this._get_headEndExclusive__2() - this._get_headPosition__2() | 0) >= minSize)
      return head;
    return prepareReadLoop(this, minSize, head);
  };
  AbstractInput.prototype.releaseHead_2 = function (head) {
    var tmp0_elvis_lhs = head.cleanNext_0();
    var next = tmp0_elvis_lhs == null ? Companion_getInstance_20()._get_Empty__1() : tmp0_elvis_lhs;
    _set__head_(this, next);
    var tmp1_this = this;
    var tmp0_minus_0 = _get_tailRemaining_(tmp1_this);
    var tmp1_minus_0 = next._get_writePosition__1() - next._get_readPosition__1() | 0;
    _set_tailRemaining_(tmp1_this, tmp0_minus_0.minus_30(toLong_0(tmp1_minus_0)));
    head.release_8(this._pool);
    return next;
  };
  AbstractInput.$metadata$ = {
    simpleName: 'AbstractInput',
    kind: 'class',
    interfaces: [Input]
  };
  function AbstractOutput_init_$Init$(pool, $this) {
    AbstractOutput.call($this, 0, pool);
    return $this;
  }
  function _set__head__0($this, value) {
    $this._state_5._head_3 = value;
  }
  function _get__head__0($this) {
    return $this._state_5._head_3;
  }
  function _set__tail_($this, value) {
    $this._state_5._tail_0 = value;
  }
  function _get__tail_($this) {
    return $this._state_5._tail_0;
  }
  function _set_tailEndExclusive_($this, value) {
    $this._state_5._tailEndExclusive = value;
  }
  function _set_tailInitialPosition_($this, value) {
    $this._state_5._tailInitialPosition = value;
  }
  function _get_tailInitialPosition_($this) {
    return $this._state_5._tailInitialPosition;
  }
  function _set_chainedSize_($this, value) {
    $this._state_5._chainedSize = value;
  }
  function _get_chainedSize_($this) {
    return $this._state_5._chainedSize;
  }
  function flushChain($this) {
    var tmp0_elvis_lhs = $this.stealAll_4();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var oldTail = tmp;
    try {
      var current_2 = oldTail;
      $l$break: do {
        var tmp0__anonymous__4 = current_2;
        var tmp_0 = tmp0__anonymous__4._get_memory__1();
        var tmp_1 = tmp0__anonymous__4._get_readPosition__1();
        $this.flush_8(tmp_0, tmp_1, tmp0__anonymous__4._get_writePosition__1() - tmp0__anonymous__4._get_readPosition__1() | 0);
        var tmp0_elvis_lhs_3 = current_2._get_next__1();
        var tmp_2;
        if (tmp0_elvis_lhs_3 == null) {
          break $l$break;
        } else {
          tmp_2 = tmp0_elvis_lhs_3;
        }
        current_2 = tmp_2;
      }
       while (true);
    }finally {
      releaseAll(oldTail, $this._pool_0);
    }
  }
  function appendNewChunk($this) {
    var new_0 = $this._pool_0.borrow_12();
    Companion_getInstance_17();
    new_0.reserveEndGap_1(8);
    $this.appendSingleChunk_2(new_0);
    return new_0;
  }
  function appendChainImpl($this, head, newTail, chainedSizeDelta) {
    var _tail = _get__tail_($this);
    if (_tail == null) {
      _set__head__0($this, head);
      _set_chainedSize_($this, 0);
    } else {
      _tail._set_next__0(head);
      var tailPosition = $this._get_tailPosition__2();
      _tail.commitWrittenUntilIndex_1(tailPosition);
      Unit_getInstance();
      var tmp0_this = $this;
      _set_chainedSize_(tmp0_this, _get_chainedSize_(tmp0_this) + (tailPosition - _get_tailInitialPosition_($this) | 0) | 0);
    }
    _set__tail_($this, newTail);
    var tmp1_this = $this;
    _set_chainedSize_(tmp1_this, _get_chainedSize_(tmp1_this) + chainedSizeDelta | 0);
    $this._set_tailMemory__2(newTail._get_memory__1());
    $this._set_tailPosition__2(newTail._get_writePosition__1());
    _set_tailInitialPosition_($this, newTail._get_readPosition__1());
    _set_tailEndExclusive_($this, newTail._get_limit__1());
  }
  function writeByteFallback($this, v) {
    appendNewChunk($this).writeByte_6(v);
    var tmp0_this = $this;
    var tmp1 = tmp0_this._get_tailPosition__2();
    tmp0_this._set_tailPosition__2(tmp1 + 1 | 0);
    Unit_getInstance();
  }
  function appendCharFallback($this, c) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp1_write_0 = 3;
      var buffer_1 = $this.prepareWriteHead_2(tmp1_write_0);
      try {
        var tmp16_putUtf8Char_0_6 = buffer_1._memory;
        var tmp17_putUtf8Char_0_7 = buffer_1._get_writePosition__1();
        var tmp18_putUtf8Char_0_8 = c.toInt_5();
        var tmp;
        if (0 <= tmp18_putUtf8Char_0_8 ? tmp18_putUtf8Char_0_8 <= 127 : false) {
          var tmp0_storeAt_0_9 = toByte(tmp18_putUtf8Char_0_8);
          tmp16_putUtf8Char_0_6._view.setInt8(tmp17_putUtf8Char_0_7, tmp0_storeAt_0_9);
          tmp = 1;
        } else if (128 <= tmp18_putUtf8Char_0_8 ? tmp18_putUtf8Char_0_8 <= 2047 : false) {
          var tmp1_set_0_10 = toByte(192 | tmp18_putUtf8Char_0_8 >> 6 & 31);
          tmp16_putUtf8Char_0_6._view.setInt8(tmp17_putUtf8Char_0_7, tmp1_set_0_10);
          var tmp2_set_0_11 = tmp17_putUtf8Char_0_7 + 1 | 0;
          var tmp3_set_0_12 = toByte(128 | tmp18_putUtf8Char_0_8 & 63);
          tmp16_putUtf8Char_0_6._view.setInt8(tmp2_set_0_11, tmp3_set_0_12);
          tmp = 2;
        } else if (2048 <= tmp18_putUtf8Char_0_8 ? tmp18_putUtf8Char_0_8 <= 65535 : false) {
          var tmp4_set_0_13 = toByte(224 | tmp18_putUtf8Char_0_8 >> 12 & 15);
          tmp16_putUtf8Char_0_6._view.setInt8(tmp17_putUtf8Char_0_7, tmp4_set_0_13);
          var tmp5_set_0_14 = tmp17_putUtf8Char_0_7 + 1 | 0;
          var tmp6_set_0_15 = toByte(128 | tmp18_putUtf8Char_0_8 >> 6 & 63);
          tmp16_putUtf8Char_0_6._view.setInt8(tmp5_set_0_14, tmp6_set_0_15);
          var tmp7_set_0_16 = tmp17_putUtf8Char_0_7 + 2 | 0;
          var tmp8_set_0_17 = toByte(128 | tmp18_putUtf8Char_0_8 & 63);
          tmp16_putUtf8Char_0_6._view.setInt8(tmp7_set_0_16, tmp8_set_0_17);
          tmp = 3;
        } else if (65536 <= tmp18_putUtf8Char_0_8 ? tmp18_putUtf8Char_0_8 <= 1114111 : false) {
          var tmp9_set_0_18 = toByte(240 | tmp18_putUtf8Char_0_8 >> 18 & 7);
          tmp16_putUtf8Char_0_6._view.setInt8(tmp17_putUtf8Char_0_7, tmp9_set_0_18);
          var tmp10_set_0_19 = tmp17_putUtf8Char_0_7 + 1 | 0;
          var tmp11_set_0_20 = toByte(128 | tmp18_putUtf8Char_0_8 >> 12 & 63);
          tmp16_putUtf8Char_0_6._view.setInt8(tmp10_set_0_19, tmp11_set_0_20);
          var tmp12_set_0_21 = tmp17_putUtf8Char_0_7 + 2 | 0;
          var tmp13_set_0_22 = toByte(128 | tmp18_putUtf8Char_0_8 >> 6 & 63);
          tmp16_putUtf8Char_0_6._view.setInt8(tmp12_set_0_21, tmp13_set_0_22);
          var tmp14_set_0_23 = tmp17_putUtf8Char_0_7 + 3 | 0;
          var tmp15_set_0_24 = toByte(128 | tmp18_putUtf8Char_0_8 & 63);
          tmp16_putUtf8Char_0_6._view.setInt8(tmp14_set_0_23, tmp15_set_0_24);
          tmp = 4;
        } else {
          malformedCodePoint(tmp18_putUtf8Char_0_8);
        }
        var size_5 = tmp;
        buffer_1.commitWritten_1(size_5);
        var result_2 = size_5;
        var tmp0_check_0 = result_2 >= 0;
        if (!tmp0_check_0) {
          var message_1 = "The returned value shouldn't be negative";
          throw IllegalStateException_init_$Create$(toString_1(message_1));
        }tmp$ret$0 = result_2;
        break l$ret$1;
      }finally {
        $this.afterHeadWrite_2();
      }
    }
     while (false);
    Unit_getInstance();
  }
  function writePacketMerging($this, tail, foreignStolen, pool) {
    tail.commitWrittenUntilIndex_1($this._get_tailPosition__2());
    Unit_getInstance();
    var lastSize = tail._get_writePosition__1() - tail._get_readPosition__1() | 0;
    var nextSize = foreignStolen._get_writePosition__1() - foreignStolen._get_readPosition__1() | 0;
    var maxCopySize = PACKET_MAX_COPY_SIZE;
    var tmp;
    var tmp_0;
    if (nextSize < maxCopySize) {
      var tmp_1 = tail._capacity_0 - tail._get_limit__1() | 0;
      tmp_0 = nextSize <= (tmp_1 + (tail._get_limit__1() - tail._get_writePosition__1() | 0) | 0);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = nextSize;
    } else {
      {
        tmp = -1;
      }
    }
    var appendSize = tmp;
    var tmp_2;
    if ((lastSize < maxCopySize ? lastSize <= foreignStolen._get_startGap__1() : false) ? isExclusivelyOwned(foreignStolen) : false) {
      tmp_2 = lastSize;
    } else {
      tmp_2 = -1;
    }
    var prependSize = tmp_2;
    if (appendSize === -1 ? prependSize === -1 : false) {
      $this.appendChain_2(foreignStolen);
    } else if (prependSize === -1 ? true : appendSize <= prependSize) {
      var tmp_3 = tail._get_limit__1() - tail._get_writePosition__1() | 0;
      writeBufferAppend(tail, foreignStolen, tmp_3 + (tail._capacity_0 - tail._get_limit__1() | 0) | 0);
      Unit_getInstance();
      $this.afterHeadWrite_2();
      var tmp0_safe_receiver = foreignStolen.cleanNext_0();
      if (tmp0_safe_receiver == null)
        null;
      else {
        $this.appendChain_2(tmp0_safe_receiver);
        Unit_getInstance();
      }
      Unit_getInstance();
      foreignStolen.release_8(pool);
    } else if (appendSize === -1 ? true : prependSize < appendSize) {
      writePacketSlowPrepend($this, foreignStolen, tail);
    } else {
      throw IllegalStateException_init_$Create$('' + 'prep = ' + prependSize + ', app = ' + appendSize);
    }
  }
  function writePacketSlowPrepend($this, foreignStolen, tail) {
    writeBufferPrepend(foreignStolen, tail);
    Unit_getInstance();
    var tmp0_elvis_lhs = _get__head__0($this);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_error_0 = "head should't be null since it is already handled in the fast-path";
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var _head = tmp;
    if (_head === tail) {
      _set__head__0($this, foreignStolen);
    } else {
      var pre = _head;
      $l$break: while (true) {
        var next = ensureNotNull(pre._get_next__1());
        if (next === tail)
          break $l$break;
        pre = next;
      }
      pre._set_next__0(foreignStolen);
    }
    tail.release_8($this._pool_0);
    _set__tail_($this, findTail(foreignStolen));
  }
  function AbstractOutput(headerSizeHint, pool) {
    this._headerSizeHint_0 = headerSizeHint;
    this._pool_0 = pool;
    this._state_5 = new AbstractOutputSharedState();
    this._byteOrder = ByteOrder_BIG_ENDIAN_getInstance();
  }
  AbstractOutput.prototype._get_pool__2 = function () {
    return this._pool_0;
  };
  AbstractOutput.prototype._get_head__9 = function () {
    var tmp0_elvis_lhs = _get__head__0(this);
    return tmp0_elvis_lhs == null ? Companion_getInstance_20()._get_Empty__1() : tmp0_elvis_lhs;
  };
  AbstractOutput.prototype._set_tailMemory__2 = function (value) {
    this._state_5._tailMemory = value;
  };
  AbstractOutput.prototype._get_tailMemory__2 = function () {
    return this._state_5._tailMemory;
  };
  AbstractOutput.prototype._set_tailPosition__2 = function (value) {
    this._state_5._tailPosition = value;
  };
  AbstractOutput.prototype._get_tailPosition__2 = function () {
    return this._state_5._tailPosition;
  };
  AbstractOutput.prototype._get_tailEndExclusive__2 = function () {
    return this._state_5._tailEndExclusive;
  };
  AbstractOutput.prototype._get__size__0 = function () {
    return _get_chainedSize_(this) + (this._get_tailPosition__2() - _get_tailInitialPosition_(this) | 0) | 0;
  };
  AbstractOutput.prototype.flush_10 = function () {
    flushChain(this);
  };
  AbstractOutput.prototype.stealAll_4 = function () {
    var tmp0_elvis_lhs = _get__head__0(this);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var head = tmp;
    var tmp1_safe_receiver = _get__tail_(this);
    if (tmp1_safe_receiver == null)
      null;
    else
      tmp1_safe_receiver.commitWrittenUntilIndex_1(this._get_tailPosition__2());
    Unit_getInstance();
    _set__head__0(this, null);
    _set__tail_(this, null);
    this._set_tailPosition__2(0);
    _set_tailEndExclusive_(this, 0);
    _set_tailInitialPosition_(this, 0);
    _set_chainedSize_(this, 0);
    this._set_tailMemory__2(Companion_getInstance_22()._Empty_0);
    return head;
  };
  AbstractOutput.prototype.afterBytesStolen_0 = function () {
    var head = this._get_head__9();
    if (!(head === Companion_getInstance_20()._get_Empty__1())) {
      var tmp0_check_0 = head._get_next__1() == null;
      if (!tmp0_check_0) {
        var message_2_1 = 'Check failed.';
        throw IllegalStateException_init_$Create$(toString_1(message_2_1));
      }head.resetForWrite_3();
      head.reserveStartGap_1(this._headerSizeHint_0);
      Companion_getInstance_17();
      head.reserveEndGap_1(8);
      this._set_tailPosition__2(head._get_writePosition__1());
      _set_tailInitialPosition_(this, this._get_tailPosition__2());
      _set_tailEndExclusive_(this, head._get_limit__1());
    }};
  AbstractOutput.prototype.appendSingleChunk_2 = function (buffer) {
    var tmp0_check_0 = buffer._get_next__1() == null;
    if (!tmp0_check_0) {
      var message_1 = 'It should be a single buffer chunk.';
      throw IllegalStateException_init_$Create$(toString_1(message_1));
    }appendChainImpl(this, buffer, buffer, 0);
  };
  AbstractOutput.prototype.appendChain_2 = function (head) {
    var tail = findTail(head);
    var tmp0_minus_0 = remainingAll(head);
    var tmp1_minus_0 = tail._get_writePosition__1() - tail._get_readPosition__1() | 0;
    var tmp2_toIntOrFail_0 = tmp0_minus_0.minus_30(toLong_0(tmp1_minus_0));
    var tmp3_toIntOrFail_0 = 'total size increase';
    if (tmp2_toIntOrFail_0.compareTo_59(toLong_0(IntCompanionObject_getInstance()._MAX_VALUE_5)) >= 0) {
      failLongToIntConversion(tmp2_toIntOrFail_0, tmp3_toIntOrFail_0);
    }var chainedSizeDelta = tmp2_toIntOrFail_0.toInt_5();
    appendChainImpl(this, head, tail, chainedSizeDelta);
  };
  AbstractOutput.prototype.writeByte_6 = function (v) {
    var index = this._get_tailPosition__2();
    if (index < this._get_tailEndExclusive__2()) {
      this._set_tailPosition__2(index + 1 | 0);
      var tmp0_set_0 = this._get_tailMemory__2();
      tmp0_set_0._view.setInt8(index, v);
      return Unit_getInstance();
    }return writeByteFallback(this, v);
  };
  AbstractOutput.prototype.close_40 = function () {
    try {
      this.flush_10();
    }finally {
      this.closeDestination_2();
    }
  };
  AbstractOutput.prototype.append_23 = function (c) {
    var tailPosition = this._get_tailPosition__2();
    if ((this._get_tailEndExclusive__2() - tailPosition | 0) >= 3) {
      var tmp16_putUtf8Char_0 = this._get_tailMemory__2();
      var tmp17_putUtf8Char_0 = c.toInt_5();
      var tmp;
      if (0 <= tmp17_putUtf8Char_0 ? tmp17_putUtf8Char_0 <= 127 : false) {
        var tmp0_storeAt_0 = toByte(tmp17_putUtf8Char_0);
        tmp16_putUtf8Char_0._view.setInt8(tailPosition, tmp0_storeAt_0);
        tmp = 1;
      } else if (128 <= tmp17_putUtf8Char_0 ? tmp17_putUtf8Char_0 <= 2047 : false) {
        var tmp1_set_0 = toByte(192 | tmp17_putUtf8Char_0 >> 6 & 31);
        tmp16_putUtf8Char_0._view.setInt8(tailPosition, tmp1_set_0);
        var tmp2_set_0 = tailPosition + 1 | 0;
        var tmp3_set_0 = toByte(128 | tmp17_putUtf8Char_0 & 63);
        tmp16_putUtf8Char_0._view.setInt8(tmp2_set_0, tmp3_set_0);
        tmp = 2;
      } else if (2048 <= tmp17_putUtf8Char_0 ? tmp17_putUtf8Char_0 <= 65535 : false) {
        var tmp4_set_0 = toByte(224 | tmp17_putUtf8Char_0 >> 12 & 15);
        tmp16_putUtf8Char_0._view.setInt8(tailPosition, tmp4_set_0);
        var tmp5_set_0 = tailPosition + 1 | 0;
        var tmp6_set_0 = toByte(128 | tmp17_putUtf8Char_0 >> 6 & 63);
        tmp16_putUtf8Char_0._view.setInt8(tmp5_set_0, tmp6_set_0);
        var tmp7_set_0 = tailPosition + 2 | 0;
        var tmp8_set_0 = toByte(128 | tmp17_putUtf8Char_0 & 63);
        tmp16_putUtf8Char_0._view.setInt8(tmp7_set_0, tmp8_set_0);
        tmp = 3;
      } else if (65536 <= tmp17_putUtf8Char_0 ? tmp17_putUtf8Char_0 <= 1114111 : false) {
        var tmp9_set_0 = toByte(240 | tmp17_putUtf8Char_0 >> 18 & 7);
        tmp16_putUtf8Char_0._view.setInt8(tailPosition, tmp9_set_0);
        var tmp10_set_0 = tailPosition + 1 | 0;
        var tmp11_set_0 = toByte(128 | tmp17_putUtf8Char_0 >> 12 & 63);
        tmp16_putUtf8Char_0._view.setInt8(tmp10_set_0, tmp11_set_0);
        var tmp12_set_0 = tailPosition + 2 | 0;
        var tmp13_set_0 = toByte(128 | tmp17_putUtf8Char_0 >> 6 & 63);
        tmp16_putUtf8Char_0._view.setInt8(tmp12_set_0, tmp13_set_0);
        var tmp14_set_0 = tailPosition + 3 | 0;
        var tmp15_set_0 = toByte(128 | tmp17_putUtf8Char_0 & 63);
        tmp16_putUtf8Char_0._view.setInt8(tmp14_set_0, tmp15_set_0);
        tmp = 4;
      } else {
        malformedCodePoint(tmp17_putUtf8Char_0);
      }
      var size_0 = tmp;
      this._set_tailPosition__2(tailPosition + size_0 | 0);
      return this;
    }appendCharFallback(this, c);
    return this;
  };
  AbstractOutput.prototype.append_22 = function (csq) {
    if (csq == null) {
      this.append_21('null', 0, 4);
      Unit_getInstance();
    } else {
      this.append_21(csq, 0, charSequenceLength(csq));
      Unit_getInstance();
    }
    return this;
  };
  AbstractOutput.prototype.append_21 = function (csq, start, end) {
    if (csq == null) {
      return this.append_21('null', start, end);
    }writeText(this, csq, start, end, Charsets_getInstance()._UTF_8);
    return this;
  };
  AbstractOutput.prototype.writePacket_6 = function (p) {
    var foreignStolen = p.stealAll_4();
    if (foreignStolen == null) {
      p.release_10();
      return Unit_getInstance();
    }var _tail = _get__tail_(this);
    if (_tail == null) {
      this.appendChain_2(foreignStolen);
      return Unit_getInstance();
    }writePacketMerging(this, _tail, foreignStolen, p._get_pool__2());
  };
  AbstractOutput.prototype.writeChunkBuffer_0 = function (chunkBuffer) {
    var _tail = _get__tail_(this);
    if (_tail == null) {
      this.appendChain_2(chunkBuffer);
      return Unit_getInstance();
    }writePacketMerging(this, _tail, chunkBuffer, this._pool_0);
  };
  AbstractOutput.prototype.writePacket_4 = function (p, n) {
    var remaining = n;
    $l$break: while (remaining.compareTo_59(new Long(0, 0)) > 0) {
      var headRemaining = toLong_0(p._get_headEndExclusive__2() - p._get_headPosition__2() | 0);
      if (headRemaining.compareTo_59(remaining) <= 0) {
        remaining = remaining.minus_30(headRemaining);
        var tmp0_elvis_lhs = p.steal_0();
        var tmp;
        if (tmp0_elvis_lhs == null) {
          throw new EOFException('Unexpected end of packet');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        this.appendSingleChunk_2(tmp);
      } else {
        var tmp0_read_0 = 1;
        var tmp0_elvis_lhs_3 = p.prepareRead_2(tmp0_read_0);
        var tmp_0;
        if (tmp0_elvis_lhs_3 == null) {
          prematureEndOfStream(tmp0_read_0);
        } else {
          tmp_0 = tmp0_elvis_lhs_3;
        }
        var buffer_2 = tmp_0;
        var positionBefore_4 = buffer_2._get_readPosition__1();
        try {
          writeFully_3(this, buffer_2, remaining.toInt_5());
        }finally {
          var positionAfter_5 = buffer_2._get_readPosition__1();
          if (positionAfter_5 < positionBefore_4) {
            throw IllegalStateException_init_$Create$("Buffer's position shouldn't be rewinded");
          }if (positionAfter_5 === buffer_2._get_writePosition__1()) {
            p.ensureNext_2(buffer_2);
            Unit_getInstance();
          } else {
            p._set_headPosition__2(positionAfter_5);
          }
        }
        break $l$break;
      }
    }
  };
  AbstractOutput.prototype.release_10 = function () {
    this.close_40();
  };
  AbstractOutput.prototype.prepareWriteHead_2 = function (n) {
    if ((this._get_tailEndExclusive__2() - this._get_tailPosition__2() | 0) >= n) {
      var tmp0_safe_receiver = _get__tail_(this);
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.commitWrittenUntilIndex_1(this._get_tailPosition__2());
        Unit_getInstance();
        return tmp0_safe_receiver;
      }
      Unit_getInstance();
    } else {
    }
    return appendNewChunk(this);
  };
  AbstractOutput.prototype.afterHeadWrite_2 = function () {
    var tmp0_safe_receiver = _get__tail_(this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      this._set_tailPosition__2(tmp0_safe_receiver._get_writePosition__1());
      Unit_getInstance();
    }
    Unit_getInstance();
  };
  AbstractOutput.$metadata$ = {
    simpleName: 'AbstractOutput',
    kind: 'class',
    interfaces: [Appendable, Output]
  };
  function _set_readPosition_($this, value) {
    $this._bufferState._readPosition = value;
  }
  function _set_writePosition_($this, value) {
    $this._bufferState._writePosition = value;
  }
  function _set_startGap_($this, value) {
    $this._bufferState._startGap = value;
  }
  function _set_limit_($this, value) {
    $this._bufferState._limit_4 = value;
  }
  function Companion_18() {
    Companion_instance_17 = this;
    this._ReservedSize = 8;
  }
  Companion_18.prototype._get_Empty__1 = function () {
    return Companion_getInstance_25()._Empty_1;
  };
  Companion_18.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_17;
  function Companion_getInstance_17() {
    if (Companion_instance_17 == null)
      new Companion_18();
    return Companion_instance_17;
  }
  function _no_name_provided__3_5($startGap) {
    this._$startGap = $startGap;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_5.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "startGap shouldn't be negative: " + this._$startGap);
  };
  _no_name_provided__3_5.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_6($endGap) {
    this._$endGap = $endGap;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_6.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "endGap shouldn't be negative: " + this._$endGap);
  };
  _no_name_provided__3_6.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_7($newReadPosition) {
    this._$newReadPosition = $newReadPosition;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_7.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "newReadPosition shouldn't be negative: " + this._$newReadPosition);
  };
  _no_name_provided__3_7.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_8($newReadPosition, this$0) {
    this._$newReadPosition_0 = $newReadPosition;
    this._this$0_17 = this$0;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_8.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "newReadPosition shouldn't be ahead of the read position: " + this._$newReadPosition_0 + ' > ' + this._this$0_17._get_readPosition__1());
  };
  _no_name_provided__3_8.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function Buffer_0(memory) {
    Companion_getInstance_17();
    this._memory = memory;
    var tmp = this;
    var tmp0__get_size32__0 = this._memory;
    tmp._bufferState = new BufferSharedState(tmp0__get_size32__0._view.byteLength);
    var tmp_0 = this;
    var tmp0__get_size32__0_0 = this._memory;
    tmp_0._capacity_0 = tmp0__get_size32__0_0._view.byteLength;
  }
  Buffer_0.prototype._get_memory__1 = function () {
    return this._memory;
  };
  Buffer_0.prototype._get_readPosition__1 = function () {
    return this._bufferState._readPosition;
  };
  Buffer_0.prototype._get_writePosition__1 = function () {
    return this._bufferState._writePosition;
  };
  Buffer_0.prototype._get_startGap__1 = function () {
    return this._bufferState._startGap;
  };
  Buffer_0.prototype._get_limit__1 = function () {
    return this._bufferState._limit_4;
  };
  Buffer_0.prototype._get_capacity__1 = function () {
    return this._capacity_0;
  };
  Buffer_0.prototype._set_attachment__1 = function (value) {
    this._bufferState._attachment = value;
  };
  Buffer_0.prototype.discardExact_5 = function (count_0) {
    if (count_0 === 0)
      return Unit_getInstance();
    var newReadPosition = this._get_readPosition__1() + count_0 | 0;
    if (count_0 < 0 ? true : newReadPosition > this._get_writePosition__1()) {
      discardFailed(count_0, this._get_writePosition__1() - this._get_readPosition__1() | 0);
    }_set_readPosition_(this, newReadPosition);
  };
  Buffer_0.prototype.discard_12 = function (count_0) {
    var tmp0_minOf_0 = toLong_0(this._get_writePosition__1() - this._get_readPosition__1() | 0);
    var size_0 = (count_0.compareTo_59(tmp0_minOf_0) <= 0 ? count_0 : tmp0_minOf_0).toInt_5();
    this.discardExact_5(size_0);
    return toLong_0(size_0);
  };
  Buffer_0.prototype.commitWritten_1 = function (count_0) {
    var newWritePosition = this._get_writePosition__1() + count_0 | 0;
    if (count_0 < 0 ? true : newWritePosition > this._get_limit__1()) {
      commitWrittenFailed(count_0, this._get_limit__1() - this._get_writePosition__1() | 0);
    }_set_writePosition_(this, newWritePosition);
  };
  Buffer_0.prototype.commitWrittenUntilIndex_1 = function (position) {
    var limit = this._get_limit__1();
    if (position < this._get_writePosition__1()) {
      var tmp = position - this._get_writePosition__1() | 0;
      commitWrittenFailed(tmp, this._get_limit__1() - this._get_writePosition__1() | 0);
    }if (position >= limit) {
      if (position === limit) {
        _set_writePosition_(this, position);
        return false;
      }var tmp_0 = position - this._get_writePosition__1() | 0;
      commitWrittenFailed(tmp_0, this._get_limit__1() - this._get_writePosition__1() | 0);
    }_set_writePosition_(this, position);
    return true;
  };
  Buffer_0.prototype.discardUntilIndex_1 = function (position) {
    if (position < 0 ? true : position > this._get_writePosition__1()) {
      var tmp = position - this._get_readPosition__1() | 0;
      discardFailed(tmp, this._get_writePosition__1() - this._get_readPosition__1() | 0);
    }if (!(this._get_readPosition__1() === position)) {
      _set_readPosition_(this, position);
    }};
  Buffer_0.prototype.rewind_1 = function (count_0) {
    var newReadPosition = this._get_readPosition__1() - count_0 | 0;
    if (newReadPosition < this._get_startGap__1()) {
      rewindFailed(count_0, this._get_readPosition__1() - this._get_startGap__1() | 0);
    }_set_readPosition_(this, newReadPosition);
  };
  Buffer_0.prototype.reserveStartGap_1 = function (startGap) {
    var tmp0_require_0 = startGap >= 0;
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_5(startGap);
      m_2.doFail_4_14();
    }if (this._get_readPosition__1() >= startGap) {
      _set_startGap_(this, startGap);
      return Unit_getInstance();
    }if (this._get_readPosition__1() === this._get_writePosition__1()) {
      if (startGap > this._get_limit__1()) {
        startGapReservationFailedDueToLimit(this, startGap);
      }_set_writePosition_(this, startGap);
      _set_readPosition_(this, startGap);
      _set_startGap_(this, startGap);
      return Unit_getInstance();
    }startGapReservationFailed(this, startGap);
  };
  Buffer_0.prototype.reserveEndGap_1 = function (endGap) {
    var tmp0_require_0 = endGap >= 0;
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_6(endGap);
      m_2.doFail_4_14();
    }var newLimit = this._capacity_0 - endGap | 0;
    if (newLimit >= this._get_writePosition__1()) {
      _set_limit_(this, newLimit);
      return Unit_getInstance();
    }if (newLimit < 0) {
      endGapReservationFailedDueToCapacity(this, endGap);
    }if (newLimit < this._get_startGap__1()) {
      endGapReservationFailedDueToStartGap(this, endGap);
    }if (this._get_readPosition__1() === this._get_writePosition__1()) {
      _set_limit_(this, newLimit);
      _set_readPosition_(this, newLimit);
      _set_writePosition_(this, newLimit);
      return Unit_getInstance();
    }endGapReservationFailedDueToContent(this, endGap);
  };
  Buffer_0.prototype.resetForRead_0 = function () {
    _set_startGap_(this, 0);
    _set_readPosition_(this, 0);
    var capacity = this._capacity_0;
    _set_writePosition_(this, capacity);
  };
  Buffer_0.prototype.resetForWrite_3 = function () {
    this.resetForWrite_4(this._capacity_0 - this._get_startGap__1() | 0);
  };
  Buffer_0.prototype.resetForWrite_4 = function (limit) {
    var startGap = this._get_startGap__1();
    _set_readPosition_(this, startGap);
    _set_writePosition_(this, startGap);
    _set_limit_(this, limit);
  };
  Buffer_0.prototype.releaseGaps_1 = function () {
    this.releaseStartGap_1(0);
    this.releaseEndGap_1();
  };
  Buffer_0.prototype.releaseEndGap_1 = function () {
    _set_limit_(this, this._capacity_0);
  };
  Buffer_0.prototype.releaseStartGap_1 = function (newReadPosition) {
    var tmp0_require_0 = newReadPosition >= 0;
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_7(newReadPosition);
      m_2.doFail_4_14();
    }var tmp1_require_0 = newReadPosition <= this._get_readPosition__1();
    if (!tmp1_require_0) {
      var m_2_0 = new _no_name_provided__3_8(newReadPosition, this);
      m_2_0.doFail_4_14();
    }_set_readPosition_(this, newReadPosition);
    if (this._get_startGap__1() > newReadPosition) {
      _set_startGap_(this, newReadPosition);
    }};
  Buffer_0.prototype.duplicateTo_1 = function (copy) {
    _set_limit_(copy, this._get_limit__1());
    _set_startGap_(copy, this._get_startGap__1());
    _set_readPosition_(copy, this._get_readPosition__1());
    _set_writePosition_(copy, this._get_writePosition__1());
  };
  Buffer_0.prototype.readByte_1 = function () {
    var readPosition = this._get_readPosition__1();
    if (readPosition === this._get_writePosition__1()) {
      throw new EOFException('No readable bytes available.');
    }_set_readPosition_(this, readPosition + 1 | 0);
    var tmp0_get_0 = this._memory;
    return tmp0_get_0._view.getInt8(readPosition);
  };
  Buffer_0.prototype.writeByte_6 = function (value) {
    var writePosition = this._get_writePosition__1();
    if (writePosition === this._get_limit__1()) {
      throw new InsufficientSpaceException('No free space in the buffer to write a byte');
    }var tmp0_set_0 = this._memory;
    tmp0_set_0._view.setInt8(writePosition, value);
    _set_writePosition_(this, writePosition + 1 | 0);
  };
  Buffer_0.prototype.reset_2 = function () {
    this.releaseGaps_1();
    this.resetForWrite_3();
  };
  Buffer_0.prototype.toString = function () {
    var tmp = this._get_writePosition__1() - this._get_readPosition__1() | 0;
    var tmp_0 = this._get_limit__1() - this._get_writePosition__1() | 0;
    var tmp_1 = this._get_startGap__1();
    return '' + 'Buffer(' + tmp + ' used, ' + tmp_0 + ' free, ' + (tmp_1 + (this._capacity_0 - this._get_limit__1() | 0) | 0) + ' reserved of ' + this._capacity_0 + ')';
  };
  Buffer_0.$metadata$ = {
    simpleName: 'Buffer',
    kind: 'class',
    interfaces: []
  };
  function InsufficientSpaceException_init_$Init$(name, size_0, availableSpace, $this) {
    InsufficientSpaceException.call($this, '' + 'Not enough free space to write ' + name + ' of ' + size_0 + ' bytes, available ' + availableSpace + ' bytes.');
    return $this;
  }
  function InsufficientSpaceException_init_$Create$(name, size_0, availableSpace) {
    var tmp = InsufficientSpaceException_init_$Init$(name, size_0, availableSpace, Object.create(InsufficientSpaceException.prototype));
    captureStack(tmp, InsufficientSpaceException_init_$Create$);
    return tmp;
  }
  function InsufficientSpaceException(message) {
    Exception_init_$Init$_0(message, this);
    captureStack(this, InsufficientSpaceException);
  }
  InsufficientSpaceException.$metadata$ = {
    simpleName: 'InsufficientSpaceException',
    kind: 'class',
    interfaces: []
  };
  function discardFailed(count_0, readRemaining_1) {
    throw new EOFException('' + 'Unable to discard ' + count_0 + ' bytes: only ' + readRemaining_1 + ' available for reading');
  }
  function commitWrittenFailed(count_0, writeRemaining) {
    throw new EOFException('' + 'Unable to discard ' + count_0 + ' bytes: only ' + writeRemaining + ' available for writing');
  }
  function rewindFailed(count_0, rewindRemaining) {
    throw IllegalArgumentException_init_$Create$_0('' + 'Unable to rewind ' + count_0 + ' bytes: only ' + rewindRemaining + ' could be rewinded');
  }
  function startGapReservationFailedDueToLimit(_this_, startGap) {
    if (startGap > _this_._capacity_0) {
      throw IllegalArgumentException_init_$Create$_0('' + 'Start gap ' + startGap + ' is bigger than the capacity ' + _this_._capacity_0);
    }throw IllegalStateException_init_$Create$('' + 'Unable to reserve ' + startGap + ' start gap: there are already ' + (_this_._capacity_0 - _this_._get_limit__1() | 0) + ' bytes reserved in the end');
  }
  function startGapReservationFailed(_this_, startGap) {
    var tmp = '' + 'Unable to reserve ' + startGap + ' start gap: ';
    throw IllegalStateException_init_$Create$(tmp + ('' + 'there are already ' + (_this_._get_writePosition__1() - _this_._get_readPosition__1() | 0) + ' content bytes starting at offset ' + _this_._get_readPosition__1()));
  }
  function endGapReservationFailedDueToCapacity(_this_, endGap) {
    throw IllegalArgumentException_init_$Create$_0('' + 'End gap ' + endGap + ' is too big: capacity is ' + _this_._capacity_0);
  }
  function endGapReservationFailedDueToStartGap(_this_, endGap) {
    throw IllegalArgumentException_init_$Create$_0('' + 'End gap ' + endGap + ' is too big: there are already ' + _this_._get_startGap__1() + ' bytes reserved in the beginning');
  }
  function endGapReservationFailedDueToContent(_this_, endGap) {
    var tmp = '' + 'Unable to reserve end gap ' + endGap + ':';
    throw IllegalArgumentException_init_$Create$_0(tmp + ('' + ' there are already ' + (_this_._get_writePosition__1() - _this_._get_readPosition__1() | 0) + ' content bytes at offset ' + _this_._get_readPosition__1()));
  }
  function restoreStartGap(_this_, size_0) {
    _this_.releaseStartGap_1(_this_._get_readPosition__1() - size_0 | 0);
  }
  function writeBufferAppend(_this_, other, maxSize) {
    var tmp0_minOf_0 = other._get_writePosition__1() - other._get_readPosition__1() | 0;
    var size_0 = function () {
      var $externalVarargReceiverTmp = Math;
      return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_minOf_0, maxSize]))));
    }.call(this);
    if ((_this_._get_limit__1() - _this_._get_writePosition__1() | 0) <= size_0) {
      writeBufferAppendUnreserve(_this_, size_0);
    } else {
    }
    var tmp1__anonymous__2 = _this_._memory;
    var tmp2__anonymous__2 = _this_._get_writePosition__1();
    var tmp3__anonymous__2 = _this_._get_limit__1();
    var tmp0__anonymous__2_4 = other._memory;
    var tmp1__anonymous__2_5 = other._get_readPosition__1();
    var tmp2__anonymous__2_6 = other._get_writePosition__1();
    tmp0__anonymous__2_4.copyTo(tmp1__anonymous__2, tmp1__anonymous__2_5, size_0, tmp2__anonymous__2);
    var rc_1_3 = size_0;
    other.discardExact_5(rc_1_3);
    var rc_1 = rc_1_3;
    _this_.commitWritten_1(rc_1);
    return rc_1;
  }
  function writeBufferPrepend(_this_, other) {
    var size_0 = other._get_writePosition__1() - other._get_readPosition__1() | 0;
    var readPosition = _this_._get_readPosition__1();
    if (readPosition < size_0) {
      throw IllegalArgumentException_init_$Create$_0('Not enough space in the beginning to prepend bytes');
    }var newReadPosition = readPosition - size_0 | 0;
    other._memory.copyTo(_this_._memory, other._get_readPosition__1(), size_0, newReadPosition);
    other.discardExact_5(size_0);
    _this_.releaseStartGap_1(newReadPosition);
    return size_0;
  }
  function writeBufferAppendUnreserve(_this_, writeSize) {
    var tmp = _this_._get_limit__1() - _this_._get_writePosition__1() | 0;
    if ((tmp + (_this_._capacity_0 - _this_._get_limit__1() | 0) | 0) < writeSize) {
      throw IllegalArgumentException_init_$Create$_0("Can't append buffer: not enough free space at the end");
    } else {
    }
    var newWritePosition = _this_._get_writePosition__1() + writeSize | 0;
    var overrunSize = newWritePosition - _this_._get_limit__1() | 0;
    if (overrunSize > 0) {
      _this_.releaseEndGap_1();
    }}
  function appendChars(_this_, csq, start, end) {
    var charactersWritten;
    var tmp0__anonymous__2 = _this_._memory;
    var tmp1__anonymous__2 = _this_._get_writePosition__1();
    var tmp2__anonymous__2 = _this_._get_limit__1();
    var result_3 = encodeUTF8(tmp0__anonymous__2, csq, start, end, tmp1__anonymous__2, tmp2__anonymous__2);
    var tmp0__get_highShort__0_6 = _EncodeResult___get_value__impl_(result_3);
    var tmp1_toUShort_0_5 = toShort(tmp0__get_highShort__0_6 >>> 16);
    var tmp2_toInt_0_4 = _UShort___init__impl_(tmp1_toUShort_0_5);
    charactersWritten = _UShort___get_data__impl_(tmp2_toInt_0_4) & 65535;
    var tmp3__get_lowShort__0_9 = _EncodeResult___get_value__impl_(result_3);
    var tmp4_toUShort_0_8 = toShort(tmp3__get_lowShort__0_9 & 65535);
    var tmp5_toInt_0_7 = _UShort___init__impl_(tmp4_toUShort_0_8);
    var rc_1 = _UShort___get_data__impl_(tmp5_toInt_0_7) & 65535;
    _this_.commitWritten_1(rc_1);
    Unit_getInstance();
    return start + charactersWritten | 0;
  }
  function append(_this_, c) {
    var tmp0__anonymous__2 = _this_._memory;
    var tmp1__anonymous__2 = _this_._get_writePosition__1();
    var tmp2__anonymous__2 = _this_._get_limit__1();
    var tmp16_putUtf8Char_0_4 = c.toInt_5();
    var tmp;
    if (0 <= tmp16_putUtf8Char_0_4 ? tmp16_putUtf8Char_0_4 <= 127 : false) {
      var tmp0_storeAt_0_5 = toByte(tmp16_putUtf8Char_0_4);
      tmp0__anonymous__2._view.setInt8(tmp1__anonymous__2, tmp0_storeAt_0_5);
      tmp = 1;
    } else if (128 <= tmp16_putUtf8Char_0_4 ? tmp16_putUtf8Char_0_4 <= 2047 : false) {
      var tmp1_set_0_6 = toByte(192 | tmp16_putUtf8Char_0_4 >> 6 & 31);
      tmp0__anonymous__2._view.setInt8(tmp1__anonymous__2, tmp1_set_0_6);
      var tmp2_set_0_7 = tmp1__anonymous__2 + 1 | 0;
      var tmp3_set_0_8 = toByte(128 | tmp16_putUtf8Char_0_4 & 63);
      tmp0__anonymous__2._view.setInt8(tmp2_set_0_7, tmp3_set_0_8);
      tmp = 2;
    } else if (2048 <= tmp16_putUtf8Char_0_4 ? tmp16_putUtf8Char_0_4 <= 65535 : false) {
      var tmp4_set_0_9 = toByte(224 | tmp16_putUtf8Char_0_4 >> 12 & 15);
      tmp0__anonymous__2._view.setInt8(tmp1__anonymous__2, tmp4_set_0_9);
      var tmp5_set_0_10 = tmp1__anonymous__2 + 1 | 0;
      var tmp6_set_0_11 = toByte(128 | tmp16_putUtf8Char_0_4 >> 6 & 63);
      tmp0__anonymous__2._view.setInt8(tmp5_set_0_10, tmp6_set_0_11);
      var tmp7_set_0_12 = tmp1__anonymous__2 + 2 | 0;
      var tmp8_set_0_13 = toByte(128 | tmp16_putUtf8Char_0_4 & 63);
      tmp0__anonymous__2._view.setInt8(tmp7_set_0_12, tmp8_set_0_13);
      tmp = 3;
    } else if (65536 <= tmp16_putUtf8Char_0_4 ? tmp16_putUtf8Char_0_4 <= 1114111 : false) {
      var tmp9_set_0_14 = toByte(240 | tmp16_putUtf8Char_0_4 >> 18 & 7);
      tmp0__anonymous__2._view.setInt8(tmp1__anonymous__2, tmp9_set_0_14);
      var tmp10_set_0_15 = tmp1__anonymous__2 + 1 | 0;
      var tmp11_set_0_16 = toByte(128 | tmp16_putUtf8Char_0_4 >> 12 & 63);
      tmp0__anonymous__2._view.setInt8(tmp10_set_0_15, tmp11_set_0_16);
      var tmp12_set_0_17 = tmp1__anonymous__2 + 2 | 0;
      var tmp13_set_0_18 = toByte(128 | tmp16_putUtf8Char_0_4 >> 6 & 63);
      tmp0__anonymous__2._view.setInt8(tmp12_set_0_17, tmp13_set_0_18);
      var tmp14_set_0_19 = tmp1__anonymous__2 + 3 | 0;
      var tmp15_set_0_20 = toByte(128 | tmp16_putUtf8Char_0_4 & 63);
      tmp0__anonymous__2._view.setInt8(tmp14_set_0_19, tmp15_set_0_20);
      tmp = 4;
    } else {
      malformedCodePoint(tmp16_putUtf8Char_0_4);
    }
    var size_3 = tmp;
    var tmp_0;
    if (size_3 > (tmp2__anonymous__2 - tmp1__anonymous__2 | 0)) {
      appendFailed(1);
    } else {
      tmp_0 = size_3;
    }
    var rc_1 = tmp_0;
    _this_.commitWritten_1(rc_1);
    Unit_getInstance();
    return _this_;
  }
  function appendFailed(length) {
    throw new BufferLimitExceededException('' + 'Not enough free space available to write ' + length + ' character(s).');
  }
  var DefaultChunkedBufferPool;
  function DefaultBufferPool_init_$Init$(bufferSize, capacity, allocator, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      bufferSize = 4096;
    if (!(($mask0 & 2) === 0))
      capacity = 1000;
    if (!(($mask0 & 4) === 0))
      allocator = DefaultAllocator_getInstance();
    DefaultBufferPool.call($this, bufferSize, capacity, allocator);
    return $this;
  }
  function DefaultBufferPool_init_$Create$(bufferSize, capacity, allocator, $mask0, $marker) {
    return DefaultBufferPool_init_$Init$(bufferSize, capacity, allocator, $mask0, $marker, Object.create(DefaultBufferPool.prototype));
  }
  function DefaultBufferPool(bufferSize, capacity, allocator) {
    DefaultPool.call(this, capacity);
    this._bufferSize = bufferSize;
    this._allocator = allocator;
  }
  DefaultBufferPool.prototype.produceInstance_4 = function () {
    return new IoBuffer(this._allocator.alloc_1(this._bufferSize), null, this);
  };
  DefaultBufferPool.prototype.disposeInstance_1 = function (instance) {
    this._allocator.free_0(instance._get_memory__1());
    DefaultPool.prototype.disposeInstance_3.call(this, instance);
    instance.unlink_0();
  };
  DefaultBufferPool.prototype.disposeInstance_3 = function (instance) {
    return this.disposeInstance_1(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  DefaultBufferPool.prototype.validateInstance_1 = function (instance) {
    DefaultPool.prototype.validateInstance_3.call(this, instance);
    if (instance === Companion_getInstance_25()._Empty_1) {
      var tmp0_error_0 = "IoBuffer.Empty couldn't be recycled";
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    }var tmp1_check_0 = !(instance === Companion_getInstance_25()._Empty_1);
    if (!tmp1_check_0) {
      var message_1 = "Empty instance couldn't be recycled";
      throw IllegalStateException_init_$Create$(toString_1(message_1));
    }var tmp2_check_0 = !(instance === Companion_getInstance_17()._get_Empty__1());
    if (!tmp2_check_0) {
      var message_1_0 = "Empty instance couldn't be recycled";
      throw IllegalStateException_init_$Create$(toString_1(message_1_0));
    }var tmp3_check_0 = !(instance === Companion_getInstance_20()._get_Empty__1());
    if (!tmp3_check_0) {
      var message_1_1 = "Empty instance couldn't be recycled";
      throw IllegalStateException_init_$Create$(toString_1(message_1_1));
    }var tmp4_check_0 = instance._get_referenceCount__0() === 0;
    if (!tmp4_check_0) {
      var message_1_2 = 'Unable to clear buffer: it is still in use.';
      throw IllegalStateException_init_$Create$(toString_1(message_1_2));
    }var tmp5_check_0 = instance._get_next__1() == null;
    if (!tmp5_check_0) {
      var message_1_3 = "Recycled instance shouldn't be a part of a chain.";
      throw IllegalStateException_init_$Create$(toString_1(message_1_3));
    }var tmp6_check_0 = instance._get_origin__7() == null;
    if (!tmp6_check_0) {
      var message_1_4 = "Recycled instance shouldn't be a view or another buffer.";
      throw IllegalStateException_init_$Create$(toString_1(message_1_4));
    }};
  DefaultBufferPool.prototype.validateInstance_3 = function (instance) {
    return this.validateInstance_1(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  DefaultBufferPool.prototype.clearInstance_1 = function (instance) {
    var tmp0_apply_0 = DefaultPool.prototype.clearInstance_5.call(this, instance);
    tmp0_apply_0.unpark_0();
    tmp0_apply_0.reset_2();
    return tmp0_apply_0;
  };
  DefaultBufferPool.prototype.clearInstance_5 = function (instance) {
    return this.clearInstance_1(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  DefaultBufferPool.$metadata$ = {
    simpleName: 'DefaultBufferPool',
    kind: 'class',
    interfaces: []
  };
  function readFully(_this_, dst, length) {
    var tmp0_require_0 = length >= 0;
    if (!tmp0_require_0) {
      var message_2_1 = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2_1));
    }var tmp1_require_0 = length <= (dst._get_limit__1() - dst._get_writePosition__1() | 0);
    if (!tmp1_require_0) {
      var message_2_1_0 = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2_1_0));
    }var tmp5_readExact_0 = 'buffer content';
    var value_2;
    var tmp2__anonymous__3_2 = _this_._memory;
    var tmp3__anonymous__3_2 = _this_._get_readPosition__1();
    var tmp4__anonymous__3_2 = _this_._get_writePosition__1();
    var tmp0_require_0_3 = (tmp4__anonymous__3_2 - tmp3__anonymous__3_2 | 0) >= length;
    if (!tmp0_require_0_3) {
      var m_2_4 = new _no_name_provided__3_5_0(tmp5_readExact_0, length);
      m_2_4.doFail_4_6_2();
    }tmp2__anonymous__3_2.copyTo(dst._memory, tmp3__anonymous__3_2, length, dst._get_writePosition__1());
    value_2 = dst.commitWritten_1(length);
    var rc_1 = length;
    _this_.discardExact_5(rc_1);
    Unit_getInstance();
    return length;
  }
  function writeFully_0(_this_, source, offset, length) {
    var tmp3_writeExact_0 = 'byte array';
    var tmp0__anonymous__2_2 = _this_._memory;
    var tmp1__anonymous__2_2 = _this_._get_writePosition__1();
    var tmp2__anonymous__2_2 = _this_._get_limit__1();
    var writeRemaining_3_3 = tmp2__anonymous__2_2 - tmp1__anonymous__2_2 | 0;
    if (writeRemaining_3_3 < length) {
      throw InsufficientSpaceException_init_$Create$(tmp3_writeExact_0, length, writeRemaining_3_3);
    }var tmp0_let_0_1_5 = of(Companion_getInstance_22(), source, offset, length);
    tmp0_let_0_1_5.copyTo(tmp0__anonymous__2_2, 0, length, tmp1__anonymous__2_2);
    var rc_1 = length;
    _this_.commitWritten_1(rc_1);
    Unit_getInstance();
  }
  function readShort(_this_) {
    var tmp3_readExact_0 = 2;
    var tmp4_readExact_0 = 'short integer';
    var value_2;
    var tmp0__anonymous__3_2 = _this_._memory;
    var tmp1__anonymous__3_2 = _this_._get_readPosition__1();
    var tmp2__anonymous__3_2 = _this_._get_writePosition__1();
    var tmp0_require_0_3 = (tmp2__anonymous__3_2 - tmp1__anonymous__3_2 | 0) >= tmp3_readExact_0;
    if (!tmp0_require_0_3) {
      var m_2_4 = new _no_name_provided__3_5_1(tmp4_readExact_0, tmp3_readExact_0);
      m_2_4.doFail_4_6_2();
    }value_2 = tmp0__anonymous__3_2._view.getInt16(tmp1__anonymous__3_2, false);
    var rc_1 = tmp3_readExact_0;
    _this_.discardExact_5(rc_1);
    Unit_getInstance();
    return value_2;
  }
  function readFully_0(_this_, destination, offset, length) {
    var tmp3_readExact_0 = 'byte array';
    var value_2;
    var tmp0__anonymous__3_2 = _this_._memory;
    var tmp1__anonymous__3_2 = _this_._get_readPosition__1();
    var tmp2__anonymous__3_2 = _this_._get_writePosition__1();
    var tmp0_require_0_3 = (tmp2__anonymous__3_2 - tmp1__anonymous__3_2 | 0) >= length;
    if (!tmp0_require_0_3) {
      var m_2_4 = new _no_name_provided__3_5_2(tmp3_readExact_0, length);
      m_2_4.doFail_4_6_2();
    }value_2 = copyTo_2(tmp0__anonymous__3_2, destination, tmp1__anonymous__3_2, length, offset);
    var rc_1 = length;
    _this_.discardExact_5(rc_1);
    Unit_getInstance();
  }
  function readFully$default(_this_, destination, offset, length, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      length = destination.length - offset | 0;
    return readFully_0(_this_, destination, offset, length);
  }
  function writeShort(_this_, value) {
    var tmp3_writeExact_0 = 2;
    var tmp4_writeExact_0 = 'short integer';
    var tmp0__anonymous__2_2 = _this_._memory;
    var tmp1__anonymous__2_2 = _this_._get_writePosition__1();
    var tmp2__anonymous__2_2 = _this_._get_limit__1();
    var writeRemaining_3_3 = tmp2__anonymous__2_2 - tmp1__anonymous__2_2 | 0;
    if (writeRemaining_3_3 < tmp3_writeExact_0) {
      throw InsufficientSpaceException_init_$Create$(tmp4_writeExact_0, tmp3_writeExact_0, writeRemaining_3_3);
    }tmp0__anonymous__2_2._view.setInt16(tmp1__anonymous__2_2, value, false);
    var rc_1 = tmp3_writeExact_0;
    _this_.commitWritten_1(rc_1);
    return Unit_getInstance();
  }
  function writeFully_1(_this_, src, length) {
    var tmp0_require_0 = length >= 0;
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_9(length);
      m_2.doFail_4_14();
    }var tmp1_require_0 = length <= (src._get_writePosition__1() - src._get_readPosition__1() | 0);
    if (!tmp1_require_0) {
      var m_2_0 = new _no_name_provided__3_10(length, src);
      m_2_0.doFail_4_14();
    }var tmp2_require_0 = length <= (_this_._get_limit__1() - _this_._get_writePosition__1() | 0);
    if (!tmp2_require_0) {
      var m_2_1 = new _no_name_provided__3_11(length, _this_);
      m_2_1.doFail_4_14();
    }var tmp6_writeExact_0 = 'buffer readable content';
    var tmp3__anonymous__2_2 = _this_._memory;
    var tmp4__anonymous__2_2 = _this_._get_writePosition__1();
    var tmp5__anonymous__2_2 = _this_._get_limit__1();
    var writeRemaining_3_3 = tmp5__anonymous__2_2 - tmp4__anonymous__2_2 | 0;
    if (writeRemaining_3_3 < length) {
      throw InsufficientSpaceException_init_$Create$(tmp6_writeExact_0, length, writeRemaining_3_3);
    }src._memory.copyTo(tmp3__anonymous__2_2, src._get_readPosition__1(), length, tmp4__anonymous__2_2);
    src.discardExact_5(length);
    var rc_1 = length;
    _this_.commitWritten_1(rc_1);
    Unit_getInstance();
  }
  function _no_name_provided__3_5_0($tmp5_readExact_0, $length) {
    this._$tmp5_readExact_0 = $tmp5_readExact_0;
    this._$length = $length;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_5_0.prototype.doFail_4_6_2 = function () {
    throw new EOFException('' + 'Not enough bytes to read a ' + this._$tmp5_readExact_0 + ' of size ' + this._$length + '.');
  };
  _no_name_provided__3_5_0.$metadata$ = {
    simpleName: '<no name provided>_3_5',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_5_1($tmp4_readExact_0, $tmp3_readExact_0) {
    this._$tmp4_readExact_0 = $tmp4_readExact_0;
    this._$tmp3_readExact_0 = $tmp3_readExact_0;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_5_1.prototype.doFail_4_6_2 = function () {
    throw new EOFException('' + 'Not enough bytes to read a ' + this._$tmp4_readExact_0 + ' of size ' + this._$tmp3_readExact_0 + '.');
  };
  _no_name_provided__3_5_1.$metadata$ = {
    simpleName: '<no name provided>_3_5',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_5_2($tmp3_readExact_0, $length) {
    this._$tmp3_readExact_0_0 = $tmp3_readExact_0;
    this._$length_0 = $length;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_5_2.prototype.doFail_4_6_2 = function () {
    throw new EOFException('' + 'Not enough bytes to read a ' + this._$tmp3_readExact_0_0 + ' of size ' + this._$length_0 + '.');
  };
  _no_name_provided__3_5_2.$metadata$ = {
    simpleName: '<no name provided>_3_5',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_9($length) {
    this._$length_1 = $length;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_9.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "length shouldn't be negative: " + this._$length_1);
  };
  _no_name_provided__3_9.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_10($length, $src) {
    this._$length_2 = $length;
    this._$src = $src;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_10.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "length shouldn't be greater than the source read remaining: " + this._$length_2 + ' > ' + (this._$src._get_writePosition__1() - this._$src._get_readPosition__1() | 0));
  };
  _no_name_provided__3_10.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_11($length, $this_writeFully) {
    this._$length_3 = $length;
    this._$this_writeFully = $this_writeFully;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_11.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "length shouldn't be greater than the destination write remaining space: " + this._$length_3 + ' > ' + (this._$this_writeFully._get_limit__1() - this._$this_writeFully._get_writePosition__1() | 0));
  };
  _no_name_provided__3_11.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function peekTo(_this_, destination, destinationOffset, offset, min, max) {
    var tmp0_minOf_0 = toLong_0(destination._view.byteLength).minus_30(destinationOffset);
    var tmp1_minOf_0 = toLong_0(_this_._get_writePosition__1() - _this_._get_readPosition__1() | 0);
    var tmp0_minOf_0_1 = max.compareTo_59(tmp1_minOf_0) <= 0 ? max : tmp1_minOf_0;
    var size_0 = tmp0_minOf_0.compareTo_59(tmp0_minOf_0_1) <= 0 ? tmp0_minOf_0 : tmp0_minOf_0_1;
    _this_._memory.copyTo_0(destination, numberToLong(_this_._get_readPosition__1()).plus_59(offset), size_0, destinationOffset);
    return size_0;
  }
  function EmptyBufferPoolImpl() {
    EmptyBufferPoolImpl_instance = this;
    NoPoolImpl.call(this);
  }
  EmptyBufferPoolImpl.prototype.borrow_12 = function () {
    return Companion_getInstance_25()._Empty_1;
  };
  EmptyBufferPoolImpl.$metadata$ = {
    simpleName: 'EmptyBufferPoolImpl',
    kind: 'object',
    interfaces: []
  };
  var EmptyBufferPoolImpl_instance;
  function EmptyBufferPoolImpl_getInstance() {
    if (EmptyBufferPoolImpl_instance == null)
      new EmptyBufferPoolImpl();
    return EmptyBufferPoolImpl_instance;
  }
  function BufferLimitExceededException(message) {
    Exception_init_$Init$_0(message, this);
    captureStack(this, BufferLimitExceededException);
  }
  BufferLimitExceededException.$metadata$ = {
    simpleName: 'BufferLimitExceededException',
    kind: 'class',
    interfaces: []
  };
  function releaseAll(_this_, pool) {
    var current = _this_;
    while (!(current == null)) {
      var next = current.cleanNext_0();
      current.release_8(pool);
      current = next;
    }
  }
  function findTail(_this_) {
    var $this = _this_;
    while (true) {
      var $this_0 = $this;
      var tmp0_elvis_lhs = $this_0._get_next__1();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return $this_0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var next = tmp;
      $this = next;
      continue;
    }
  }
  function remainingAll(_this_) {
    return remainingAll_0(_this_, new Long(0, 0));
  }
  function remainingAll_0(_this_, n) {
    var $this = _this_;
    var n_0 = n;
    while (true) {
      var $this_0 = $this;
      var n_1 = n_0;
      var rem = toLong_0($this_0._get_writePosition__1() - $this_0._get_readPosition__1() | 0).plus_59(n_1);
      var tmp0_elvis_lhs = $this_0._get_next__1();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return rem;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var next = tmp;
      $this = next;
      n_0 = rem;
      continue;
    }
  }
  function copyAll(_this_) {
    var copied = _this_.duplicate_0();
    var tmp0_elvis_lhs = _this_._get_next__1();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return copied;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var next = tmp;
    return copyAll_0(next, copied, copied);
  }
  function copyAll_0(_this_, head, prev) {
    var $this = _this_;
    var head_0 = head;
    var prev_0 = prev;
    while (true) {
      var $this_0 = $this;
      var head_1 = head_0;
      var prev_1 = prev_0;
      var copied = $this_0.duplicate_0();
      prev_1._set_next__0(copied);
      var tmp0_elvis_lhs = $this_0._get_next__1();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return head_1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var next = tmp;
      $this = next;
      head_0 = head_1;
      prev_0 = copied;
      continue;
    }
  }
  function BytePacketBuilderPlatformBase(pool) {
    BytePacketBuilderBase.call(this, pool);
  }
  BytePacketBuilderPlatformBase.$metadata$ = {
    simpleName: 'BytePacketBuilderPlatformBase',
    kind: 'class',
    interfaces: []
  };
  function BytePacketBuilderBase(pool) {
    AbstractOutput_init_$Init$(pool, this);
  }
  BytePacketBuilderBase.$metadata$ = {
    simpleName: 'BytePacketBuilderBase',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_12(this$0) {
    this._this$0_18 = this$0;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_12.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "shouldn't be negative: headerSizeHint = " + this._this$0_18._headerSizeHint_1);
  };
  _no_name_provided__3_12.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function BytePacketBuilder(headerSizeHint, pool) {
    BytePacketBuilderPlatformBase.call(this, pool);
    this._headerSizeHint_1 = headerSizeHint;
    var tmp0_require_0 = this._headerSizeHint_1 >= 0;
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_12(this);
      m_2.doFail_4_14();
    }}
  BytePacketBuilder.prototype._get_size__48 = function () {
    return this._get__size__0();
  };
  BytePacketBuilder.prototype._get_isEmpty__6 = function () {
    return this._get__size__0() === 0;
  };
  BytePacketBuilder.prototype.closeDestination_2 = function () {
  };
  BytePacketBuilder.prototype.flush_8 = function (source, offset, length) {
  };
  BytePacketBuilder.prototype.append_23 = function (c) {
    var tmp = BytePacketBuilderPlatformBase.prototype.append_23.call(this, c);
    return tmp instanceof BytePacketBuilder ? tmp : THROW_CCE();
  };
  BytePacketBuilder.prototype.append_22 = function (csq) {
    var tmp = BytePacketBuilderPlatformBase.prototype.append_22.call(this, csq);
    return tmp instanceof BytePacketBuilder ? tmp : THROW_CCE();
  };
  BytePacketBuilder.prototype.append_21 = function (csq, start, end) {
    var tmp = BytePacketBuilderPlatformBase.prototype.append_21.call(this, csq, start, end);
    return tmp instanceof BytePacketBuilder ? tmp : THROW_CCE();
  };
  BytePacketBuilder.prototype.build_17 = function () {
    var size_0 = this._get_size__48();
    var head = this.stealAll_4();
    var tmp0_subject = head;
    return tmp0_subject == null ? Companion_getInstance_18()._Empty : new ByteReadPacket(head, toLong_0(size_0), this._get_pool__2());
  };
  BytePacketBuilder.prototype.toString = function () {
    return '' + 'BytePacketBuilder(' + this._get_size__48() + ' bytes written)';
  };
  BytePacketBuilder.$metadata$ = {
    simpleName: 'BytePacketBuilder',
    kind: 'class',
    interfaces: []
  };
  function ByteReadPacket_init_$Init$(head, pool, $this) {
    ByteReadPacket.call($this, head, remainingAll(head), pool);
    return $this;
  }
  function ByteReadPacket_init_$Create$(head, pool) {
    return ByteReadPacket_init_$Init$(head, pool, Object.create(ByteReadPacket.prototype));
  }
  function Companion_19() {
    Companion_instance_18 = this;
    this._Empty = new ByteReadPacket(Companion_getInstance_20()._get_Empty__1(), new Long(0, 0), Companion_getInstance_20()._EmptyPool);
  }
  Companion_19.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_18;
  function Companion_getInstance_18() {
    if (Companion_instance_18 == null)
      new Companion_19();
    return Companion_instance_18;
  }
  function ByteReadPacket(head, remaining, pool) {
    Companion_getInstance_18();
    ByteReadPacketPlatformBase.call(this, head, remaining, pool);
    this.markNoMoreChunksAvailable_0();
  }
  ByteReadPacket.prototype.copy_1 = function () {
    return new ByteReadPacket(copyAll(this._get_head__9()), this._get_remaining__2(), this._get_pool__2());
  };
  ByteReadPacket.prototype.fill_7 = function () {
    return null;
  };
  ByteReadPacket.prototype.fill_6 = function (destination, offset, length) {
    return 0;
  };
  ByteReadPacket.prototype.closeSource_2 = function () {
  };
  ByteReadPacket.prototype.toString = function () {
    return '' + 'ByteReadPacket(' + this._get_remaining__2() + ' bytes remaining)';
  };
  ByteReadPacket.$metadata$ = {
    simpleName: 'ByteReadPacket',
    kind: 'class',
    interfaces: [Input]
  };
  function ByteReadPacketPlatformBase(head, remaining, pool) {
    ByteReadPacketBase.call(this, head, remaining, pool);
  }
  ByteReadPacketPlatformBase.$metadata$ = {
    simpleName: 'ByteReadPacketPlatformBase',
    kind: 'class',
    interfaces: []
  };
  function discardExact(_this_, n) {
    discardExact_0(_this_, toLong_0(n));
  }
  function discardExact_0(_this_, n) {
    var discarded = _this_.discard_12(n);
    if (!discarded.equals(n)) {
      throw IllegalStateException_init_$Create$('' + 'Only ' + discarded + ' bytes were discarded of ' + n + ' requested');
    }}
  function readFully_1(_this_, dst, offset, length) {
    var remaining_1 = length;
    var dstOffset_2 = offset;
    var tmp$ret$0;
    l$ret$1: do {
      var release_1 = true;
      var tmp0_elvis_lhs_3 = prepareReadFirstHead(_this_, 1);
      var tmp;
      if (tmp0_elvis_lhs_3 == null) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
        tmp = tmp0_elvis_lhs_3;
      }
      var current_2 = tmp;
      try {
        $l$break_0: do {
          var tmp0__anonymous__3_6 = current_2;
          var tmp0_minOf_0_8 = remaining_1;
          var tmp1_minOf_0_9 = tmp0__anonymous__3_6._get_writePosition__1() - tmp0__anonymous__3_6._get_readPosition__1() | 0;
          var count_4_7 = function () {
            var $externalVarargReceiverTmp = Math;
            return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_minOf_0_8, tmp1_minOf_0_9]))));
          }.call(this);
          var tmp1__anonymous__5 = dstOffset_2;
          readFully_0(tmp0__anonymous__3_6, dst, tmp1__anonymous__5, count_4_7);
          remaining_1 = remaining_1 - count_4_7 | 0;
          dstOffset_2 = dstOffset_2 + count_4_7 | 0;
          if (!(remaining_1 > 0)) {
            break $l$break_0;
          } else {
          }
          release_1 = false;
          var tmp1_elvis_lhs_5 = prepareReadNextHead(_this_, current_2);
          var tmp_0;
          if (tmp1_elvis_lhs_5 == null) {
            break $l$break_0;
          } else {
            tmp_0 = tmp1_elvis_lhs_5;
          }
          var next_4 = tmp_0;
          current_2 = next_4;
          release_1 = true;
        }
         while (true);
      }finally {
        if (release_1) {
          completeReadHead(_this_, current_2);
        }}
    }
     while (false);
    var tmp2_requireNoRemaining_0 = remaining_1;
    if (tmp2_requireNoRemaining_0 > 0) {
      prematureEndOfStream(tmp2_requireNoRemaining_0);
    }}
  function readFully_2(_this_, dst, length) {
    var tmp1_readFullyBytesTemplate_0 = 0;
    var remaining_1 = length;
    var dstOffset_2 = tmp1_readFullyBytesTemplate_0;
    var tmp$ret$0;
    l$ret$1: do {
      var release_1 = true;
      var tmp0_elvis_lhs_3 = prepareReadFirstHead(_this_, 1);
      var tmp;
      if (tmp0_elvis_lhs_3 == null) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
        tmp = tmp0_elvis_lhs_3;
      }
      var current_2 = tmp;
      try {
        $l$break_0: do {
          var tmp0__anonymous__3_6 = current_2;
          var tmp0_minOf_0_8 = remaining_1;
          var tmp1_minOf_0_9 = tmp0__anonymous__3_6._get_writePosition__1() - tmp0__anonymous__3_6._get_readPosition__1() | 0;
          var count_4_7 = function () {
            var $externalVarargReceiverTmp = Math;
            return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_minOf_0_8, tmp1_minOf_0_9]))));
          }.call(this);
          var tmp2__anonymous__5 = dstOffset_2;
          readFully(tmp0__anonymous__3_6, dst, count_4_7);
          Unit_getInstance();
          remaining_1 = remaining_1 - count_4_7 | 0;
          dstOffset_2 = dstOffset_2 + count_4_7 | 0;
          if (!(remaining_1 > 0)) {
            break $l$break_0;
          } else {
          }
          release_1 = false;
          var tmp1_elvis_lhs_5 = prepareReadNextHead(_this_, current_2);
          var tmp_0;
          if (tmp1_elvis_lhs_5 == null) {
            break $l$break_0;
          } else {
            tmp_0 = tmp1_elvis_lhs_5;
          }
          var next_4 = tmp_0;
          current_2 = next_4;
          release_1 = true;
        }
         while (true);
      }finally {
        if (release_1) {
          completeReadHead(_this_, current_2);
        }}
    }
     while (false);
    var tmp3_requireNoRemaining_0 = remaining_1;
    if (tmp3_requireNoRemaining_0 > 0) {
      prematureEndOfStream(tmp3_requireNoRemaining_0);
    }}
  function peekTo_0(_this_, destination, offset, min, max) {
    checkPeekTo(destination, offset, min, max);
    var tmp = toLong_0(destination._get_writePosition__1());
    var tmp_0 = toLong_0(offset);
    var tmp_1 = toLong_0(min);
    var copied = _this_.peekTo_4(destination._memory, tmp, tmp_0, tmp_1, toLong_0(coerceAtMost(max, destination._get_limit__1() - destination._get_writePosition__1() | 0))).toInt_5();
    destination.commitWritten_1(copied);
    return copied;
  }
  function peekTo$default(_this_, destination, offset, min, max, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      min = 1;
    if (!(($mask0 & 8) === 0))
      max = IntCompanionObject_getInstance()._MAX_VALUE_5;
    return peekTo_0(_this_, destination, offset, min, max);
  }
  function readShort_0(_this_) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp1_readPrimitive_0 = 2;
      var tmp;
      if (_this_ instanceof AbstractInput) {
        var tmp0__get_headRemaining__0 = _this_;
        tmp = (tmp0__get_headRemaining__0._get_headEndExclusive__2() - tmp0__get_headRemaining__0._get_headPosition__2() | 0) > tmp1_readPrimitive_0;
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        var index_1 = _this_._get_headPosition__2();
        _this_._set_headPosition__2(index_1 + tmp1_readPrimitive_0 | 0);
        var tmp2__anonymous__2 = _this_._get_headMemory__2();
        tmp$ret$0 = tmp2__anonymous__2._view.getInt16(index_1, false);
        break l$ret$1;
      } else {
      }
      tmp$ret$0 = readShortFallback(_this_);
    }
     while (false);
    return tmp$ret$0;
  }
  function readShortFallback(_this_) {
    var tmp0_readPrimitiveFallback_0 = 2;
    var tmp0_elvis_lhs_2 = prepareReadFirstHead(_this_, tmp0_readPrimitiveFallback_0);
    var tmp;
    if (tmp0_elvis_lhs_2 == null) {
      prematureEndOfStream(tmp0_readPrimitiveFallback_0);
    } else {
      tmp = tmp0_elvis_lhs_2;
    }
    var head_1 = tmp;
    var value_3 = readShort(head_1);
    completeReadHead(_this_, head_1);
    return value_3;
  }
  function writeFully_2(_this_, src, offset, length) {
    var currentOffset_1 = offset;
    var remaining_2 = length;
    var tail_1 = prepareWriteHead(_this_, 1, null);
    try {
      $l$break: while (true) {
        var tmp0__anonymous__3_2 = tail_1;
        var tmp0_minOf_0_4 = remaining_2;
        var tmp1_minOf_0_5 = tmp0__anonymous__3_2._get_limit__1() - tmp0__anonymous__3_2._get_writePosition__1() | 0;
        var size_4_3 = function () {
          var $externalVarargReceiverTmp = Math;
          return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_minOf_0_4, tmp1_minOf_0_5]))));
        }.call(this);
        var tmp1__anonymous__5 = currentOffset_1;
        writeFully_0(tmp0__anonymous__3_2, src, tmp1__anonymous__5, size_4_3);
        currentOffset_1 = currentOffset_1 + size_4_3 | 0;
        remaining_2 = remaining_2 - size_4_3 | 0;
        if (!(remaining_2 > 0))
          break $l$break;
        else {
        }
        tail_1 = prepareWriteHead(_this_, 1, tail_1);
      }
    }finally {
      afterHeadWrite(_this_, tail_1);
    }
  }
  function writeFully$default(_this_, src, offset, length, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      length = src.length - offset | 0;
    return writeFully_2(_this_, src, offset, length);
  }
  function writeFully_3(_this_, src, length) {
    var tmp1_writeFullyBytesTemplate_0 = 0;
    var currentOffset_1 = tmp1_writeFullyBytesTemplate_0;
    var remaining_2 = length;
    var tail_1 = prepareWriteHead(_this_, 1, null);
    try {
      $l$break: while (true) {
        var tmp0__anonymous__3_2 = tail_1;
        var tmp0_minOf_0_4 = remaining_2;
        var tmp1_minOf_0_5 = tmp0__anonymous__3_2._get_limit__1() - tmp0__anonymous__3_2._get_writePosition__1() | 0;
        var size_4_3 = function () {
          var $externalVarargReceiverTmp = Math;
          return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp0_minOf_0_4, tmp1_minOf_0_5]))));
        }.call(this);
        var tmp2__anonymous__5 = currentOffset_1;
        writeFully_1(tmp0__anonymous__3_2, src, size_4_3);
        currentOffset_1 = currentOffset_1 + size_4_3 | 0;
        remaining_2 = remaining_2 - size_4_3 | 0;
        if (!(remaining_2 > 0))
          break $l$break;
        else {
        }
        tail_1 = prepareWriteHead(_this_, 1, tail_1);
      }
    }finally {
      afterHeadWrite(_this_, tail_1);
    }
  }
  function writeFully$default_0(_this_, src, length, $mask0, $handler) {
    if (!(($mask0 & 2) === 0)) {
      length = src._get_writePosition__1() - src._get_readPosition__1() | 0;
    }return writeFully_3(_this_, src, length);
  }
  function writeShort_0(_this_, value) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_writePrimitiveTemplate_0 = 2;
      if (_this_ instanceof AbstractOutput) {
        var index_1 = _this_._get_tailPosition__2();
        if ((_this_._get_tailEndExclusive__2() - index_1 | 0) > tmp0_writePrimitiveTemplate_0) {
          _this_._set_tailPosition__2(index_1 + tmp0_writePrimitiveTemplate_0 | 0);
          var tmp1__anonymous__2 = _this_._get_tailMemory__2();
          tmp1__anonymous__2._view.setInt16(index_1, value, false);
          tmp$ret$0 = true;
          break l$ret$1;
        }} else {
      }
      tmp$ret$0 = false;
    }
     while (false);
    if (!tmp$ret$0) {
      writeShortFallback(_this_, value);
    } else {
    }
  }
  function writeShortFallback(_this_, value) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_writePrimitiveFallbackTemplate_0 = 2;
      if (_this_ instanceof AbstractOutput) {
        var tail_1 = _this_.prepareWriteHead_2(tmp0_writePrimitiveFallbackTemplate_0);
        writeShort(tail_1, value);
        _this_.afterHeadWrite_2();
        tmp$ret$0 = true;
        break l$ret$1;
      } else {
      }
      tmp$ret$0 = false;
    }
     while (false);
    if (!tmp$ret$0) {
      _this_.writeByte_6(toByte(value >>> 8));
      _this_.writeByte_6(toByte(value & 255));
    } else {
    }
  }
  function Companion_20() {
    Companion_instance_19 = this;
  }
  Companion_20.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_19;
  function Companion_getInstance_19() {
    if (Companion_instance_19 == null)
      new Companion_20();
    return Companion_instance_19;
  }
  function ByteReadPacketBase(head, remaining, pool) {
    Companion_getInstance_19();
    AbstractInput.call(this, head, remaining, pool);
  }
  ByteReadPacketBase.$metadata$ = {
    simpleName: 'ByteReadPacketBase',
    kind: 'class',
    interfaces: []
  };
  function prematureEndOfStream(size_0) {
    throw new EOFException('' + 'Premature end of stream: expected ' + size_0 + ' bytes');
  }
  function writeText(_this_, text, fromIndex, toIndex, charset_1) {
    if (charset_1 === Charsets_getInstance()._UTF_8) {
      return writeTextUtf8(_this_, text, fromIndex, toIndex);
    }encodeToImpl(charset_1.newEncoder_0(), _this_, text, fromIndex, toIndex);
    Unit_getInstance();
  }
  function writeText$default(_this_, text, fromIndex, toIndex, charset_1, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      fromIndex = 0;
    if (!(($mask0 & 4) === 0))
      toIndex = charSequenceLength(text);
    if (!(($mask0 & 8) === 0))
      charset_1 = Charsets_getInstance()._UTF_8;
    return writeText(_this_, text, fromIndex, toIndex, charset_1);
  }
  function readTextExactBytes(_this_, bytesCount, charset_1) {
    return decodeExactBytes(charset_1.newDecoder_0(), _this_, bytesCount);
  }
  function readTextExactBytes$default(_this_, bytesCount, charset_1, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      charset_1 = Charsets_getInstance()._UTF_8;
    return readTextExactBytes(_this_, bytesCount, charset_1);
  }
  function writeTextUtf8(_this_, text, fromIndex, toIndex) {
    var index = fromIndex;
    var tmp0_writeWhileSize_0 = 1;
    var tail_1 = prepareWriteHead(_this_, tmp0_writeWhileSize_0, null);
    try {
      var size_2;
      $l$break: while (true) {
        var tmp1__anonymous__3 = tail_1;
        var memory_4 = tmp1__anonymous__3._memory;
        var dstOffset_5 = tmp1__anonymous__3._get_writePosition__1();
        var dstLimit_6 = tmp1__anonymous__3._get_limit__1();
        var tmp0_container_7 = encodeUTF8(memory_4, text, index, toIndex, dstOffset_5, dstLimit_6);
        var tmp0__get_highShort__0_10 = _EncodeResult___get_value__impl_(tmp0_container_7);
        var tmp1_toUShort_0_9 = toShort(tmp0__get_highShort__0_10 >>> 16);
        var characters_8 = _UShort___init__impl_(tmp1_toUShort_0_9);
        var tmp2__get_lowShort__0_13 = _EncodeResult___get_value__impl_(tmp0_container_7);
        var tmp3_toUShort_0_12 = toShort(tmp2__get_lowShort__0_13 & 65535);
        var bytes_11 = _UShort___init__impl_(tmp3_toUShort_0_12);
        var tmp = index;
        index = tmp + (_UShort___get_data__impl_(characters_8) & 65535) | 0;
        tmp1__anonymous__3.commitWritten_1(_UShort___get_data__impl_(bytes_11) & 65535);
        var tmp_0;
        var tmp_1;
        if ((_UShort___get_data__impl_(characters_8) & 65535) === 0) {
          tmp_1 = index < toIndex;
        } else {
          {
            tmp_1 = false;
          }
        }
        if (tmp_1) {
          tmp_0 = 8;
        } else {
          if (index < toIndex) {
            tmp_0 = 1;
          } else {
            {
              tmp_0 = 0;
            }
          }
        }
        size_2 = tmp_0;
        if (size_2 <= 0)
          break $l$break;
        tail_1 = prepareWriteHead(_this_, size_2, tail_1);
      }
    }finally {
      afterHeadWrite(_this_, tail_1);
    }
  }
  function readBytes(_this_, n) {
    var tmp;
    if (!(n === 0)) {
      var tmp0_also_0 = new Int8Array(n);
      readFully_1(_this_, tmp0_also_0, 0, n);
      tmp = tmp0_also_0;
    } else {
      tmp = EmptyByteArray;
    }
    return tmp;
  }
  function readBytes$default(_this_, n, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      var tmp0_coerceAtMostMaxIntOrFail_0 = _this_._get_remaining__2();
      var tmp1_coerceAtMostMaxIntOrFail_0 = 'Unable to convert to a ByteArray: packet is too big';
      if (tmp0_coerceAtMostMaxIntOrFail_0.compareTo_59(toLong_0(IntCompanionObject_getInstance()._MAX_VALUE_5)) > 0)
        throw IllegalArgumentException_init_$Create$_0(tmp1_coerceAtMostMaxIntOrFail_0);
      n = tmp0_coerceAtMostMaxIntOrFail_0.toInt_5();
    }return readBytes(_this_, n);
  }
  function readText(_this_, charset_1, max) {
    return decode(charset_1.newDecoder_0(), _this_, max);
  }
  function readText$default(_this_, charset_1, max, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      charset_1 = Charsets_getInstance()._UTF_8;
    if (!(($mask0 & 2) === 0))
      max = IntCompanionObject_getInstance()._MAX_VALUE_5;
    return readText(_this_, charset_1, max);
  }
  function _no_name_provided__3_13() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_13.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('Only ChunkBuffer.Empty instance could be recycled.');
  };
  _no_name_provided__3_13.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__61() {
  }
  _no_name_provided__61.prototype.borrow_12 = function () {
    return DefaultChunkedBufferPool.borrow_12();
  };
  _no_name_provided__61.prototype.recycle_7 = function (instance) {
    if (!(instance instanceof IoBuffer)) {
      throw IllegalArgumentException_init_$Create$_0('Only IoBuffer instances can be recycled.');
    } else {
    }
    DefaultChunkedBufferPool.recycle_14(instance);
  };
  _no_name_provided__61.prototype.recycle_14 = function (instance) {
    return this.recycle_7(instance instanceof ChunkBuffer ? instance : THROW_CCE());
  };
  _no_name_provided__61.prototype.dispose_29 = function () {
    DefaultChunkedBufferPool.dispose_29();
  };
  _no_name_provided__61.$metadata$ = {
    kind: 'class',
    interfaces: [ObjectPool]
  };
  function _no_name_provided__62() {
  }
  _no_name_provided__62.prototype.borrow_12 = function () {
    return Companion_getInstance_20()._get_Empty__1();
  };
  _no_name_provided__62.prototype.recycle_7 = function (instance) {
    var tmp0_require_0 = instance === Companion_getInstance_20()._get_Empty__1();
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_13();
      m_2.doFail_4_14();
    }};
  _no_name_provided__62.prototype.recycle_14 = function (instance) {
    return this.recycle_7(instance instanceof ChunkBuffer ? instance : THROW_CCE());
  };
  _no_name_provided__62.prototype.dispose_29 = function () {
  };
  _no_name_provided__62.$metadata$ = {
    kind: 'class',
    interfaces: [ObjectPool]
  };
  function _no_name_provided__63() {
    NoPoolImpl.call(this);
  }
  _no_name_provided__63.prototype.borrow_12 = function () {
    var tmp = DefaultAllocator_getInstance().alloc_1(4096);
    return new IoBuffer(tmp, null, isInterface(this, ObjectPool) ? this : THROW_CCE());
  };
  _no_name_provided__63.prototype.recycle_7 = function (instance) {
    if (!(instance instanceof IoBuffer)) {
      throw IllegalArgumentException_init_$Create$_0('Only IoBuffer instances can be recycled.');
    } else {
    }
    DefaultAllocator_getInstance().free_0(instance._get_memory__1());
  };
  _no_name_provided__63.prototype.recycle_14 = function (instance) {
    return this.recycle_7(instance instanceof ChunkBuffer ? instance : THROW_CCE());
  };
  _no_name_provided__63.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__64() {
    NoPoolImpl.call(this);
  }
  _no_name_provided__64.prototype.borrow_12 = function () {
    throw UnsupportedOperationException_init_$Create$_0("This pool doesn't support borrow");
  };
  _no_name_provided__64.prototype.recycle_7 = function (instance) {
  };
  _no_name_provided__64.prototype.recycle_14 = function (instance) {
    return this.recycle_7(instance instanceof ChunkBuffer ? instance : THROW_CCE());
  };
  _no_name_provided__64.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _set_origin_($this, _set___) {
    return $this._origin$delegate.setValue_4($this, origin$factory(), _set___);
  }
  function appendNext($this, chunk) {
    if (!$this._nextRef.atomicfu$compareAndSet(null, chunk)) {
      throw IllegalStateException_init_$Create$('This chunk has already a next chunk.');
    }}
  function Companion_21() {
    Companion_instance_20 = this;
    var tmp = this;
    tmp._Pool = new _no_name_provided__61();
    var tmp_0 = this;
    tmp_0._EmptyPool = new _no_name_provided__62();
    var tmp_1 = this;
    tmp_1._NoPool = new _no_name_provided__63();
    var tmp_2 = this;
    tmp_2._NoPoolManuallyManaged = new _no_name_provided__64();
  }
  Companion_21.prototype._get_Empty__1 = function () {
    return Companion_getInstance_25()._Empty_1;
  };
  Companion_21.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_20;
  function Companion_getInstance_20() {
    if (Companion_instance_20 == null)
      new Companion_21();
    return Companion_instance_20;
  }
  function _no_name_provided__3_14() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_14.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0("A chunk couldn't be a view of itself.");
  };
  _no_name_provided__3_14.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__3_15() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__3_15.prototype.doFail_4_14 = function () {
    throw IllegalArgumentException_init_$Create$_0('Unable to reset buffer with origin');
  };
  _no_name_provided__3_15.$metadata$ = {
    simpleName: '<no name provided>_3',
    kind: 'class',
    interfaces: []
  };
  function ChunkBuffer(memory, origin, parentPool) {
    Companion_getInstance_20();
    Buffer_0.call(this, memory);
    this._parentPool = parentPool;
    var tmp0_require_0 = !(origin === this);
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_14();
      m_2.doFail_4_14();
    }this._nextRef = atomic(null);
    this._refCount = atomic_1(1);
    var tmp = this;
    tmp._origin$delegate = new _no_name_provided__67(origin);
  }
  ChunkBuffer.prototype._get_origin__7 = function () {
    return this._origin$delegate.getValue_3(this, origin$factory_0());
  };
  ChunkBuffer.prototype._set_next__0 = function (newValue) {
    if (newValue == null) {
      this.cleanNext_0();
      Unit_getInstance();
    } else {
      appendNext(this, newValue);
    }
  };
  ChunkBuffer.prototype._get_next__1 = function () {
    return this._nextRef._value_2;
  };
  ChunkBuffer.prototype._get_referenceCount__0 = function () {
    return this._refCount._value_4;
  };
  ChunkBuffer.prototype.cleanNext_0 = function () {
    return this._nextRef.atomicfu$getAndSet(null);
  };
  ChunkBuffer.prototype.duplicate_0 = function () {
    var tmp0_elvis_lhs = this._get_origin__7();
    var tmp0_let_0 = tmp0_elvis_lhs == null ? this : tmp0_elvis_lhs;
    tmp0_let_0.acquire_0();
    var tmp0_also_0_2 = new ChunkBuffer(this._get_memory__1(), tmp0_let_0, this._parentPool);
    this.duplicateTo_1(tmp0_also_0_2);
    return tmp0_also_0_2;
  };
  ChunkBuffer.prototype.release_8 = function (pool) {
    if (this.release_9()) {
      var origin = this._get_origin__7();
      if (!(origin == null)) {
        this.unlink_0();
        origin.release_8(pool);
      } else {
        var tmp0_elvis_lhs = this._parentPool;
        var poolToUse = tmp0_elvis_lhs == null ? pool : tmp0_elvis_lhs;
        poolToUse.recycle_14(this);
      }
    }};
  ChunkBuffer.prototype.unlink_0 = function () {
    if (!this._refCount.atomicfu$compareAndSet(0, -1)) {
      throw IllegalStateException_init_$Create$('Unable to unlink: buffer is in use.');
    }this.cleanNext_0();
    Unit_getInstance();
    _set_origin_(this, null);
  };
  ChunkBuffer.prototype.acquire_0 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_update_0 = this._refCount;
      while (true) {
        var cur_1 = tmp0_update_0._value_4;
        if (cur_1 <= 0)
          throw IllegalStateException_init_$Create$('Unable to acquire chunk: it is already released.');
        var upd_2 = cur_1 + 1 | 0;
        if (tmp0_update_0.atomicfu$compareAndSet(cur_1, upd_2)) {
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        }}
    }
     while (false);
  };
  ChunkBuffer.prototype.unpark_0 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_update_0 = this._refCount;
      while (true) {
        var cur_1 = tmp0_update_0._value_4;
        if (cur_1 < 0) {
          throw IllegalStateException_init_$Create$("This instance is already disposed and couldn't be borrowed.");
        }if (cur_1 > 0) {
          throw IllegalStateException_init_$Create$('This instance is already in use but somehow appeared in the pool.');
        }var upd_2 = 1;
        if (tmp0_update_0.atomicfu$compareAndSet(cur_1, upd_2)) {
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        }}
    }
     while (false);
  };
  ChunkBuffer.prototype.release_9 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_updateAndGet_0 = this._refCount;
      while (true) {
        var cur_1 = tmp0_updateAndGet_0._value_4;
        if (cur_1 <= 0)
          throw IllegalStateException_init_$Create$('Unable to release: it is already released.');
        var upd_2 = cur_1 - 1 | 0;
        if (tmp0_updateAndGet_0.atomicfu$compareAndSet(cur_1, upd_2)) {
          tmp$ret$0 = upd_2;
          break l$ret$1;
        }}
    }
     while (false);
    return tmp$ret$0 === 0;
  };
  ChunkBuffer.prototype.reset_2 = function () {
    var tmp0_require_0 = this._get_origin__7() == null;
    if (!tmp0_require_0) {
      var m_2 = new _no_name_provided__3_15();
      m_2.doFail_4_14();
    }Buffer_0.prototype.reset_2.call(this);
    this._set_attachment__1(null);
    this._nextRef._value_2 = null;
  };
  ChunkBuffer.$metadata$ = {
    simpleName: 'ChunkBuffer',
    kind: 'class',
    interfaces: []
  };
  function isExclusivelyOwned(_this_) {
    return _this_._get_referenceCount__0() === 1;
  }
  function origin$factory() {
    return getPropertyCallableRef('origin', 1, KMutableProperty1, function (receiver) {
      return receiver._get_origin__7();
    }, function (receiver_0, value) {
      return _set_origin_(receiver_0, value);
    });
  }
  function origin$factory_0() {
    return getPropertyCallableRef('origin', 1, KMutableProperty1, function (receiver) {
      return receiver._get_origin__7();
    }, function (receiver_0, value) {
      return _set_origin_(receiver_0, value);
    });
  }
  function failLongToIntConversion(value, name) {
    throw IllegalArgumentException_init_$Create$_0('' + 'Long value ' + value + ' of ' + name + " doesn't fit into 32-bit integer");
  }
  function RequireFailureCapture() {
  }
  RequireFailureCapture.$metadata$ = {
    simpleName: 'RequireFailureCapture',
    kind: 'class',
    interfaces: []
  };
  function _EncodeResult___init__impl_(value) {
    return value;
  }
  function _EncodeResult___get_value__impl_(this_0) {
    return this_0;
  }
  function _EncodeResult___init__impl__0(characters, bytes) {
    var tmp = (_UShort___get_data__impl_(characters) & 65535) << 16;
    var tmp_0 = _EncodeResult___init__impl_(tmp | _UShort___get_data__impl_(bytes) & 65535);
    return tmp_0;
  }
  function encodeUTF8(_this_, text, from, to_1, dstOffset, dstLimit) {
    Companion_getInstance_7();
    var tmp0_toInt_0 = _UShort___init__impl_(-1);
    var tmp1_minOf_0 = from + (_UShort___get_data__impl_(tmp0_toInt_0) & 65535) | 0;
    var lastCharIndex = function () {
      var $externalVarargReceiverTmp = Math;
      return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([to_1, tmp1_minOf_0]))));
    }.call(this);
    Companion_getInstance_7();
    var tmp2_toInt_0 = _UShort___init__impl_(-1);
    var resultLimit = coerceAtMost(dstLimit, _UShort___get_data__impl_(tmp2_toInt_0) & 65535);
    var resultPosition = dstOffset;
    var index = from;
    $l$break: do {
      if (resultPosition >= resultLimit ? true : index >= lastCharIndex) {
        var tmp3_toUShort_0 = index - from | 0;
        var tmp = _UShort___init__impl_(toShort(tmp3_toUShort_0));
        var tmp4_toUShort_0 = resultPosition - dstOffset | 0;
        return _EncodeResult___init__impl__0(tmp, _UShort___init__impl_(toShort(tmp4_toUShort_0)));
      }var tmp0 = index;
      index = tmp0 + 1 | 0;
      var character = charSequenceGet(text, tmp0).toInt_5() & 65535;
      if ((character & 65408) === 0) {
        var tmp1 = resultPosition;
        resultPosition = tmp1 + 1 | 0;
        var tmp5_storeAt_0 = tmp1;
        var tmp6_storeAt_0 = toByte(character);
        _this_._view.setInt8(tmp5_storeAt_0, tmp6_storeAt_0);
      } else {
        break $l$break;
      }
    }
     while (true);
    var tmp2 = index;
    index = tmp2 - 1 | 0;
    Unit_getInstance();
    return encodeUTF8Stage1(_this_, text, index, lastCharIndex, from, resultPosition, resultLimit, dstOffset);
  }
  function encodeUTF8Stage1(_this_, text, index1, lastCharIndex, from, resultPosition1, resultLimit, dstOffset) {
    var index = index1;
    var resultPosition = resultPosition1;
    var stage1Limit = resultLimit - 3 | 0;
    $l$break: do {
      var freeSpace = stage1Limit - resultPosition | 0;
      if (freeSpace <= 0 ? true : index >= lastCharIndex) {
        break $l$break;
      }var tmp0 = index;
      index = tmp0 + 1 | 0;
      var character = charSequenceGet(text, tmp0);
      var tmp;
      if (isHighSurrogate(character)) {
        var tmp_0;
        if (index === lastCharIndex ? true : !isLowSurrogate(charSequenceGet(text, index))) {
          tmp_0 = 63;
        } else {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          tmp_0 = codePoint(character, charSequenceGet(text, tmp1));
        }
        tmp = tmp_0;
      } else {
        tmp = character.toInt_5();
      }
      var codepoint = tmp;
      var tmp0_putUtf8Char_0 = resultPosition;
      var tmp_1;
      if (0 <= codepoint ? codepoint <= 127 : false) {
        var tmp0_storeAt_0_1 = toByte(codepoint);
        _this_._view.setInt8(tmp0_putUtf8Char_0, tmp0_storeAt_0_1);
        tmp_1 = 1;
      } else if (128 <= codepoint ? codepoint <= 2047 : false) {
        var tmp1_set_0_2 = toByte(192 | codepoint >> 6 & 31);
        _this_._view.setInt8(tmp0_putUtf8Char_0, tmp1_set_0_2);
        var tmp2_set_0_3 = tmp0_putUtf8Char_0 + 1 | 0;
        var tmp3_set_0_4 = toByte(128 | codepoint & 63);
        _this_._view.setInt8(tmp2_set_0_3, tmp3_set_0_4);
        tmp_1 = 2;
      } else if (2048 <= codepoint ? codepoint <= 65535 : false) {
        var tmp4_set_0_5 = toByte(224 | codepoint >> 12 & 15);
        _this_._view.setInt8(tmp0_putUtf8Char_0, tmp4_set_0_5);
        var tmp5_set_0_6 = tmp0_putUtf8Char_0 + 1 | 0;
        var tmp6_set_0_7 = toByte(128 | codepoint >> 6 & 63);
        _this_._view.setInt8(tmp5_set_0_6, tmp6_set_0_7);
        var tmp7_set_0_8 = tmp0_putUtf8Char_0 + 2 | 0;
        var tmp8_set_0_9 = toByte(128 | codepoint & 63);
        _this_._view.setInt8(tmp7_set_0_8, tmp8_set_0_9);
        tmp_1 = 3;
      } else if (65536 <= codepoint ? codepoint <= 1114111 : false) {
        var tmp9_set_0_10 = toByte(240 | codepoint >> 18 & 7);
        _this_._view.setInt8(tmp0_putUtf8Char_0, tmp9_set_0_10);
        var tmp10_set_0_11 = tmp0_putUtf8Char_0 + 1 | 0;
        var tmp11_set_0_12 = toByte(128 | codepoint >> 12 & 63);
        _this_._view.setInt8(tmp10_set_0_11, tmp11_set_0_12);
        var tmp12_set_0_13 = tmp0_putUtf8Char_0 + 2 | 0;
        var tmp13_set_0_14 = toByte(128 | codepoint >> 6 & 63);
        _this_._view.setInt8(tmp12_set_0_13, tmp13_set_0_14);
        var tmp14_set_0_15 = tmp0_putUtf8Char_0 + 3 | 0;
        var tmp15_set_0_16 = toByte(128 | codepoint & 63);
        _this_._view.setInt8(tmp14_set_0_15, tmp15_set_0_16);
        tmp_1 = 4;
      } else {
        malformedCodePoint(codepoint);
      }
      var size_0 = tmp_1;
      resultPosition = resultPosition + size_0 | 0;
    }
     while (true);
    if (resultPosition === stage1Limit) {
      return encodeUTF8Stage2(_this_, text, index, lastCharIndex, from, resultPosition, resultLimit, dstOffset);
    }var tmp1_toUShort_0 = index - from | 0;
    var tmp_2 = _UShort___init__impl_(toShort(tmp1_toUShort_0));
    var tmp2_toUShort_0 = resultPosition - dstOffset | 0;
    return _EncodeResult___init__impl__0(tmp_2, _UShort___init__impl_(toShort(tmp2_toUShort_0)));
  }
  function malformedCodePoint(value) {
    throw IllegalArgumentException_init_$Create$_0('' + 'Malformed code-point ' + value + ' found');
  }
  function codePoint(high, low) {
    var highValue = high.toInt_5() - 55232 | 0;
    var lowValue = low.toInt_5() - 56320 | 0;
    return highValue << 10 | lowValue;
  }
  function encodeUTF8Stage2(_this_, text, index1, lastCharIndex, from, resultPosition1, resultLimit, dstOffset) {
    var index = index1;
    var resultPosition = resultPosition1;
    $l$break_0: do {
      var freeSpace = resultLimit - resultPosition | 0;
      if (freeSpace <= 0 ? true : index >= lastCharIndex) {
        break $l$break_0;
      }var tmp0 = index;
      index = tmp0 + 1 | 0;
      var character = charSequenceGet(text, tmp0);
      var tmp;
      if (!isHighSurrogate(character)) {
        tmp = character.toInt_5();
      } else {
        var tmp_0;
        if (index === lastCharIndex ? true : !isLowSurrogate(charSequenceGet(text, index))) {
          tmp_0 = 63;
        } else {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          tmp_0 = codePoint(character, charSequenceGet(text, tmp1));
        }
        tmp = tmp_0;
      }
      var codepoint = tmp;
      var tmp_1;
      if (1 <= codepoint ? codepoint <= 127 : false) {
        tmp_1 = 1;
      } else if (128 <= codepoint ? codepoint <= 2047 : false) {
        tmp_1 = 2;
      } else if (2048 <= codepoint ? codepoint <= 65535 : false) {
        tmp_1 = 3;
      } else if (65536 <= codepoint ? codepoint <= 1114111 : false) {
        tmp_1 = 4;
      } else {
        malformedCodePoint(codepoint);
      }
      if (tmp_1 > freeSpace) {
        var tmp2 = index;
        index = tmp2 - 1 | 0;
        Unit_getInstance();
        break $l$break_0;
      } else {
      }
      var tmp0_putUtf8Char_0 = resultPosition;
      var tmp_2;
      if (0 <= codepoint ? codepoint <= 127 : false) {
        var tmp0_storeAt_0_1 = toByte(codepoint);
        _this_._view.setInt8(tmp0_putUtf8Char_0, tmp0_storeAt_0_1);
        tmp_2 = 1;
      } else if (128 <= codepoint ? codepoint <= 2047 : false) {
        var tmp1_set_0_2 = toByte(192 | codepoint >> 6 & 31);
        _this_._view.setInt8(tmp0_putUtf8Char_0, tmp1_set_0_2);
        var tmp2_set_0_3 = tmp0_putUtf8Char_0 + 1 | 0;
        var tmp3_set_0_4 = toByte(128 | codepoint & 63);
        _this_._view.setInt8(tmp2_set_0_3, tmp3_set_0_4);
        tmp_2 = 2;
      } else if (2048 <= codepoint ? codepoint <= 65535 : false) {
        var tmp4_set_0_5 = toByte(224 | codepoint >> 12 & 15);
        _this_._view.setInt8(tmp0_putUtf8Char_0, tmp4_set_0_5);
        var tmp5_set_0_6 = tmp0_putUtf8Char_0 + 1 | 0;
        var tmp6_set_0_7 = toByte(128 | codepoint >> 6 & 63);
        _this_._view.setInt8(tmp5_set_0_6, tmp6_set_0_7);
        var tmp7_set_0_8 = tmp0_putUtf8Char_0 + 2 | 0;
        var tmp8_set_0_9 = toByte(128 | codepoint & 63);
        _this_._view.setInt8(tmp7_set_0_8, tmp8_set_0_9);
        tmp_2 = 3;
      } else if (65536 <= codepoint ? codepoint <= 1114111 : false) {
        var tmp9_set_0_10 = toByte(240 | codepoint >> 18 & 7);
        _this_._view.setInt8(tmp0_putUtf8Char_0, tmp9_set_0_10);
        var tmp10_set_0_11 = tmp0_putUtf8Char_0 + 1 | 0;
        var tmp11_set_0_12 = toByte(128 | codepoint >> 12 & 63);
        _this_._view.setInt8(tmp10_set_0_11, tmp11_set_0_12);
        var tmp12_set_0_13 = tmp0_putUtf8Char_0 + 2 | 0;
        var tmp13_set_0_14 = toByte(128 | codepoint >> 6 & 63);
        _this_._view.setInt8(tmp12_set_0_13, tmp13_set_0_14);
        var tmp14_set_0_15 = tmp0_putUtf8Char_0 + 3 | 0;
        var tmp15_set_0_16 = toByte(128 | codepoint & 63);
        _this_._view.setInt8(tmp14_set_0_15, tmp15_set_0_16);
        tmp_2 = 4;
      } else {
        malformedCodePoint(codepoint);
      }
      var size_0 = tmp_2;
      resultPosition = resultPosition + size_0 | 0;
    }
     while (true);
    var tmp1_toUShort_0 = index - from | 0;
    var tmp_3 = _UShort___init__impl_(toShort(tmp1_toUShort_0));
    var tmp2_toUShort_0 = resultPosition - dstOffset | 0;
    return _EncodeResult___init__impl__0(tmp_3, _UShort___init__impl_(toShort(tmp2_toUShort_0)));
  }
  function MalformedUTF8InputException(message) {
    Exception_init_$Init$_0(message, this);
    captureStack(this, MalformedUTF8InputException);
  }
  MalformedUTF8InputException.$metadata$ = {
    simpleName: 'MalformedUTF8InputException',
    kind: 'class',
    interfaces: []
  };
  function malformedByteCount(byteCount) {
    throw new MalformedUTF8InputException('' + 'Expected ' + byteCount + ' more character bytes');
  }
  function isBmpCodePoint(cp) {
    return cp >>> 16 === 0;
  }
  function isValidCodePoint(codePoint_0) {
    return codePoint_0 <= 1114111;
  }
  function highSurrogate(cp) {
    return (cp >>> 10) + 55232 | 0;
  }
  function lowSurrogate(cp) {
    return (cp & 1023) + 56320 | 0;
  }
  var EmptyByteArray;
  function prepareWriteHead(_this_, capacity, current) {
    if (_this_ instanceof AbstractOutput) {
      if (!(current == null)) {
        _this_.afterHeadWrite_2();
      }return _this_.prepareWriteHead_2(capacity);
    } else {
    }
    return prepareWriteHeadFallback(_this_, current);
  }
  function afterHeadWrite(_this_, current) {
    if (_this_ instanceof AbstractOutput) {
      return _this_.afterHeadWrite_2();
    } else {
    }
    afterWriteHeadFallback(_this_, current);
  }
  function prepareReadFirstHead(_this_, minSize) {
    if (_this_ instanceof AbstractInput) {
      return _this_.prepareReadHead_2(minSize);
    } else {
    }
    if (_this_ instanceof ChunkBuffer) {
      var tmp;
      var tmp0_canRead_0 = _this_;
      if (tmp0_canRead_0._get_writePosition__1() > tmp0_canRead_0._get_readPosition__1()) {
        tmp = _this_;
      } else {
        {
          tmp = null;
        }
      }
      return tmp;
    } else {
    }
    return prepareReadHeadFallback(_this_, minSize);
  }
  function completeReadHead(_this_, current) {
    if (current === _this_) {
      return Unit_getInstance();
    }if (_this_ instanceof AbstractInput) {
      if (!(current._get_writePosition__1() > current._get_readPosition__1())) {
        _this_.ensureNext_2(current);
        Unit_getInstance();
      } else {
        var tmp = current._capacity_0 - current._get_limit__1() | 0;
        Companion_getInstance_17();
        if (tmp < 8) {
          _this_.fixGapAfterRead_2(current);
        } else {
          {
            _this_._set_headPosition__2(current._get_readPosition__1());
          }
        }
      }
      return Unit_getInstance();
    } else {
    }
    completeReadHeadFallback(_this_, current);
  }
  function prepareWriteHeadFallback(_this_, current) {
    if (!(current == null)) {
      writeFully$default_0(_this_, current, 0, 2, null);
      current.resetForWrite_3();
      return current;
    }return Companion_getInstance_20()._Pool.borrow_12();
  }
  function afterWriteHeadFallback(_this_, current) {
    writeFully$default_0(_this_, current, 0, 2, null);
    current.release_8(Companion_getInstance_20()._Pool);
  }
  function prepareReadHeadFallback(_this_, minSize) {
    if (_this_._get_endOfInput__4())
      return null;
    var buffer = Companion_getInstance_20()._Pool.borrow_12();
    var tmp = buffer._get_memory__1();
    var tmp_0 = toLong_0(buffer._get_writePosition__1());
    var tmp_1 = new Long(0, 0);
    var tmp_2 = toLong_0(minSize);
    var copied = _this_.peekTo_4(tmp, tmp_0, tmp_1, tmp_2, toLong_0(buffer._get_limit__1() - buffer._get_writePosition__1() | 0)).toInt_5();
    buffer.commitWritten_1(copied);
    if (copied < minSize) {
      prematureEndOfStream(minSize);
    }return buffer;
  }
  function completeReadHeadFallback(_this_, current) {
    var tmp = current._get_capacity__1();
    var tmp_0 = tmp - (current._get_limit__1() - current._get_writePosition__1() | 0) | 0;
    var discardAmount = tmp_0 - (current._get_writePosition__1() - current._get_readPosition__1() | 0) | 0;
    discardExact(_this_, discardAmount);
    current.release_8(Companion_getInstance_20()._Pool);
  }
  function prepareReadNextHead(_this_, current) {
    if (current === _this_) {
      var tmp;
      var tmp0_canRead_0 = _this_;
      if (tmp0_canRead_0._get_writePosition__1() > tmp0_canRead_0._get_readPosition__1()) {
        tmp = _this_;
      } else {
        {
          tmp = null;
        }
      }
      return tmp;
    }if (_this_ instanceof AbstractInput) {
      return _this_.ensureNextHead_2(current);
    } else {
    }
    return prepareNextReadHeadFallback(_this_, current);
  }
  function prepareNextReadHeadFallback(_this_, current) {
    var tmp = current._get_capacity__1();
    var tmp_0 = tmp - (current._get_limit__1() - current._get_writePosition__1() | 0) | 0;
    var discardAmount = tmp_0 - (current._get_writePosition__1() - current._get_readPosition__1() | 0) | 0;
    discardExact(_this_, discardAmount);
    current.resetForWrite_3();
    var tmp_1;
    if (_this_._get_endOfInput__4()) {
      tmp_1 = true;
    } else {
      tmp_1 = peekTo$default(_this_, current, 0, 0, 0, 14, null) <= 0;
    }
    if (tmp_1) {
      current.release_8(Companion_getInstance_20()._Pool);
      return null;
    } else {
    }
    return current;
  }
  function unsafeAppend(_this_, builder) {
    var builderSize = builder._get_size__48();
    var tmp0_elvis_lhs = builder.stealAll_4();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return 0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var builderHead = tmp;
    if ((builderSize <= PACKET_MAX_COPY_SIZE ? builderHead._get_next__1() == null : false) ? _this_.tryWriteAppend_0(builderHead) : false) {
      builder.afterBytesStolen_0();
      return builderSize;
    }_this_.append_20(builderHead);
    return builderSize;
  }
  function checkPeekTo(destination, offset, min, max) {
    var tmp0_require_0 = offset >= 0;
    if (!tmp0_require_0) {
      var m_1 = new _no_name_provided__2_0(offset);
      m_1.doFail_3_4();
    }var tmp1_require_0 = min >= 0;
    if (!tmp1_require_0) {
      var m_1_0 = new _no_name_provided__2_1(min);
      m_1_0.doFail_3_4();
    }var tmp2_require_0 = max >= min;
    if (!tmp2_require_0) {
      var m_1_1 = new _no_name_provided__2_2(max, min);
      m_1_1.doFail_3_4();
    }var tmp3_require_0 = min <= (destination._get_limit__1() - destination._get_writePosition__1() | 0);
    if (!tmp3_require_0) {
      var m_1_2 = new _no_name_provided__2_3(min, destination);
      m_1_2.doFail_3_4();
    }}
  function _no_name_provided__2_0($offset) {
    this._$offset = $offset;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__2_0.prototype.doFail_3_4 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "offset shouldn't be negative: " + this._$offset + '.');
  };
  _no_name_provided__2_0.$metadata$ = {
    simpleName: '<no name provided>_2',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__2_1($min) {
    this._$min = $min;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__2_1.prototype.doFail_3_4 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "min shouldn't be negative: " + this._$min + '.');
  };
  _no_name_provided__2_1.$metadata$ = {
    simpleName: '<no name provided>_2',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__2_2($max, $min) {
    this._$max = $max;
    this._$min_0 = $min;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__2_2.prototype.doFail_3_4 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + "max should't be less than min: max = " + this._$max + ', min = ' + this._$min_0 + '.');
  };
  _no_name_provided__2_2.$metadata$ = {
    simpleName: '<no name provided>_2',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__2_3($min, $destination) {
    this._$min_1 = $min;
    this._$destination = $destination;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__2_3.prototype.doFail_3_4 = function () {
    throw IllegalArgumentException_init_$Create$_0('Not enough free space in the destination buffer ' + ('' + 'to write the specified minimum number of bytes: min = ' + this._$min_1 + ', free = ' + (this._$destination._get_limit__1() - this._$destination._get_writePosition__1() | 0) + '.'));
  };
  _no_name_provided__2_3.$metadata$ = {
    simpleName: '<no name provided>_2',
    kind: 'class',
    interfaces: []
  };
  function trySuspend_0($this, $cont) {
    var tmp = new $trySuspendCOROUTINE$55($this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function $sleepCOROUTINE$54(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__15 = _this_;
  }
  $sleepCOROUTINE$54.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            this._state_0 = 1;
            suspendResult = trySuspend_0(this.__this__15, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            if (suspendResult) {
              return Unit_getInstance();
            } else {
              this._state_0 = 2;
              continue $sm;
            }

            break;
          case 2:
            this.__this__15.resume_3();
            return Unit_getInstance();
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $sleepCOROUTINE$54.$metadata$ = {
    simpleName: '$sleepCOROUTINE$54',
    kind: 'class',
    interfaces: []
  };
  function $trySuspendCOROUTINE$55(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__16 = _this_;
  }
  $trySuspendCOROUTINE$55.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            this._suspended0 = false;
            var tmp_0 = this;
            tmp_0._job1 = Job$default(null, 1, null);
            if (this.__this__16._suspension.atomicfu$compareAndSet(null, this._job1)) {
              this._suspended0 = true;
              this._state_0 = 1;
              suspendResult = this._job1.join_3(this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              this._state_0 = 2;
              continue $sm;
            }

            break;
          case 1:
            suspendResult;
            this._state_0 = 2;
            continue $sm;
          case 2:
            return this._suspended0;
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $trySuspendCOROUTINE$55.$metadata$ = {
    simpleName: '$trySuspendCOROUTINE$55',
    kind: 'class',
    interfaces: []
  };
  function AwaitingSlot() {
    this._suspension = atomic(null);
    makeShared(this);
  }
  AwaitingSlot.prototype.sleep = function ($cont) {
    var tmp = new $sleepCOROUTINE$54(this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  AwaitingSlot.prototype.resume_3 = function () {
    var tmp0_safe_receiver = this._suspension.atomicfu$getAndSet(null);
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver.complete_3();
    Unit_getInstance();
  };
  AwaitingSlot.prototype.cancel_23 = function (cause) {
    var tmp0_elvis_lhs = this._suspension.atomicfu$getAndSet(null);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var continuation = tmp;
    if (!(cause == null)) {
      continuation.completeExceptionally_3(cause);
      Unit_getInstance();
    } else {
      continuation.complete_3();
      Unit_getInstance();
    }
  };
  AwaitingSlot.$metadata$ = {
    simpleName: 'AwaitingSlot',
    kind: 'class',
    interfaces: []
  };
  function copyToSequentialImpl(_this_, dst, limit, $cont) {
    var tmp = new $copyToSequentialImplCOROUTINE$56(_this_, dst, limit, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function copyToTail(_this_, dst, limit, $cont) {
    var tmp = new $copyToTailCOROUTINE$57(_this_, dst, limit, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function $copyToSequentialImplCOROUTINE$56(_this_, dst, limit, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__17 = _this_;
    this._dst_1 = dst;
    this._limit_2 = limit;
  }
  $copyToSequentialImplCOROUTINE$56.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 10;
            var tmp_0 = this;
            tmp_0._tmp0_require_00_0 = !(this.__this__17 === this._dst_1);
            if (!this._tmp0_require_00_0) {
              var message_2_1 = 'Failed requirement.';
              throw IllegalArgumentException_init_$Create$_0(toString_1(message_2_1));
            }
            if (!(this.__this__17._get_closedCause__1() == null)) {
              this._dst_1.close_27(this.__this__17._get_closedCause__1());
              Unit_getInstance();
              return new Long(0, 0);
            }
            this._remainingLimit1 = this._limit_2;
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (!(this._remainingLimit1.compareTo_59(new Long(0, 0)) > 0)) {
              this._state_0 = 9;
              continue $sm;
            }
            this._state_0 = 2;
            suspendResult = this.__this__17.awaitInternalAtLeast1_0(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            this._ARGUMENT2 = suspendResult;
            if (!this._ARGUMENT2) {
              this._state_0 = 9;
              continue $sm;
            } else {
              this._state_0 = 3;
              continue $sm;
            }

            break;
          case 3:
            this._transferred3 = this.__this__17.transferTo_0(this._dst_1, this._remainingLimit1);
            if (this._transferred3.equals(new Long(0, 0))) {
              this._state_0 = 6;
              suspendResult = copyToTail(this.__this__17, this._dst_1, this._remainingLimit1, this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              if (this._dst_1._get_availableForWrite__0() === 0) {
                this._state_0 = 4;
                suspendResult = this._dst_1.awaitAtLeastNBytesAvailableForWrite_0(1, this);
                if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                  return suspendResult;
                }continue $sm;
              } else {
                this._state_0 = 5;
                continue $sm;
              }
              Unit_getInstance();
            }

            break;
          case 4:
            suspendResult;
            this._state_0 = 5;
            continue $sm;
          case 5:
            this._WHEN_RESULT4 = this._transferred3;
            this._state_0 = 8;
            continue $sm;
          case 6:
            var tail = suspendResult;
            if (tail.equals(new Long(0, 0))) {
              this._state_0 = 9;
              continue $sm;
            } else {
              this._state_0 = 7;
              continue $sm;
            }

            break;
          case 7:
            this._WHEN_RESULT4 = tail;
            this._state_0 = 8;
            continue $sm;
          case 8:
            var copied = this._WHEN_RESULT4;
            this._remainingLimit1 = this._remainingLimit1.minus_30(copied);
            this._state_0 = 1;
            continue $sm;
          case 9:
            return this._limit_2.minus_30(this._remainingLimit1);
          case 10:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 10) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $copyToSequentialImplCOROUTINE$56.$metadata$ = {
    simpleName: '$copyToSequentialImplCOROUTINE$56',
    kind: 'class',
    interfaces: []
  };
  function $copyToTailCOROUTINE$57(_this_, dst, limit, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__18 = _this_;
    this._dst_2 = dst;
    this._limit_3 = limit;
  }
  $copyToTailCOROUTINE$57.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 9;
            this._lastPiece0 = Companion_getInstance_20()._Pool.borrow_12();
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._state_0 = 2;
            continue $sm;
          case 2:
            this._exceptionState = 8;
            this._lastPiece0.resetForWrite_4(coerceAtMost_0(this._limit_3, toLong_0(this._lastPiece0._get_capacity__1())).toInt_5());
            this._state_0 = 3;
            suspendResult = this.__this__18.readAvailable_0(this._lastPiece0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            this._rc3 = suspendResult;
            if (this._rc3 === -1) {
              this._lastPiece0.release_8(Companion_getInstance_20()._Pool);
              this._tmp$ret$02 = new Long(0, 0);
              this._exceptionState = 9;
              this._state_0 = 6;
              continue $sm;
            } else {
              this._state_0 = 4;
              continue $sm;
            }

            break;
          case 4:
            this._state_0 = 5;
            suspendResult = this._dst_2.writeFully_1(this._lastPiece0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 5:
            suspendResult;
            this._tmp$ret$02 = toLong_0(this._rc3);
            this._exceptionState = 9;
            this._state_0 = 6;
            var tmp_0 = this;
            continue $sm;
          case 6:
            var tmp_1 = this._tmp$ret$02;
            this._lastPiece0.release_8(Companion_getInstance_20()._Pool);
            return tmp_1;
          case 7:
            this._lastPiece0.release_8(Companion_getInstance_20()._Pool);
            return Unit_getInstance();
          case 8:
            this._exceptionState = 9;
            var t = this._exception_0;
            this._lastPiece0.release_8(Companion_getInstance_20()._Pool);
            throw t;
          case 9:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 9) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $copyToTailCOROUTINE$57.$metadata$ = {
    simpleName: '$copyToTailCOROUTINE$57',
    kind: 'class',
    interfaces: []
  };
  function ObjectPool() {
  }
  ObjectPool.prototype.close_40 = function () {
    this.dispose_29();
  };
  ObjectPool.$metadata$ = {
    simpleName: 'ObjectPool',
    kind: 'interface',
    interfaces: [Closeable]
  };
  function NoPoolImpl() {
  }
  NoPoolImpl.prototype.recycle_14 = function (instance) {
  };
  NoPoolImpl.prototype.dispose_29 = function () {
  };
  NoPoolImpl.$metadata$ = {
    simpleName: 'NoPoolImpl',
    kind: 'class',
    interfaces: [ObjectPool]
  };
  function copyTo(_this_, dst, limit, $cont) {
    var tmp = _this_ instanceof ByteChannelSequentialBase ? _this_ : THROW_CCE();
    return copyToSequentialImpl(tmp, dst instanceof ByteChannelSequentialBase ? dst : THROW_CCE(), limit, $cont);
  }
  function _no_name_provided__65(this$0) {
    this._this$0_19 = this$0;
  }
  _no_name_provided__65.prototype.invoke_310 = function (cause) {
    this._this$0_19._attachedJob = null;
    if (!(cause == null)) {
      this._this$0_19.cancel_25(cause);
      Unit_getInstance();
    }};
  _no_name_provided__65.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__65.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function ByteChannelJS(initial, autoFlush) {
    ByteChannelSequentialBase_init_$Init$(initial, autoFlush, null, 4, null, this);
    this._attachedJob = null;
  }
  ByteChannelJS.prototype.attachJob_1 = function (job) {
    var tmp0_safe_receiver = this._attachedJob;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.cancel$default_17(null, 1, null);
      Unit_getInstance();
    }
    Unit_getInstance();
    this._attachedJob = job;
    job.invokeOnCompletion$default_11(true, false, _no_name_provided_$factory_47(this), 2, null);
    Unit_getInstance();
  };
  ByteChannelJS.prototype.toString = function () {
    return '' + 'ByteChannel[' + this._attachedJob + ', ' + hashCode(this) + ']';
  };
  ByteChannelJS.$metadata$ = {
    simpleName: 'ByteChannelJS',
    kind: 'class',
    interfaces: []
  };
  function ByteChannel_0(autoFlush) {
    return new ByteChannelJS(Companion_getInstance_25()._Empty_1, autoFlush);
  }
  function ByteChannel$default(autoFlush, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      autoFlush = false;
    return ByteChannel_0(autoFlush);
  }
  function ByteReadChannel_0(content, offset, length) {
    if (content.length === 0)
      return Companion_getInstance_21()._get_Empty__1();
    else {
    }
    var head = Companion_getInstance_25()._Pool_0.borrow_12();
    var tail = head;
    var start = offset;
    var end = start + length | 0;
    $l$break: while (true) {
      tail.reserveEndGap_1(8);
      var tmp1_minOf_0 = end - start | 0;
      var tmp0__get_writeRemaining__0 = tail;
      var tmp2_minOf_0 = tmp0__get_writeRemaining__0._get_limit__1() - tmp0__get_writeRemaining__0._get_writePosition__1() | 0;
      var size_0 = function () {
        var $externalVarargReceiverTmp = Math;
        return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp1_minOf_0, tmp2_minOf_0]))));
      }.call(this);
      writeFully_0(tail instanceof Buffer_0 ? tail : THROW_CCE(), content, start, size_0);
      start = start + size_0 | 0;
      if (start === end)
        break $l$break;
      var current = tail;
      tail = Companion_getInstance_25()._Pool_0.borrow_12();
      current._set_next__0(tail);
    }
    var tmp3_apply_0 = new ByteChannelJS(head, false);
    close(tmp3_apply_0);
    Unit_getInstance();
    return tmp3_apply_0;
  }
  function _no_name_provided_$factory_47(this$0) {
    var i = new _no_name_provided__65(this$0);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function ByteChannelSequentialBaseSharedState() {
    this._closed = false;
    this._readByteOrder = ByteOrder_BIG_ENDIAN_getInstance();
    this._writeByteOrder = ByteOrder_BIG_ENDIAN_getInstance();
    this._totalBytesRead = new Long(0, 0);
    this._totalBytesWritten = new Long(0, 0);
    this._closedCause = null;
    this._lastReadAvailable = 0;
    this._lastReadView = Companion_getInstance_20()._get_Empty__1();
  }
  ByteChannelSequentialBaseSharedState.$metadata$ = {
    simpleName: 'ByteChannelSequentialBaseSharedState',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__66() {
  }
  _no_name_provided__66.prototype.invoke_411 = function () {
    var tmp0_apply_0 = new ByteChannelJS(Companion_getInstance_25()._Empty_1, false);
    tmp0_apply_0.close_27(null);
    Unit_getInstance();
    return tmp0_apply_0;
  };
  _no_name_provided__66.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function Companion_22() {
    Companion_instance_21 = this;
    var tmp = this;
    tmp._Empty$delegate = lazy(_no_name_provided_$factory_48());
  }
  Companion_22.prototype._get_Empty__1 = function () {
    var tmp0_getValue_0 = this._Empty$delegate;
    var tmp1_getValue_0 = Empty$factory();
    return tmp0_getValue_0._get_value__27();
  };
  Companion_22.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_21;
  function Companion_getInstance_21() {
    if (Companion_instance_21 == null)
      new Companion_22();
    return Companion_instance_21;
  }
  function ByteReadChannel_1() {
  }
  ByteReadChannel_1.$metadata$ = {
    simpleName: 'ByteReadChannel',
    kind: 'interface',
    interfaces: []
  };
  function Empty$factory() {
    return getPropertyCallableRef('Empty', 1, KProperty1, function (receiver) {
      return receiver._get_Empty__1();
    }, null);
  }
  function _no_name_provided_$factory_48() {
    var i = new _no_name_provided__66();
    return function () {
      return i.invoke_411();
    };
  }
  function ByteWriteChannel() {
  }
  ByteWriteChannel.$metadata$ = {
    simpleName: 'ByteWriteChannel',
    kind: 'interface',
    interfaces: []
  };
  function makeShared(_this_) {
  }
  function preventFreeze(_this_) {
  }
  function DefaultAllocator() {
    DefaultAllocator_instance = this;
  }
  DefaultAllocator.prototype.alloc_1 = function (size_0) {
    return new Memory(new DataView(new ArrayBuffer(size_0)));
  };
  DefaultAllocator.prototype.free_0 = function (instance) {
  };
  DefaultAllocator.$metadata$ = {
    simpleName: 'DefaultAllocator',
    kind: 'object',
    interfaces: [Allocator]
  };
  var DefaultAllocator_instance;
  function DefaultAllocator_getInstance() {
    if (DefaultAllocator_instance == null)
      new DefaultAllocator();
    return DefaultAllocator_instance;
  }
  function of(_this_, array, offset, length) {
    var typedArray = array;
    return of_0(Companion_getInstance_22(), typedArray, offset, length);
  }
  function of_0(_this_, view, offset, length) {
    return of_1(Companion_getInstance_22(), view.buffer, view.byteOffset + offset | 0, length);
  }
  function of_1(_this_, buffer, offset, length) {
    return new Memory(new DataView(buffer, offset, length));
  }
  function of$default(_this_, buffer, offset, length, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      length = buffer.byteLength - offset | 0;
    return of_1(_this_, buffer, offset, length);
  }
  function Companion_23() {
    Companion_instance_22 = this;
    this._Empty_0 = new Memory(new DataView(new ArrayBuffer(0)));
  }
  Companion_23.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_22;
  function Companion_getInstance_22() {
    if (Companion_instance_22 == null)
      new Companion_23();
    return Companion_instance_22;
  }
  function Memory(view) {
    Companion_getInstance_22();
    this._view = view;
  }
  Memory.prototype.slice_0 = function (offset, length) {
    var tmp0_require_0 = offset >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + "offset shouldn't be negative: " + offset;
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var tmp1_require_0 = length >= 0;
    if (!tmp1_require_0) {
      var message_1_0 = '' + "length shouldn't be negative: " + length;
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1_0));
    }var tmp = toLong_0(offset + length | 0);
    if (tmp.compareTo_59(toLong_0(this._view.byteLength)) > 0) {
      throw IndexOutOfBoundsException_init_$Create$_0('' + 'offset + length > size: ' + offset + ' + ' + length + ' > ' + toLong_0(this._view.byteLength));
    } else {
    }
    return new Memory(new DataView(this._view.buffer, this._view.byteOffset + offset | 0, length));
  };
  Memory.prototype.copyTo = function (destination, offset, length, destinationOffset) {
    var src = new Int8Array(this._view.buffer, this._view.byteOffset + offset | 0, length);
    var dst = new Int8Array(destination._view.buffer, destination._view.byteOffset + destinationOffset | 0, length);
    dst.set(src);
  };
  Memory.prototype.copyTo_0 = function (destination, offset, length, destinationOffset) {
    var tmp0_toIntOrFail_0 = 'offset';
    if (offset.compareTo_59(toLong_0(IntCompanionObject_getInstance()._MAX_VALUE_5)) >= 0) {
      failLongToIntConversion(offset, tmp0_toIntOrFail_0);
    }var tmp = offset.toInt_5();
    var tmp1_toIntOrFail_0 = 'length';
    if (length.compareTo_59(toLong_0(IntCompanionObject_getInstance()._MAX_VALUE_5)) >= 0) {
      failLongToIntConversion(length, tmp1_toIntOrFail_0);
    }var tmp_0 = length.toInt_5();
    var tmp2_toIntOrFail_0 = 'destinationOffset';
    if (destinationOffset.compareTo_59(toLong_0(IntCompanionObject_getInstance()._MAX_VALUE_5)) >= 0) {
      failLongToIntConversion(destinationOffset, tmp2_toIntOrFail_0);
    }this.copyTo(destination, tmp, tmp_0, destinationOffset.toInt_5());
  };
  Memory.$metadata$ = {
    simpleName: 'Memory',
    kind: 'class',
    interfaces: []
  };
  function copyTo_0(_this_, destination, offset, length, destinationOffset) {
    copyTo_1(_this_.buffer, destination, offset + _this_.byteOffset | 0, length, destinationOffset);
  }
  function copyTo_1(_this_, destination, offset, length, destinationOffset) {
    var from = new Int8Array(_this_, offset, length);
    var to_1 = new Int8Array(destination._view.buffer, destination._view.byteOffset + destinationOffset | 0, length);
    to_1.set(from, 0);
  }
  function copyTo_2(_this_, destination, offset, length, destinationOffset) {
    var to_1 = destination;
    var from = new Int8Array(_this_._view.buffer, _this_._view.byteOffset + offset | 0, length);
    to_1.set(from, destinationOffset);
  }
  var isLittleEndianPlatform;
  function Companion_24() {
    Companion_instance_23 = this;
  }
  Companion_24.prototype.forName = function (name) {
    switch (name) {
      case 'UTF-8':
      case 'utf-8':
      case 'UTF8':
      case 'utf8':
        return Charsets_getInstance()._UTF_8;
    }
    var tmp;
    var tmp_0;
    switch (name) {
      case 'ISO-8859-1':
      case 'iso-8859-1':
        tmp_0 = true;
        break;
      default:var tmp_1 = new Char(95);
        var tmp_2 = new Char(45);
        var tmp0_let_0 = replace$default(name, tmp_1, tmp_2, false, 4, null);
        var tmp_3;
        if (tmp0_let_0 === 'iso-8859-1') {
          tmp_3 = true;
        } else {
          tmp_3 = tmp0_let_0.toLowerCase() === 'iso-8859-1';
        }

        tmp_0 = tmp_3;
        break;
    }
    if (tmp_0) {
      tmp = true;
    } else {
      {
        tmp = name === 'latin1';
      }
    }
    if (tmp) {
      return Charsets_getInstance()._ISO_8859_1;
    } else {
    }
    throw IllegalArgumentException_init_$Create$_0('' + 'Charset ' + name + ' is not supported');
  };
  Companion_24.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_23;
  function Companion_getInstance_23() {
    if (Companion_instance_23 == null)
      new Companion_24();
    return Companion_instance_23;
  }
  function Charset(_name) {
    Companion_getInstance_23();
    this.__name = _name;
  }
  Charset.$metadata$ = {
    simpleName: 'Charset',
    kind: 'class',
    interfaces: []
  };
  function Charsets() {
    Charsets_instance = this;
    this._UTF_8 = new CharsetImpl('UTF-8');
    this._ISO_8859_1 = new CharsetImpl('ISO-8859-1');
  }
  Charsets.$metadata$ = {
    simpleName: 'Charsets',
    kind: 'object',
    interfaces: []
  };
  var Charsets_instance;
  function Charsets_getInstance() {
    if (Charsets_instance == null)
      new Charsets();
    return Charsets_instance;
  }
  function CharsetEncoder(_charset) {
    this.__charset = _charset;
  }
  CharsetEncoder.$metadata$ = {
    simpleName: 'CharsetEncoder',
    kind: 'class',
    interfaces: []
  };
  function decodeExactBytes(_this_, input, inputLength) {
    if (inputLength === 0)
      return '';
    var tmp;
    if (input instanceof AbstractInput) {
      var tmp0__get_headRemaining__0 = input;
      tmp = (tmp0__get_headRemaining__0._get_headEndExclusive__2() - tmp0__get_headRemaining__0._get_headPosition__2() | 0) >= inputLength;
    } else {
      {
        tmp = false;
      }
    }
    if (tmp) {
      var decoder = Decoder_0(_get_charset_(_this_).__name, true);
      var head = input._get_head__9();
      var view = input._get_headMemory__2()._view;
      var tmp$ret$0;
      l$ret$1: do {
        try {
          var subView_4 = (head._get_readPosition__1() === 0 ? inputLength === view.byteLength : false) ? view : new DataView(view.buffer, view.byteOffset + head._get_readPosition__1() | 0, inputLength);
          tmp$ret$0 = decoder.decode_7(subView_4);
          break l$ret$1;
        } catch ($p) {
          if ($p instanceof Error) {
            var tmp0_elvis_lhs_2 = $p.message;
            throw new MalformedInputException('' + 'Failed to decode bytes: ' + (tmp0_elvis_lhs_2 == null ? 'no cause provided' : tmp0_elvis_lhs_2));
          } else {
            {
              throw $p;
            }
          }
        }
      }
       while (false);
      var text = tmp$ret$0;
      input.discardExact_5(inputLength);
      return text;
    } else {
    }
    return decodeExactBytesSlow(_this_, input, inputLength);
  }
  function CharsetDecoder(_charset) {
    this.__charset_0 = _charset;
  }
  CharsetDecoder.$metadata$ = {
    simpleName: 'CharsetDecoder',
    kind: 'class',
    interfaces: []
  };
  function CharsetImpl(name) {
    Charset.call(this, name);
    this._name_1 = name;
  }
  CharsetImpl.prototype.newEncoder_0 = function () {
    return new CharsetEncoderImpl(this);
  };
  CharsetImpl.prototype.newDecoder_0 = function () {
    return new CharsetDecoderImpl(this);
  };
  CharsetImpl.prototype.toString = function () {
    return '' + 'CharsetImpl(name=' + this._name_1 + ')';
  };
  CharsetImpl.prototype.hashCode = function () {
    return getStringHashCode(this._name_1);
  };
  CharsetImpl.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CharsetImpl))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof CharsetImpl ? other : THROW_CCE();
    if (!(this._name_1 === tmp0_other_with_cast._name_1))
      return false;
    return true;
  };
  CharsetImpl.$metadata$ = {
    simpleName: 'CharsetImpl',
    kind: 'class',
    interfaces: []
  };
  function _get_charset_(_this_) {
    return _this_.__charset_0;
  }
  function decodeExactBytesSlow(_this_, input, inputLength) {
    var decoder = Decoder_0(_get_name_(_get_charset_(_this_)), true);
    var inputRemaining = inputLength;
    var sb = StringBuilder_init_$Create$(inputLength);
    var tmp$ret$16;
    l$ret$17: do {
      try {
        var tmp$ret$0;
        l$ret$1: do {
          var tmp0_takeWhileSize_0_4 = 6;
          var release_1_5 = true;
          var tmp0_elvis_lhs_3_7 = prepareReadFirstHead(input, tmp0_takeWhileSize_0_4);
          var tmp;
          if (tmp0_elvis_lhs_3_7 == null) {
            tmp$ret$0 = Unit_getInstance();
            break l$ret$1;
          } else {
            tmp = tmp0_elvis_lhs_3_7;
          }
          var current_2_6 = tmp;
          var size_4_8 = tmp0_takeWhileSize_0_4;
          try {
            $l$break: do {
              var tmp0__get_readRemaining__0_6_10 = current_2_6;
              var before_5_9 = tmp0__get_readRemaining__0_6_10._get_writePosition__1() - tmp0__get_readRemaining__0_6_10._get_readPosition__1() | 0;
              var after_7_11;
              if (before_5_9 >= size_4_8) {
                try {
                  var tmp1__anonymous__11_12 = current_2_6;
                  var chunkSize_12_13 = tmp1__anonymous__11_12._get_writePosition__1() - tmp1__anonymous__11_12._get_readPosition__1() | 0;
                  var tmp0_minOf_0_14_15 = inputRemaining;
                  var size_13_14 = function () {
                    var $externalVarargReceiverTmp = Math;
                    return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([chunkSize_12_13, tmp0_minOf_0_14_15]))));
                  }.call(this);
                  var tmp_0;
                  if (tmp1__anonymous__11_12._get_readPosition__1() === 0 ? tmp1__anonymous__11_12._memory._view.byteLength === size_13_14 : false) {
                    var tmp$ret$2;
                    l$ret$3: do {
                      var tmp1_decodeStream_0_16_17 = tmp1__anonymous__11_12._memory._view;
                      var tmp2_decodeStream_0_17_18 = true;
                      var tmp$ret$4;
                      l$ret$5: do {
                        try {
                          tmp$ret$2 = decoder.decode_8(tmp1_decodeStream_0_16_17, decodeOptions(tmp2_decodeStream_0_17_18));
                          break l$ret$3;
                        } catch ($p) {
                          if ($p instanceof Error) {
                            var tmp0_elvis_lhs_2_19_20 = $p.message;
                            throw new MalformedInputException('' + 'Failed to decode bytes: ' + (tmp0_elvis_lhs_2_19_20 == null ? 'no cause provided' : tmp0_elvis_lhs_2_19_20));
                          } else {
                            {
                              throw $p;
                            }
                          }
                        }
                      }
                       while (false);
                    }
                     while (false);
                    tmp_0 = tmp$ret$2;
                  } else {
                    var tmp$ret$6;
                    l$ret$7: do {
                      var tmp3_decodeStream_0_20_21 = new Int8Array(tmp1__anonymous__11_12._memory._view.buffer, tmp1__anonymous__11_12._memory._view.byteOffset + tmp1__anonymous__11_12._get_readPosition__1() | 0, size_13_14);
                      var tmp4_decodeStream_0_21_22 = true;
                      var tmp$ret$8;
                      l$ret$9: do {
                        try {
                          tmp$ret$6 = decoder.decode_8(tmp3_decodeStream_0_20_21, decodeOptions(tmp4_decodeStream_0_21_22));
                          break l$ret$7;
                        } catch ($p_0) {
                          if ($p_0 instanceof Error) {
                            var tmp0_elvis_lhs_2_23_24 = $p_0.message;
                            throw new MalformedInputException('' + 'Failed to decode bytes: ' + (tmp0_elvis_lhs_2_23_24 == null ? 'no cause provided' : tmp0_elvis_lhs_2_23_24));
                          } else {
                            {
                              throw $p_0;
                            }
                          }
                        }
                      }
                       while (false);
                    }
                     while (false);
                    tmp_0 = tmp$ret$6;
                  }
                  var text_15_16 = tmp_0;
                  sb.append_6(text_15_16);
                  Unit_getInstance();
                  tmp1__anonymous__11_12.discardExact_5(size_13_14);
                  inputRemaining = inputRemaining - size_13_14 | 0;
                  size_4_8 = inputRemaining > 0 ? 6 : 0;
                }finally {
                  var tmp1__get_readRemaining__0_8_25 = current_2_6;
                  after_7_11 = tmp1__get_readRemaining__0_8_25._get_writePosition__1() - tmp1__get_readRemaining__0_8_25._get_readPosition__1() | 0;
                }
              } else {
                after_7_11 = before_5_9;
              }
              release_1_5 = false;
              var tmp_1;
              if (after_7_11 === 0) {
                tmp_1 = prepareReadNextHead(input, current_2_6);
              } else {
                var tmp_2;
                if (after_7_11 < size_4_8) {
                  tmp_2 = true;
                } else {
                  var tmp2__get_endGap__0_10_27 = current_2_6;
                  var tmp_3 = tmp2__get_endGap__0_10_27._capacity_0 - tmp2__get_endGap__0_10_27._get_limit__1() | 0;
                  Companion_getInstance_17();
                  tmp_2 = tmp_3 < 8;
                }
                if (tmp_2) {
                  completeReadHead(input, current_2_6);
                  tmp_1 = prepareReadFirstHead(input, size_4_8);
                } else {
                  {
                    tmp_1 = current_2_6;
                  }
                }
              }
              var next_9_26 = tmp_1;
              if (next_9_26 == null) {
                break $l$break;
              }current_2_6 = next_9_26;
              release_1_5 = true;
            }
             while (size_4_8 > 0);
          }finally {
            if (release_1_5) {
              completeReadHead(input, current_2_6);
            }}
        }
         while (false);
        if (inputRemaining > 0) {
          var tmp$ret$10;
          l$ret$11: do {
            var release_1_28 = true;
            var tmp0_elvis_lhs_3_30 = prepareReadFirstHead(input, 1);
            var tmp_4;
            if (tmp0_elvis_lhs_3_30 == null) {
              tmp$ret$10 = Unit_getInstance();
              break l$ret$11;
            } else {
              tmp_4 = tmp0_elvis_lhs_3_30;
            }
            var current_2_29 = tmp_4;
            try {
              $l$break_1: do {
                var tmp2__anonymous__6_31 = current_2_29;
                var chunkSize_7_32 = tmp2__anonymous__6_31._get_writePosition__1() - tmp2__anonymous__6_31._get_readPosition__1() | 0;
                var tmp0_minOf_0_9_34 = inputRemaining;
                var size_8_33 = function () {
                  var $externalVarargReceiverTmp = Math;
                  return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([chunkSize_7_32, tmp0_minOf_0_9_34]))));
                }.call(this);
                var tmp_5;
                if (tmp2__anonymous__6_31._get_readPosition__1() === 0 ? tmp2__anonymous__6_31._memory._view.byteLength === size_8_33 : false) {
                  tmp_5 = decoder.decode_7(tmp2__anonymous__6_31._memory._view);
                } else {
                  var tmp$ret$12;
                  l$ret$13: do {
                    var tmp1_decodeStream_0_11_36 = new Int8Array(tmp2__anonymous__6_31._memory._view.buffer, tmp2__anonymous__6_31._memory._view.byteOffset + tmp2__anonymous__6_31._get_readPosition__1() | 0, size_8_33);
                    var tmp2_decodeStream_0_12_37 = true;
                    var tmp$ret$14;
                    l$ret$15: do {
                      try {
                        tmp$ret$12 = decoder.decode_8(tmp1_decodeStream_0_11_36, decodeOptions(tmp2_decodeStream_0_12_37));
                        break l$ret$13;
                      } catch ($p_1) {
                        if ($p_1 instanceof Error) {
                          var tmp0_elvis_lhs_2_14_39 = $p_1.message;
                          throw new MalformedInputException('' + 'Failed to decode bytes: ' + (tmp0_elvis_lhs_2_14_39 == null ? 'no cause provided' : tmp0_elvis_lhs_2_14_39));
                        } else {
                          {
                            throw $p_1;
                          }
                        }
                      }
                    }
                     while (false);
                  }
                   while (false);
                  tmp_5 = tmp$ret$12;
                }
                var text_10_35 = tmp_5;
                sb.append_6(text_10_35);
                Unit_getInstance();
                tmp2__anonymous__6_31.discardExact_5(size_8_33);
                inputRemaining = inputRemaining - size_8_33 | 0;
                if (false) {} else {
                }
                release_1_28 = false;
                var tmp1_elvis_lhs_5_41 = prepareReadNextHead(input, current_2_29);
                var tmp_6;
                if (tmp1_elvis_lhs_5_41 == null) {
                  break $l$break_1;
                } else {
                  tmp_6 = tmp1_elvis_lhs_5_41;
                }
                var next_4_40 = tmp_6;
                current_2_29 = next_4_40;
                release_1_28 = true;
              }
               while (true);
            }finally {
              if (release_1_28) {
                completeReadHead(input, current_2_29);
              }}
          }
           while (false);
        }tmp$ret$16 = sb.append_6(decoder.decode_6());
        break l$ret$17;
      } catch ($p_2) {
        if ($p_2 instanceof Error) {
          var tmp0_elvis_lhs_2 = $p_2.message;
          throw new MalformedInputException('' + 'Failed to decode bytes: ' + (tmp0_elvis_lhs_2 == null ? 'no cause provided' : tmp0_elvis_lhs_2));
        } else {
          {
            throw $p_2;
          }
        }
      }
    }
     while (false);
    Unit_getInstance();
    if (inputRemaining > 0) {
      throw new EOFException('' + 'Not enough bytes available: had only ' + (inputLength - inputRemaining | 0) + ' instead of ' + inputLength);
    }return sb.toString();
  }
  function CharsetEncoderImpl(charset_1) {
    CharsetEncoder.call(this, charset_1);
    this._charset = charset_1;
  }
  CharsetEncoderImpl.prototype.toString = function () {
    return '' + 'CharsetEncoderImpl(charset=' + this._charset + ')';
  };
  CharsetEncoderImpl.prototype.hashCode = function () {
    return hashCode(this._charset);
  };
  CharsetEncoderImpl.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CharsetEncoderImpl))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof CharsetEncoderImpl ? other : THROW_CCE();
    if (!equals_1(this._charset, tmp0_other_with_cast._charset))
      return false;
    return true;
  };
  CharsetEncoderImpl.$metadata$ = {
    simpleName: 'CharsetEncoderImpl',
    kind: 'class',
    interfaces: []
  };
  function CharsetDecoderImpl(charset_1) {
    CharsetDecoder.call(this, charset_1);
    this._charset_0 = charset_1;
  }
  CharsetDecoderImpl.prototype.toString = function () {
    return '' + 'CharsetDecoderImpl(charset=' + this._charset_0 + ')';
  };
  CharsetDecoderImpl.prototype.hashCode = function () {
    return hashCode(this._charset_0);
  };
  CharsetDecoderImpl.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CharsetDecoderImpl))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof CharsetDecoderImpl ? other : THROW_CCE();
    if (!equals_1(this._charset_0, tmp0_other_with_cast._charset_0))
      return false;
    return true;
  };
  CharsetDecoderImpl.$metadata$ = {
    simpleName: 'CharsetDecoderImpl',
    kind: 'class',
    interfaces: []
  };
  function _get_name_(_this_) {
    return _this_.__name;
  }
  function encodeImpl(_this_, input, fromIndex, toIndex, dst) {
    var tmp0_require_0 = fromIndex <= toIndex;
    if (!tmp0_require_0) {
      var message_2_1 = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_2_1));
    }if (equals_1(_get_charset__0(_this_), Charsets_getInstance()._ISO_8859_1)) {
      return encodeISO88591(input, fromIndex, toIndex, dst);
    }var tmp1_require_0 = _get_charset__0(_this_) === Charsets_getInstance()._UTF_8;
    if (!tmp1_require_0) {
      var message_1 = 'Only UTF-8 encoding is supported in JS';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var encoder = new TextEncoder();
    var start = fromIndex;
    var dstRemaining = dst._get_limit__1() - dst._get_writePosition__1() | 0;
    $l$break: while (start < toIndex ? dstRemaining > 0 : false) {
      var tmp2_minOf_0 = toIndex - start | 0;
      var tmp3_minOf_0 = dstRemaining / 6 | 0;
      var numChars = coerceAtLeast(function () {
        var $externalVarargReceiverTmp = Math;
        return $externalVarargReceiverTmp.min.apply($externalVarargReceiverTmp, [].concat([].slice.call(new Int32Array([tmp2_minOf_0, tmp3_minOf_0]))));
      }.call(this), 1);
      var dropLastChar = isHighSurrogate(charSequenceGet(input, (start + numChars | 0) - 1 | 0));
      var endIndexExclusive = (dropLastChar ? numChars === 1 : false) ? start + 2 | 0 : dropLastChar ? (start + numChars | 0) - 1 | 0 : start + numChars | 0;
      var tmp4_substring_0 = start;
      var array1 = encoder.encode(toString_1(charSequenceSubSequence(input, tmp4_substring_0, endIndexExclusive)));
      if (array1.length > dstRemaining)
        break $l$break;
      writeFully$default_1(dst, array1, 0, 0, 6, null);
      start = endIndexExclusive;
      dstRemaining = dstRemaining - array1.length | 0;
    }
    return start - fromIndex | 0;
  }
  function encodeComplete(_this_, dst) {
    return true;
  }
  function MalformedInputException(message) {
    extendThrowable(this, message, void 1);
    captureStack(this, MalformedInputException);
  }
  MalformedInputException.$metadata$ = {
    simpleName: 'MalformedInputException',
    kind: 'class',
    interfaces: []
  };
  function _get_charset__0(_this_) {
    return _this_.__charset;
  }
  function encodeToByteArray(_this_, input, fromIndex, toIndex) {
    return encodeToByteArrayImpl1(_this_, input, fromIndex, toIndex);
  }
  function decode_0(_this_, input, dst, max) {
    var decoder = Decoder_0(_get_name_(_get_charset_(_this_)), true);
    var charactersCopied = 0;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_takeWhileSize_0 = 1;
      var release_1 = true;
      var tmp0_elvis_lhs_3 = prepareReadFirstHead(input, tmp0_takeWhileSize_0);
      var tmp;
      if (tmp0_elvis_lhs_3 == null) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
        tmp = tmp0_elvis_lhs_3;
      }
      var current_2 = tmp;
      var size_4 = tmp0_takeWhileSize_0;
      try {
        $l$break: do {
          var tmp0__get_readRemaining__0_6 = current_2;
          var before_5 = tmp0__get_readRemaining__0_6._get_writePosition__1() - tmp0__get_readRemaining__0_6._get_readPosition__1() | 0;
          var after_7;
          if (before_5 >= size_4) {
            try {
              var tmp$ret$2;
              l$ret$3: do {
                var tmp1__anonymous__11 = current_2;
                var rem_12 = max - charactersCopied | 0;
                var bufferSize_13 = tmp1__anonymous__11._get_writePosition__1() - tmp1__anonymous__11._get_readPosition__1() | 0;
                if (rem_12 < bufferSize_13) {
                  tmp$ret$2 = 0;
                  break l$ret$3;
                }var tmp0__anonymous__2_2_15 = tmp1__anonymous__11._memory;
                var tmp1__anonymous__2_2_16 = tmp1__anonymous__11._get_readPosition__1();
                var tmp2__anonymous__2_2_17 = tmp1__anonymous__11._get_writePosition__1();
                var tmp3__anonymous__3_18 = new Int8Array(tmp0__anonymous__2_2_15._view.buffer, tmp0__anonymous__2_2_15._view.byteOffset + tmp1__anonymous__2_2_16 | 0, tmp2__anonymous__2_2_17 - tmp1__anonymous__2_2_16 | 0);
                var tmp$ret$8;
                l$ret$9: do {
                  try {
                    var tmp$ret$4;
                    l$ret$5: do {
                      var tmp0_decodeStream_0_4_5_20 = true;
                      var tmp$ret$6;
                      l$ret$7: do {
                        try {
                          tmp$ret$4 = decoder.decode_8(tmp3__anonymous__3_18, decodeOptions(tmp0_decodeStream_0_4_5_20));
                          break l$ret$5;
                        } catch ($p) {
                          if ($p instanceof Error) {
                            var tmp0_elvis_lhs_2_6_7_22 = $p.message;
                            throw new MalformedInputException('' + 'Failed to decode bytes: ' + (tmp0_elvis_lhs_2_6_7_22 == null ? 'no cause provided' : tmp0_elvis_lhs_2_6_7_22));
                          } else {
                            {
                              throw $p;
                            }
                          }
                        }
                      }
                       while (false);
                    }
                     while (false);
                    tmp$ret$8 = tmp$ret$4;
                    break l$ret$9;
                  } catch ($p_0) {
                    if ($p_0 instanceof Error) {
                      var tmp0_elvis_lhs_2_9_24 = $p_0.message;
                      throw new MalformedInputException('' + 'Failed to decode bytes: ' + (tmp0_elvis_lhs_2_9_24 == null ? 'no cause provided' : tmp0_elvis_lhs_2_9_24));
                    } else {
                      {
                        throw $p_0;
                      }
                    }
                  }
                }
                 while (false);
                var decodedText_4_19 = tmp$ret$8;
                dst.append_22(decodedText_4_19);
                Unit_getInstance();
                charactersCopied = charactersCopied + decodedText_4_19.length | 0;
                var rc_1_14 = tmp3__anonymous__3_18.byteLength;
                tmp1__anonymous__11.discardExact_5(rc_1_14);
                Unit_getInstance();
                var tmp_0;
                if (charactersCopied === max) {
                  var tmp_1;
                  try {
                    tmp_1 = decoder.decode_6();
                  } catch ($p_1) {
                    var tmp_2;
                    {
                      tmp_2 = '';
                    }
                    tmp_1 = tmp_2;
                  }
                  var tail_25 = tmp_1;
                  if (charSequenceLength(tail_25) > 0) {
                    tmp1__anonymous__11.rewind_1(bufferSize_13);
                  } else {
                  }
                  tmp_0 = 0;
                } else if (charactersCopied < max) {
                  tmp_0 = 8;
                } else {
                  tmp_0 = 0;
                }
                tmp$ret$2 = tmp_0;
              }
               while (false);
              size_4 = tmp$ret$2;
            }finally {
              var tmp1__get_readRemaining__0_8 = current_2;
              after_7 = tmp1__get_readRemaining__0_8._get_writePosition__1() - tmp1__get_readRemaining__0_8._get_readPosition__1() | 0;
            }
          } else {
            after_7 = before_5;
          }
          release_1 = false;
          var tmp_3;
          if (after_7 === 0) {
            tmp_3 = prepareReadNextHead(input, current_2);
          } else {
            var tmp_4;
            if (after_7 < size_4) {
              tmp_4 = true;
            } else {
              var tmp2__get_endGap__0_10 = current_2;
              var tmp_5 = tmp2__get_endGap__0_10._capacity_0 - tmp2__get_endGap__0_10._get_limit__1() | 0;
              Companion_getInstance_17();
              tmp_4 = tmp_5 < 8;
            }
            if (tmp_4) {
              completeReadHead(input, current_2);
              tmp_3 = prepareReadFirstHead(input, size_4);
            } else {
              {
                tmp_3 = current_2;
              }
            }
          }
          var next_9 = tmp_3;
          if (next_9 == null) {
            break $l$break;
          }current_2 = next_9;
          release_1 = true;
        }
         while (size_4 > 0);
      }finally {
        if (release_1) {
          completeReadHead(input, current_2);
        }}
    }
     while (false);
    if (charactersCopied < max) {
      var size_0 = 1;
      var tmp$ret$10;
      l$ret$11: do {
        var tmp2_takeWhileSize_0 = 1;
        var release_1_0 = true;
        var tmp0_elvis_lhs_3_0 = prepareReadFirstHead(input, tmp2_takeWhileSize_0);
        var tmp_6;
        if (tmp0_elvis_lhs_3_0 == null) {
          tmp$ret$10 = Unit_getInstance();
          break l$ret$11;
        } else {
          tmp_6 = tmp0_elvis_lhs_3_0;
        }
        var current_2_0 = tmp_6;
        var size_4_0 = tmp2_takeWhileSize_0;
        try {
          $l$break_0: do {
            var tmp0__get_readRemaining__0_6_0 = current_2_0;
            var before_5_0 = tmp0__get_readRemaining__0_6_0._get_writePosition__1() - tmp0__get_readRemaining__0_6_0._get_readPosition__1() | 0;
            var after_7_0;
            if (before_5_0 >= size_4_0) {
              try {
                var tmp3__anonymous__11 = current_2_0;
                var tmp0__anonymous__2_2_14 = tmp3__anonymous__11._memory;
                var tmp1__anonymous__2_2_15 = tmp3__anonymous__11._get_readPosition__1();
                var tmp2__anonymous__2_2_16 = tmp3__anonymous__11._get_writePosition__1();
                var tmp3__anonymous__3_17 = new Int8Array(tmp0__anonymous__2_2_14._view.buffer, tmp0__anonymous__2_2_14._view.byteOffset + tmp1__anonymous__2_2_15 | 0, tmp2__anonymous__2_2_16 - tmp1__anonymous__2_2_15 | 0);
                var result_4_18 = decodeBufferImpl(tmp3__anonymous__3_17, decoder, max - charactersCopied | 0);
                dst.append_22(result_4_18._charactersDecoded);
                Unit_getInstance();
                charactersCopied = charactersCopied + result_4_18._charactersDecoded.length | 0;
                var rc_1_13 = result_4_18._bytesConsumed;
                tmp3__anonymous__11.discardExact_5(rc_1_13);
                var rc_12 = rc_1_13;
                if (rc_12 > 0)
                  size_0 = 1;
                else if (size_0 === 8)
                  size_0 = 0;
                else {
                  var tmp0_19 = size_0;
                  size_0 = tmp0_19 + 1 | 0;
                  Unit_getInstance();
                }
                size_4_0 = size_0;
              }finally {
                var tmp1__get_readRemaining__0_8_0 = current_2_0;
                after_7_0 = tmp1__get_readRemaining__0_8_0._get_writePosition__1() - tmp1__get_readRemaining__0_8_0._get_readPosition__1() | 0;
              }
            } else {
              after_7_0 = before_5_0;
            }
            release_1_0 = false;
            var tmp_7;
            if (after_7_0 === 0) {
              tmp_7 = prepareReadNextHead(input, current_2_0);
            } else {
              var tmp_8;
              if (after_7_0 < size_4_0) {
                tmp_8 = true;
              } else {
                var tmp2__get_endGap__0_10_0 = current_2_0;
                var tmp_9 = tmp2__get_endGap__0_10_0._capacity_0 - tmp2__get_endGap__0_10_0._get_limit__1() | 0;
                Companion_getInstance_17();
                tmp_8 = tmp_9 < 8;
              }
              if (tmp_8) {
                completeReadHead(input, current_2_0);
                tmp_7 = prepareReadFirstHead(input, size_4_0);
              } else {
                {
                  tmp_7 = current_2_0;
                }
              }
            }
            var next_9_0 = tmp_7;
            if (next_9_0 == null) {
              break $l$break_0;
            }current_2_0 = next_9_0;
            release_1_0 = true;
          }
           while (size_4_0 > 0);
        }finally {
          if (release_1_0) {
            completeReadHead(input, current_2_0);
          }}
      }
       while (false);
    }return charactersCopied;
  }
  function DecodeBufferResult(charactersDecoded, bytesConsumed) {
    this._charactersDecoded = charactersDecoded;
    this._bytesConsumed = bytesConsumed;
  }
  DecodeBufferResult.prototype.toString = function () {
    return '' + 'DecodeBufferResult(charactersDecoded=' + this._charactersDecoded + ', bytesConsumed=' + this._bytesConsumed + ')';
  };
  DecodeBufferResult.prototype.hashCode = function () {
    var result = getStringHashCode(this._charactersDecoded);
    result = imul(result, 31) + this._bytesConsumed | 0;
    return result;
  };
  DecodeBufferResult.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DecodeBufferResult))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof DecodeBufferResult ? other : THROW_CCE();
    if (!(this._charactersDecoded === tmp0_other_with_cast._charactersDecoded))
      return false;
    if (!(this._bytesConsumed === tmp0_other_with_cast._bytesConsumed))
      return false;
    return true;
  };
  DecodeBufferResult.$metadata$ = {
    simpleName: 'DecodeBufferResult',
    kind: 'class',
    interfaces: []
  };
  function decodeBufferImpl(_this_, nativeDecoder, maxCharacters) {
    if (maxCharacters === 0) {
      return new DecodeBufferResult('', 0);
    }try {
      var sizeInBytes = coerceAtMost(maxCharacters, _this_.byteLength);
      var text = nativeDecoder.decode_7(_this_.subarray(0, sizeInBytes));
      if (text.length <= maxCharacters) {
        return new DecodeBufferResult(text, sizeInBytes);
      }} catch ($p) {
    }
    return decodeBufferImplSlow(_this_, nativeDecoder, maxCharacters);
  }
  function decodeBufferImplSlow(_this_, nativeDecoder, maxCharacters) {
    var maxBytes = coerceAtMost(maxCharacters >= 268435455 ? IntCompanionObject_getInstance()._MAX_VALUE_5 : imul(maxCharacters, 8), _this_.byteLength);
    var sizeInBytes = maxBytes;
    while (sizeInBytes > 8) {
      try {
        var text = nativeDecoder.decode_7(_this_.subarray(0, sizeInBytes));
        if (text.length <= maxCharacters) {
          return new DecodeBufferResult(text, sizeInBytes);
        }} catch ($p) {
      }
      sizeInBytes = sizeInBytes / 2 | 0;
    }
    sizeInBytes = 8;
    while (sizeInBytes > 0) {
      try {
        var text_0 = nativeDecoder.decode_7(_this_.subarray(0, sizeInBytes));
        if (text_0.length <= maxCharacters) {
          return new DecodeBufferResult(text_0, sizeInBytes);
        }} catch ($p_0) {
      }
      var tmp0 = sizeInBytes;
      sizeInBytes = tmp0 - 1 | 0;
      Unit_getInstance();
    }
    var tmp$ret$0;
    l$ret$1: do {
      try {
        tmp$ret$0 = nativeDecoder.decode_7(_this_);
        break l$ret$1;
      } catch ($p_1) {
        if ($p_1 instanceof Error) {
          var tmp0_elvis_lhs_2 = $p_1.message;
          throw new MalformedInputException('' + 'Failed to decode bytes: ' + (tmp0_elvis_lhs_2 == null ? 'no cause provided' : tmp0_elvis_lhs_2));
        } else {
          {
            throw $p_1;
          }
        }
      }
    }
     while (false);
    Unit_getInstance();
    throw new MalformedInputException('Unable to decode buffer');
  }
  function encodeISO88591(input, fromIndex, toIndex, dst) {
    if (fromIndex >= toIndex)
      return 0;
    var tmp0__anonymous__2_2 = dst._memory;
    var tmp1__anonymous__2_2 = dst._get_writePosition__1();
    var tmp2__anonymous__2_2 = dst._get_limit__1();
    var tmp3__anonymous__3 = tmp0__anonymous__2_2.slice_0(tmp1__anonymous__2_2, tmp2__anonymous__2_2 - tmp1__anonymous__2_2 | 0)._view;
    var i8_4 = new Int8Array(tmp3__anonymous__3.buffer, tmp3__anonymous__3.byteOffset, tmp3__anonymous__3.byteLength);
    var writeIndex_5 = 0;
    var inductionVariable = fromIndex;
    if (inductionVariable < toIndex)
      do {
        var index_7 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var character_8 = charSequenceGet(input, index_7).toInt_5();
        if (character_8 > 255) {
          failedToMapError(character_8);
        }var tmp1_10 = writeIndex_5;
        writeIndex_5 = tmp1_10 + 1 | 0;
        var tmp0_set_0_9 = tmp1_10;
        var tmp1_set_0_11 = toByte(character_8);
        i8_4[tmp0_set_0_9] = tmp1_set_0_11;
      }
       while (inductionVariable < toIndex);
    var rc_1 = writeIndex_5;
    dst.commitWritten_1(rc_1);
    Unit_getInstance();
    return toIndex - fromIndex | 0;
  }
  function failedToMapError(ch) {
    throw new MalformedInputException('' + 'The character with unicode point ' + ch + " couldn't be mapped to ISO-8859-1 character");
  }
  function threadLocal(value) {
    var tmp = _no_name_provided_$factory_49(value);
    return new sam$kotlin_properties_ReadOnlyProperty$0(tmp);
  }
  function _no_name_provided__67($value) {
    this._$value = $value;
    this._value_8 = this._$value;
  }
  _no_name_provided__67.prototype.getValue_8 = function (thisRef, property) {
    return this._value_8;
  };
  _no_name_provided__67.prototype.getValue_3 = function (thisRef, property) {
    return this.getValue_8(isObject(thisRef) ? thisRef : THROW_CCE(), property);
  };
  _no_name_provided__67.prototype.setValue_3 = function (thisRef, property, value) {
    this._value_8 = value;
  };
  _no_name_provided__67.prototype.setValue_4 = function (thisRef, property, value) {
    var tmp = isObject(thisRef) ? thisRef : THROW_CCE();
    return this.setValue_3(tmp, property, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  _no_name_provided__67.$metadata$ = {
    kind: 'class',
    interfaces: [ReadWriteProperty]
  };
  function sam$kotlin_properties_ReadOnlyProperty$0(function_0) {
    this._function = function_0;
  }
  sam$kotlin_properties_ReadOnlyProperty$0.prototype.getValue_3 = function (thisRef, property) {
    return this._function(thisRef, property);
  };
  sam$kotlin_properties_ReadOnlyProperty$0.$metadata$ = {
    simpleName: 'sam$kotlin_properties_ReadOnlyProperty$0',
    kind: 'class',
    interfaces: [ReadOnlyProperty]
  };
  function _no_name_provided__68($value) {
    this._$value_0 = $value;
  }
  _no_name_provided__68.prototype.invoke_113 = function (thisRef, property) {
    return this._$value_0;
  };
  _no_name_provided__68.prototype.invoke_418 = function (p1, p2) {
    var tmp = isObject(p1) ? p1 : THROW_CCE();
    return this.invoke_113(tmp, (!(p2 == null) ? isInterface(p2, KProperty) : false) ? p2 : THROW_CCE());
  };
  _no_name_provided__68.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_49($value) {
    var i = new _no_name_provided__68($value);
    return function (p1, p2) {
      return i.invoke_113(p1, p2);
    };
  }
  function AbstractInputSharedState(head, remaining) {
    this._head_2 = head;
    this._headMemory = this._head_2._get_memory__1();
    this._headPosition = this._head_2._get_readPosition__1();
    this._headEndExclusive = this._head_2._get_writePosition__1();
    var tmp = this;
    var tmp0_minus_0 = this._headEndExclusive - this._headPosition | 0;
    tmp._tailRemaining = remaining.minus_30(toLong_0(tmp0_minus_0));
  }
  AbstractInputSharedState.$metadata$ = {
    simpleName: 'AbstractInputSharedState',
    kind: 'class',
    interfaces: []
  };
  function AbstractOutputSharedState() {
    this._head_3 = null;
    this._tail_0 = null;
    this._tailMemory = Companion_getInstance_22()._Empty_0;
    this._tailPosition = 0;
    this._tailEndExclusive = 0;
    this._tailInitialPosition = 0;
    this._chainedSize = 0;
  }
  AbstractOutputSharedState.$metadata$ = {
    simpleName: 'AbstractOutputSharedState',
    kind: 'class',
    interfaces: []
  };
  function BufferSharedState(limit) {
    this._limit_4 = limit;
    this._readPosition = 0;
    this._writePosition = 0;
    this._startGap = 0;
    this._attachment = null;
  }
  BufferSharedState.$metadata$ = {
    simpleName: 'BufferSharedState',
    kind: 'class',
    interfaces: []
  };
  var ByteOrder_BIG_ENDIAN_instance;
  var ByteOrder_LITTLE_ENDIAN_instance;
  function Companion_25() {
    Companion_instance_24 = this;
    var buffer = new ArrayBuffer(4);
    var arr = new Int32Array(buffer);
    var view = new DataView(buffer);
    var tmp0_set_0 = 0;
    var tmp1_set_0 = 287454020;
    arr[tmp0_set_0] = tmp1_set_0;
    this._native = view.getInt32(0, true) === 287454020 ? ByteOrder_LITTLE_ENDIAN_getInstance() : ByteOrder_BIG_ENDIAN_getInstance();
  }
  Companion_25.prototype.nativeOrder = function () {
    return this._native;
  };
  Companion_25.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_24;
  function Companion_getInstance_24() {
    if (Companion_instance_24 == null)
      new Companion_25();
    return Companion_instance_24;
  }
  var ByteOrder_entriesInitialized;
  function ByteOrder_initEntries() {
    if (ByteOrder_entriesInitialized)
      return Unit_getInstance();
    ByteOrder_entriesInitialized = true;
    ByteOrder_BIG_ENDIAN_instance = new ByteOrder('BIG_ENDIAN', 0);
    ByteOrder_LITTLE_ENDIAN_instance = new ByteOrder('LITTLE_ENDIAN', 1);
    Companion_getInstance_24();
  }
  function ByteOrder(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  ByteOrder.$metadata$ = {
    simpleName: 'ByteOrder',
    kind: 'class',
    interfaces: []
  };
  function ByteOrder_BIG_ENDIAN_getInstance() {
    ByteOrder_initEntries();
    return ByteOrder_BIG_ENDIAN_instance;
  }
  function ByteOrder_LITTLE_ENDIAN_getInstance() {
    ByteOrder_initEntries();
    return ByteOrder_LITTLE_ENDIAN_instance;
  }
  function Closeable() {
  }
  Closeable.$metadata$ = {
    simpleName: 'Closeable',
    kind: 'interface',
    interfaces: []
  };
  function Input() {
  }
  Input.$metadata$ = {
    simpleName: 'Input',
    kind: 'interface',
    interfaces: [Closeable]
  };
  function _no_name_provided__2_4($instance) {
    this._$instance = $instance;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__2_4.prototype.doFail_3_4 = function () {
    throw IllegalArgumentException_init_$Create$_0('' + 'unable to recycle buffer: buffer view is in use (refCount = ' + this._$instance._get_referenceCount__0() + ')');
  };
  _no_name_provided__2_4.$metadata$ = {
    simpleName: '<no name provided>_2',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__2_5() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__2_5.prototype.doFail_3_4 = function () {
    throw IllegalArgumentException_init_$Create$_0("Unable to recycle buffer view: view copy shouldn't be recycled");
  };
  _no_name_provided__2_5.$metadata$ = {
    simpleName: '<no name provided>_2',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__69() {
    DefaultPool.call(this, 100);
  }
  _no_name_provided__69.prototype.produceInstance_4 = function () {
    return new IoBuffer(DefaultAllocator_getInstance().alloc_1(4096), null, this);
  };
  _no_name_provided__69.prototype.clearInstance_1 = function (instance) {
    var tmp0_apply_0 = DefaultPool.prototype.clearInstance_5.call(this, instance);
    tmp0_apply_0.unpark_0();
    tmp0_apply_0.reset_2();
    return tmp0_apply_0;
  };
  _no_name_provided__69.prototype.clearInstance_5 = function (instance) {
    return this.clearInstance_1(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  _no_name_provided__69.prototype.validateInstance_1 = function (instance) {
    DefaultPool.prototype.validateInstance_3.call(this, instance);
    var tmp0_require_0 = instance._get_referenceCount__0() === 0;
    if (!tmp0_require_0) {
      var m_1 = new _no_name_provided__2_4(instance);
      m_1.doFail_3_4();
    }var tmp1_require_0 = instance._get_origin__7() == null;
    if (!tmp1_require_0) {
      var m_1_0 = new _no_name_provided__2_5();
      m_1_0.doFail_3_4();
    }};
  _no_name_provided__69.prototype.validateInstance_3 = function (instance) {
    return this.validateInstance_1(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  _no_name_provided__69.prototype.disposeInstance_1 = function (instance) {
    DefaultAllocator_getInstance().free_0(instance._get_memory__1());
    instance.unlink_0();
  };
  _no_name_provided__69.prototype.disposeInstance_3 = function (instance) {
    return this.disposeInstance_1(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  _no_name_provided__69.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__70() {
    NoPoolImpl.call(this);
  }
  _no_name_provided__70.prototype.borrow_12 = function () {
    return new IoBuffer(DefaultAllocator_getInstance().alloc_1(4096), null, this);
  };
  _no_name_provided__70.prototype.recycle_12 = function (instance) {
    DefaultAllocator_getInstance().free_0(instance._get_memory__1());
  };
  _no_name_provided__70.prototype.recycle_14 = function (instance) {
    return this.recycle_12(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  _no_name_provided__70.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function Companion_26() {
    Companion_instance_25 = this;
    this._EmptyBuffer = new ArrayBuffer(0);
    this._EmptyDataView = new DataView(this._EmptyBuffer);
    this._Empty_1 = new IoBuffer(Companion_getInstance_22()._Empty_0, null, EmptyBufferPoolImpl_getInstance());
    var tmp = this;
    tmp._Pool_0 = new _no_name_provided__69();
    var tmp_0 = this;
    tmp_0._NoPool_0 = new _no_name_provided__70();
    this._EmptyPool_0 = EmptyBufferPoolImpl_getInstance();
  }
  Companion_26.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_25;
  function Companion_getInstance_25() {
    if (Companion_instance_25 == null)
      new Companion_26();
    return Companion_instance_25;
  }
  function IoBuffer(memory, origin, parentPool) {
    Companion_getInstance_25();
    ChunkBuffer.call(this, memory, origin, (!(parentPool == null) ? isInterface(parentPool, ObjectPool) : false) ? parentPool : null);
  }
  IoBuffer.prototype._get_endOfInput__4 = function () {
    return this._get_writePosition__1() === this._get_readPosition__1();
  };
  IoBuffer.prototype.peekTo_4 = function (destination, destinationOffset, offset, min, max) {
    return peekTo(this instanceof Buffer_0 ? this : THROW_CCE(), destination, destinationOffset, offset, min, max);
  };
  IoBuffer.prototype.append_21 = function (csq, start, end) {
    var tmp0_elvis_lhs = csq;
    var idx = appendChars(this, tmp0_elvis_lhs == null ? 'null' : tmp0_elvis_lhs, start, end);
    if (!(idx === end))
      throw IllegalStateException_init_$Create$('Not enough free space to append char sequence');
    return this;
  };
  IoBuffer.prototype.append_22 = function (csq) {
    return csq == null ? this.append_22('null') : this.append_21(csq, 0, charSequenceLength(csq));
  };
  IoBuffer.prototype.append_23 = function (c) {
    append(this instanceof Buffer_0 ? this : THROW_CCE(), c);
    Unit_getInstance();
    return this;
  };
  IoBuffer.prototype.close_40 = function () {
    throw UnsupportedOperationException_init_$Create$_0('close for buffer view is not supported');
  };
  IoBuffer.prototype.toString = function () {
    var tmp = this._get_writePosition__1() - this._get_readPosition__1() | 0;
    var tmp_0 = this._get_limit__1() - this._get_writePosition__1() | 0;
    var tmp_1 = this._get_startGap__1();
    return '' + 'Buffer[readable = ' + tmp + ', writable = ' + tmp_0 + ', startGap = ' + tmp_1 + ', endGap = ' + (this._capacity_0 - this._get_limit__1() | 0) + ']';
  };
  IoBuffer.$metadata$ = {
    simpleName: 'IoBuffer',
    kind: 'class',
    interfaces: [Input, Output]
  };
  function writeFully_4(_this_, src, offset, length) {
    var tmp0__anonymous__2 = _this_._memory;
    var tmp1__anonymous__2 = _this_._get_writePosition__1();
    var tmp2__anonymous__2 = _this_._get_limit__1();
    if ((tmp2__anonymous__2 - tmp1__anonymous__2 | 0) < length) {
      throw new InsufficientSpaceException('' + 'Not enough free space to write ' + length + ' bytes');
    }copyTo_0(src, tmp0__anonymous__2, offset, length, tmp1__anonymous__2);
    var rc_1 = length;
    _this_.commitWritten_1(rc_1);
    Unit_getInstance();
  }
  function writeFully$default_1(_this_, src, offset, length, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      length = src.byteLength - offset | 0;
    return writeFully_4(_this_, src, offset, length);
  }
  function Output() {
  }
  Output.$metadata$ = {
    simpleName: 'Output',
    kind: 'interface',
    interfaces: [Appendable, Closeable]
  };
  var PACKET_MAX_COPY_SIZE;
  function BytePacketBuilder_0(headerSizeHint) {
    return new BytePacketBuilder(headerSizeHint, Companion_getInstance_20()._Pool);
  }
  function BytePacketBuilder$default(headerSizeHint, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      headerSizeHint = 0;
    return BytePacketBuilder_0(headerSizeHint);
  }
  function String_0(bytes, offset, length, charset_1) {
    if ((offset < 0 ? true : length < 0) ? true : (offset + length | 0) > bytes.length) {
      checkIndices(offset, length, bytes);
    }var i8 = bytes;
    var bufferOffset = i8.byteOffset + offset | 0;
    var buffer = i8.buffer.slice(bufferOffset, bufferOffset + length | 0);
    var tmp = Companion_getInstance_22();
    var view = new IoBuffer(of$default(tmp, buffer, 0, 0, 6, null), null, Companion_getInstance_25()._NoPool_0);
    view.resetForRead_0();
    var packet = ByteReadPacket_init_$Create$(view, Companion_getInstance_20()._NoPoolManuallyManaged);
    return decode(charset_1.newDecoder_0(), packet, IntCompanionObject_getInstance()._MAX_VALUE_5);
  }
  function String$default(bytes, offset, length, charset_1, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      length = bytes.length;
    if (!(($mask0 & 8) === 0))
      charset_1 = Charsets_getInstance()._UTF_8;
    return String_0(bytes, offset, length, charset_1);
  }
  function checkIndices(offset, length, bytes) {
    var tmp0_require_0 = offset >= 0;
    if (!tmp0_require_0) {
      throw IndexOutOfBoundsException_init_$Create$_0('' + 'offset (' + offset + ") shouldn't be negative");
    }var tmp1_require_0 = length >= 0;
    if (!tmp1_require_0) {
      throw IndexOutOfBoundsException_init_$Create$_0('' + 'length (' + length + ") shouldn't be negative");
    }var tmp2_require_0 = (offset + length | 0) <= bytes.length;
    if (!tmp2_require_0) {
      throw IndexOutOfBoundsException_init_$Create$_0('' + 'offset (' + offset + ') + length (' + length + ') > bytes.size (' + bytes.length + ')');
    }throw IndexOutOfBoundsException_init_$Create$();
  }
  function EOFException(message) {
    IOException_init_$Init$(message, this);
    captureStack(this, EOFException);
  }
  EOFException.$metadata$ = {
    simpleName: 'EOFException',
    kind: 'class',
    interfaces: []
  };
  function IOException_init_$Init$(message, $this) {
    IOException.call($this, message, null);
    return $this;
  }
  function IOException(message, cause) {
    Exception_init_$Init$_1(message, cause, this);
    captureStack(this, IOException);
  }
  IOException.$metadata$ = {
    simpleName: 'IOException',
    kind: 'class',
    interfaces: []
  };
  function Decoder() {
  }
  Decoder.$metadata$ = {
    simpleName: 'Decoder',
    kind: 'interface',
    interfaces: []
  };
  function Decoder_0(encoding, fatal) {
    var tmp;
    try {
      tmp = toKtor(new TextDecoder(encoding, textDecoderOptions(fatal)));
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = new TextDecoderFallback(encoding, fatal);
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function decodeOptions(stream) {
    var tmp0_apply_0 = new Object();
    var tmp0_with_0_2 = tmp0_apply_0;
    tmp0_with_0_2.stream = stream;
    return tmp0_apply_0;
  }
  function toKtor(_this_) {
    return new _no_name_provided__71(_this_);
  }
  function textDecoderOptions(fatal) {
    var tmp0_apply_0 = new Object();
    var tmp0_with_0_2 = tmp0_apply_0;
    tmp0_with_0_2.fatal = fatal;
    return tmp0_apply_0;
  }
  function _no_name_provided__71($this_toKtor) {
    this._$this_toKtor = $this_toKtor;
  }
  _no_name_provided__71.prototype.decode_6 = function () {
    return this._$this_toKtor.decode();
  };
  _no_name_provided__71.prototype.decode_7 = function (buffer) {
    return this._$this_toKtor.decode(buffer);
  };
  _no_name_provided__71.prototype.decode_8 = function (buffer, options) {
    return this._$this_toKtor.decode(buffer, options);
  };
  _no_name_provided__71.$metadata$ = {
    kind: 'class',
    interfaces: [Decoder]
  };
  var ENCODING_ALIASES;
  var REPLACEMENT;
  function TextDecoderFallback(encoding, fatal) {
    this._fatal = fatal;
    var tmp0_toLowerCase_0 = toString_1(trim(isCharSequence(encoding) ? encoding : THROW_CCE()));
    var requestedEncoding = tmp0_toLowerCase_0.toLowerCase();
    var tmp1_check_0 = ENCODING_ALIASES.contains_48(requestedEncoding);
    if (!tmp1_check_0) {
      var message_1 = '' + encoding + ' is not supported.';
      throw IllegalStateException_init_$Create$(toString_1(message_1));
    }}
  TextDecoderFallback.prototype.decode_6 = function () {
    return '';
  };
  TextDecoderFallback.prototype.decode_7 = function (buffer) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_buildPacket_0 = 0;
      var builder_1 = BytePacketBuilder_0(tmp0_buildPacket_0);
      try {
        var bytes_4 = buffer instanceof Int8Array ? buffer : THROW_CCE();
        var inductionVariable = 0;
        var last_1 = bytes_4.length;
        if (inductionVariable < last_1)
          do {
            var index_6 = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var byte_7 = bytes_4[index_6];
            var point_8 = toCodePoint(byte_7);
            if (point_8 < 0) {
              var tmp0_check_0_9 = !this._fatal;
              if (!tmp0_check_0_9) {
                var message_1_10 = '' + 'Invalid character: ' + point_8;
                throw IllegalStateException_init_$Create$(toString_1(message_1_10));
              }writeFully$default(builder_1, REPLACEMENT, 0, 0, 6, null);
              continue;
            }if (point_8 > 255) {
              builder_1.writeByte_6(toByte(point_8 >> 8));
            }builder_1.writeByte_6(toByte(point_8 & 255));
          }
           while (inductionVariable < last_1);
        tmp$ret$0 = builder_1.build_17();
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof Error) {
          builder_1.release_10();
          throw $p;
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    var tmp = tmp$ret$0;
    return decodeToString(readBytes$default(tmp, 0, 1, null));
  };
  TextDecoderFallback.prototype.decode_8 = function (buffer, options) {
    return this.decode_7(buffer);
  };
  TextDecoderFallback.$metadata$ = {
    simpleName: 'TextDecoderFallback',
    kind: 'class',
    interfaces: [Decoder]
  };
  function toCodePoint(_this_) {
    var value = _this_ & 255;
    if (isASCII(value)) {
      return value;
    }return WIN1252_TABLE[value - 128 | 0];
  }
  function isASCII(_this_) {
    return 0 <= _this_ ? _this_ <= 127 : false;
  }
  function REPLACEMENT$init$() {
    var tmp0_byteArrayOf_0 = new Int8Array([-17, -65, -67]);
    return tmp0_byteArrayOf_0;
  }
  var WIN1252_TABLE;
  function WIN1252_TABLE$init$() {
    var tmp0_intArrayOf_0 = new Int32Array([8364, -1, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, -1, 381, -1, -1, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, -1, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]);
    return tmp0_intArrayOf_0;
  }
  function DefaultPool(capacity) {
    this._capacity_1 = capacity;
    var tmp = this;
    var tmp0_arrayOfNulls_0 = this._capacity_1;
    tmp._instances = fillArrayVal(Array(tmp0_arrayOfNulls_0), null);
    this._size_2 = 0;
  }
  DefaultPool.prototype.disposeInstance_3 = function (instance) {
  };
  DefaultPool.prototype.clearInstance_5 = function (instance) {
    return instance;
  };
  DefaultPool.prototype.validateInstance_3 = function (instance) {
  };
  DefaultPool.prototype.borrow_12 = function () {
    if (this._size_2 === 0)
      return this.produceInstance_4();
    var tmp0_this = this;
    tmp0_this._size_2 = tmp0_this._size_2 - 1 | 0;
    var idx = tmp0_this._size_2;
    var tmp = this._instances[idx];
    var instance = isObject(tmp) ? tmp : THROW_CCE();
    this._instances[idx] = null;
    return this.clearInstance_5(instance);
  };
  DefaultPool.prototype.recycle_14 = function (instance) {
    this.validateInstance_3(instance);
    if (this._size_2 === this._capacity_1) {
      this.disposeInstance_3(instance);
    } else {
      var tmp0_this = this;
      var tmp1 = tmp0_this._size_2;
      tmp0_this._size_2 = tmp1 + 1 | 0;
      this._instances[tmp1] = instance;
    }
  };
  DefaultPool.prototype.dispose_29 = function () {
    var inductionVariable = 0;
    var last_1 = this._size_2;
    if (inductionVariable < last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = this._instances[i];
        var instance = isObject(tmp) ? tmp : THROW_CCE();
        this._instances[i] = null;
        this.disposeInstance_3(instance);
      }
       while (inductionVariable < last_1);
    this._size_2 = 0;
  };
  DefaultPool.$metadata$ = {
    simpleName: 'DefaultPool',
    kind: 'class',
    interfaces: [ObjectPool]
  };
  function AttributeKey(name) {
    this._name_2 = name;
  }
  AttributeKey.prototype.toString = function () {
    var tmp;
    var tmp0_isEmpty_0 = this._name_2;
    if (charSequenceLength(tmp0_isEmpty_0) === 0) {
      tmp = anyToString(this);
    } else {
      {
        tmp = '' + 'AttributeKey: ' + this._name_2;
      }
    }
    return tmp;
  };
  AttributeKey.$metadata$ = {
    simpleName: 'AttributeKey',
    kind: 'class',
    interfaces: []
  };
  function Attributes() {
  }
  Attributes.prototype.get_58 = function (key) {
    var tmp0_elvis_lhs = this.getOrNull_0(key);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('' + 'No instance for key ' + key);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  Attributes.$metadata$ = {
    simpleName: 'Attributes',
    kind: 'interface',
    interfaces: []
  };
  var BASE64_INVERSE_ALPHABET;
  function BASE64_INVERSE_ALPHABET$init$() {
    var tmp = 0;
    var tmp_0 = 256;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp_3 = numberToChar(tmp_2);
      tmp_1[tmp_2] = indexOf$default('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', tmp_3, 0, false, 6, null);
      tmp = tmp + 1 | 0;
    }
    return tmp_1;
  }
  function toByteArray_0(_this_, $cont) {
    var tmp = new $toByteArrayCOROUTINE$0(_this_, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function copyToBoth(_this_, first_1, second) {
    var tmp = GlobalScope_getInstance();
    var tmp_0 = Dispatchers_getInstance()._Unconfined;
    var tmp_1 = launch$default(tmp, tmp_0, null, _no_name_provided_$factory_50(_this_, first_1, second, null), 2, null);
    tmp_1.invokeOnCompletion_27(_no_name_provided_$factory_51(first_1, second));
    Unit_getInstance();
  }
  function split_1(_this_, coroutineScope) {
    var first_1 = ByteChannel_0(true);
    var second = ByteChannel_0(true);
    var tmp = launch$default(coroutineScope, null, null, _no_name_provided_$factory_52(_this_, first_1, second, null), 3, null);
    tmp.invokeOnCompletion_27(_no_name_provided_$factory_53(first_1, second));
    Unit_getInstance();
    return to(first_1, second);
  }
  function _no_name_provided__72($this_copyToBoth, $first, $second, resultContinuation) {
    this._$this_copyToBoth = $this_copyToBoth;
    this._$first = $first;
    this._$second = $second;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__72.prototype.invoke_322 = function ($this$launch, $cont) {
    var tmp = this.create_47($this$launch, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__72.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__72.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 14;
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._exceptionState = 13;
            this._exceptionState = 12;
            this._state_0 = 2;
            continue $sm;
          case 2:
            if (!(!this._$this_copyToBoth._get_isClosedForRead__1() ? !this._$first._get_isClosedForWrite__1() ? true : !this._$second._get_isClosedForWrite__1() : false)) {
              this._state_0 = 11;
              continue $sm;
            }
            this._state_0 = 3;
            suspendResult = readRemaining_0(this._$this_copyToBoth, new Long(4096, 0), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            this._tmp0_use_01 = suspendResult;
            this._state_0 = 4;
            continue $sm;
          case 4:
            this._exceptionState = 9;
            this._exceptionState = 7;
            this._state_0 = 5;
            suspendResult = this._$first.writePacket_6(this._tmp0_use_01.copy_1(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 5:
            suspendResult;
            this._state_0 = 6;
            suspendResult = this._$second.writePacket_6(this._tmp0_use_01.copy_1(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 6:
            var tmp_0 = this;
            suspendResult;
            tmp_0._TRY_RESULT3 = Unit_getInstance();
            this._exceptionState = 9;
            this._state_0 = 8;
            continue $sm;
          case 7:
            this._exceptionState = 9;
            var tmp_1 = this._exception_0;
            if (tmp_1 instanceof Error) {
              var cause_2 = this._exception_0;
              var tmp_2 = this;
              this._$this_copyToBoth.cancel_25(cause_2);
              Unit_getInstance();
              this._$first.close_27(cause_2);
              Unit_getInstance();
              tmp_2._TRY_RESULT3 = this._$second.close_27(cause_2);
              this._state_0 = 8;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 8:
            this._exceptionState = 9;
            this._tmp$ret$02_0 = this._TRY_RESULT3;
            this._state_0 = 10;
            continue $sm;
          case 9:
            this._exceptionState = 12;
            var t = this._exception_0;
            this._tmp0_use_01.close_40();
            throw t;
          case 10:
            var tmp_3 = this._tmp$ret$02_0;
            this._tmp0_use_01.close_40();
            Unit_getInstance();
            this._state_0 = 2;
            continue $sm;
          case 11:
            var tmp_4 = this;
            var tmp_5;
            var tmp_6 = this._$this$launch_0;
            if (isInterface(tmp_6, ByteChannel)) {
              var tmp0_safe_receiver = this._$this$launch_0._get_closedCause__1();
              if (tmp0_safe_receiver == null)
                null;
              else {
                throw tmp0_safe_receiver;
              }
              tmp_5 = Unit_getInstance();
            } else {
            }

            tmp_4._tmp$ret$20 = tmp_5;
            this._exceptionState = 14;
            this._state_0 = 15;
            continue $sm;
          case 12:
            this._exceptionState = 13;
            var tmp_7 = this._exception_0;
            if (tmp_7 instanceof Error) {
              var cause = this._exception_0;
              var tmp_8 = this;
              this._$first.close_27(cause);
              Unit_getInstance();
              this._$second.close_27(cause);
              tmp_8._tmp$ret$20 = Unit_getInstance();
              this._exceptionState = 14;
              this._state_0 = 15;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 13:
            this._exceptionState = 14;
            var t_0 = this._exception_0;
            close(this._$first);
            Unit_getInstance();
            close(this._$second);
            Unit_getInstance();
            throw t_0;
          case 14:
            throw this._exception_0;
          case 15:
            close(this._$first);
            Unit_getInstance();
            close(this._$second);
            Unit_getInstance();
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 14) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__72.prototype.create_47 = function ($this$launch, completion) {
    var i = new _no_name_provided__72(this._$this_copyToBoth, this._$first, this._$second, completion);
    i._$this$launch_0 = $this$launch;
    return i;
  };
  _no_name_provided__72.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__73($first, $second) {
    this._$first_0 = $first;
    this._$second_0 = $second;
  }
  _no_name_provided__73.prototype.invoke_310 = function (it) {
    var tmp0_elvis_lhs = it;
    if (tmp0_elvis_lhs == null)
      return Unit_getInstance();
    else
      tmp0_elvis_lhs;
    Unit_getInstance();
    this._$first_0.close_27(it);
    Unit_getInstance();
    this._$second_0.close_27(it);
    Unit_getInstance();
  };
  _no_name_provided__73.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__73.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__74($first, $tmp0_use_0, resultContinuation) {
    this._$first_1 = $first;
    this._$tmp0_use_0 = $tmp0_use_0;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__74.prototype.invoke_322 = function ($this$async, $cont) {
    var tmp = this.create_47($this$async, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__74.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__74.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this._$first_1.writePacket_6(this._$tmp0_use_0.copy_1(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__74.prototype.create_47 = function ($this$async, completion) {
    var i = new _no_name_provided__74(this._$first_1, this._$tmp0_use_0, completion);
    i._$this$async = $this$async;
    return i;
  };
  _no_name_provided__74.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__75($second, $tmp0_use_0, resultContinuation) {
    this._$second_1 = $second;
    this._$tmp0_use_0_0 = $tmp0_use_0;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__75.prototype.invoke_322 = function ($this$async, $cont) {
    var tmp = this.create_47($this$async, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__75.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__75.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this._$second_1.writePacket_6(this._$tmp0_use_0_0.copy_1(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__75.prototype.create_47 = function ($this$async, completion) {
    var i = new _no_name_provided__75(this._$second_1, this._$tmp0_use_0_0, completion);
    i._$this$async_0 = $this$async;
    return i;
  };
  _no_name_provided__75.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__76($this_split, $first, $second, resultContinuation) {
    this._$this_split = $this_split;
    this._$first_2 = $first;
    this._$second_2 = $second;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__76.prototype.invoke_322 = function ($this$launch, $cont) {
    var tmp = this.create_47($this$launch, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__76.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__76.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 11;
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._exceptionState = 10;
            this._exceptionState = 9;
            this._state_0 = 2;
            continue $sm;
          case 2:
            if (!!this._$this_split._get_isClosedForRead__1()) {
              this._state_0 = 8;
              continue $sm;
            }
            this._state_0 = 3;
            suspendResult = readRemaining_0(this._$this_split, new Long(4096, 0), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            this._tmp0_use_01_0 = suspendResult;
            this._state_0 = 4;
            continue $sm;
          case 4:
            this._exceptionState = 7;
            this._state_0 = 5;
            var tmp_0 = async$default(this._$this$launch_1, null, null, _no_name_provided_$factory_54(this._$first_2, this._tmp0_use_01_0, null), 3, null);
            suspendResult = awaitAll(listOf([tmp_0, async$default(this._$this$launch_1, null, null, _no_name_provided_$factory_55(this._$second_2, this._tmp0_use_01_0, null), 3, null)]), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 5:
            this._tmp$ret$02_1 = suspendResult;
            this._state_0 = 6;
            continue $sm;
          case 6:
            var tmp_1 = this._tmp$ret$02_1;
            this._tmp0_use_01_0.close_40();
            Unit_getInstance();
            this._state_0 = 2;
            continue $sm;
          case 7:
            this._exceptionState = 9;
            var t = this._exception_0;
            this._tmp0_use_01_0.close_40();
            throw t;
          case 8:
            var tmp_2 = this;
            var tmp_3;
            var tmp_4 = this._$this$launch_1;
            if (isInterface(tmp_4, ByteChannel)) {
              var tmp0_safe_receiver = this._$this$launch_1._get_closedCause__1();
              if (tmp0_safe_receiver == null)
                null;
              else {
                throw tmp0_safe_receiver;
              }
              tmp_3 = Unit_getInstance();
            } else {
            }

            tmp_2._tmp$ret$20_0 = tmp_3;
            this._exceptionState = 11;
            this._state_0 = 12;
            continue $sm;
          case 9:
            this._exceptionState = 10;
            var tmp_5 = this._exception_0;
            if (tmp_5 instanceof Error) {
              var cause = this._exception_0;
              var tmp_6 = this;
              this._$this_split.cancel_25(cause);
              Unit_getInstance();
              this._$first_2.cancel_25(cause);
              Unit_getInstance();
              this._$second_2.cancel_25(cause);
              tmp_6._tmp$ret$20_0 = Unit_getInstance();
              this._exceptionState = 11;
              this._state_0 = 12;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 10:
            this._exceptionState = 11;
            var t_0 = this._exception_0;
            close(this._$first_2);
            Unit_getInstance();
            close(this._$second_2);
            Unit_getInstance();
            throw t_0;
          case 11:
            throw this._exception_0;
          case 12:
            close(this._$first_2);
            Unit_getInstance();
            close(this._$second_2);
            Unit_getInstance();
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 11) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__76.prototype.create_47 = function ($this$launch, completion) {
    var i = new _no_name_provided__76(this._$this_split, this._$first_2, this._$second_2, completion);
    i._$this$launch_1 = $this$launch;
    return i;
  };
  _no_name_provided__76.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__77($first, $second) {
    this._$first_3 = $first;
    this._$second_3 = $second;
  }
  _no_name_provided__77.prototype.invoke_310 = function (it) {
    var tmp0_elvis_lhs = it;
    if (tmp0_elvis_lhs == null)
      return Unit_getInstance();
    else
      tmp0_elvis_lhs;
    Unit_getInstance();
    this._$first_3.cancel_25(it);
    Unit_getInstance();
    this._$second_3.cancel_25(it);
    Unit_getInstance();
  };
  _no_name_provided__77.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__77.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function $toByteArrayCOROUTINE$0(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__19 = _this_;
  }
  $toByteArrayCOROUTINE$0.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = readRemaining(this.__this__19, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            return readBytes$default(ARGUMENT, 0, 1, null);
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $toByteArrayCOROUTINE$0.$metadata$ = {
    simpleName: '$toByteArrayCOROUTINE$0',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_50($this_copyToBoth, $first, $second, resultContinuation) {
    var i = new _no_name_provided__72($this_copyToBoth, $first, $second, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_51($first, $second) {
    var i = new _no_name_provided__73($first, $second);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_52($this_split, $first, $second, resultContinuation) {
    var i = new _no_name_provided__76($this_split, $first, $second, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_53($first, $second) {
    var i = new _no_name_provided__77($first, $second);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_54($first, $tmp0_use_0, resultContinuation) {
    var i = new _no_name_provided__74($first, $tmp0_use_0, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_55($second, $tmp0_use_0, resultContinuation) {
    var i = new _no_name_provided__75($second, $tmp0_use_0, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided__78() {
  }
  _no_name_provided__78.prototype.invoke_127 = function ($this$$receiver) {
    return $this$$receiver._content;
  };
  _no_name_provided__78.prototype.invoke_420 = function (p1) {
    return this.invoke_127(p1 instanceof CaseInsensitiveString ? p1 : THROW_CCE());
  };
  _no_name_provided__78.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__79() {
  }
  _no_name_provided__79.prototype.invoke_414 = function ($this$$receiver) {
    return caseInsensitive($this$$receiver);
  };
  _no_name_provided__79.prototype.invoke_420 = function (p1) {
    return this.invoke_414((!(p1 == null) ? typeof p1 === 'string' : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__79.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__80() {
  }
  _no_name_provided__80.prototype.invoke_131 = function ($this$$receiver) {
    return new Entry_0($this$$receiver._get_key__52()._content, $this$$receiver._get_value__27());
  };
  _no_name_provided__80.prototype.invoke_420 = function (p1) {
    return this.invoke_131((!(p1 == null) ? isInterface(p1, MutableEntry) : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__80.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__81() {
  }
  _no_name_provided__81.prototype.invoke_133 = function ($this$$receiver) {
    return new Entry_0(caseInsensitive($this$$receiver._get_key__52()), $this$$receiver._get_value__27());
  };
  _no_name_provided__81.prototype.invoke_420 = function (p1) {
    return this.invoke_133((!(p1 == null) ? isInterface(p1, MutableEntry) : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__81.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function CaseInsensitiveMap() {
    var tmp = this;
    tmp._delegate_2 = LinkedHashMap_init_$Create$();
  }
  CaseInsensitiveMap.prototype._get_size__48 = function () {
    return this._delegate_2._get_size__48();
  };
  CaseInsensitiveMap.prototype.containsKey_11 = function (key) {
    return this._delegate_2.containsKey_12(new CaseInsensitiveString(key));
  };
  CaseInsensitiveMap.prototype.containsKey_12 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    else {
    }
    return this.containsKey_11((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  CaseInsensitiveMap.prototype.get_64 = function (key) {
    return this._delegate_2.get_65(caseInsensitive(key));
  };
  CaseInsensitiveMap.prototype.get_65 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    else {
    }
    return this.get_64((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  CaseInsensitiveMap.prototype.isEmpty_50 = function () {
    return this._delegate_2.isEmpty_50();
  };
  CaseInsensitiveMap.prototype.clear_26 = function () {
    this._delegate_2.clear_26();
  };
  CaseInsensitiveMap.prototype.put_7 = function (key, value) {
    return this._delegate_2.put_10(caseInsensitive(key), value);
  };
  CaseInsensitiveMap.prototype.put_10 = function (key, value) {
    var tmp = (!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE();
    return this.put_7(tmp, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  CaseInsensitiveMap.prototype.putAll_3 = function (from) {
    var tmp0_iterator_1 = from._get_entries__8().iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      var key_4 = element_2._get_key__52();
      var value_5 = element_2._get_value__27();
      this.put_7(key_4, value_5);
      Unit_getInstance();
    }
  };
  CaseInsensitiveMap.prototype.putAll_6 = function (from) {
    return this.putAll_3(from);
  };
  CaseInsensitiveMap.prototype.remove_38 = function (key) {
    return this._delegate_2.remove_45(caseInsensitive(key));
  };
  CaseInsensitiveMap.prototype.remove_45 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    else {
    }
    return this.remove_38((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  CaseInsensitiveMap.prototype._get_keys__8 = function () {
    var tmp = this._delegate_2._get_keys__8();
    var tmp_0 = _no_name_provided_$factory_56();
    return new DelegatingMutableSet(tmp, tmp_0, _no_name_provided_$factory_57());
  };
  CaseInsensitiveMap.prototype._get_entries__8 = function () {
    var tmp = this._delegate_2._get_entries__8();
    var tmp_0 = _no_name_provided_$factory_58();
    return new DelegatingMutableSet(tmp, tmp_0, _no_name_provided_$factory_59());
  };
  CaseInsensitiveMap.prototype._get_values__14 = function () {
    return this._delegate_2._get_values__14();
  };
  CaseInsensitiveMap.prototype.equals = function (other) {
    var tmp;
    if (other == null) {
      tmp = true;
    } else {
      tmp = !(other instanceof CaseInsensitiveMap);
    }
    if (tmp)
      return false;
    else {
    }
    return equals_1(other._delegate_2, this._delegate_2);
  };
  CaseInsensitiveMap.prototype.hashCode = function () {
    return hashCode(this._delegate_2);
  };
  CaseInsensitiveMap.$metadata$ = {
    simpleName: 'CaseInsensitiveMap',
    kind: 'class',
    interfaces: [MutableMap]
  };
  function Entry_0(key, value) {
    this._key_1 = key;
    this._value_9 = value;
  }
  Entry_0.prototype._get_key__52 = function () {
    return this._key_1;
  };
  Entry_0.prototype._get_value__27 = function () {
    return this._value_9;
  };
  Entry_0.prototype.setValue_7 = function (newValue) {
    this._value_9 = newValue;
    return this._value_9;
  };
  Entry_0.prototype.setValue_8 = function (newValue) {
    return this.setValue_7((newValue == null ? true : isObject(newValue)) ? newValue : THROW_CCE());
  };
  Entry_0.prototype.hashCode = function () {
    return (527 + hashCode(ensureNotNull(this._key_1)) | 0) + hashCode(ensureNotNull(this._value_9)) | 0;
  };
  Entry_0.prototype.equals = function (other) {
    var tmp;
    if (other == null) {
      tmp = true;
    } else {
      tmp = !(!(other == null) ? isInterface(other, Entry) : false);
    }
    if (tmp)
      return false;
    else {
    }
    return equals_1(other._get_key__52(), this._key_1) ? equals_1(other._get_value__27(), this._value_9) : false;
  };
  Entry_0.prototype.toString = function () {
    return '' + this._key_1 + '=' + this._value_9;
  };
  Entry_0.$metadata$ = {
    simpleName: 'Entry',
    kind: 'class',
    interfaces: [MutableEntry]
  };
  function _no_name_provided_$factory_56() {
    var i = new _no_name_provided__78();
    return function (p1) {
      return i.invoke_127(p1);
    };
  }
  function _no_name_provided_$factory_57() {
    var i = new _no_name_provided__79();
    return function (p1) {
      return i.invoke_414(p1);
    };
  }
  function _no_name_provided_$factory_58() {
    var i = new _no_name_provided__80();
    return function (p1) {
      return i.invoke_131(p1);
    };
  }
  function _no_name_provided_$factory_59() {
    var i = new _no_name_provided__81();
    return function (p1) {
      return i.invoke_133(p1);
    };
  }
  function toCharArray(_this_) {
    var tmp = 0;
    var tmp_0 = _this_.length;
    var tmp_1 = charArray(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      tmp_1[tmp_2] = charSequenceGet(_this_, tmp_2);
      tmp = tmp + 1 | 0;
    }
    return tmp_1;
  }
  function isLowerCase(_this_) {
    var tmp0_asDynamic_0_2 = _this_.toString();
    var tmp1_unsafeCast_0_1 = tmp0_asDynamic_0_2.toLowerCase();
    return charSequenceGet(tmp1_unsafeCast_0_1, 0).equals(_this_);
  }
  function caseInsensitiveMap() {
    return new CaseInsensitiveMap();
  }
  function SilentSupervisor(parent) {
    var tmp = SupervisorJob(parent);
    return tmp.plus_31(new _no_name_provided__1_3());
  }
  function SilentSupervisor$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return SilentSupervisor(parent);
  }
  function _no_name_provided__1_3() {
    AbstractCoroutineContextElement.call(this, Key_getInstance_1());
  }
  _no_name_provided__1_3.prototype.handleException_2 = function (context, exception) {
    return Unit_getInstance();
  };
  _no_name_provided__1_3.prototype.handleException_0 = function (context, exception) {
    return this.handleException_2(context, exception);
  };
  _no_name_provided__1_3.$metadata$ = {
    simpleName: '<no name provided>_1',
    kind: 'class',
    interfaces: [CoroutineExceptionHandler]
  };
  var digits;
  function _no_name_provided__82(this$0) {
    this._this$0_20 = this$0;
    this._delegateIterator = this._this$0_20._delegate_3.iterator_62();
  }
  _no_name_provided__82.prototype.hasNext_29 = function () {
    return this._delegateIterator.hasNext_29();
  };
  _no_name_provided__82.prototype.next_31 = function () {
    return this._this$0_20._convertTo(this._delegateIterator.next_31());
  };
  _no_name_provided__82.prototype.remove_51 = function () {
    return this._delegateIterator.remove_51();
  };
  _no_name_provided__82.$metadata$ = {
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function DelegatingMutableSet(delegate, convertTo, convert) {
    this._delegate_3 = delegate;
    this._convertTo = convertTo;
    this._convert = convert;
    this._size_3 = this._delegate_3._get_size__48();
  }
  DelegatingMutableSet.prototype.convert = function (_this__0) {
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(_this__0, 10));
    var tmp0_iterator_1_2 = _this__0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var item_2_3 = tmp0_iterator_1_2.next_31();
      tmp0_mapTo_0_1.add_32(this._convert(item_2_3));
      Unit_getInstance();
    }
    return tmp0_mapTo_0_1;
  };
  DelegatingMutableSet.prototype.convertTo = function (_this__0) {
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(_this__0, 10));
    var tmp0_iterator_1_2 = _this__0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var item_2_3 = tmp0_iterator_1_2.next_31();
      tmp0_mapTo_0_1.add_32(this._convertTo(item_2_3));
      Unit_getInstance();
    }
    return tmp0_mapTo_0_1;
  };
  DelegatingMutableSet.prototype._get_size__48 = function () {
    return this._size_3;
  };
  DelegatingMutableSet.prototype.add_21 = function (element) {
    return this._delegate_3.add_32(this._convert(element));
  };
  DelegatingMutableSet.prototype.add_32 = function (element) {
    return this.add_21((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  DelegatingMutableSet.prototype.addAll_14 = function (elements) {
    return this._delegate_3.addAll_23(this.convert(elements));
  };
  DelegatingMutableSet.prototype.addAll_23 = function (elements) {
    return this.addAll_14(elements);
  };
  DelegatingMutableSet.prototype.clear_26 = function () {
    this._delegate_3.clear_26();
  };
  DelegatingMutableSet.prototype.contains_33 = function (element) {
    return this._delegate_3.contains_48(this._convert(element));
  };
  DelegatingMutableSet.prototype.contains_48 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    else {
    }
    return this.contains_33((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  DelegatingMutableSet.prototype.containsAll_24 = function (elements) {
    return this._delegate_3.containsAll_37(this.convert(elements));
  };
  DelegatingMutableSet.prototype.containsAll_37 = function (elements) {
    return this.containsAll_24(elements);
  };
  DelegatingMutableSet.prototype.isEmpty_50 = function () {
    return this._delegate_3.isEmpty_50();
  };
  DelegatingMutableSet.prototype.iterator_62 = function () {
    return new _no_name_provided__82(this);
  };
  DelegatingMutableSet.prototype.hashCode = function () {
    return hashCode(this._delegate_3);
  };
  DelegatingMutableSet.prototype.equals = function (other) {
    var tmp;
    if (other == null) {
      tmp = true;
    } else {
      tmp = !(!(other == null) ? isInterface(other, Set) : false);
    }
    if (tmp)
      return false;
    else {
    }
    var elements = this.convertTo(this._delegate_3);
    var tmp_0;
    if (other.containsAll_37(elements)) {
      var tmp0_containsAll_0 = other;
      tmp_0 = elements.containsAll_37(tmp0_containsAll_0);
    } else {
      tmp_0 = false;
    }
    return tmp_0;
  };
  DelegatingMutableSet.prototype.toString = function () {
    return toString_1(this.convertTo(this._delegate_3));
  };
  DelegatingMutableSet.$metadata$ = {
    simpleName: 'DelegatingMutableSet',
    kind: 'class',
    interfaces: [MutableSet]
  };
  function Hash() {
    Hash_instance = this;
  }
  Hash.prototype.combine = function (objects) {
    return hashCode(toList(objects));
  };
  Hash.$metadata$ = {
    simpleName: 'Hash',
    kind: 'object',
    interfaces: []
  };
  var Hash_instance;
  function Hash_getInstance() {
    if (Hash_instance == null)
      new Hash();
    return Hash_instance;
  }
  function ensureListForKey($this, name, size_0) {
    if ($this._built) {
      throw IllegalStateException_init_$Create$('Cannot modify a builder after build() function already invoked. Make sure you call build() last.');
    }var tmp0_elvis_lhs = $this._values_0.get_65(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_also_0 = ArrayList_init_$Create$_0(size_0);
      $this.validateName_1(name);
      var tmp0_set_0_2 = $this._values_0;
      tmp0_set_0_2.put_10(name, tmp0_also_0);
      Unit_getInstance();
      tmp = tmp0_also_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function _no_name_provided__83(this$0) {
    this._this$0_21 = this$0;
  }
  _no_name_provided__83.prototype.invoke_205 = function (name, values_4) {
    this._this$0_21.appendAll_3(name, values_4);
  };
  _no_name_provided__83.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? typeof p1 === 'string' : false) ? p1 : THROW_CCE();
    this.invoke_205(tmp, (!(p2 == null) ? isInterface(p2, List) : false) ? p2 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__83.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function StringValuesBuilder(caseInsensitiveName, size_0) {
    this._caseInsensitiveName = caseInsensitiveName;
    this._values_0 = this._caseInsensitiveName ? caseInsensitiveMap() : LinkedHashMap_init_$Create$_1(size_0);
    this._built = false;
  }
  StringValuesBuilder.prototype._get_values__14 = function () {
    return this._values_0;
  };
  StringValuesBuilder.prototype._set_built__1 = function (_set___) {
    this._built = _set___;
  };
  StringValuesBuilder.prototype._get_built__1 = function () {
    return this._built;
  };
  StringValuesBuilder.prototype.getAll_8 = function (name) {
    return this._values_0.get_65(name);
  };
  StringValuesBuilder.prototype.isEmpty_50 = function () {
    return this._values_0.isEmpty_50();
  };
  StringValuesBuilder.prototype.entries_10 = function () {
    return unmodifiable(this._values_0._get_entries__8());
  };
  StringValuesBuilder.prototype.set_8 = function (name, value) {
    this.validateValue_1(value);
    var list = ensureListForKey(this, name, 1);
    list.clear_26();
    list.add_32(value);
    Unit_getInstance();
  };
  StringValuesBuilder.prototype.get_64 = function (name) {
    var tmp0_safe_receiver = this.getAll_8(name);
    return tmp0_safe_receiver == null ? null : firstOrNull_0(tmp0_safe_receiver);
  };
  StringValuesBuilder.prototype.append_26 = function (name, value) {
    this.validateValue_1(value);
    ensureListForKey(this, name, 1).add_32(value);
    Unit_getInstance();
  };
  StringValuesBuilder.prototype.appendAll_1 = function (stringValues) {
    stringValues.forEach_7(_no_name_provided_$factory_60(this));
  };
  StringValuesBuilder.prototype.appendAll_3 = function (name, values_4) {
    var tmp0_safe_receiver = isInterface(values_4, Collection) ? values_4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_size__48();
    var tmp0_let_0 = ensureListForKey(this, name, tmp1_elvis_lhs == null ? 2 : tmp1_elvis_lhs);
    var tmp0_iterator_1_2 = values_4.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var element_2_3 = tmp0_iterator_1_2.next_31();
      this.validateValue_1(element_2_3);
      tmp0_let_0.add_32(element_2_3);
      Unit_getInstance();
    }
  };
  StringValuesBuilder.prototype.remove_52 = function (name) {
    this._values_0.remove_45(name);
    Unit_getInstance();
  };
  StringValuesBuilder.prototype.clear_26 = function () {
    this._values_0.clear_26();
  };
  StringValuesBuilder.prototype.validateName_1 = function (name) {
  };
  StringValuesBuilder.prototype.validateValue_1 = function (value) {
  };
  StringValuesBuilder.$metadata$ = {
    simpleName: 'StringValuesBuilder',
    kind: 'class',
    interfaces: []
  };
  function appendAll(_this_, builder) {
    var tmp0_forEach_0_2 = builder.entries_10();
    var tmp0_iterator_1_3 = tmp0_forEach_0_2.iterator_62();
    while (tmp0_iterator_1_3.hasNext_29()) {
      var element_2_4 = tmp0_iterator_1_3.next_31();
      var name_4_5 = element_2_4._get_key__52();
      var values_5_6 = element_2_4._get_value__27();
      _this_.appendAll_3(name_4_5, values_5_6);
    }
    return _this_;
  }
  function flattenEntries(_this_) {
    var tmp0_flatMap_0 = _this_.entries_10();
    var tmp0_flatMapTo_0_1 = ArrayList_init_$Create$();
    var tmp0_iterator_1_2 = tmp0_flatMap_0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var element_2_3 = tmp0_iterator_1_2.next_31();
      var tmp0_map_0_6 = element_2_3._get_value__27();
      var tmp0_mapTo_0_1_7 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0_6, 10));
      var tmp0_iterator_1_2_8 = tmp0_map_0_6.iterator_62();
      while (tmp0_iterator_1_2_8.hasNext_29()) {
        var item_2_3_9 = tmp0_iterator_1_2_8.next_31();
        tmp0_mapTo_0_1_7.add_32(to(element_2_3._get_key__52(), item_2_3_9));
        Unit_getInstance();
      }
      var list_3_4 = tmp0_mapTo_0_1_7;
      addAll(tmp0_flatMapTo_0_1, list_3_4);
      Unit_getInstance();
    }
    return tmp0_flatMapTo_0_1;
  }
  function StringValues() {
  }
  StringValues.prototype.get_64 = function (name) {
    var tmp0_safe_receiver = this.getAll_8(name);
    return tmp0_safe_receiver == null ? null : firstOrNull_0(tmp0_safe_receiver);
  };
  StringValues.prototype.forEach_7 = function (body) {
    var tmp0_forEach_0 = this.entries_10();
    var tmp0_iterator_1 = tmp0_forEach_0.iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      var k_4 = element_2._get_key__52();
      var v_5 = element_2._get_value__27();
      body(k_4, v_5);
    }
    return Unit_getInstance();
  };
  StringValues.$metadata$ = {
    simpleName: 'StringValues',
    kind: 'interface',
    interfaces: []
  };
  function listForKey($this, name) {
    return $this._get_values__14().get_65(name);
  }
  function _no_name_provided__84(this$0, $values) {
    this._this$0_22 = this$0;
    this._$values = $values;
  }
  _no_name_provided__84.prototype.invoke_411 = function () {
    var tmp;
    if (this._this$0_22._get_caseInsensitiveName__4()) {
      var tmp0_apply_0 = caseInsensitiveMap();
      tmp0_apply_0.putAll_6(this._$values);
      tmp = tmp0_apply_0;
    } else {
      tmp = toMap_2(this._$values);
    }
    return tmp;
  };
  _no_name_provided__84.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function StringValuesImpl(caseInsensitiveName, values_4) {
    this._caseInsensitiveName_0 = caseInsensitiveName;
    var tmp = this;
    tmp._values$delegate = lazy(_no_name_provided_$factory_61(this, values_4));
  }
  StringValuesImpl.prototype._get_caseInsensitiveName__4 = function () {
    return this._caseInsensitiveName_0;
  };
  StringValuesImpl.prototype._get_values__14 = function () {
    var tmp0_getValue_0 = this._values$delegate;
    var tmp1_getValue_0 = values$factory();
    return tmp0_getValue_0._get_value__27();
  };
  StringValuesImpl.prototype.get_64 = function (name) {
    var tmp0_safe_receiver = listForKey(this, name);
    return tmp0_safe_receiver == null ? null : firstOrNull_0(tmp0_safe_receiver);
  };
  StringValuesImpl.prototype.getAll_8 = function (name) {
    return listForKey(this, name);
  };
  StringValuesImpl.prototype.names_2 = function () {
    return unmodifiable(this._get_values__14()._get_keys__8());
  };
  StringValuesImpl.prototype.isEmpty_50 = function () {
    return this._get_values__14().isEmpty_50();
  };
  StringValuesImpl.prototype.entries_10 = function () {
    return unmodifiable(this._get_values__14()._get_entries__8());
  };
  StringValuesImpl.prototype.forEach_7 = function (body) {
    var tmp0_iterator_0 = this._get_values__14();
    var tmp0_iterator = tmp0_iterator_0._get_entries__8().iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var tmp1_loop_parameter = tmp0_iterator.next_31();
      var key = tmp1_loop_parameter._get_key__52();
      var value = tmp1_loop_parameter._get_value__27();
      body(key, value);
    }
  };
  StringValuesImpl.prototype.toString = function () {
    return '' + 'StringValues(case=' + !this._get_caseInsensitiveName__4() + ') ' + this.entries_10();
  };
  StringValuesImpl.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(!(other == null) ? isInterface(other, StringValues) : false))
      return false;
    else {
    }
    if (!(this._get_caseInsensitiveName__4() === other._get_caseInsensitiveName__4()))
      return false;
    return entriesEquals(this.entries_10(), other.entries_10());
  };
  StringValuesImpl.prototype.hashCode = function () {
    return entriesHashCode(this.entries_10(), imul(31, this._get_caseInsensitiveName__4() | 0));
  };
  StringValuesImpl.$metadata$ = {
    simpleName: 'StringValuesImpl',
    kind: 'class',
    interfaces: [StringValues]
  };
  function entriesEquals(a, b) {
    return equals_1(a, b);
  }
  function entriesHashCode(entries, seed) {
    return imul(seed, 31) + hashCode(entries) | 0;
  }
  function values$factory() {
    return getPropertyCallableRef('values', 1, KProperty1, function (receiver) {
      return receiver._get_values__14();
    }, null);
  }
  function _no_name_provided_$factory_60(this$0) {
    var i = new _no_name_provided__83(this$0);
    return function (p1, p2) {
      i.invoke_205(p1, p2);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_61(this$0, $values) {
    var i = new _no_name_provided__84(this$0, $values);
    return function () {
      return i.invoke_411();
    };
  }
  function toLowerCasePreservingASCIIRules(_this_) {
    var tmp$ret$0;
    l$ret$1: do {
      var inductionVariable = 0;
      var last_1 = charSequenceLength(_this_) - 1 | 0;
      if (inductionVariable <= last_1)
        do {
          var index_2 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp0__anonymous__3 = charSequenceGet(_this_, index_2);
          if (!toLowerCasePreservingASCII(tmp0__anonymous__3).equals(tmp0__anonymous__3)) {
            tmp$ret$0 = index_2;
            break l$ret$1;
          } else {
          }
        }
         while (inductionVariable <= last_1);
      tmp$ret$0 = -1;
    }
     while (false);
    var firstIndex = tmp$ret$0;
    if (firstIndex === -1) {
      return _this_;
    }var original = _this_;
    var tmp1_buildString_0 = _this_.length;
    var tmp0_apply_0_1 = StringBuilder_init_$Create$(tmp1_buildString_0);
    tmp0_apply_0_1.append_21(original, 0, firstIndex);
    Unit_getInstance();
    var inductionVariable_0 = firstIndex;
    var last_2 = _get_lastIndex__1(original);
    if (inductionVariable_0 <= last_2)
      do {
        var index_4 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        tmp0_apply_0_1.append_23(toLowerCasePreservingASCII(charSequenceGet(original, index_4)));
        Unit_getInstance();
      }
       while (!(index_4 === last_2));
    return tmp0_apply_0_1.toString();
  }
  function toLowerCasePreservingASCII(ch) {
    var tmp0_subject = ch;
    var tmp;
    if (new Char(65) <= tmp0_subject ? tmp0_subject <= new Char(90) : false) {
      tmp = ch.plus_58(32);
    } else if (new Char(0) <= tmp0_subject ? tmp0_subject <= new Char(127) : false) {
      tmp = ch;
    } else {
      var tmp0_asDynamic_0_2 = ch.toString();
      var tmp1_unsafeCast_0_1 = tmp0_asDynamic_0_2.toLowerCase();
      tmp = charSequenceGet(tmp1_unsafeCast_0_1, 0);
    }
    return tmp;
  }
  function CaseInsensitiveString(content) {
    this._content = content;
    var tmp = this;
    var tmp0_toLowerCase_0 = this._content;
    tmp._hash = getStringHashCode(tmp0_toLowerCase_0.toLowerCase());
  }
  CaseInsensitiveString.prototype.equals = function (other) {
    var tmp0_safe_receiver = other instanceof CaseInsensitiveString ? other : null;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._content;
    return (tmp1_safe_receiver == null ? null : equals_0(tmp1_safe_receiver, this._content, true)) === true;
  };
  CaseInsensitiveString.prototype.hashCode = function () {
    return this._hash;
  };
  CaseInsensitiveString.prototype.toString = function () {
    return this._content;
  };
  CaseInsensitiveString.$metadata$ = {
    simpleName: 'CaseInsensitiveString',
    kind: 'class',
    interfaces: []
  };
  function caseInsensitive(_this_) {
    return new CaseInsensitiveString(_this_);
  }
  function sharedListOf(values_4) {
    if (PlatformUtils_getInstance()._IS_NATIVE) {
      var tmp0_apply_0 = new ConcurrentList();
      addAll_0(tmp0_apply_0, values_4);
      Unit_getInstance();
      return tmp0_apply_0;
    }var tmp1_mapTo_0 = ArrayList_init_$Create$_0(values_4.length);
    var indexedObject = values_4;
    var inductionVariable = 0;
    var last_1 = indexedObject.length;
    while (inductionVariable < last_1) {
      var item_2 = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      tmp1_mapTo_0.add_32(item_2);
      Unit_getInstance();
    }
    return tmp1_mapTo_0;
  }
  function _set_data_($this, _set___) {
    return $this._data$delegate.setValue_4($this, data$factory(), _set___);
  }
  function _get_data_($this) {
    return $this._data$delegate.getValue_3($this, data$factory_0());
  }
  function _set_size_($this, _set___) {
    return $this._size$delegate.setValue_4($this, size$factory(), _set___);
  }
  function checkIndex($this, index) {
    if (index >= $this._get_size__48() ? true : index < 0)
      throw IndexOutOfBoundsException_init_$Create$();
  }
  function increaseCapacity($this, targetCapacity) {
    var newData = new SharedList(targetCapacity);
    var inductionVariable = 0;
    var last_1 = _get_data_($this)._size_4;
    if (inductionVariable < last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        newData.set_7(index, _get_data_($this).get_77(index));
      }
       while (inductionVariable < last_1);
    _set_data_($this, newData);
  }
  function increaseCapacity$default($this, targetCapacity, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      targetCapacity = imul(_get_data_($this)._size_4, 2);
    return increaseCapacity($this, targetCapacity);
  }
  function sweep($this, firstNull) {
    var writePosition = firstNull;
    var inductionVariable = writePosition + 1 | 0;
    var last_1 = $this._get_size__48();
    if (inductionVariable < last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (_get_data_($this).get_77(index) == null) {
          continue;
        }_get_data_($this).set_7(writePosition, _get_data_($this).get_77(index));
        writePosition = writePosition + 1 | 0;
      }
       while (inductionVariable < last_1);
    var inductionVariable_0 = writePosition;
    var last_2 = $this._get_size__48();
    if (inductionVariable_0 < last_2)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        _get_data_($this).set_7(index_0, null);
      }
       while (inductionVariable_0 < last_2);
    _set_size_($this, writePosition);
  }
  function reserve($this, index, gapSize) {
    var targetSize = gapSize + $this._get_size__48() | 0;
    while (_get_data_($this)._size_4 < targetSize) {
      increaseCapacity$default($this, 0, 2, null);
    }
    var readPosition = $this._get_size__48() - 1 | 0;
    while (readPosition >= index) {
      _get_data_($this).set_7(readPosition + gapSize | 0, _get_data_($this).get_77(readPosition));
      readPosition = readPosition - 1 | 0;
    }
    var inductionVariable = index;
    var last_1 = index + gapSize | 0;
    if (inductionVariable < last_1)
      do {
        var current = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        _get_data_($this).set_7(current, null);
      }
       while (inductionVariable < last_1);
    var tmp1_this = $this;
    _set_size_(tmp1_this, tmp1_this._get_size__48() + gapSize | 0);
  }
  function _no_name_provided__85($index, this$0) {
    this._$index = $index;
    this._this$0_23 = this$0;
    var tmp = this;
    tmp._current$delegate = new _no_name_provided__67(this._$index);
  }
  _no_name_provided__85.prototype._set_current_ = function (_set___) {
    return this._current$delegate.setValue_4(this, current$factory(), _set___);
  };
  _no_name_provided__85.prototype._get_current__0 = function () {
    return this._current$delegate.getValue_3(this, current$factory_0());
  };
  _no_name_provided__85.prototype.hasNext_29 = function () {
    return this._get_current__0() < this._this$0_23._get_size__48();
  };
  _no_name_provided__85.prototype.next_31 = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this._get_current__0();
    tmp0_this._set_current_(tmp1 + 1 | 0);
    return this._this$0_23.get_77(tmp1);
  };
  _no_name_provided__85.prototype.remove_51 = function () {
    this._this$0_23.removeAt_2(this._get_current__0() - 1 | 0);
    Unit_getInstance();
    var tmp0_this = this;
    var tmp1 = tmp0_this._get_current__0();
    tmp0_this._set_current_(tmp1 - 1 | 0);
    Unit_getInstance();
  };
  _no_name_provided__85.$metadata$ = {
    kind: 'class',
    interfaces: [MutableListIterator]
  };
  function ConcurrentList() {
    var tmp = this;
    var tmp0_shared_0 = new SharedList(32);
    tmp._data$delegate = new _no_name_provided__67(tmp0_shared_0);
    var tmp_0 = this;
    var tmp0_shared_0_0 = 0;
    tmp_0._size$delegate = new _no_name_provided__67(tmp0_shared_0_0);
    this._lock_1 = new Object();
    makeShared(this);
  }
  ConcurrentList.prototype._get_size__48 = function () {
    return this._size$delegate.getValue_3(this, size$factory_0());
  };
  ConcurrentList.prototype.hashCode = function () {
    var tmp0_synchronized_0 = this._lock_1;
    var tmp0_fold_0_2 = 7;
    var accumulator_1_3 = tmp0_fold_0_2;
    var tmp0_iterator_2_4 = this.iterator_62();
    while (tmp0_iterator_2_4.hasNext_29()) {
      var element_3_5 = tmp0_iterator_2_4.next_31();
      var tmp1__anonymous__4_6 = accumulator_1_3;
      var tmp = Hash_getInstance();
      var tmp0_safe_receiver_2_6_8 = element_3_5;
      var tmp1_elvis_lhs_1_5_7 = tmp0_safe_receiver_2_6_8 == null ? null : hashCode(tmp0_safe_receiver_2_6_8);
      accumulator_1_3 = tmp.combine([tmp1__anonymous__4_6, tmp1_elvis_lhs_1_5_7 == null ? 0 : tmp1_elvis_lhs_1_5_7]);
    }
    return accumulator_1_3;
  };
  ConcurrentList.prototype.equals = function (other) {
    var tmp0_synchronized_0 = this._lock_1;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      var tmp_0;
      if (other == null) {
        tmp_0 = true;
      } else {
        tmp_0 = !(!(other == null) ? isInterface(other, List) : false);
      }
      if (tmp_0) {
        tmp = true;
      } else {
        {
          tmp = !(other._get_size__48() === this._get_size__48());
        }
      }
      if (tmp) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      var index_1_2 = 0;
      var tmp0_iterator_2_3 = this.iterator_62();
      while (tmp0_iterator_2_3.hasNext_29()) {
        var item_3_4 = tmp0_iterator_2_3.next_31();
        var tmp1_4_6 = index_1_2;
        index_1_2 = tmp1_4_6 + 1 | 0;
        var tmp0__anonymous__5_5 = checkIndexOverflow(tmp1_4_6);
        if (!equals_1(other.get_77(tmp0__anonymous__5_5), item_3_4)) {
          tmp$ret$0 = false;
          break l$ret$1;
        }}
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  ConcurrentList.prototype.toString = function () {
    var tmp0_synchronized_0 = this._lock_1;
    var tmp0_apply_0_1_2 = StringBuilder_init_$Create$_0();
    tmp0_apply_0_1_2.append_23(new Char(91));
    Unit_getInstance();
    var index_1_3_3 = 0;
    var tmp0_iterator_2_4_4 = this.iterator_62();
    while (tmp0_iterator_2_4_4.hasNext_29()) {
      var item_3_5_5 = tmp0_iterator_2_4_4.next_31();
      var tmp1_4_7_7 = index_1_3_3;
      index_1_3_3 = tmp1_4_7_7 + 1 | 0;
      var tmp0__anonymous__5_6_6 = checkIndexOverflow(tmp1_4_7_7);
      tmp0_apply_0_1_2.append_6('' + item_3_5_5);
      Unit_getInstance();
      if ((tmp0__anonymous__5_6_6 + 1 | 0) < this._get_size__48()) {
        tmp0_apply_0_1_2.append_6(', ');
        Unit_getInstance();
      }}
    tmp0_apply_0_1_2.append_23(new Char(93));
    Unit_getInstance();
    return tmp0_apply_0_1_2.toString();
  };
  ConcurrentList.prototype.contains_35 = function (element) {
    return this.indexOf_2(element) >= 0;
  };
  ConcurrentList.prototype.contains_48 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    else {
    }
    return this.contains_35((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ConcurrentList.prototype.containsAll_26 = function (elements) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = true;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = elements.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (!this.contains_35(element_2)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  ConcurrentList.prototype.containsAll_37 = function (elements) {
    return this.containsAll_26(elements);
  };
  ConcurrentList.prototype.get_77 = function (index) {
    var tmp0_synchronized_0 = this._lock_1;
    if (index >= this._get_size__48()) {
      throw NoSuchElementException_init_$Create$();
    }return ensureNotNull(_get_data_(this).get_77(index));
  };
  ConcurrentList.prototype.indexOf_2 = function (element) {
    var tmp0_synchronized_0 = this._lock_1;
    var inductionVariable = 0;
    var last_1 = this._get_size__48();
    if (inductionVariable < last_1)
      do {
        var index_3 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals_1(_get_data_(this).get_77(index_3), element)) {
          return index_3;
        }}
       while (inductionVariable < last_1);
    return -1;
  };
  ConcurrentList.prototype.isEmpty_50 = function () {
    return this._get_size__48() === 0;
  };
  ConcurrentList.prototype.add_23 = function (element) {
    var tmp0_synchronized_0 = this._lock_1;
    if (this._get_size__48() >= _get_data_(this)._size_4) {
      increaseCapacity$default(this, 0, 2, null);
    }_get_data_(this).set_7(this._get_size__48(), element);
    var tmp0_this_2 = this;
    _set_size_(tmp0_this_2, tmp0_this_2._get_size__48() + 1 | 0);
    return true;
  };
  ConcurrentList.prototype.add_32 = function (element) {
    return this.add_23((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ConcurrentList.prototype.add_25 = function (index, element) {
    reserve(this, index, 1);
    _get_data_(this).set_7(index, element);
  };
  ConcurrentList.prototype.add_26 = function (index, element) {
    return this.add_25(index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ConcurrentList.prototype.addAll_16 = function (elements) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = true;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = elements.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (!this.add_23(element_2)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = true;
    }
     while (false);
    Unit_getInstance();
    return !elements.isEmpty_50();
  };
  ConcurrentList.prototype.addAll_23 = function (elements) {
    return this.addAll_16(elements);
  };
  ConcurrentList.prototype.clear_26 = function () {
    var tmp0_synchronized_0 = this._lock_1;
    _set_data_(this, new SharedList(32));
    return _set_size_(this, 0);
  };
  ConcurrentList.prototype.iterator_62 = function () {
    return this.listIterator_1();
  };
  ConcurrentList.prototype.listIterator_1 = function () {
    return this.listIterator_3(0);
  };
  ConcurrentList.prototype.listIterator_3 = function (index) {
    return new _no_name_provided__85(index, this);
  };
  ConcurrentList.prototype.removeAt_2 = function (index) {
    var tmp0_synchronized_0 = this._lock_1;
    checkIndex(this, index);
    var old_2 = _get_data_(this).get_77(index);
    _get_data_(this).set_7(index, null);
    sweep(this, index);
    return ensureNotNull(old_2);
  };
  ConcurrentList.prototype.set_5 = function (index, element) {
    var tmp0_synchronized_0 = this._lock_1;
    checkIndex(this, index);
    var old_2 = _get_data_(this).get_77(index);
    _get_data_(this).set_7(index, element);
    var tmp0_elvis_lhs_3 = old_2;
    return tmp0_elvis_lhs_3 == null ? element : tmp0_elvis_lhs_3;
  };
  ConcurrentList.prototype.set_6 = function (index, element) {
    return this.set_5(index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ConcurrentList.$metadata$ = {
    simpleName: 'ConcurrentList',
    kind: 'class',
    interfaces: [MutableList]
  };
  function data$factory() {
    return getPropertyCallableRef('data', 1, KMutableProperty1, function (receiver) {
      return _get_data_(receiver);
    }, function (receiver_0, value) {
      return _set_data_(receiver_0, value);
    });
  }
  function data$factory_0() {
    return getPropertyCallableRef('data', 1, KMutableProperty1, function (receiver) {
      return _get_data_(receiver);
    }, function (receiver_0, value) {
      return _set_data_(receiver_0, value);
    });
  }
  function size$factory() {
    return getPropertyCallableRef('size', 1, KMutableProperty1, function (receiver) {
      return receiver._get_size__48();
    }, function (receiver_0, value) {
      return _set_size_(receiver_0, value);
    });
  }
  function size$factory_0() {
    return getPropertyCallableRef('size', 1, KMutableProperty1, function (receiver) {
      return receiver._get_size__48();
    }, function (receiver_0, value) {
      return _set_size_(receiver_0, value);
    });
  }
  function current$factory() {
    return getPropertyCallableRef('current', 1, KMutableProperty1, function (receiver) {
      return receiver._get_current__0();
    }, function (receiver_0, value) {
      return receiver_0._set_current_(value);
    });
  }
  function current$factory_0() {
    return getPropertyCallableRef('current', 1, KMutableProperty1, function (receiver) {
      return receiver._get_current__0();
    }, function (receiver_0, value) {
      return receiver_0._set_current_(value);
    });
  }
  function _set_current_($this, _set___) {
    return $this._current$delegate_0.setValue_4($this, current$factory_1(), _set___);
  }
  function _get_current_($this) {
    return $this._current$delegate_0.getValue_3($this, current$factory_2());
  }
  function _get_previous_($this) {
    var tmp0_safe_receiver = _get_current_($this);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_previous__0();
  }
  function ConcurrentMap_init_$Init$(lock, initialCapacity, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      lock = new Lock();
    if (!(($mask0 & 2) === 0))
      initialCapacity = 32;
    ConcurrentMap.call($this, lock, initialCapacity);
    return $this;
  }
  function ConcurrentMap_init_$Create$(lock, initialCapacity, $mask0, $marker) {
    return ConcurrentMap_init_$Init$(lock, initialCapacity, $mask0, $marker, Object.create(ConcurrentMap.prototype));
  }
  function _set_table_($this, _set___) {
    return $this._table$delegate.setValue_4($this, table$factory(), _set___);
  }
  function _get_table_($this) {
    return $this._table$delegate.getValue_3($this, table$factory_0());
  }
  function _set_insertionOrder_($this, _set___) {
    return $this._insertionOrder$delegate.setValue_4($this, insertionOrder$factory(), _set___);
  }
  function _get_insertionOrder_($this) {
    return $this._insertionOrder$delegate.getValue_3($this, insertionOrder$factory_0());
  }
  function _get_loadFactor_($this) {
    return $this.__size._value_4 / _get_table_($this)._size_4;
  }
  function findBucket($this, key) {
    var bucketId = hashCode(key) & (_get_table_($this)._size_4 - 1 | 0);
    return _get_table_($this).get_77(bucketId);
  }
  function findOrCreateBucket($this, key) {
    var bucketId = hashCode(key) & (_get_table_($this)._size_4 - 1 | 0);
    var result = _get_table_($this).get_77(bucketId);
    if (result == null) {
      var bucket = new SharedForwardList();
      _get_table_($this).set_7(bucketId, bucket);
      return bucket;
    }return result;
  }
  function upsize($this) {
    var newTable = ConcurrentMap_init_$Create$(null, imul(_get_table_($this)._size_4, 2), 1, null);
    newTable.putAll_5($this);
    _set_table_($this, _get_table_(newTable));
  }
  function locked($this, block) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_withLock_0 = $this._lock_2;
      try {
        tmp0_withLock_0.lock_1();
        tmp$ret$0 = block();
        break l$ret$1;
      }finally {
        tmp0_withLock_0.unlock_1();
      }
    }
     while (false);
    return tmp$ret$0;
  }
  function _no_name_provided__86(this$0, $value) {
    this._this$0_24 = this$0;
    this._$value_1 = $value;
  }
  _no_name_provided__86.prototype.invoke_411 = function () {
    var tmp0_iterator = _get_table_(this._this$0_24).iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var bucket = tmp0_iterator.next_31();
      var tmp1_elvis_lhs = bucket;
      if (tmp1_elvis_lhs == null)
        continue;
      else
        tmp1_elvis_lhs;
      Unit_getInstance();
      var tmp2_iterator = bucket.iterator_62();
      while (tmp2_iterator.hasNext_29()) {
        var item = tmp2_iterator.next_31();
        if (equals_1(item._get_value__27(), this._$value_1)) {
          return true;
        }}
    }
    return false;
  };
  _no_name_provided__86.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__87(this$0, $key) {
    this._this$0_25 = this$0;
    this._$key = $key;
  }
  _no_name_provided__87.prototype.invoke_411 = function () {
    var tmp0_elvis_lhs = findBucket(this._this$0_25, this._$key);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var bucket = tmp;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_iterator_1_1 = bucket.iterator_62();
      while (tmp0_iterator_1_1.hasNext_29()) {
        var element_2_2 = tmp0_iterator_1_1.next_31();
        if (equals_1(element_2_2._key_2, this._$key)) {
          tmp$ret$0 = element_2_2;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = null;
    }
     while (false);
    var item = tmp$ret$0;
    var tmp1_safe_receiver = item;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver._get_value__27();
  };
  _no_name_provided__87.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__88(this$0) {
    this._this$0_26 = this$0;
  }
  _no_name_provided__88.prototype.invoke_147 = function () {
    _set_table_(this._this$0_26, new SharedList(32));
    _set_insertionOrder_(this._this$0_26, new SharedForwardList());
  };
  _no_name_provided__88.prototype.invoke_411 = function () {
    this.invoke_147();
    return Unit_getInstance();
  };
  _no_name_provided__88.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__89(this$0, $key, $value) {
    this._this$0_27 = this$0;
    this._$key_0 = $key;
    this._$value_2 = $value;
  }
  _no_name_provided__89.prototype.invoke_411 = function () {
    if (_get_loadFactor_(this._this$0_27) > 0.5) {
      upsize(this._this$0_27);
    }var bucket = findOrCreateBucket(this._this$0_27, this._$key_0);
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_iterator_1_1 = bucket.iterator_62();
      while (tmp0_iterator_1_1.hasNext_29()) {
        var element_2_2 = tmp0_iterator_1_1.next_31();
        if (equals_1(element_2_2._key_2, this._$key_0)) {
          tmp$ret$0 = element_2_2;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = null;
    }
     while (false);
    var item = tmp$ret$0;
    if (!(item == null)) {
      var oldValue = item._get_value__27();
      item._set_value__3(this._$value_2);
      return oldValue;
    }var mapNode = new MapNode(this._$key_0, this._$value_2);
    var node = _get_insertionOrder_(this._this$0_27).appendLast(mapNode);
    mapNode._set_backReference_(node);
    bucket.appendFirst(mapNode);
    Unit_getInstance();
    this._this$0_27.__size.atomicfu$incrementAndGet();
    Unit_getInstance();
    return null;
  };
  _no_name_provided__89.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__90(this$0, $key) {
    this._this$0_28 = this$0;
    this._$key_1 = $key;
  }
  _no_name_provided__90.prototype.invoke_411 = function () {
    var tmp0_elvis_lhs = findBucket(this._this$0_28, this._$key_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var bucket = tmp;
    var tmp0_with_0 = bucket.iterator_62();
    while (tmp0_with_0.hasNext_29()) {
      var item_2 = tmp0_with_0.next_31();
      if (equals_1(item_2._key_2, this._$key_1)) {
        var result_3 = item_2._get_value__27();
        this._this$0_28.__size.atomicfu$decrementAndGet();
        Unit_getInstance();
        item_2.remove_51();
        tmp0_with_0.remove_51();
        return result_3;
      }}
    return null;
  };
  _no_name_provided__90.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__91($other, this$0) {
    this._$other = $other;
    this._this$0_29 = this$0;
  }
  _no_name_provided__91.prototype.invoke_411 = function () {
    var tmp;
    var tmp_0;
    if (this._$other == null) {
      tmp_0 = true;
    } else {
      var tmp_1 = this._$other;
      tmp_0 = !(!(tmp_1 == null) ? isInterface(tmp_1, Map_0) : false);
    }
    if (tmp_0) {
      tmp = true;
    } else {
      {
        tmp = !(this._$other._get_size__48() === this._this$0_29._get_size__48());
      }
    }
    if (tmp) {
      return false;
    } else {
    }
    var tmp0_iterator = this._$other._get_entries__8().iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var tmp1_loop_parameter = tmp0_iterator.next_31();
      var key = tmp1_loop_parameter._get_key__52();
      var value = tmp1_loop_parameter._get_value__27();
      var tmp_2 = this._this$0_29;
      if (!equals_1((isInterface(tmp_2, Map_0) ? tmp_2 : THROW_CCE()).get_65(key), value)) {
        return false;
      } else {
      }
    }
    return true;
  };
  _no_name_provided__91.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__92(this$0) {
    this._this$0_30 = this$0;
  }
  _no_name_provided__92.prototype.invoke_411 = function () {
    var current = 7;
    var tmp0_iterator = this._this$0_30._get_entries__8().iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var tmp1_loop_parameter = tmp0_iterator.next_31();
      var key = tmp1_loop_parameter._get_key__52();
      var value = tmp1_loop_parameter._get_value__27();
      current = Hash_getInstance().combine([hashCode(key), hashCode(value), current]);
    }
    return current;
  };
  _no_name_provided__92.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__93(this$0) {
    this._this$0_31 = this$0;
  }
  _no_name_provided__93.prototype.invoke_411 = function () {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    tmp0_apply_0_1.append_6('{');
    Unit_getInstance();
    var tmp0_forEachIndexed_0_3 = this._this$0_31._get_entries__8();
    var index_1_4 = 0;
    var tmp0_iterator_2_5 = tmp0_forEachIndexed_0_3.iterator_62();
    while (tmp0_iterator_2_5.hasNext_29()) {
      var item_3_6 = tmp0_iterator_2_5.next_31();
      var tmp1_4_8 = index_1_4;
      index_1_4 = tmp1_4_8 + 1 | 0;
      var tmp1__anonymous__5_7 = checkIndexOverflow(tmp1_4_8);
      var key_6_9 = item_3_6._get_key__52();
      var value_7_10 = item_3_6._get_value__27();
      tmp0_apply_0_1.append_6('' + key_6_9 + '=' + value_7_10);
      Unit_getInstance();
      if (!(tmp1__anonymous__5_7 === (this._this$0_31._get_size__48() - 1 | 0))) {
        tmp0_apply_0_1.append_6(', ');
        Unit_getInstance();
      }}
    tmp0_apply_0_1.append_6('}');
    Unit_getInstance();
    return tmp0_apply_0_1.toString();
  };
  _no_name_provided__93.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__94(this$0) {
    this._this$0_32 = this$0;
    var tmp = this;
    var tmp0_shared_0 = _get_insertionOrder_(this._this$0_32).first_0();
    tmp._current$delegate_0 = new _no_name_provided__67(tmp0_shared_0);
    makeShared(this);
  }
  _no_name_provided__94.prototype.hasNext_29 = function () {
    return !(_get_current_(this) == null);
  };
  _no_name_provided__94.prototype.next_31 = function () {
    var result = ensureNotNull(ensureNotNull(_get_current_(this))._item);
    var tmp0_safe_receiver = _get_current_(this);
    _set_current_(this, tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_next__1());
    return result;
  };
  _no_name_provided__94.prototype.remove_51 = function () {
    var item = ensureNotNull(ensureNotNull(_get_previous_(this))._item);
    this._this$0_32.remove_44(item._key_2);
    Unit_getInstance();
  };
  _no_name_provided__94.$metadata$ = {
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function ConcurrentMap(lock, initialCapacity) {
    this._lock_2 = lock;
    var tmp = this;
    var tmp0_shared_0 = new SharedList(initialCapacity);
    tmp._table$delegate = new _no_name_provided__67(tmp0_shared_0);
    var tmp_0 = this;
    var tmp0_shared_0_0 = new SharedForwardList();
    tmp_0._insertionOrder$delegate = new _no_name_provided__67(tmp0_shared_0_0);
    this.__size = atomic_1(0);
    makeShared(this);
  }
  ConcurrentMap.prototype._get_size__48 = function () {
    return this.__size._value_4;
  };
  ConcurrentMap.prototype.containsKey_9 = function (key) {
    return !(this.get_55(key) == null);
  };
  ConcurrentMap.prototype.containsKey_12 = function (key) {
    if (!isObject(key))
      return false;
    else {
    }
    return this.containsKey_9(isObject(key) ? key : THROW_CCE());
  };
  ConcurrentMap.prototype.containsValue_3 = function (value) {
    return locked(this, _no_name_provided_$factory_62(this, value));
  };
  ConcurrentMap.prototype.get_55 = function (key) {
    return locked(this, _no_name_provided_$factory_63(this, key));
  };
  ConcurrentMap.prototype.get_65 = function (key) {
    if (!isObject(key))
      return null;
    else {
    }
    return this.get_55(isObject(key) ? key : THROW_CCE());
  };
  ConcurrentMap.prototype.isEmpty_50 = function () {
    return this._get_size__48() === 0;
  };
  ConcurrentMap.prototype.clear_26 = function () {
    return locked(this, _no_name_provided_$factory_64(this));
  };
  ConcurrentMap.prototype.put_9 = function (key, value) {
    return locked(this, _no_name_provided_$factory_65(this, key, value));
  };
  ConcurrentMap.prototype.put_10 = function (key, value) {
    var tmp = isObject(key) ? key : THROW_CCE();
    return this.put_9(tmp, isObject(value) ? value : THROW_CCE());
  };
  ConcurrentMap.prototype.putAll_5 = function (from) {
    var tmp0_iterator = from._get_entries__8().iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var tmp1_loop_parameter = tmp0_iterator.next_31();
      var key = tmp1_loop_parameter._get_key__52();
      var value = tmp1_loop_parameter._get_value__27();
      this.put_9(key, value);
      Unit_getInstance();
    }
  };
  ConcurrentMap.prototype.putAll_6 = function (from) {
    return this.putAll_5(from);
  };
  ConcurrentMap.prototype.remove_44 = function (key) {
    return locked(this, _no_name_provided_$factory_66(this, key));
  };
  ConcurrentMap.prototype.remove_45 = function (key) {
    if (!isObject(key))
      return null;
    else {
    }
    return this.remove_44(isObject(key) ? key : THROW_CCE());
  };
  ConcurrentMap.prototype._get_entries__8 = function () {
    return new MutableMapEntries(this);
  };
  ConcurrentMap.prototype._get_keys__8 = function () {
    return new ConcurrentMapKeys(this);
  };
  ConcurrentMap.prototype._get_values__14 = function () {
    return new ConcurrentMapValues(this);
  };
  ConcurrentMap.prototype.equals = function (other) {
    return locked(this, _no_name_provided_$factory_67(other, this));
  };
  ConcurrentMap.prototype.hashCode = function () {
    return locked(this, _no_name_provided_$factory_68(this));
  };
  ConcurrentMap.prototype.toString = function () {
    return locked(this, _no_name_provided_$factory_69(this));
  };
  ConcurrentMap.prototype.iterator_62 = function () {
    return new _no_name_provided__94(this);
  };
  ConcurrentMap.$metadata$ = {
    simpleName: 'ConcurrentMap',
    kind: 'class',
    interfaces: [MutableMap]
  };
  function table$factory() {
    return getPropertyCallableRef('table', 1, KMutableProperty1, function (receiver) {
      return _get_table_(receiver);
    }, function (receiver_0, value) {
      return _set_table_(receiver_0, value);
    });
  }
  function table$factory_0() {
    return getPropertyCallableRef('table', 1, KMutableProperty1, function (receiver) {
      return _get_table_(receiver);
    }, function (receiver_0, value) {
      return _set_table_(receiver_0, value);
    });
  }
  function insertionOrder$factory() {
    return getPropertyCallableRef('insertionOrder', 1, KMutableProperty1, function (receiver) {
      return _get_insertionOrder_(receiver);
    }, function (receiver_0, value) {
      return _set_insertionOrder_(receiver_0, value);
    });
  }
  function insertionOrder$factory_0() {
    return getPropertyCallableRef('insertionOrder', 1, KMutableProperty1, function (receiver) {
      return _get_insertionOrder_(receiver);
    }, function (receiver_0, value) {
      return _set_insertionOrder_(receiver_0, value);
    });
  }
  function current$factory_1() {
    return getPropertyCallableRef('current', 1, KMutableProperty1, function (receiver) {
      return _get_current_(receiver);
    }, function (receiver_0, value) {
      return _set_current_(receiver_0, value);
    });
  }
  function current$factory_2() {
    return getPropertyCallableRef('current', 1, KMutableProperty1, function (receiver) {
      return _get_current_(receiver);
    }, function (receiver_0, value) {
      return _set_current_(receiver_0, value);
    });
  }
  function _no_name_provided_$factory_62(this$0, $value) {
    var i = new _no_name_provided__86(this$0, $value);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_63(this$0, $key) {
    var i = new _no_name_provided__87(this$0, $key);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_64(this$0) {
    var i = new _no_name_provided__88(this$0);
    return function () {
      i.invoke_147();
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_65(this$0, $key, $value) {
    var i = new _no_name_provided__89(this$0, $key, $value);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_66(this$0, $key) {
    var i = new _no_name_provided__90(this$0, $key);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_67($other, this$0) {
    var i = new _no_name_provided__91($other, this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_68(this$0) {
    var i = new _no_name_provided__92(this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_69(this$0) {
    var i = new _no_name_provided__93(this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided__95(this$0) {
    this._this$0_33 = this$0;
    this._delegateIterator_0 = this._this$0_33._delegate_4.iterator_62();
    makeShared(this);
  }
  _no_name_provided__95.prototype.hasNext_29 = function () {
    return this._delegateIterator_0.hasNext_29();
  };
  _no_name_provided__95.prototype.next_31 = function () {
    return this._delegateIterator_0.next_31()._get_key__52();
  };
  _no_name_provided__95.prototype.remove_51 = function () {
    this._delegateIterator_0.remove_51();
  };
  _no_name_provided__95.$metadata$ = {
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function ConcurrentMapKeys(delegate) {
    this._delegate_4 = delegate;
    makeShared(this);
  }
  ConcurrentMapKeys.prototype.add_27 = function (element) {
    throw UnsupportedOperationException_init_$Create$();
  };
  ConcurrentMapKeys.prototype.add_32 = function (element) {
    return this.add_27(isObject(element) ? element : THROW_CCE());
  };
  ConcurrentMapKeys.prototype.addAll_18 = function (elements) {
    throw UnsupportedOperationException_init_$Create$();
  };
  ConcurrentMapKeys.prototype.addAll_23 = function (elements) {
    return this.addAll_18(elements);
  };
  ConcurrentMapKeys.prototype.clear_26 = function () {
    this._delegate_4.clear_26();
  };
  ConcurrentMapKeys.prototype.iterator_62 = function () {
    return new _no_name_provided__95(this);
  };
  ConcurrentMapKeys.prototype._get_size__48 = function () {
    return this._delegate_4._get_size__48();
  };
  ConcurrentMapKeys.prototype.contains_37 = function (element) {
    var tmp0_contains_0 = this._delegate_4;
    return (isInterface(tmp0_contains_0, Map_0) ? tmp0_contains_0 : THROW_CCE()).containsKey_12(element);
  };
  ConcurrentMapKeys.prototype.contains_48 = function (element) {
    if (!isObject(element))
      return false;
    else {
    }
    return this.contains_37(isObject(element) ? element : THROW_CCE());
  };
  ConcurrentMapKeys.prototype.containsAll_28 = function (elements) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = true;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = elements.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (!this.contains_37(element_2)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  ConcurrentMapKeys.prototype.containsAll_37 = function (elements) {
    return this.containsAll_28(elements);
  };
  ConcurrentMapKeys.prototype.isEmpty_50 = function () {
    return this._get_size__48() === 0;
  };
  ConcurrentMapKeys.$metadata$ = {
    simpleName: 'ConcurrentMapKeys',
    kind: 'class',
    interfaces: [MutableSet]
  };
  function _no_name_provided__96(this$0) {
    this._this$0_34 = this$0;
    this._delegateIterator_1 = this._this$0_34._delegate_5.iterator_62();
    makeShared(this);
  }
  _no_name_provided__96.prototype.hasNext_29 = function () {
    return this._delegateIterator_1.hasNext_29();
  };
  _no_name_provided__96.prototype.next_31 = function () {
    return this._delegateIterator_1.next_31()._get_value__27();
  };
  _no_name_provided__96.prototype.remove_51 = function () {
    this._delegateIterator_1.remove_51();
  };
  _no_name_provided__96.$metadata$ = {
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function ConcurrentMapValues(delegate) {
    this._delegate_5 = delegate;
    makeShared(this);
  }
  ConcurrentMapValues.prototype._get_size__48 = function () {
    return this._delegate_5._get_size__48();
  };
  ConcurrentMapValues.prototype.contains_39 = function (element) {
    return this._delegate_5.containsValue_3(element);
  };
  ConcurrentMapValues.prototype.containsAll_30 = function (elements) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = true;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = elements.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (!this.contains_39(element_2)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  ConcurrentMapValues.prototype.containsAll_37 = function (elements) {
    return this.containsAll_30(elements);
  };
  ConcurrentMapValues.prototype.isEmpty_50 = function () {
    return this._delegate_5._get_size__48() === 0;
  };
  ConcurrentMapValues.prototype.add_29 = function (element) {
    throw UnsupportedOperationException_init_$Create$();
  };
  ConcurrentMapValues.prototype.add_32 = function (element) {
    return this.add_29(isObject(element) ? element : THROW_CCE());
  };
  ConcurrentMapValues.prototype.addAll_20 = function (elements) {
    throw UnsupportedOperationException_init_$Create$();
  };
  ConcurrentMapValues.prototype.addAll_23 = function (elements) {
    return this.addAll_20(elements);
  };
  ConcurrentMapValues.prototype.iterator_62 = function () {
    return new _no_name_provided__96(this);
  };
  ConcurrentMapValues.$metadata$ = {
    simpleName: 'ConcurrentMapValues',
    kind: 'class',
    interfaces: [MutableCollection]
  };
  function ForwardListIterator(head) {
    var tmp = this;
    tmp._previous$delegate = new _no_name_provided__67(head);
  }
  ForwardListIterator.prototype._set_previous__0 = function (_set___) {
    return this._previous$delegate.setValue_4(this, previous$factory(), _set___);
  };
  ForwardListIterator.prototype._get_previous__0 = function () {
    return this._previous$delegate.getValue_3(this, previous$factory_0());
  };
  ForwardListIterator.prototype._get_current__0 = function () {
    var tmp0_safe_receiver = this._get_previous__0();
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_next__1();
  };
  ForwardListIterator.prototype.hasNext_29 = function () {
    var tmp0_safe_receiver = this._get_current__0();
    return !((tmp0_safe_receiver == null ? null : tmp0_safe_receiver._item) == null);
  };
  ForwardListIterator.prototype.next_31 = function () {
    this._set_previous__0(this._get_current__0());
    var tmp0_safe_receiver = this._get_previous__0();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._item;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  };
  ForwardListIterator.prototype.remove_51 = function () {
    var tmp0_safe_receiver = this._get_previous__0();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp0_safe_receiver.remove_51();
      tmp = Unit_getInstance();
    }
    var tmp1_elvis_lhs = tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_error_0 = 'Fail to remove element before iteration';
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    } else {
      Unit_getInstance();
    }
  };
  ForwardListIterator.$metadata$ = {
    simpleName: 'ForwardListIterator',
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function previous$factory() {
    return getPropertyCallableRef('previous', 1, KMutableProperty1, function (receiver) {
      return receiver._get_previous__0();
    }, function (receiver_0, value) {
      return receiver_0._set_previous__0(value);
    });
  }
  function previous$factory_0() {
    return getPropertyCallableRef('previous', 1, KMutableProperty1, function (receiver) {
      return receiver._get_previous__0();
    }, function (receiver_0, value) {
      return receiver_0._set_previous__0(value);
    });
  }
  function ForwardListNode(list, next, item, previous) {
    this._list_1 = list;
    this._item = item;
    var tmp = this;
    tmp._next$delegate = new _no_name_provided__67(next);
    var tmp_0 = this;
    tmp_0._previous$delegate_0 = new _no_name_provided__67(previous);
    makeShared(this);
  }
  ForwardListNode.prototype._set_next__1 = function (_set___) {
    return this._next$delegate.setValue_4(this, next$factory(), _set___);
  };
  ForwardListNode.prototype._get_next__1 = function () {
    return this._next$delegate.getValue_3(this, next$factory_0());
  };
  ForwardListNode.prototype._set_previous__0 = function (_set___) {
    return this._previous$delegate_0.setValue_4(this, previous$factory_1(), _set___);
  };
  ForwardListNode.prototype._get_previous__0 = function () {
    return this._previous$delegate_0.getValue_3(this, previous$factory_2());
  };
  ForwardListNode.prototype.insertAfter = function (value) {
    var result = new ForwardListNode(this._list_1, this._get_next__1(), value, this);
    var tmp0_safe_receiver = this._get_next__1();
    if (tmp0_safe_receiver == null) {
      Unit_getInstance();
    } else
      tmp0_safe_receiver._set_previous__0(result);
    this._set_next__1(result);
    return result;
  };
  ForwardListNode.prototype.removeNext = function () {
    if (equals_1(this._get_next__1(), this._list_1._get_tail_())) {
      this._list_1._set_tail_(this);
    }var tmp0_safe_receiver = this._get_next__1();
    this._set_next__1(tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_next__1());
    var tmp1_safe_receiver = this._get_next__1();
    if (tmp1_safe_receiver == null) {
      Unit_getInstance();
    } else
      tmp1_safe_receiver._set_previous__0(this);
  };
  ForwardListNode.prototype.remove_51 = function () {
    ensureNotNull(this._get_previous__0()).removeNext();
  };
  ForwardListNode.$metadata$ = {
    simpleName: 'ForwardListNode',
    kind: 'class',
    interfaces: []
  };
  function next$factory() {
    return getPropertyCallableRef('next', 1, KMutableProperty1, function (receiver) {
      return receiver._get_next__1();
    }, function (receiver_0, value) {
      return receiver_0._set_next__1(value);
    });
  }
  function next$factory_0() {
    return getPropertyCallableRef('next', 1, KMutableProperty1, function (receiver) {
      return receiver._get_next__1();
    }, function (receiver_0, value) {
      return receiver_0._set_next__1(value);
    });
  }
  function previous$factory_1() {
    return getPropertyCallableRef('previous', 1, KMutableProperty1, function (receiver) {
      return receiver._get_previous__0();
    }, function (receiver_0, value) {
      return receiver_0._set_previous__0(value);
    });
  }
  function previous$factory_2() {
    return getPropertyCallableRef('previous', 1, KMutableProperty1, function (receiver) {
      return receiver._get_previous__0();
    }, function (receiver_0, value) {
      return receiver_0._set_previous__0(value);
    });
  }
  function MapNode(key, value) {
    this._key_2 = key;
    var tmp = this;
    var tmp0_shared_0 = null;
    tmp._backReference$delegate = new _no_name_provided__67(tmp0_shared_0);
    var tmp_0 = this;
    tmp_0._value$delegate = new _no_name_provided__67(value);
    var tmp_1 = this;
    var tmp0_hashCode_0 = this._key_2;
    var tmp0_safe_receiver_2 = tmp0_hashCode_0;
    var tmp1_elvis_lhs_1 = tmp0_safe_receiver_2 == null ? null : hashCode(tmp0_safe_receiver_2);
    tmp_1._hash_0 = tmp1_elvis_lhs_1 == null ? 0 : tmp1_elvis_lhs_1;
    makeShared(this);
  }
  MapNode.prototype._get_key__52 = function () {
    return this._key_2;
  };
  MapNode.prototype._set_backReference_ = function (_set___) {
    return this._backReference$delegate.setValue_4(this, backReference$factory(), _set___);
  };
  MapNode.prototype._get_backReference_ = function () {
    return this._backReference$delegate.getValue_3(this, backReference$factory_0());
  };
  MapNode.prototype._set_value__3 = function (_set___) {
    return this._value$delegate.setValue_4(this, value$factory(), _set___);
  };
  MapNode.prototype._get_value__27 = function () {
    return this._value$delegate.getValue_3(this, value$factory_0());
  };
  MapNode.prototype.setValue_7 = function (newValue) {
    var result = this._get_value__27();
    this._set_value__3(newValue);
    return result;
  };
  MapNode.prototype.setValue_8 = function (newValue) {
    return this.setValue_7((newValue == null ? true : isObject(newValue)) ? newValue : THROW_CCE());
  };
  MapNode.prototype.remove_51 = function () {
    ensureNotNull(this._get_backReference_()).remove_51();
    this._set_backReference_(null);
  };
  MapNode.prototype.toString = function () {
    return '' + 'MapItem[' + this._key_2 + ', ' + this._get_value__27() + ']';
  };
  MapNode.$metadata$ = {
    simpleName: 'MapNode',
    kind: 'class',
    interfaces: [MutableEntry]
  };
  function backReference$factory() {
    return getPropertyCallableRef('backReference', 1, KMutableProperty1, function (receiver) {
      return receiver._get_backReference_();
    }, function (receiver_0, value) {
      return receiver_0._set_backReference_(value);
    });
  }
  function backReference$factory_0() {
    return getPropertyCallableRef('backReference', 1, KMutableProperty1, function (receiver) {
      return receiver._get_backReference_();
    }, function (receiver_0, value) {
      return receiver_0._set_backReference_(value);
    });
  }
  function value$factory() {
    return getPropertyCallableRef('value', 1, KMutableProperty1, function (receiver) {
      return receiver._get_value__27();
    }, function (receiver_0, value) {
      return receiver_0._set_value__3(value);
    });
  }
  function value$factory_0() {
    return getPropertyCallableRef('value', 1, KMutableProperty1, function (receiver) {
      return receiver._get_value__27();
    }, function (receiver_0, value) {
      return receiver_0._set_value__3(value);
    });
  }
  function _no_name_provided__97(this$0) {
    this._this$0_35 = this$0;
    this._origin = this._this$0_35._delegate_6.iterator_62();
  }
  _no_name_provided__97.prototype.hasNext_29 = function () {
    return this._origin.hasNext_29();
  };
  _no_name_provided__97.prototype.next_31 = function () {
    return this._origin.next_31();
  };
  _no_name_provided__97.prototype.remove_51 = function () {
    return this._origin.remove_51();
  };
  _no_name_provided__97.$metadata$ = {
    kind: 'class',
    interfaces: [MutableIterator]
  };
  function MutableMapEntries(delegate) {
    this._delegate_6 = delegate;
    makeShared(this);
  }
  MutableMapEntries.prototype.add_31 = function (element) {
    return !equals_1(this._delegate_6.put_9(element._get_key__52(), element._get_value__27()), element._get_value__27());
  };
  MutableMapEntries.prototype.add_32 = function (element) {
    return this.add_31((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  MutableMapEntries.prototype.addAll_22 = function (elements) {
    var result = false;
    var tmp0_iterator_1 = elements.iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      result = this.add_31(element_2) ? true : result;
    }
    return result;
  };
  MutableMapEntries.prototype.addAll_23 = function (elements) {
    return this.addAll_22(elements);
  };
  MutableMapEntries.prototype.clear_26 = function () {
    this._delegate_6.clear_26();
  };
  MutableMapEntries.prototype.iterator_62 = function () {
    return new _no_name_provided__97(this);
  };
  MutableMapEntries.prototype._get_size__48 = function () {
    return this._delegate_6._get_size__48();
  };
  MutableMapEntries.prototype.contains_40 = function (element) {
    return equals_1(this._delegate_6.get_55(element._get_key__52()), element._get_value__27());
  };
  MutableMapEntries.prototype.contains_48 = function (element) {
    if (!(!(element == null) ? isInterface(element, MutableEntry) : false))
      return false;
    else {
    }
    return this.contains_40((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  MutableMapEntries.prototype.containsAll_32 = function (elements) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = true;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = elements.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (!this.contains_40(element_2)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  MutableMapEntries.prototype.containsAll_37 = function (elements) {
    return this.containsAll_32(elements);
  };
  MutableMapEntries.prototype.isEmpty_50 = function () {
    return this._delegate_6.isEmpty_50();
  };
  MutableMapEntries.$metadata$ = {
    simpleName: 'MutableMapEntries',
    kind: 'class',
    interfaces: [MutableSet]
  };
  function SharedForwardList() {
    var tmp = this;
    var tmp0_shared_0 = null;
    tmp._head$delegate = new _no_name_provided__67(tmp0_shared_0);
    var tmp_0 = this;
    var tmp0_shared_0_0 = this._get_head__9();
    tmp_0._tail$delegate = new _no_name_provided__67(tmp0_shared_0_0);
    makeShared(this);
    this._set_head_(new ForwardListNode(this, null, null, null));
    this._set_tail_(this._get_head__9());
  }
  SharedForwardList.prototype._set_head_ = function (_set___) {
    return this._head$delegate.setValue_4(this, head$factory(), _set___);
  };
  SharedForwardList.prototype._get_head__9 = function () {
    return this._head$delegate.getValue_3(this, head$factory_0());
  };
  SharedForwardList.prototype._set_tail_ = function (_set___) {
    return this._tail$delegate.setValue_4(this, tail$factory(), _set___);
  };
  SharedForwardList.prototype._get_tail_ = function () {
    return this._tail$delegate.getValue_3(this, tail$factory_0());
  };
  SharedForwardList.prototype.first_0 = function () {
    return ensureNotNull(this._get_head__9())._get_next__1();
  };
  SharedForwardList.prototype.appendFirst = function (value) {
    var newValue = ensureNotNull(this._get_head__9()).insertAfter(value);
    if (equals_1(this._get_head__9(), this._get_tail_())) {
      this._set_tail_(newValue);
    }return newValue;
  };
  SharedForwardList.prototype.appendLast = function (value) {
    this._set_tail_(ensureNotNull(this._get_tail_()).insertAfter(value));
    return ensureNotNull(this._get_tail_());
  };
  SharedForwardList.prototype.iterator_62 = function () {
    return new ForwardListIterator(ensureNotNull(this._get_head__9()));
  };
  SharedForwardList.$metadata$ = {
    simpleName: 'SharedForwardList',
    kind: 'class',
    interfaces: [MutableIterable]
  };
  function head$factory() {
    return getPropertyCallableRef('head', 1, KMutableProperty1, function (receiver) {
      return receiver._get_head__9();
    }, function (receiver_0, value) {
      return receiver_0._set_head_(value);
    });
  }
  function head$factory_0() {
    return getPropertyCallableRef('head', 1, KMutableProperty1, function (receiver) {
      return receiver._get_head__9();
    }, function (receiver_0, value) {
      return receiver_0._set_head_(value);
    });
  }
  function tail$factory() {
    return getPropertyCallableRef('tail', 1, KMutableProperty1, function (receiver) {
      return receiver._get_tail_();
    }, function (receiver_0, value) {
      return receiver_0._set_tail_(value);
    });
  }
  function tail$factory_0() {
    return getPropertyCallableRef('tail', 1, KMutableProperty1, function (receiver) {
      return receiver._get_tail_();
    }, function (receiver_0, value) {
      return receiver_0._set_tail_(value);
    });
  }
  function _no_name_provided__98($index, this$0) {
    this._$index_0 = $index;
    this._this$0_36 = this$0;
    this._currentIndex = atomic_1(this._$index_0);
    makeShared(this);
  }
  _no_name_provided__98.prototype.hasNext_29 = function () {
    return this._currentIndex._value_4 < this._this$0_36._size_4;
  };
  _no_name_provided__98.prototype.next_31 = function () {
    var tmp0_check_0 = this.hasNext_29();
    if (!tmp0_check_0) {
      var message_2_1 = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString_1(message_2_1));
    }var current = this._currentIndex.atomicfu$getAndIncrement();
    return this._this$0_36._data_3.atomicfu$get(current)._value_2;
  };
  _no_name_provided__98.$metadata$ = {
    kind: 'class',
    interfaces: [ListIterator]
  };
  function SharedList(size_0) {
    this._size_4 = size_0;
    this._data_3 = atomicArrayOfNulls(this._size_4);
    makeShared(this);
  }
  SharedList.prototype._get_size__48 = function () {
    return this._size_4;
  };
  SharedList.prototype.set_7 = function (index, value) {
    this._data_3.atomicfu$get(index)._value_2 = value;
  };
  SharedList.prototype.contains_42 = function (element) {
    var inductionVariable = 0;
    var last_1 = this._size_4;
    if (inductionVariable < last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals_1(this._data_3.atomicfu$get(index)._value_2, element)) {
          return true;
        }}
       while (inductionVariable < last_1);
    return false;
  };
  SharedList.prototype.contains_48 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    else {
    }
    return this.contains_42((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  SharedList.prototype.containsAll_34 = function (elements) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = true;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = elements.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (!this.contains_42(element_2)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  SharedList.prototype.containsAll_37 = function (elements) {
    return this.containsAll_34(elements);
  };
  SharedList.prototype.get_77 = function (index) {
    return this._data_3.atomicfu$get(index)._value_2;
  };
  SharedList.prototype.isEmpty_50 = function () {
    return this._size_4 === 0;
  };
  SharedList.prototype.iterator_62 = function () {
    return this.listIterator_3(0);
  };
  SharedList.prototype.listIterator_3 = function (index) {
    return new _no_name_provided__98(index, this);
  };
  SharedList.$metadata$ = {
    simpleName: 'SharedList',
    kind: 'class',
    interfaces: [List]
  };
  function Companion_27() {
    Companion_instance_26 = this;
    this._START = GMTDate_0(new Long(0, 0));
  }
  Companion_27.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_26;
  function Companion_getInstance_26() {
    if (Companion_instance_26 == null)
      new Companion_27();
    return Companion_instance_26;
  }
  function GMTDate(seconds, minutes, hours, dayOfWeek, dayOfMonth, dayOfYear, month, year, timestamp) {
    Companion_getInstance_26();
    this._seconds = seconds;
    this._minutes = minutes;
    this._hours = hours;
    this._dayOfWeek = dayOfWeek;
    this._dayOfMonth = dayOfMonth;
    this._dayOfYear = dayOfYear;
    this._month = month;
    this._year = year;
    this._timestamp = timestamp;
  }
  GMTDate.prototype.compareTo_21 = function (other) {
    return this._timestamp.compareTo_59(other._timestamp);
  };
  GMTDate.prototype.compareTo_30 = function (other) {
    return this.compareTo_21(other instanceof GMTDate ? other : THROW_CCE());
  };
  GMTDate.prototype.toString = function () {
    return '' + 'GMTDate(seconds=' + this._seconds + ', minutes=' + this._minutes + ', hours=' + this._hours + ', dayOfWeek=' + this._dayOfWeek + ', dayOfMonth=' + this._dayOfMonth + ', dayOfYear=' + this._dayOfYear + ', month=' + this._month + ', year=' + this._year + ', timestamp=' + this._timestamp + ')';
  };
  GMTDate.prototype.hashCode = function () {
    var result = this._seconds;
    result = imul(result, 31) + this._minutes | 0;
    result = imul(result, 31) + this._hours | 0;
    result = imul(result, 31) + this._dayOfWeek.hashCode() | 0;
    result = imul(result, 31) + this._dayOfMonth | 0;
    result = imul(result, 31) + this._dayOfYear | 0;
    result = imul(result, 31) + this._month.hashCode() | 0;
    result = imul(result, 31) + this._year | 0;
    result = imul(result, 31) + this._timestamp.hashCode() | 0;
    return result;
  };
  GMTDate.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof GMTDate))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof GMTDate ? other : THROW_CCE();
    if (!(this._seconds === tmp0_other_with_cast._seconds))
      return false;
    if (!(this._minutes === tmp0_other_with_cast._minutes))
      return false;
    if (!(this._hours === tmp0_other_with_cast._hours))
      return false;
    if (!this._dayOfWeek.equals(tmp0_other_with_cast._dayOfWeek))
      return false;
    if (!(this._dayOfMonth === tmp0_other_with_cast._dayOfMonth))
      return false;
    if (!(this._dayOfYear === tmp0_other_with_cast._dayOfYear))
      return false;
    if (!this._month.equals(tmp0_other_with_cast._month))
      return false;
    if (!(this._year === tmp0_other_with_cast._year))
      return false;
    if (!this._timestamp.equals(tmp0_other_with_cast._timestamp))
      return false;
    return true;
  };
  GMTDate.$metadata$ = {
    simpleName: 'GMTDate',
    kind: 'class',
    interfaces: [Comparable]
  };
  var WeekDay_MONDAY_instance;
  var WeekDay_TUESDAY_instance;
  var WeekDay_WEDNESDAY_instance;
  var WeekDay_THURSDAY_instance;
  var WeekDay_FRIDAY_instance;
  var WeekDay_SATURDAY_instance;
  var WeekDay_SUNDAY_instance;
  function Companion_28() {
    Companion_instance_27 = this;
  }
  Companion_28.prototype.from_1 = function (ordinal) {
    return values()[ordinal];
  };
  Companion_28.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_27;
  function Companion_getInstance_27() {
    if (Companion_instance_27 == null)
      new Companion_28();
    return Companion_instance_27;
  }
  function values() {
    return [WeekDay_MONDAY_getInstance(), WeekDay_TUESDAY_getInstance(), WeekDay_WEDNESDAY_getInstance(), WeekDay_THURSDAY_getInstance(), WeekDay_FRIDAY_getInstance(), WeekDay_SATURDAY_getInstance(), WeekDay_SUNDAY_getInstance()];
  }
  var WeekDay_entriesInitialized;
  function WeekDay_initEntries() {
    if (WeekDay_entriesInitialized)
      return Unit_getInstance();
    WeekDay_entriesInitialized = true;
    WeekDay_MONDAY_instance = new WeekDay('MONDAY', 0, 'Mon');
    WeekDay_TUESDAY_instance = new WeekDay('TUESDAY', 1, 'Tue');
    WeekDay_WEDNESDAY_instance = new WeekDay('WEDNESDAY', 2, 'Wed');
    WeekDay_THURSDAY_instance = new WeekDay('THURSDAY', 3, 'Thu');
    WeekDay_FRIDAY_instance = new WeekDay('FRIDAY', 4, 'Fri');
    WeekDay_SATURDAY_instance = new WeekDay('SATURDAY', 5, 'Sat');
    WeekDay_SUNDAY_instance = new WeekDay('SUNDAY', 6, 'Sun');
    Companion_getInstance_27();
  }
  function WeekDay(name, ordinal, value) {
    Enum.call(this, name, ordinal);
    this._value_10 = value;
  }
  WeekDay.$metadata$ = {
    simpleName: 'WeekDay',
    kind: 'class',
    interfaces: []
  };
  var Month_JANUARY_instance;
  var Month_FEBRUARY_instance;
  var Month_MARCH_instance;
  var Month_APRIL_instance;
  var Month_MAY_instance;
  var Month_JUNE_instance;
  var Month_JULY_instance;
  var Month_AUGUST_instance;
  var Month_SEPTEMBER_instance;
  var Month_OCTOBER_instance;
  var Month_NOVEMBER_instance;
  var Month_DECEMBER_instance;
  function Companion_29() {
    Companion_instance_28 = this;
  }
  Companion_29.prototype.from_1 = function (ordinal) {
    return values_0()[ordinal];
  };
  Companion_29.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_28;
  function Companion_getInstance_28() {
    if (Companion_instance_28 == null)
      new Companion_29();
    return Companion_instance_28;
  }
  function values_0() {
    return [Month_JANUARY_getInstance(), Month_FEBRUARY_getInstance(), Month_MARCH_getInstance(), Month_APRIL_getInstance(), Month_MAY_getInstance(), Month_JUNE_getInstance(), Month_JULY_getInstance(), Month_AUGUST_getInstance(), Month_SEPTEMBER_getInstance(), Month_OCTOBER_getInstance(), Month_NOVEMBER_getInstance(), Month_DECEMBER_getInstance()];
  }
  var Month_entriesInitialized;
  function Month_initEntries() {
    if (Month_entriesInitialized)
      return Unit_getInstance();
    Month_entriesInitialized = true;
    Month_JANUARY_instance = new Month_0('JANUARY', 0, 'Jan');
    Month_FEBRUARY_instance = new Month_0('FEBRUARY', 1, 'Feb');
    Month_MARCH_instance = new Month_0('MARCH', 2, 'Mar');
    Month_APRIL_instance = new Month_0('APRIL', 3, 'Apr');
    Month_MAY_instance = new Month_0('MAY', 4, 'May');
    Month_JUNE_instance = new Month_0('JUNE', 5, 'Jun');
    Month_JULY_instance = new Month_0('JULY', 6, 'Jul');
    Month_AUGUST_instance = new Month_0('AUGUST', 7, 'Aug');
    Month_SEPTEMBER_instance = new Month_0('SEPTEMBER', 8, 'Sep');
    Month_OCTOBER_instance = new Month_0('OCTOBER', 9, 'Oct');
    Month_NOVEMBER_instance = new Month_0('NOVEMBER', 10, 'Nov');
    Month_DECEMBER_instance = new Month_0('DECEMBER', 11, 'Dec');
    Companion_getInstance_28();
  }
  function Month_0(name, ordinal, value) {
    Enum.call(this, name, ordinal);
    this._value_11 = value;
  }
  Month_0.$metadata$ = {
    simpleName: 'Month',
    kind: 'class',
    interfaces: []
  };
  function WeekDay_MONDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_MONDAY_instance;
  }
  function WeekDay_TUESDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_TUESDAY_instance;
  }
  function WeekDay_WEDNESDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_WEDNESDAY_instance;
  }
  function WeekDay_THURSDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_THURSDAY_instance;
  }
  function WeekDay_FRIDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_FRIDAY_instance;
  }
  function WeekDay_SATURDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_SATURDAY_instance;
  }
  function WeekDay_SUNDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_SUNDAY_instance;
  }
  function Month_JANUARY_getInstance() {
    Month_initEntries();
    return Month_JANUARY_instance;
  }
  function Month_FEBRUARY_getInstance() {
    Month_initEntries();
    return Month_FEBRUARY_instance;
  }
  function Month_MARCH_getInstance() {
    Month_initEntries();
    return Month_MARCH_instance;
  }
  function Month_APRIL_getInstance() {
    Month_initEntries();
    return Month_APRIL_instance;
  }
  function Month_MAY_getInstance() {
    Month_initEntries();
    return Month_MAY_instance;
  }
  function Month_JUNE_getInstance() {
    Month_initEntries();
    return Month_JUNE_instance;
  }
  function Month_JULY_getInstance() {
    Month_initEntries();
    return Month_JULY_instance;
  }
  function Month_AUGUST_getInstance() {
    Month_initEntries();
    return Month_AUGUST_instance;
  }
  function Month_SEPTEMBER_getInstance() {
    Month_initEntries();
    return Month_SEPTEMBER_instance;
  }
  function Month_OCTOBER_getInstance() {
    Month_initEntries();
    return Month_OCTOBER_instance;
  }
  function Month_NOVEMBER_getInstance() {
    Month_initEntries();
    return Month_NOVEMBER_instance;
  }
  function Month_DECEMBER_getInstance() {
    Month_initEntries();
    return Month_DECEMBER_instance;
  }
  function proceedLoop($this, $cont) {
    var tmp = new $proceedLoopCOROUTINE$1($this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function $proceedLoopCOROUTINE$1(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__20 = _this_;
  }
  $proceedLoopCOROUTINE$1.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 6;
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._index0 = this.__this__20._index_3;
            if (this._index0 === -1) {
              this._state_0 = 5;
              continue $sm;
            } else {
              this._state_0 = 2;
              continue $sm;
            }

            break;
          case 2:
            this._interceptors1 = this.__this__20._interceptors;
            if (this._index0 >= this._interceptors1._get_size__48()) {
              this.__this__20.finish();
              this._state_0 = 5;
              continue $sm;
            } else {
              this._state_0 = 3;
              continue $sm;
            }

            break;
          case 3:
            this._executeInterceptor2 = this._interceptors1.get_77(this._index0);
            this.__this__20._index_3 = this._index0 + 1 | 0;
            this._state_0 = 4;
            suspendResult = this._executeInterceptor2(this.__this__20, this.__this__20._subject, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 4:
            suspendResult;
            {
              this._state_0 = 1;
              continue $sm;
            }

            this._state_0 = 5;
            continue $sm;
          case 5:
            return this.__this__20._subject;
          case 6:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 6) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $proceedLoopCOROUTINE$1.$metadata$ = {
    simpleName: '$proceedLoopCOROUTINE$1',
    kind: 'class',
    interfaces: []
  };
  function DebugPipelineContext(context, interceptors, subject, coroutineContext) {
    this._context_1 = context;
    this._interceptors = interceptors;
    this._coroutineContext_0 = coroutineContext;
    this._subject = subject;
    this._index_3 = 0;
  }
  DebugPipelineContext.prototype._get_context__113 = function () {
    return this._context_1;
  };
  DebugPipelineContext.prototype._get_coroutineContext__27 = function () {
    return this._coroutineContext_0;
  };
  DebugPipelineContext.prototype._get_subject__1 = function () {
    return this._subject;
  };
  DebugPipelineContext.prototype.finish = function () {
    this._index_3 = -1;
  };
  DebugPipelineContext.prototype.proceedWith_1 = function (subject, $cont) {
    this._subject = subject;
    return this.proceed_1($cont);
  };
  DebugPipelineContext.prototype.proceed_1 = function ($cont) {
    var index = this._index_3;
    if (index < 0)
      return this._subject;
    if (index >= this._interceptors._get_size__48()) {
      this.finish();
      return this._subject;
    }return proceedLoop(this, $cont);
  };
  DebugPipelineContext.prototype.execute_3 = function (initial, $cont) {
    this._index_3 = 0;
    this._subject = initial;
    return this.proceed_1($cont);
  };
  DebugPipelineContext.prototype.execute_4 = function (initial, $cont) {
    return this.execute_3(isObject(initial) ? initial : THROW_CCE(), $cont);
  };
  DebugPipelineContext.$metadata$ = {
    simpleName: 'DebugPipelineContext',
    kind: 'class',
    interfaces: [PipelineContext, PipelineExecutor]
  };
  function _set_interceptors_($this, _set___) {
    return $this._interceptors$delegate.setValue_4($this, interceptors$factory(), _set___);
  }
  function _get_interceptors_($this) {
    return $this._interceptors$delegate.getValue_3($this, interceptors$factory_0());
  }
  function PhaseContent_init_$Init$(phase, relation, $this) {
    var tmp = Companion_getInstance_29()._SharedArrayList;
    PhaseContent.call($this, phase, relation, isInterface(tmp, MutableList) ? tmp : THROW_CCE());
    var tmp0_check_0 = Companion_getInstance_29()._SharedArrayList.isEmpty_50();
    if (!tmp0_check_0) {
      var message_1 = 'The shared empty array list has been modified';
      throw IllegalStateException_init_$Create$(toString_1(message_1));
    }return $this;
  }
  function PhaseContent_init_$Create$(phase, relation) {
    return PhaseContent_init_$Init$(phase, relation, Object.create(PhaseContent.prototype));
  }
  function copyInterceptors($this) {
    _set_interceptors_($this, $this.copiedInterceptors());
    $this._set_shared_(false);
  }
  function Companion_30() {
    Companion_instance_29 = this;
    this._SharedArrayList = sharedListOf([]);
  }
  Companion_30.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_29;
  function Companion_getInstance_29() {
    if (Companion_instance_29 == null)
      new Companion_30();
    return Companion_instance_29;
  }
  function PhaseContent(phase, relation, interceptors) {
    Companion_getInstance_29();
    this._phase = phase;
    this._relation = relation;
    var tmp = this;
    tmp._interceptors$delegate = new _no_name_provided__67(interceptors);
    var tmp_0 = this;
    var tmp0_shared_0 = true;
    tmp_0._shared$delegate = new _no_name_provided__67(tmp0_shared_0);
  }
  PhaseContent.prototype._set_shared_ = function (_set___) {
    return this._shared$delegate.setValue_4(this, shared$factory(), _set___);
  };
  PhaseContent.prototype._get_shared_ = function () {
    return this._shared$delegate.getValue_3(this, shared$factory_0());
  };
  PhaseContent.prototype._get_isEmpty__6 = function () {
    return _get_interceptors_(this).isEmpty_50();
  };
  PhaseContent.prototype._get_size__48 = function () {
    return _get_interceptors_(this)._get_size__48();
  };
  PhaseContent.prototype.addInterceptor = function (interceptor) {
    if (this._get_shared_()) {
      copyInterceptors(this);
    }_get_interceptors_(this).add_32(interceptor);
    Unit_getInstance();
  };
  PhaseContent.prototype.addTo_0 = function (destination) {
    var interceptors = _get_interceptors_(this);
    if (destination instanceof ArrayList) {
      destination.ensureCapacity_8(destination._get_size__48() + interceptors._get_size__48() | 0);
    } else {
    }
    var inductionVariable = 0;
    var last_1 = interceptors._get_size__48();
    if (inductionVariable < last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        destination.add_32(interceptors.get_77(index));
        Unit_getInstance();
      }
       while (inductionVariable < last_1);
  };
  PhaseContent.prototype.sharedInterceptors = function () {
    this._set_shared_(true);
    return _get_interceptors_(this);
  };
  PhaseContent.prototype.copiedInterceptors = function () {
    var tmp0_apply_0 = sharedListOf([]);
    tmp0_apply_0.addAll_23(_get_interceptors_(this));
    Unit_getInstance();
    return tmp0_apply_0;
  };
  PhaseContent.prototype.toString = function () {
    return '' + 'Phase `' + this._phase._name_3 + '`, ' + this._get_size__48() + ' handlers';
  };
  PhaseContent.$metadata$ = {
    simpleName: 'PhaseContent',
    kind: 'class',
    interfaces: []
  };
  function interceptors$factory() {
    return getPropertyCallableRef('interceptors', 1, KMutableProperty1, function (receiver) {
      return _get_interceptors_(receiver);
    }, function (receiver_0, value) {
      return _set_interceptors_(receiver_0, value);
    });
  }
  function interceptors$factory_0() {
    return getPropertyCallableRef('interceptors', 1, KMutableProperty1, function (receiver) {
      return _get_interceptors_(receiver);
    }, function (receiver_0, value) {
      return _set_interceptors_(receiver_0, value);
    });
  }
  function shared$factory() {
    return getPropertyCallableRef('shared', 1, KMutableProperty1, function (receiver) {
      return receiver._get_shared_();
    }, function (receiver_0, value) {
      return receiver_0._set_shared_(value);
    });
  }
  function shared$factory_0() {
    return getPropertyCallableRef('shared', 1, KMutableProperty1, function (receiver) {
      return receiver._get_shared_();
    }, function (receiver_0, value) {
      return receiver_0._set_shared_(value);
    });
  }
  function _set_interceptorsQuantity_($this, _set___) {
    return $this._interceptorsQuantity$delegate.setValue_4($this, interceptorsQuantity$factory(), _set___);
  }
  function _get_interceptorsQuantity_($this) {
    return $this._interceptorsQuantity$delegate.getValue_3($this, interceptorsQuantity$factory_0());
  }
  function _set_interceptors__0($this, value) {
    $this.__interceptors._value_2 = value;
  }
  function _get_interceptors__0($this) {
    return $this.__interceptors._value_2;
  }
  function _set_interceptorsListShared_($this, _set___) {
    return $this._interceptorsListShared$delegate.setValue_4($this, interceptorsListShared$factory(), _set___);
  }
  function _get_interceptorsListShared_($this) {
    return $this._interceptorsListShared$delegate.getValue_3($this, interceptorsListShared$factory_0());
  }
  function _set_interceptorsListSharedPhase_($this, _set___) {
    return $this._interceptorsListSharedPhase$delegate.setValue_4($this, interceptorsListSharedPhase$factory(), _set___);
  }
  function _get_interceptorsListSharedPhase_($this) {
    return $this._interceptorsListSharedPhase$delegate.getValue_3($this, interceptorsListSharedPhase$factory_0());
  }
  function createContext($this, context, subject, coroutineContext) {
    return pipelineExecutorFor(context, sharedInterceptorsList($this), subject, coroutineContext, $this._get_developmentMode__4());
  }
  function findPhase($this, phase) {
    var phasesList = $this._phasesRaw;
    var inductionVariable = 0;
    var last_1 = phasesList._get_size__48();
    if (inductionVariable < last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var current = phasesList.get_77(index);
        if (current === phase) {
          var content = PhaseContent_init_$Create$(phase, Last_getInstance());
          phasesList.set_6(index, content);
          Unit_getInstance();
          return content;
        }var tmp;
        if (current instanceof PhaseContent) {
          tmp = current._phase === phase;
        } else {
          {
            tmp = false;
          }
        }
        if (tmp) {
          return current instanceof PhaseContent ? current : THROW_CCE();
        } else {
        }
      }
       while (inductionVariable < last_1);
    return null;
  }
  function findPhaseIndex($this, phase) {
    var phasesList = $this._phasesRaw;
    var inductionVariable = 0;
    var last_1 = phasesList._get_size__48();
    if (inductionVariable < last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var current = phasesList.get_77(index);
        var tmp;
        if (current === phase) {
          tmp = true;
        } else {
          var tmp_0;
          if (current instanceof PhaseContent) {
            tmp_0 = current._phase === phase;
          } else {
            {
              tmp_0 = false;
            }
          }
          tmp = tmp_0;
        }
        if (tmp) {
          return index;
        } else {
        }
      }
       while (inductionVariable < last_1);
    return -1;
  }
  function hasPhase($this, phase) {
    var phasesList = $this._phasesRaw;
    var inductionVariable = 0;
    var last_1 = phasesList._get_size__48();
    if (inductionVariable < last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var current = phasesList.get_77(index);
        var tmp;
        if (current === phase) {
          tmp = true;
        } else {
          var tmp_0;
          if (current instanceof PhaseContent) {
            tmp_0 = current._phase === phase;
          } else {
            {
              tmp_0 = false;
            }
          }
          tmp = tmp_0;
        }
        if (tmp) {
          return true;
        } else {
        }
      }
       while (inductionVariable < last_1);
    return false;
  }
  function cacheInterceptors($this) {
    var interceptorsQuantity = _get_interceptorsQuantity_($this);
    if (interceptorsQuantity === 0) {
      notSharedInterceptorsList($this, emptyList());
      return emptyList();
    }var phases = $this._phasesRaw;
    if (interceptorsQuantity === 1) {
      var inductionVariable = 0;
      var last_1 = _get_lastIndex__0(phases);
      if (inductionVariable <= last_1)
        do {
          var phaseIndex = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp = phases.get_77(phaseIndex);
          var tmp1_elvis_lhs = tmp instanceof PhaseContent ? tmp : null;
          var tmp_0;
          if (tmp1_elvis_lhs == null) {
            continue;
          } else {
            tmp_0 = tmp1_elvis_lhs;
          }
          var phaseContent = tmp_0;
          if (!phaseContent._get_isEmpty__6()) {
            var interceptors = phaseContent.sharedInterceptors();
            setInterceptorsListFromPhase($this, phaseContent);
            return interceptors;
          }}
         while (!(phaseIndex === last_1));
    }var destination = sharedListOf([]);
    var inductionVariable_0 = 0;
    var last_2 = _get_lastIndex__0(phases);
    if (inductionVariable_0 <= last_2)
      do {
        var phaseIndex_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var tmp_1 = phases.get_77(phaseIndex_0);
        var tmp3_elvis_lhs = tmp_1 instanceof PhaseContent ? tmp_1 : null;
        var tmp_2;
        if (tmp3_elvis_lhs == null) {
          continue;
        } else {
          tmp_2 = tmp3_elvis_lhs;
        }
        var phase = tmp_2;
        phase.addTo_0(destination);
      }
       while (!(phaseIndex_0 === last_2));
    notSharedInterceptorsList($this, destination);
    return destination;
  }
  function sharedInterceptorsList($this) {
    if (_get_interceptors__0($this) == null) {
      cacheInterceptors($this);
      Unit_getInstance();
    }_set_interceptorsListShared_($this, true);
    return ensureNotNull(_get_interceptors__0($this));
  }
  function resetInterceptorsList($this) {
    _set_interceptors__0($this, null);
    _set_interceptorsListShared_($this, false);
    _set_interceptorsListSharedPhase_($this, null);
  }
  function notSharedInterceptorsList($this, list) {
    _set_interceptors__0($this, list);
    _set_interceptorsListShared_($this, false);
    _set_interceptorsListSharedPhase_($this, null);
  }
  function setInterceptorsListFromPhase($this, phaseContent) {
    _set_interceptors__0($this, phaseContent.sharedInterceptors());
    _set_interceptorsListShared_($this, false);
    _set_interceptorsListSharedPhase_($this, phaseContent._phase);
  }
  function tryAddToPhaseFastPath($this, phase, block) {
    var currentInterceptors = _get_interceptors__0($this);
    if ($this._phasesRaw.isEmpty_50() ? true : currentInterceptors == null) {
      return false;
    }var tmp;
    if (_get_interceptorsListShared_($this)) {
      tmp = true;
    } else {
      tmp = !(!(currentInterceptors == null) ? isInterface(currentInterceptors, MutableList) : false);
    }
    if (tmp) {
      return false;
    } else {
    }
    if (equals_1(_get_interceptorsListSharedPhase_($this), phase)) {
      currentInterceptors.add_32(block);
      Unit_getInstance();
      return true;
    }if (equals_1(phase, last($this._phasesRaw)) ? true : findPhaseIndex($this, phase) === _get_lastIndex__0($this._phasesRaw)) {
      ensureNotNull(findPhase($this, phase)).addInterceptor(block);
      currentInterceptors.add_32(block);
      Unit_getInstance();
      return true;
    }return false;
  }
  function Pipeline(phases) {
    this._attributes = Attributes_1(true);
    this._developmentMode = false;
    this._phasesRaw = sharedListOf(phases.slice());
    var tmp = this;
    var tmp0_shared_0 = 0;
    tmp._interceptorsQuantity$delegate = new _no_name_provided__67(tmp0_shared_0);
    this.__interceptors = atomic(null);
    var tmp_0 = this;
    var tmp0_shared_0_0 = false;
    tmp_0._interceptorsListShared$delegate = new _no_name_provided__67(tmp0_shared_0_0);
    var tmp_1 = this;
    var tmp0_shared_0_1 = null;
    tmp_1._interceptorsListSharedPhase$delegate = new _no_name_provided__67(tmp0_shared_0_1);
  }
  Pipeline.prototype._get_developmentMode__4 = function () {
    return this._developmentMode;
  };
  Pipeline.prototype.execute_1 = function (context, subject, $cont) {
    return createContext(this, context, subject, $cont._get_context__113()).execute_4(subject, $cont);
  };
  Pipeline.prototype.insertPhaseBefore_0 = function (reference, phase) {
    if (hasPhase(this, phase))
      return Unit_getInstance();
    var index = findPhaseIndex(this, reference);
    if (index === -1) {
      throw new InvalidPhaseException('' + 'Phase ' + reference + ' was not registered for this pipeline');
    }this._phasesRaw.add_26(index, PhaseContent_init_$Create$(phase, new Before(reference)));
  };
  Pipeline.prototype.intercept_0 = function (phase, block) {
    var tmp0_elvis_lhs = findPhase(this, phase);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw new InvalidPhaseException('' + 'Phase ' + phase + ' was not registered for this pipeline');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var phaseContent = tmp;
    if (tryAddToPhaseFastPath(this, phase, block)) {
      var tmp1_this = this;
      var tmp2 = _get_interceptorsQuantity_(tmp1_this);
      _set_interceptorsQuantity_(tmp1_this, tmp2 + 1 | 0);
      Unit_getInstance();
      return Unit_getInstance();
    }phaseContent.addInterceptor(block);
    var tmp3_this = this;
    var tmp4 = _get_interceptorsQuantity_(tmp3_this);
    _set_interceptorsQuantity_(tmp3_this, tmp4 + 1 | 0);
    Unit_getInstance();
    resetInterceptorsList(this);
    this.afterIntercepted_3();
  };
  Pipeline.prototype.afterIntercepted_3 = function () {
  };
  Pipeline.$metadata$ = {
    simpleName: 'Pipeline',
    kind: 'class',
    interfaces: []
  };
  function interceptorsQuantity$factory() {
    return getPropertyCallableRef('interceptorsQuantity', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsQuantity_(receiver);
    }, function (receiver_0, value) {
      return _set_interceptorsQuantity_(receiver_0, value);
    });
  }
  function interceptorsQuantity$factory_0() {
    return getPropertyCallableRef('interceptorsQuantity', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsQuantity_(receiver);
    }, function (receiver_0, value) {
      return _set_interceptorsQuantity_(receiver_0, value);
    });
  }
  function interceptorsListShared$factory() {
    return getPropertyCallableRef('interceptorsListShared', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsListShared_(receiver);
    }, function (receiver_0, value) {
      return _set_interceptorsListShared_(receiver_0, value);
    });
  }
  function interceptorsListShared$factory_0() {
    return getPropertyCallableRef('interceptorsListShared', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsListShared_(receiver);
    }, function (receiver_0, value) {
      return _set_interceptorsListShared_(receiver_0, value);
    });
  }
  function interceptorsListSharedPhase$factory() {
    return getPropertyCallableRef('interceptorsListSharedPhase', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsListSharedPhase_(receiver);
    }, function (receiver_0, value) {
      return _set_interceptorsListSharedPhase_(receiver_0, value);
    });
  }
  function interceptorsListSharedPhase$factory_0() {
    return getPropertyCallableRef('interceptorsListSharedPhase', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsListSharedPhase_(receiver);
    }, function (receiver_0, value) {
      return _set_interceptorsListSharedPhase_(receiver_0, value);
    });
  }
  function PipelineContext() {
  }
  PipelineContext.$metadata$ = {
    simpleName: 'PipelineContext',
    kind: 'interface',
    interfaces: [CoroutineScope]
  };
  function PipelineExecutor() {
  }
  PipelineExecutor.$metadata$ = {
    simpleName: 'PipelineExecutor',
    kind: 'interface',
    interfaces: []
  };
  function pipelineExecutorFor(context, interceptors, subject, coroutineContext, debugMode) {
    var tmp;
    if (debugMode) {
      tmp = new DebugPipelineContext(context, interceptors, subject, coroutineContext);
    } else {
      tmp = new SuspendFunctionGun(subject, context, interceptors);
    }
    return tmp;
  }
  function PipelinePhase(name) {
    this._name_3 = name;
  }
  PipelinePhase.prototype.toString = function () {
    return '' + "Phase('" + this._name_3 + "')";
  };
  PipelinePhase.$metadata$ = {
    simpleName: 'PipelinePhase',
    kind: 'class',
    interfaces: []
  };
  function InvalidPhaseException(message) {
    extendThrowable(this, message, void 1);
    captureStack(this, InvalidPhaseException);
  }
  InvalidPhaseException.$metadata$ = {
    simpleName: 'InvalidPhaseException',
    kind: 'class',
    interfaces: []
  };
  function Before(relativeTo) {
    PipelinePhaseRelation.call(this);
    this._relativeTo = relativeTo;
  }
  Before.$metadata$ = {
    simpleName: 'Before',
    kind: 'class',
    interfaces: []
  };
  function Last() {
    Last_instance = this;
    PipelinePhaseRelation.call(this);
  }
  Last.$metadata$ = {
    simpleName: 'Last',
    kind: 'object',
    interfaces: []
  };
  var Last_instance;
  function Last_getInstance() {
    if (Last_instance == null)
      new Last();
    return Last_instance;
  }
  function PipelinePhaseRelation() {
  }
  PipelinePhaseRelation.$metadata$ = {
    simpleName: 'PipelinePhaseRelation',
    kind: 'class',
    interfaces: []
  };
  function recoverStackTraceBridge(exception, continuation) {
    var tmp;
    try {
      tmp = withCause(recoverStackTrace(exception, continuation), exception.cause);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = exception;
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function loop($this, direct) {
    do {
      var index = $this._index_4;
      if (index === $this._blocks._get_size__48()) {
        if (!direct) {
          var tmp0_success_0 = Companion_getInstance_3();
          var tmp1_success_0 = $this._subject_0;
          resumeRootWith($this, _Result___init__impl_(tmp1_success_0));
          return false;
        }return true;
      }$this._index_4 = index + 1 | 0;
      var next = $this._blocks.get_77(index);
      try {
        var me = $this;
        var tmp2_startCoroutineUninterceptedOrReturn3_0 = me._subject_0;
        var tmp3_startCoroutineUninterceptedOrReturn3_0 = me._continuation_5;
        var block_1 = _no_name_provided_$factory_70(next, me, tmp2_startCoroutineUninterceptedOrReturn3_0, null);
        var rc = block_1(tmp3_startCoroutineUninterceptedOrReturn3_0);
        if (rc === _get_COROUTINE_SUSPENDED_()) {
          return false;
        }} catch ($p) {
        if ($p instanceof Error) {
          var tmp4_failure_0 = Companion_getInstance_3();
          resumeRootWith($this, _Result___init__impl_(createFailure($p)));
          return false;
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (true);
  }
  function resumeRootWith($this, result) {
    var rootContinuation = $this._rootContinuation;
    var tmp0_subject = rootContinuation;
    var tmp;
    if (tmp0_subject == null) {
      throw IllegalStateException_init_$Create$('No more continuations to resume');
    } else {
      if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Continuation) : false) {
        $this._rootContinuation = null;
        $this._lastPeekedIndex = -1;
        tmp = rootContinuation;
      } else {
        if (tmp0_subject instanceof ArrayList) {
          if (rootContinuation.isEmpty_50())
            throw IllegalStateException_init_$Create$('No more continuations to resume');
          $this._lastPeekedIndex = _get_lastIndex__0(rootContinuation) - 1 | 0;
          tmp = rootContinuation.removeAt_2(_get_lastIndex__0(rootContinuation));
        } else {
          {
            unexpectedRootContinuationValue($this, rootContinuation);
          }
        }
      }
    }
    var tmp_0 = tmp;
    var next = (!(tmp_0 == null) ? isInterface(tmp_0, Continuation) : false) ? tmp_0 : THROW_CCE();
    if (!_Result___get_isFailure__impl_(result)) {
      next.resumeWith_46(result);
    } else {
      var exception = recoverStackTraceBridge(ensureNotNull(Result__exceptionOrNull_impl(result)), next);
      var tmp0_failure_0_1 = Companion_getInstance_3();
      next.resumeWith_46(_Result___init__impl_(createFailure(exception)));
    }
  }
  function discardLastRootContinuation($this) {
    var rootContinuation = $this._rootContinuation;
    var tmp0_subject = rootContinuation;
    if (tmp0_subject == null)
      throw IllegalStateException_init_$Create$('No more continuations to resume');
    else {
      if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Continuation) : false) {
        $this._lastPeekedIndex = -1;
        $this._rootContinuation = null;
      } else {
        if (tmp0_subject instanceof ArrayList) {
          if (rootContinuation.isEmpty_50())
            throw IllegalStateException_init_$Create$('No more continuations to resume');
          rootContinuation.removeAt_2(_get_lastIndex__0(rootContinuation));
          Unit_getInstance();
          $this._lastPeekedIndex = _get_lastIndex__0(rootContinuation);
        } else {
          {
            unexpectedRootContinuationValue($this, rootContinuation);
          }
        }
      }
    }
  }
  function addContinuation($this, continuation) {
    var rootContinuation = $this._rootContinuation;
    if (rootContinuation == null) {
      $this._lastPeekedIndex = 0;
      $this._rootContinuation = continuation;
    } else {
      if (!(rootContinuation == null) ? isInterface(rootContinuation, Continuation) : false) {
        var tmp = $this;
        var tmp0_apply_0 = ArrayList_init_$Create$_0($this._blocks._get_size__48());
        tmp0_apply_0.add_32(rootContinuation);
        Unit_getInstance();
        tmp0_apply_0.add_32(continuation);
        Unit_getInstance();
        $this._lastPeekedIndex = 1;
        tmp._rootContinuation = tmp0_apply_0;
      } else {
        if (rootContinuation instanceof ArrayList) {
          if (rootContinuation instanceof ArrayList)
            rootContinuation;
          else
            THROW_CCE();
          Unit_getInstance();
          rootContinuation.add_32(continuation);
          Unit_getInstance();
          $this._lastPeekedIndex = _get_lastIndex__0(rootContinuation);
        } else {
          {
            unexpectedRootContinuationValue($this, rootContinuation);
          }
        }
      }
    }
  }
  function unexpectedRootContinuationValue($this, rootContinuation) {
    throw IllegalStateException_init_$Create$('' + 'Unexpected rootContinuation content: ' + rootContinuation);
  }
  function _no_name_provided__99(this$0) {
    this._this$0_37 = this$0;
  }
  _no_name_provided__99.prototype._get_context__113 = function () {
    var cont = this._this$0_37._rootContinuation;
    var tmp;
    if (cont == null) {
      throw IllegalStateException_init_$Create$('Not started');
    } else {
      if (!(cont == null) ? isInterface(cont, Continuation) : false) {
        tmp = cont._get_context__113();
      } else {
        if (!(cont == null) ? isInterface(cont, List) : false) {
          tmp = last((!(cont == null) ? isInterface(cont, List) : false) ? cont : THROW_CCE())._get_context__113();
        } else {
          {
            throw IllegalStateException_init_$Create$('Unexpected rootContinuation value');
          }
        }
      }
    }
    return tmp;
  };
  _no_name_provided__99.prototype.resumeWith_45 = function (result) {
    if (_Result___get_isFailure__impl_(result)) {
      var tmp0_failure_0 = Companion_getInstance_3();
      var tmp1_failure_0 = ensureNotNull(Result__exceptionOrNull_impl(result));
      resumeRootWith(this._this$0_37, _Result___init__impl_(createFailure(tmp1_failure_0)));
      return Unit_getInstance();
    }loop(this._this$0_37, false);
    Unit_getInstance();
  };
  _no_name_provided__99.prototype.resumeWith_46 = function (result) {
    return this.resumeWith_45(result);
  };
  _no_name_provided__99.$metadata$ = {
    kind: 'class',
    interfaces: [Continuation, CoroutineStackFrame_0]
  };
  function _no_name_provided__100($next, $me, $tmp2_startCoroutineUninterceptedOrReturn3_0, resultContinuation) {
    this._$next = $next;
    this._$me = $me;
    this._$tmp2_startCoroutineUninterceptedOrReturn3_0 = $tmp2_startCoroutineUninterceptedOrReturn3_0;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__100.prototype.invoke_147 = function ($cont) {
    var tmp = this.create_4($cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__100.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this._$next(this._$me, this._$tmp2_startCoroutineUninterceptedOrReturn3_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__100.prototype.create_4 = function (completion) {
    var i = new _no_name_provided__100(this._$next, this._$me, this._$tmp2_startCoroutineUninterceptedOrReturn3_0, completion);
    return i;
  };
  _no_name_provided__100.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 0
  };
  function SuspendFunctionGun(initial, context, blocks) {
    this._context_2 = context;
    this._blocks = blocks;
    this._lastPeekedIndex = -1;
    var tmp = this;
    tmp._continuation_5 = new _no_name_provided__99(this);
    this._subject_0 = initial;
    this._rootContinuation = null;
    this._index_4 = 0;
    preventFreeze(this);
  }
  SuspendFunctionGun.prototype._get_context__113 = function () {
    return this._context_2;
  };
  SuspendFunctionGun.prototype._get_coroutineContext__27 = function () {
    return this._continuation_5._get_context__113();
  };
  SuspendFunctionGun.prototype._get_subject__1 = function () {
    return this._subject_0;
  };
  SuspendFunctionGun.prototype.proceed_1 = function ($cont) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0__anonymous__1 = $cont;
      if (this._index_4 === this._blocks._get_size__48()) {
        tmp$ret$0 = this._subject_0;
        break l$ret$1;
      }addContinuation(this, tmp0__anonymous__1);
      if (loop(this, true)) {
        discardLastRootContinuation(this);
        tmp$ret$0 = this._subject_0;
        break l$ret$1;
      }tmp$ret$0 = _get_COROUTINE_SUSPENDED_();
    }
     while (false);
    return tmp$ret$0;
  };
  SuspendFunctionGun.prototype.proceedWith_1 = function (subject, $cont) {
    this._subject_0 = subject;
    return this.proceed_1($cont);
  };
  SuspendFunctionGun.prototype.execute_3 = function (initial, $cont) {
    this._index_4 = 0;
    if (this._index_4 === this._blocks._get_size__48())
      return initial;
    this._subject_0 = initial;
    if (!(this._rootContinuation == null))
      throw IllegalStateException_init_$Create$('Already started');
    return this.proceed_1($cont);
  };
  SuspendFunctionGun.prototype.execute_4 = function (initial, $cont) {
    return this.execute_3(isObject(initial) ? initial : THROW_CCE(), $cont);
  };
  SuspendFunctionGun.$metadata$ = {
    simpleName: 'SuspendFunctionGun',
    kind: 'class',
    interfaces: [PipelineContext, PipelineExecutor, CoroutineScope]
  };
  function _no_name_provided_$factory_70($next, $me, $tmp2_startCoroutineUninterceptedOrReturn3_0, resultContinuation) {
    var i = new _no_name_provided__100($next, $me, $tmp2_startCoroutineUninterceptedOrReturn3_0, resultContinuation);
    var l = function ($cont) {
      return i.invoke_147($cont);
    };
    l.$arity = 0;
    return l;
  }
  function Attributes_0(concurrent) {
    return Attributes_1(concurrent === void 1 ? false : concurrent);
  }
  function Attributes_1(concurrent) {
    return new AttributesJs();
  }
  function AttributesJs() {
    var tmp = this;
    tmp._map_1 = LinkedHashMap_init_$Create$();
  }
  AttributesJs.prototype.getOrNull_0 = function (key) {
    var tmp = this._map_1.get_65(key);
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  AttributesJs.prototype.contains_44 = function (key) {
    return this._map_1.containsKey_12(key);
  };
  AttributesJs.prototype.put_11 = function (key, value) {
    var tmp0_set_0 = this._map_1;
    tmp0_set_0.put_10(key, value);
    Unit_getInstance();
  };
  AttributesJs.prototype.computeIfAbsent_0 = function (key, block) {
    var tmp0_safe_receiver = this._map_1.get_65(key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      return isObject(tmp0_safe_receiver) ? tmp0_safe_receiver : THROW_CCE();
    }
    Unit_getInstance();
    var tmp0_also_0 = block();
    var tmp0_set_0_2 = this._map_1;
    tmp0_set_0_2.put_10(key, tmp0_also_0);
    Unit_getInstance();
    return tmp0_also_0;
  };
  AttributesJs.prototype._get_allKeys__0 = function () {
    return toList_0(this._map_1._get_keys__8());
  };
  AttributesJs.$metadata$ = {
    simpleName: 'AttributesJs',
    kind: 'class',
    interfaces: [Attributes]
  };
  function unmodifiable(_this_) {
    return _this_;
  }
  var _crypto;
  function _crypto$init$() {
    return PlatformUtils_getInstance()._IS_NODE ? __nccwpck_require__(417) : crypto ? crypto : msCrypto;
  }
  function Lock() {
  }
  Lock.prototype.lock_1 = function () {
  };
  Lock.prototype.unlock_1 = function () {
  };
  Lock.$metadata$ = {
    simpleName: 'Lock',
    kind: 'class',
    interfaces: []
  };
  function PlatformUtils() {
    PlatformUtils_instance = this;
    var tmp = this;
    var tmp_0 = typeof window !== 'undefined' && typeof window.document !== 'undefined';
    tmp._IS_BROWSER = (!(tmp_0 == null) ? typeof tmp_0 === 'boolean' : false) ? tmp_0 : THROW_CCE();
    var tmp_1 = this;
    var tmp_2 = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;
    tmp_1._IS_NODE = (!(tmp_2 == null) ? typeof tmp_2 === 'boolean' : false) ? tmp_2 : THROW_CCE();
    this._IS_JVM = false;
    this._IS_NATIVE = false;
    this._IS_DEVELOPMENT_MODE = false;
  }
  PlatformUtils.$metadata$ = {
    simpleName: 'PlatformUtils',
    kind: 'object',
    interfaces: []
  };
  var PlatformUtils_instance;
  function PlatformUtils_getInstance() {
    if (PlatformUtils_instance == null)
      new PlatformUtils();
    return PlatformUtils_instance;
  }
  function CoroutineStackFrame_0() {
  }
  CoroutineStackFrame_0.$metadata$ = {
    simpleName: 'CoroutineStackFrame',
    kind: 'interface',
    interfaces: []
  };
  function GMTDate_0(timestamp) {
    var tmp0_safe_receiver = timestamp;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toDouble_4();
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = new Date(tmp1_safe_receiver);
    }
    var tmp2_elvis_lhs = tmp;
    var date = tmp2_elvis_lhs == null ? new Date() : tmp2_elvis_lhs;
    if (isNaN_0(date.getTime()))
      throw new InvalidTimestampException(ensureNotNull(timestamp));
    var dayOfWeek_2 = Companion_getInstance_27().from_1((date.getUTCDay() + 6 | 0) % 7);
    var month_3 = Companion_getInstance_28().from_1(date.getUTCMonth());
    return new GMTDate(date.getUTCSeconds(), date.getUTCMinutes(), date.getUTCHours(), dayOfWeek_2, date.getUTCDate(), date.getUTCFullYear(), month_3, date.getUTCFullYear(), numberToLong(date.getTime()));
  }
  function GMTDate$default(timestamp, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      timestamp = null;
    return GMTDate_0(timestamp);
  }
  function InvalidTimestampException(timestamp) {
    IllegalStateException_init_$Init$_0('' + 'Invalid date timestamp exception: ' + timestamp, this);
    captureStack(this, InvalidTimestampException);
  }
  InvalidTimestampException.$metadata$ = {
    simpleName: 'InvalidTimestampException',
    kind: 'class',
    interfaces: []
  };
  function withCause(_this_, cause) {
    return _this_;
  }
  var URL_ALPHABET;
  var URL_ALPHABET_CHARS;
  var HEX_ALPHABET;
  var URL_PROTOCOL_PART;
  var VALID_PATH_PART;
  var OAUTH_SYMBOLS;
  var LETTERS_AND_NUMBERS;
  var TOKENS;
  function encodeURLPath(_this_) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    var charset_3 = Charsets_getInstance()._UTF_8;
    var index_4 = 0;
    while (index_4 < _this_.length) {
      var current_5 = charSequenceGet(_this_, index_4);
      if ((current_5.equals(new Char(47)) ? true : URL_ALPHABET_CHARS.contains_48(current_5)) ? true : VALID_PATH_PART.contains_48(current_5)) {
        tmp0_apply_0_1.append_23(current_5);
        Unit_getInstance();
        var tmp0_6 = index_4;
        index_4 = tmp0_6 + 1 | 0;
        Unit_getInstance();
        continue;
      }if (((current_5.equals(new Char(37)) ? (index_4 + 2 | 0) < _this_.length : false) ? HEX_ALPHABET.contains_48(charSequenceGet(_this_, index_4 + 1 | 0)) : false) ? HEX_ALPHABET.contains_48(charSequenceGet(_this_, index_4 + 2 | 0)) : false) {
        tmp0_apply_0_1.append_23(current_5);
        Unit_getInstance();
        tmp0_apply_0_1.append_23(charSequenceGet(_this_, index_4 + 1 | 0));
        Unit_getInstance();
        tmp0_apply_0_1.append_23(charSequenceGet(_this_, index_4 + 2 | 0));
        Unit_getInstance();
        index_4 = index_4 + 3 | 0;
        continue;
      }var symbolSize_7 = isSurrogate(current_5) ? 2 : 1;
      var tmp = encode(charset_3.newEncoder_0(), _this_, index_4, index_4 + symbolSize_7 | 0);
      forEach(tmp, _no_name_provided_$factory_71(tmp0_apply_0_1));
      index_4 = index_4 + symbolSize_7 | 0;
    }
    return tmp0_apply_0_1.toString();
  }
  function encodeURLQueryComponent(_this_, encodeFull, spaceToPlus, charset_1) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    var tmp = charset_1.newEncoder_0();
    var content_3 = encode$default(tmp, _this_, 0, 0, 6, null);
    forEach(content_3, _no_name_provided_$factory_72(spaceToPlus, tmp0_apply_0_1, encodeFull));
    return tmp0_apply_0_1.toString();
  }
  function encodeURLQueryComponent$default(_this_, encodeFull, spaceToPlus, charset_1, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      encodeFull = false;
    if (!(($mask0 & 2) === 0))
      spaceToPlus = false;
    if (!(($mask0 & 4) === 0))
      charset_1 = Charsets_getInstance()._UTF_8;
    return encodeURLQueryComponent(_this_, encodeFull, spaceToPlus, charset_1);
  }
  function encodeURLParameter(_this_, spaceToPlus) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    var tmp = Charsets_getInstance()._UTF_8.newEncoder_0();
    var content_3 = encode$default(tmp, _this_, 0, 0, 6, null);
    forEach(content_3, _no_name_provided_$factory_73(tmp0_apply_0_1, spaceToPlus));
    return tmp0_apply_0_1.toString();
  }
  function encodeURLParameter$default(_this_, spaceToPlus, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      spaceToPlus = false;
    return encodeURLParameter(_this_, spaceToPlus);
  }
  function decodeURLPart(_this_, start, end, charset_1) {
    return decodeScan(_this_, start, end, false, charset_1);
  }
  function decodeURLPart$default(_this_, start, end, charset_1, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      start = 0;
    if (!(($mask0 & 2) === 0))
      end = _this_.length;
    if (!(($mask0 & 4) === 0))
      charset_1 = Charsets_getInstance()._UTF_8;
    return decodeURLPart(_this_, start, end, charset_1);
  }
  function forEach(_this_, block) {
    var tmp$ret$0;
    l$ret$1: do {
      var release_1 = true;
      var tmp0_elvis_lhs_3 = prepareReadFirstHead(_this_, 1);
      var tmp;
      if (tmp0_elvis_lhs_3 == null) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
        tmp = tmp0_elvis_lhs_3;
      }
      var current_2 = tmp;
      try {
        $l$break_1: do {
          var tmp0__anonymous__6 = current_2;
          $l$break: while (true) {
            if (!(tmp0__anonymous__6._get_writePosition__1() > tmp0__anonymous__6._get_readPosition__1())) {
              break $l$break;
            }block(tmp0__anonymous__6.readByte_1());
          }
          if (false) {} else {
          }
          release_1 = false;
          var tmp1_elvis_lhs_5 = prepareReadNextHead(_this_, current_2);
          var tmp_0;
          if (tmp1_elvis_lhs_5 == null) {
            break $l$break_1;
          } else {
            tmp_0 = tmp1_elvis_lhs_5;
          }
          var next_4 = tmp_0;
          current_2 = next_4;
          release_1 = true;
        }
         while (true);
      }finally {
        if (release_1) {
          completeReadHead(_this_, current_2);
        }}
    }
     while (false);
  }
  function percentEncode(_this_) {
    var tmp0_buildString_0 = 3;
    var tmp0_apply_0_1 = StringBuilder_init_$Create$(tmp0_buildString_0);
    var code_3 = _this_ & 255;
    tmp0_apply_0_1.append_23(new Char(37));
    Unit_getInstance();
    tmp0_apply_0_1.append_23(hexDigitToChar(code_3 >> 4));
    Unit_getInstance();
    tmp0_apply_0_1.append_23(hexDigitToChar(code_3 & 15));
    Unit_getInstance();
    return tmp0_apply_0_1.toString();
  }
  function decodeScan(_this_, start, end, plusIsSpace, charset_1) {
    var inductionVariable = start;
    if (inductionVariable < end)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var ch = charSequenceGet(_this_, index);
        if (ch.equals(new Char(37)) ? true : plusIsSpace ? ch.equals(new Char(43)) : false) {
          return decodeImpl(_this_, start, end, index, plusIsSpace, charset_1);
        }}
       while (inductionVariable < end);
    var tmp;
    if (start === 0 ? end === _this_.length : false) {
      tmp = toString_1(_this_);
    } else {
      tmp = _this_.substring(start, end);
    }
    return tmp;
  }
  function hexDigitToChar(digit) {
    var tmp0_subject = digit;
    return (0 <= tmp0_subject ? tmp0_subject <= 9 : false) ? (new Char(48)).plus_58(digit) : (new Char(65)).plus_58(digit).minus_29(10);
  }
  function decodeImpl(_this_, start, end, prefixEnd, plusIsSpace, charset_1) {
    var length = end - start | 0;
    var sbSize = length > 255 ? length / 3 | 0 : length;
    var sb = StringBuilder_init_$Create$(sbSize);
    if (prefixEnd > start) {
      sb.append_21(_this_, start, prefixEnd);
      Unit_getInstance();
    }var index = prefixEnd;
    var bytes = null;
    while (index < end) {
      var c = charSequenceGet(_this_, index);
      if (plusIsSpace ? c.equals(new Char(43)) : false) {
        sb.append_23(new Char(32));
        Unit_getInstance();
        var tmp0 = index;
        index = tmp0 + 1 | 0;
        Unit_getInstance();
      } else if (c.equals(new Char(37))) {
        if (bytes == null) {
          bytes = new Int8Array((end - index | 0) / 3 | 0);
        }var count_0 = 0;
        while (index < end ? charSequenceGet(_this_, index).equals(new Char(37)) : false) {
          if ((index + 2 | 0) >= end) {
            var tmp0_substring_0 = index;
            var tmp1_substring_0 = charSequenceLength(_this_);
            throw new URLDecodeException('' + 'Incomplete trailing HEX escape: ' + toString_1(charSequenceSubSequence(_this_, tmp0_substring_0, tmp1_substring_0)) + ', in ' + _this_ + ' at ' + index);
          }var digit1 = charToHexDigit(charSequenceGet(_this_, index + 1 | 0));
          var digit2 = charToHexDigit(charSequenceGet(_this_, index + 2 | 0));
          if (digit1 === -1 ? true : digit2 === -1) {
            throw new URLDecodeException('' + 'Wrong HEX escape: %' + charSequenceGet(_this_, index + 1 | 0) + charSequenceGet(_this_, index + 2 | 0) + ', in ' + _this_ + ', at ' + index);
          }var tmp = bytes;
          var tmp1 = count_0;
          count_0 = tmp1 + 1 | 0;
          tmp[tmp1] = toByte(imul(digit1, 16) + digit2 | 0);
          index = index + 3 | 0;
        }
        sb.append_6(String_0(bytes, 0, count_0, charset_1));
        Unit_getInstance();
      } else {
        sb.append_23(c);
        Unit_getInstance();
        var tmp2 = index;
        index = tmp2 + 1 | 0;
        Unit_getInstance();
      }
    }
    return sb.toString();
  }
  function URLDecodeException(message) {
    Exception_init_$Init$_0(message, this);
    captureStack(this, URLDecodeException);
  }
  URLDecodeException.$metadata$ = {
    simpleName: 'URLDecodeException',
    kind: 'class',
    interfaces: []
  };
  function charToHexDigit(c2) {
    var tmp0_subject = c2;
    return (new Char(48) <= tmp0_subject ? tmp0_subject <= new Char(57) : false) ? c2.minus_0(new Char(48)) : (new Char(65) <= tmp0_subject ? tmp0_subject <= new Char(70) : false) ? c2.minus_0(new Char(65)) + 10 | 0 : (new Char(97) <= tmp0_subject ? tmp0_subject <= new Char(102) : false) ? c2.minus_0(new Char(97)) + 10 | 0 : -1;
  }
  function encodeURLParameterValue(_this_) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    var tmp = Charsets_getInstance()._UTF_8.newEncoder_0();
    var content_3 = encode$default(tmp, _this_, 0, 0, 6, null);
    forEach(content_3, _no_name_provided_$factory_74(tmp0_apply_0_1));
    return tmp0_apply_0_1.toString();
  }
  function decodeURLQueryComponent(_this_, start, end, plusIsSpace, charset_1) {
    return decodeScan(_this_, start, end, plusIsSpace, charset_1);
  }
  function decodeURLQueryComponent$default(_this_, start, end, plusIsSpace, charset_1, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      start = 0;
    if (!(($mask0 & 2) === 0))
      end = _this_.length;
    if (!(($mask0 & 4) === 0))
      plusIsSpace = false;
    if (!(($mask0 & 8) === 0))
      charset_1 = Charsets_getInstance()._UTF_8;
    return decodeURLQueryComponent(_this_, start, end, plusIsSpace, charset_1);
  }
  function _no_name_provided__101($tmp0_apply_0_1) {
    this._$tmp0_apply_0_1 = $tmp0_apply_0_1;
  }
  _no_name_provided__101.prototype.invoke_154 = function (it) {
    this._$tmp0_apply_0_1.append_6(percentEncode(it));
    Unit_getInstance();
  };
  _no_name_provided__101.prototype.invoke_420 = function (p1) {
    this.invoke_154((!(p1 == null) ? typeof p1 === 'number' : false) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__101.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__102($spaceToPlus, $tmp0_apply_0_1, $encodeFull) {
    this._$spaceToPlus = $spaceToPlus;
    this._$tmp0_apply_0_1_0 = $tmp0_apply_0_1;
    this._$encodeFull = $encodeFull;
  }
  _no_name_provided__102.prototype.invoke_154 = function (it) {
    if (it === 32)
      if (this._$spaceToPlus) {
        this._$tmp0_apply_0_1_0.append_23(new Char(43));
        Unit_getInstance();
      } else {
        this._$tmp0_apply_0_1_0.append_6('%20');
        Unit_getInstance();
      }
     else if (URL_ALPHABET.contains_48(it) ? true : !this._$encodeFull ? URL_PROTOCOL_PART.contains_48(it) : false) {
      this._$tmp0_apply_0_1_0.append_23(numberToChar(it));
      Unit_getInstance();
    } else {
      this._$tmp0_apply_0_1_0.append_6(percentEncode(it));
      Unit_getInstance();
    }
  };
  _no_name_provided__102.prototype.invoke_420 = function (p1) {
    this.invoke_154((!(p1 == null) ? typeof p1 === 'number' : false) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__102.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__103($tmp0_apply_0_1, $spaceToPlus) {
    this._$tmp0_apply_0_1_1 = $tmp0_apply_0_1;
    this._$spaceToPlus_0 = $spaceToPlus;
  }
  _no_name_provided__103.prototype.invoke_154 = function (it) {
    if (URL_ALPHABET.contains_48(it) ? true : OAUTH_SYMBOLS.contains_48(it)) {
      this._$tmp0_apply_0_1_1.append_23(numberToChar(it));
      Unit_getInstance();
    } else if (this._$spaceToPlus_0 ? it === 32 : false) {
      this._$tmp0_apply_0_1_1.append_23(new Char(43));
      Unit_getInstance();
    } else {
      this._$tmp0_apply_0_1_1.append_6(percentEncode(it));
      Unit_getInstance();
    }
  };
  _no_name_provided__103.prototype.invoke_420 = function (p1) {
    this.invoke_154((!(p1 == null) ? typeof p1 === 'number' : false) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__103.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__104($tmp0_apply_0_1) {
    this._$tmp0_apply_0_1_2 = $tmp0_apply_0_1;
  }
  _no_name_provided__104.prototype.invoke_154 = function (it) {
    if ((URL_ALPHABET.contains_48(it) ? true : OAUTH_SYMBOLS.contains_48(it)) ? true : it === 61) {
      this._$tmp0_apply_0_1_2.append_23(numberToChar(it));
      Unit_getInstance();
    } else if (it === 32) {
      this._$tmp0_apply_0_1_2.append_23(new Char(43));
      Unit_getInstance();
    } else {
      this._$tmp0_apply_0_1_2.append_6(percentEncode(it));
      Unit_getInstance();
    }
  };
  _no_name_provided__104.prototype.invoke_420 = function (p1) {
    this.invoke_154((!(p1 == null) ? typeof p1 === 'number' : false) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__104.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_71($tmp0_apply_0_1) {
    var i = new _no_name_provided__101($tmp0_apply_0_1);
    return function (p1) {
      i.invoke_154(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_72($spaceToPlus, $tmp0_apply_0_1, $encodeFull) {
    var i = new _no_name_provided__102($spaceToPlus, $tmp0_apply_0_1, $encodeFull);
    return function (p1) {
      i.invoke_154(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_73($tmp0_apply_0_1, $spaceToPlus) {
    var i = new _no_name_provided__103($tmp0_apply_0_1, $spaceToPlus);
    return function (p1) {
      i.invoke_154(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_74($tmp0_apply_0_1) {
    var i = new _no_name_provided__104($tmp0_apply_0_1);
    return function (p1) {
      i.invoke_154(p1);
      return Unit_getInstance();
    };
  }
  function URL_ALPHABET$init$() {
    var tmp0_map_0 = plus(plus_0((new Char(97)).rangeTo(new Char(122)), (new Char(65)).rangeTo(new Char(90))), (new Char(48)).rangeTo(new Char(57)));
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
    var tmp0_iterator_1_2 = tmp0_map_0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var item_2_3 = tmp0_iterator_1_2.next_31();
      tmp0_mapTo_0_1.add_32(item_2_3.toByte_5());
      Unit_getInstance();
    }
    return tmp0_mapTo_0_1;
  }
  function URL_PROTOCOL_PART$init$() {
    var tmp0_map_0 = listOf([new Char(58), new Char(47), new Char(63), new Char(35), new Char(91), new Char(93), new Char(64), new Char(33), new Char(36), new Char(38), new Char(39), new Char(40), new Char(41), new Char(42), new Char(44), new Char(59), new Char(61), new Char(45), new Char(46), new Char(95), new Char(126), new Char(43)]);
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
    var tmp0_iterator_1_2 = tmp0_map_0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var item_2_3 = tmp0_iterator_1_2.next_31();
      tmp0_mapTo_0_1.add_32(item_2_3.toByte_5());
      Unit_getInstance();
    }
    return tmp0_mapTo_0_1;
  }
  function OAUTH_SYMBOLS$init$() {
    var tmp0_map_0 = listOf([new Char(45), new Char(46), new Char(95), new Char(126)]);
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
    var tmp0_iterator_1_2 = tmp0_map_0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var item_2_3 = tmp0_iterator_1_2.next_31();
      tmp0_mapTo_0_1.add_32(item_2_3.toByte_5());
      Unit_getInstance();
    }
    return tmp0_mapTo_0_1;
  }
  function ContentTypeMatcher() {
  }
  ContentTypeMatcher.$metadata$ = {
    simpleName: 'ContentTypeMatcher',
    kind: 'interface',
    interfaces: []
  };
  function ContentType_init_$Init$(contentType_1, contentSubtype, parameters, $this) {
    ContentType.call($this, contentType_1, contentSubtype, '' + contentType_1 + '/' + contentSubtype, parameters);
    return $this;
  }
  function ContentType_init_$Create$(contentType_1, contentSubtype, parameters) {
    return ContentType_init_$Init$(contentType_1, contentSubtype, parameters, Object.create(ContentType.prototype));
  }
  function ContentType_init_$Init$_0(contentType_1, contentSubtype, parameters, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      parameters = emptyList();
    ContentType_init_$Init$(contentType_1, contentSubtype, parameters, $this);
    return $this;
  }
  function ContentType_init_$Create$_0(contentType_1, contentSubtype, parameters, $mask0, $marker) {
    return ContentType_init_$Init$_0(contentType_1, contentSubtype, parameters, $mask0, $marker, Object.create(ContentType.prototype));
  }
  function hasParameter($this, name, value) {
    var tmp0_subject = $this._get_parameters__0()._get_size__48();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = false;
        break;
      case 1:
        var tmp0_let_0 = $this._get_parameters__0().get_77(0);
        tmp = equals_0(tmp0_let_0._name_4, name, true) ? equals_0(tmp0_let_0._value_12, value, true) : false;
        break;
      default:var tmp$ret$0;
        l$ret$1: do {
          var tmp1_any_0 = $this._get_parameters__0();
          var tmp_0;
          if (isInterface(tmp1_any_0, Collection)) {
            tmp_0 = tmp1_any_0.isEmpty_50();
          } else {
            {
              tmp_0 = false;
            }
          }
          if (tmp_0) {
            tmp$ret$0 = false;
            break l$ret$1;
          } else {
          }
          var tmp0_iterator_1 = tmp1_any_0.iterator_62();
          while (tmp0_iterator_1.hasNext_29()) {
            var element_2 = tmp0_iterator_1.next_31();
            if (equals_0(element_2._name_4, name, true) ? equals_0(element_2._value_12, value, true) : false) {
              tmp$ret$0 = true;
              break l$ret$1;
            } else {
            }
          }
          tmp$ret$0 = false;
        }
         while (false);
        tmp = tmp$ret$0;
        break;
    }
    return tmp;
  }
  function Companion_31() {
    Companion_instance_30 = this;
    var tmp = this;
    tmp._Any = ContentType_init_$Create$_0('*', '*', null, 4, null);
  }
  Companion_31.prototype.parse_1 = function (value) {
    if (isBlank(value))
      return this._Any;
    var tmp0_parse_0 = Companion_getInstance_31();
    var headerValue_1 = single_0(parseHeaderValue(value));
    var tmp1__anonymous__2 = headerValue_1._value_13;
    var tmp2__anonymous__2 = headerValue_1._params;
    var tmp = new Char(47);
    var slash_3 = indexOf$default(tmp1__anonymous__2, tmp, 0, false, 6, null);
    if (slash_3 === -1) {
      if (toString_1(trim(isCharSequence(tmp1__anonymous__2) ? tmp1__anonymous__2 : THROW_CCE())) === '*') {
        return Companion_getInstance_30()._Any;
      } else {
      }
      throw new BadContentTypeFormatException(value);
    }var tmp0_substring_0_6 = 0;
    var tmp1_trim_0_5 = tmp1__anonymous__2.substring(tmp0_substring_0_6, slash_3);
    var type_4 = toString_1(trim(isCharSequence(tmp1_trim_0_5) ? tmp1_trim_0_5 : THROW_CCE()));
    if (charSequenceLength(type_4) === 0) {
      throw new BadContentTypeFormatException(value);
    } else {
    }
    var tmp2_substring_0_9 = slash_3 + 1 | 0;
    var tmp3_trim_0_8 = tmp1__anonymous__2.substring(tmp2_substring_0_9);
    var subtype_7 = toString_1(trim(isCharSequence(tmp3_trim_0_8) ? tmp3_trim_0_8 : THROW_CCE()));
    var tmp_0;
    if (charSequenceLength(subtype_7) === 0) {
      tmp_0 = true;
    } else {
      {
        var tmp_1 = new Char(47);
        tmp_0 = contains$default(subtype_7, tmp_1, false, 2, null);
      }
    }
    if (tmp_0) {
      throw new BadContentTypeFormatException(value);
    } else {
    }
    return ContentType_init_$Create$(type_4, subtype_7, tmp2__anonymous__2);
  };
  Companion_31.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_30;
  function Companion_getInstance_30() {
    if (Companion_instance_30 == null)
      new Companion_31();
    return Companion_instance_30;
  }
  function Application() {
    Application_instance = this;
    var tmp = this;
    tmp._Any_0 = ContentType_init_$Create$_0('application', '*', null, 4, null);
    var tmp_0 = this;
    tmp_0._Atom = ContentType_init_$Create$_0('application', 'atom+xml', null, 4, null);
    var tmp_1 = this;
    tmp_1._Cbor = ContentType_init_$Create$_0('application', 'cbor', null, 4, null);
    var tmp_2 = this;
    tmp_2._Json = ContentType_init_$Create$_0('application', 'json', null, 4, null);
    var tmp_3 = this;
    tmp_3._HalJson = ContentType_init_$Create$_0('application', 'hal+json', null, 4, null);
    var tmp_4 = this;
    tmp_4._JavaScript = ContentType_init_$Create$_0('application', 'javascript', null, 4, null);
    var tmp_5 = this;
    tmp_5._OctetStream = ContentType_init_$Create$_0('application', 'octet-stream', null, 4, null);
    var tmp_6 = this;
    tmp_6._FontWoff = ContentType_init_$Create$_0('application', 'font-woff', null, 4, null);
    var tmp_7 = this;
    tmp_7._Rss = ContentType_init_$Create$_0('application', 'rss+xml', null, 4, null);
    var tmp_8 = this;
    tmp_8._Xml = ContentType_init_$Create$_0('application', 'xml', null, 4, null);
    var tmp_9 = this;
    tmp_9._Xml_Dtd = ContentType_init_$Create$_0('application', 'xml-dtd', null, 4, null);
    var tmp_10 = this;
    tmp_10._Zip = ContentType_init_$Create$_0('application', 'zip', null, 4, null);
    var tmp_11 = this;
    tmp_11._GZip = ContentType_init_$Create$_0('application', 'gzip', null, 4, null);
    var tmp_12 = this;
    tmp_12._FormUrlEncoded = ContentType_init_$Create$_0('application', 'x-www-form-urlencoded', null, 4, null);
    var tmp_13 = this;
    tmp_13._Pdf = ContentType_init_$Create$_0('application', 'pdf', null, 4, null);
    var tmp_14 = this;
    tmp_14._ProtoBuf = ContentType_init_$Create$_0('application', 'protobuf', null, 4, null);
    var tmp_15 = this;
    tmp_15._Wasm = ContentType_init_$Create$_0('application', 'wasm', null, 4, null);
    var tmp_16 = this;
    tmp_16._ProblemJson = ContentType_init_$Create$_0('application', 'problem+json', null, 4, null);
    var tmp_17 = this;
    tmp_17._ProblemXml = ContentType_init_$Create$_0('application', 'problem+xml', null, 4, null);
  }
  Application.$metadata$ = {
    simpleName: 'Application',
    kind: 'object',
    interfaces: []
  };
  var Application_instance;
  function Application_getInstance() {
    if (Application_instance == null)
      new Application();
    return Application_instance;
  }
  function Text_0() {
    Text_instance = this;
    var tmp = this;
    tmp._Any_1 = ContentType_init_$Create$_0('text', '*', null, 4, null);
    var tmp_0 = this;
    tmp_0._Plain = ContentType_init_$Create$_0('text', 'plain', null, 4, null);
    var tmp_1 = this;
    tmp_1._CSS = ContentType_init_$Create$_0('text', 'css', null, 4, null);
    var tmp_2 = this;
    tmp_2._CSV = ContentType_init_$Create$_0('text', 'csv', null, 4, null);
    var tmp_3 = this;
    tmp_3._Html = ContentType_init_$Create$_0('text', 'html', null, 4, null);
    var tmp_4 = this;
    tmp_4._JavaScript_0 = ContentType_init_$Create$_0('text', 'javascript', null, 4, null);
    var tmp_5 = this;
    tmp_5._VCard = ContentType_init_$Create$_0('text', 'vcard', null, 4, null);
    var tmp_6 = this;
    tmp_6._Xml_0 = ContentType_init_$Create$_0('text', 'xml', null, 4, null);
    var tmp_7 = this;
    tmp_7._EventStream = ContentType_init_$Create$_0('text', 'event-stream', null, 4, null);
  }
  Text_0.$metadata$ = {
    simpleName: 'Text',
    kind: 'object',
    interfaces: []
  };
  var Text_instance;
  function Text_getInstance() {
    if (Text_instance == null)
      new Text_0();
    return Text_instance;
  }
  function ContentType(contentType_1, contentSubtype, existingContent, parameters) {
    Companion_getInstance_30();
    HeaderValueWithParameters.call(this, existingContent, parameters);
    this._contentType = contentType_1;
    this._contentSubtype = contentSubtype;
  }
  ContentType.prototype.withParameter = function (name, value) {
    if (hasParameter(this, name, value))
      return this;
    return new ContentType(this._contentType, this._contentSubtype, this._get_content__8(), plus_1(this._get_parameters__0(), new HeaderValueParam(name, value)));
  };
  ContentType.prototype.withoutParameters = function () {
    var tmp;
    if (this._get_parameters__0().isEmpty_50()) {
      tmp = this;
    } else {
      tmp = ContentType_init_$Create$_0(this._contentType, this._contentSubtype, null, 4, null);
    }
    return tmp;
  };
  ContentType.prototype.match_0 = function (pattern) {
    if (!(pattern._contentType === '*') ? !equals_0(pattern._contentType, this._contentType, true) : false) {
      return false;
    }if (!(pattern._contentSubtype === '*') ? !equals_0(pattern._contentSubtype, this._contentSubtype, true) : false) {
      return false;
    }var tmp0_iterator = pattern._get_parameters__0().iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var tmp1_loop_parameter = tmp0_iterator.next_31();
      var patternName = tmp1_loop_parameter.component1_2();
      var patternValue = tmp1_loop_parameter.component2_2();
      var tmp2_subject = patternName;
      var tmp;
      if (tmp2_subject === '*') {
        var tmp3_subject = patternValue;
        var tmp_0;
        if (tmp3_subject === '*') {
          tmp_0 = true;
        } else {
          var tmp$ret$0;
          l$ret$1: do {
            var tmp0_any_0 = this._get_parameters__0();
            var tmp_1;
            if (isInterface(tmp0_any_0, Collection)) {
              tmp_1 = tmp0_any_0.isEmpty_50();
            } else {
              {
                tmp_1 = false;
              }
            }
            if (tmp_1) {
              tmp$ret$0 = false;
              break l$ret$1;
            } else {
            }
            var tmp0_iterator_1 = tmp0_any_0.iterator_62();
            while (tmp0_iterator_1.hasNext_29()) {
              var element_2 = tmp0_iterator_1.next_31();
              if (equals_0(element_2._value_12, patternValue, true)) {
                tmp$ret$0 = true;
                break l$ret$1;
              } else {
              }
            }
            tmp$ret$0 = false;
          }
           while (false);
          tmp_0 = tmp$ret$0;
        }
        tmp = tmp_0;
      } else {
        var value = this.parameter_0(patternName);
        var tmp4_subject = patternValue;
        tmp = tmp4_subject === '*' ? !(value == null) : equals_0(value, patternValue, true);
      }
      var matches_0 = tmp;
      if (!matches_0) {
        return false;
      }}
    return true;
  };
  ContentType.prototype.equals = function (other) {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (other instanceof ContentType) {
      tmp_1 = equals_0(this._contentType, other._contentType, true);
    } else {
      {
        tmp_1 = false;
      }
    }
    if (tmp_1) {
      tmp_0 = equals_0(this._contentSubtype, other._contentSubtype, true);
    } else {
      {
        tmp_0 = false;
      }
    }
    if (tmp_0) {
      tmp = equals_1(this._get_parameters__0(), other._get_parameters__0());
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  ContentType.prototype.hashCode = function () {
    var tmp0_toLowerCase_0 = this._contentType;
    var result = getStringHashCode(tmp0_toLowerCase_0.toLowerCase());
    var tmp = result;
    var tmp_0 = imul(31, result);
    var tmp1_toLowerCase_0 = this._contentSubtype;
    result = tmp + (tmp_0 + getStringHashCode(tmp1_toLowerCase_0.toLowerCase()) | 0) | 0;
    result = result + imul(31, hashCode(this._get_parameters__0())) | 0;
    return result;
  };
  ContentType.$metadata$ = {
    simpleName: 'ContentType',
    kind: 'class',
    interfaces: []
  };
  function BadContentTypeFormatException(value) {
    Exception_init_$Init$_0('' + 'Bad Content-Type format: ' + value, this);
    captureStack(this, BadContentTypeFormatException);
  }
  BadContentTypeFormatException.$metadata$ = {
    simpleName: 'BadContentTypeFormatException',
    kind: 'class',
    interfaces: []
  };
  function charset(_this_) {
    var tmp0_safe_receiver = _this_.parameter_0('charset');
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = Companion_getInstance_23().forName(tmp0_safe_receiver);
    }
    return tmp;
  }
  function withCharset(_this_, charset_1) {
    return _this_.withParameter('charset', _get_name_(charset_1));
  }
  var loweredPartNames;
  var clientCookieHeaderPattern;
  var cookieCharsShouldBeEscaped;
  function clientCookieHeaderPattern$init$() {
    var tmp0_toRegex_0 = '(^|;)\\s*([^()<>@;:/\\\\"\\[\\]\\?=\\{\\}\\s]+)\\s*(=\\s*("[^"]*"|[^;]*))?';
    return Regex_init_$Create$(tmp0_toRegex_0);
  }
  var HTTP_DATE_FORMATS;
  var contentTypesByExtensions$delegate;
  var extensionsByContentType$delegate;
  function groupByPairs(_this_) {
    var tmp0_groupByTo_0_1 = LinkedHashMap_init_$Create$();
    var tmp0_iterator_1_2 = _this_.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var element_2_3 = tmp0_iterator_1_2.next_31();
      var key_3_4 = element_2_3._first;
      var value_1_6 = tmp0_groupByTo_0_1.get_65(key_3_4);
      var tmp;
      if (value_1_6 == null) {
        var answer_2_7 = ArrayList_init_$Create$();
        tmp0_groupByTo_0_1.put_10(key_3_4, answer_2_7);
        Unit_getInstance();
        tmp = answer_2_7;
      } else {
        tmp = value_1_6;
      }
      var list_4_5 = tmp;
      list_4_5.add_32(element_2_3);
      Unit_getInstance();
    }
    var tmp0_mapValues_0 = tmp0_groupByTo_0_1;
    var tmp1_mapValuesTo_0_1 = LinkedHashMap_init_$Create$_1(mapCapacity(tmp0_mapValues_0._get_size__48()));
    var tmp0_associateByTo_0_2 = tmp0_mapValues_0._get_entries__8();
    var tmp0_iterator_1_3 = tmp0_associateByTo_0_2.iterator_62();
    while (tmp0_iterator_1_3.hasNext_29()) {
      var element_2_4 = tmp0_iterator_1_3.next_31();
      var tmp_0 = element_2_4._get_key__52();
      var tmp0_map_0_6 = element_2_4._get_value__27();
      var tmp0_mapTo_0_1_7 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0_6, 10));
      var tmp0_iterator_1_2_8 = tmp0_map_0_6.iterator_62();
      while (tmp0_iterator_1_2_8.hasNext_29()) {
        var item_2_3_9 = tmp0_iterator_1_2_8.next_31();
        tmp0_mapTo_0_1_7.add_32(item_2_3_9._second);
        Unit_getInstance();
      }
      tmp1_mapValuesTo_0_1.put_10(tmp_0, tmp0_mapTo_0_1_7);
      Unit_getInstance();
    }
    return tmp1_mapValuesTo_0_1;
  }
  function toContentType(_this_) {
    var tmp;
    try {
      tmp = Companion_getInstance_30().parse_1(_this_);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        throw IllegalArgumentException_init_$Create$_1('' + 'Failed to parse ' + _this_, $p);
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function _no_name_provided__105() {
  }
  _no_name_provided__105.prototype.invoke_411 = function () {
    var tmp0_apply_0 = caseInsensitiveMap();
    tmp0_apply_0.putAll_6(groupByPairs(asSequence(_get_mimes_())));
    return tmp0_apply_0;
  };
  _no_name_provided__105.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__106() {
  }
  _no_name_provided__106.prototype.invoke_157 = function (_name_for_destructuring_parameter_0_) {
    var first_1 = _name_for_destructuring_parameter_0_.component1_2();
    var second = _name_for_destructuring_parameter_0_.component2_2();
    return to(second, first_1);
  };
  _no_name_provided__106.prototype.invoke_420 = function (p1) {
    return this.invoke_157(p1 instanceof Pair ? p1 : THROW_CCE());
  };
  _no_name_provided__106.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__107() {
  }
  _no_name_provided__107.prototype.invoke_411 = function () {
    var tmp = asSequence(_get_mimes_());
    return groupByPairs(map(tmp, _no_name_provided_$factory_77()));
  };
  _no_name_provided__107.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_75() {
    var i = new _no_name_provided__105();
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_76() {
    var i = new _no_name_provided__107();
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_77() {
    var i = new _no_name_provided__106();
    return function (p1) {
      return i.invoke_157(p1);
    };
  }
  var HeaderFieldValueSeparators;
  function Companion_32() {
    Companion_instance_31 = this;
  }
  Companion_32.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_31;
  function Companion_getInstance_31() {
    if (Companion_instance_31 == null)
      new Companion_32();
    return Companion_instance_31;
  }
  function HeaderValueWithParameters(content, parameters) {
    Companion_getInstance_31();
    this._content_0 = content;
    this._parameters = parameters;
  }
  HeaderValueWithParameters.prototype._get_content__8 = function () {
    return this._content_0;
  };
  HeaderValueWithParameters.prototype._get_parameters__0 = function () {
    return this._parameters;
  };
  HeaderValueWithParameters.prototype.parameter_0 = function (name) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_firstOrNull_0 = this._parameters;
      var tmp0_iterator_1 = tmp0_firstOrNull_0.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (equals_0(element_2._name_4, name, true)) {
          tmp$ret$0 = element_2;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = null;
    }
     while (false);
    var tmp0_safe_receiver = tmp$ret$0;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver._value_12;
  };
  HeaderValueWithParameters.prototype.toString = function () {
    var tmp;
    if (this._parameters.isEmpty_50()) {
      tmp = this._content_0;
    } else {
      var tmp_0 = this._content_0.length;
      var tmp0_sumBy_0 = this._parameters;
      var sum_1 = 0;
      var tmp0_iterator_2 = tmp0_sumBy_0.iterator_62();
      while (tmp0_iterator_2.hasNext_29()) {
        var element_3 = tmp0_iterator_2.next_31();
        var tmp_1 = sum_1;
        sum_1 = tmp_1 + ((element_3._name_4.length + element_3._value_12.length | 0) + 3 | 0) | 0;
      }
      var size_0 = tmp_0 + sum_1 | 0;
      var tmp1_apply_0 = StringBuilder_init_$Create$(size_0);
      tmp1_apply_0.append_6(this._content_0);
      Unit_getInstance();
      var inductionVariable = 0;
      var last_1 = this._parameters._get_size__48();
      if (inductionVariable < last_1)
        do {
          var index_3 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp1_container_4 = this._parameters.get_77(index_3);
          var name_5 = tmp1_container_4.component1_2();
          var value_6 = tmp1_container_4.component2_2();
          tmp1_apply_0.append_6('; ');
          Unit_getInstance();
          tmp1_apply_0.append_6(name_5);
          Unit_getInstance();
          tmp1_apply_0.append_6('=');
          Unit_getInstance();
          if (checkNeedEscape(value_6)) {
            tmp1_apply_0.append_6(quote(value_6));
            Unit_getInstance();
          } else {
            tmp1_apply_0.append_6(value_6);
            Unit_getInstance();
          }
        }
         while (inductionVariable < last_1);
      tmp = tmp1_apply_0.toString();
    }
    return tmp;
  };
  HeaderValueWithParameters.$metadata$ = {
    simpleName: 'HeaderValueWithParameters',
    kind: 'class',
    interfaces: []
  };
  function checkNeedEscape(_this_) {
    if (charSequenceLength(_this_) === 0)
      return true;
    else {
    }
    if (isQuoted(_this_))
      return false;
    var inductionVariable = 0;
    var last_1 = _this_.length;
    if (inductionVariable < last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (HeaderFieldValueSeparators.contains_48(charSequenceGet(_this_, index)))
          return true;
      }
       while (inductionVariable < last_1);
    return false;
  }
  function quote(_this_) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    quoteTo(_this_, tmp0_apply_0_1);
    return tmp0_apply_0_1.toString();
  }
  function isQuoted(_this_) {
    if (_this_.length < 2) {
      return false;
    }if (!first_0(_this_).equals(new Char(34)) ? true : !last_0(_this_).equals(new Char(34))) {
      return false;
    }var startIndex = 1;
    $l$break: do {
      var tmp = new Char(34);
      var tmp_0 = startIndex;
      var index = indexOf$default(_this_, tmp, tmp_0, false, 4, null);
      if (index === _get_lastIndex__1(_this_)) {
        break $l$break;
      }var slashesCount = 0;
      var slashIndex = index - 1 | 0;
      while (charSequenceGet(_this_, slashIndex).equals(new Char(92))) {
        var tmp0 = slashesCount;
        slashesCount = tmp0 + 1 | 0;
        Unit_getInstance();
        var tmp1 = slashIndex;
        slashIndex = tmp1 - 1 | 0;
        Unit_getInstance();
      }
      if (slashesCount % 2 === 0) {
        return false;
      }startIndex = index + 1 | 0;
    }
     while (startIndex < _this_.length);
    return true;
  }
  function quoteTo(_this_, out) {
    out.append_6('"');
    Unit_getInstance();
    var inductionVariable = 0;
    var last_1 = _this_.length;
    if (inductionVariable < last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var ch = charSequenceGet(_this_, i);
        var tmp1_subject = ch;
        if (tmp1_subject.equals(new Char(92))) {
          out.append_6('\\\\');
          Unit_getInstance();
        } else if (tmp1_subject.equals(new Char(10))) {
          out.append_6('\\n');
          Unit_getInstance();
        } else if (tmp1_subject.equals(new Char(13))) {
          out.append_6('\\r');
          Unit_getInstance();
        } else if (tmp1_subject.equals(new Char(9))) {
          out.append_6('\\t');
          Unit_getInstance();
        } else if (tmp1_subject.equals(new Char(34))) {
          out.append_6('\\"');
          Unit_getInstance();
        } else {
          out.append_23(ch);
          Unit_getInstance();
        }
      }
       while (inductionVariable < last_1);
    out.append_6('"');
    Unit_getInstance();
  }
  function HeadersBuilder_init_$Init$(size_0, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      size_0 = 8;
    HeadersBuilder.call($this, size_0);
    return $this;
  }
  function HeadersBuilder_init_$Create$(size_0, $mask0, $marker) {
    return HeadersBuilder_init_$Init$(size_0, $mask0, $marker, Object.create(HeadersBuilder.prototype));
  }
  function HeadersBuilder(size_0) {
    StringValuesBuilder.call(this, true, size_0);
  }
  HeadersBuilder.prototype.build_17 = function () {
    var tmp0_require_0 = !this._get_built__1();
    if (!tmp0_require_0) {
      var message_1 = 'HeadersBuilder can only build a single Headers instance';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }this._set_built__1(true);
    return new HeadersImpl(this._get_values__14());
  };
  HeadersBuilder.prototype.validateName_1 = function (name) {
    StringValuesBuilder.prototype.validateName_1.call(this, name);
    HttpHeaders_getInstance().checkHeaderName(name);
  };
  HeadersBuilder.prototype.validateValue_1 = function (value) {
    StringValuesBuilder.prototype.validateValue_1.call(this, value);
    HttpHeaders_getInstance().checkHeaderValue(value);
  };
  HeadersBuilder.$metadata$ = {
    simpleName: 'HeadersBuilder',
    kind: 'class',
    interfaces: []
  };
  function Companion_33() {
    Companion_instance_32 = this;
    this._Empty_2 = EmptyHeaders_getInstance();
  }
  Companion_33.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_32;
  function Companion_getInstance_32() {
    if (Companion_instance_32 == null)
      new Companion_33();
    return Companion_instance_32;
  }
  function Headers_0() {
  }
  Headers_0.$metadata$ = {
    simpleName: 'Headers',
    kind: 'interface',
    interfaces: [StringValues]
  };
  function HeadersImpl(values_4) {
    StringValuesImpl.call(this, true, values_4);
  }
  HeadersImpl.prototype.toString = function () {
    return '' + 'Headers ' + this.entries_10();
  };
  HeadersImpl.$metadata$ = {
    simpleName: 'HeadersImpl',
    kind: 'class',
    interfaces: [Headers_0]
  };
  function EmptyHeaders() {
    EmptyHeaders_instance = this;
  }
  EmptyHeaders.prototype._get_caseInsensitiveName__4 = function () {
    return true;
  };
  EmptyHeaders.prototype.getAll_8 = function (name) {
    return null;
  };
  EmptyHeaders.prototype.names_2 = function () {
    return emptySet();
  };
  EmptyHeaders.prototype.entries_10 = function () {
    return emptySet();
  };
  EmptyHeaders.prototype.toString = function () {
    return '' + 'Headers ' + this.entries_10();
  };
  EmptyHeaders.$metadata$ = {
    simpleName: 'EmptyHeaders',
    kind: 'object',
    interfaces: [Headers_0]
  };
  var EmptyHeaders_instance;
  function EmptyHeaders_getInstance() {
    if (EmptyHeaders_instance == null)
      new EmptyHeaders();
    return EmptyHeaders_instance;
  }
  function HeaderValueParam(name, value) {
    this._name_4 = name;
    this._value_12 = value;
  }
  HeaderValueParam.prototype.equals = function (other) {
    var tmp;
    var tmp_0;
    if (other instanceof HeaderValueParam) {
      tmp_0 = equals_0(other._name_4, this._name_4, true);
    } else {
      {
        tmp_0 = false;
      }
    }
    if (tmp_0) {
      tmp = equals_0(other._value_12, this._value_12, true);
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  HeaderValueParam.prototype.hashCode = function () {
    var tmp0_toLowerCase_0 = this._name_4;
    var result = getStringHashCode(tmp0_toLowerCase_0.toLowerCase());
    var tmp = result;
    var tmp_0 = imul(31, result);
    var tmp1_toLowerCase_0 = this._value_12;
    result = tmp + (tmp_0 + getStringHashCode(tmp1_toLowerCase_0.toLowerCase()) | 0) | 0;
    return result;
  };
  HeaderValueParam.prototype.component1_2 = function () {
    return this._name_4;
  };
  HeaderValueParam.prototype.component2_2 = function () {
    return this._value_12;
  };
  HeaderValueParam.prototype.toString = function () {
    return '' + 'HeaderValueParam(name=' + this._name_4 + ', value=' + this._value_12 + ')';
  };
  HeaderValueParam.$metadata$ = {
    simpleName: 'HeaderValueParam',
    kind: 'class',
    interfaces: []
  };
  function HeaderValue(value, params) {
    this._value_13 = value;
    this._params = params;
    var tmp = this;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_firstOrNull_0 = this._params;
      var tmp0_iterator_1 = tmp0_firstOrNull_0.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (element_2._name_4 === 'q') {
          tmp$ret$0 = element_2;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = null;
    }
     while (false);
    var tmp0_safe_receiver = tmp$ret$0;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._value_12;
    var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : toDoubleOrNull(tmp1_safe_receiver);
    var tmp_0;
    if (tmp2_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp_1;
      if (rangeTo(0.0, 1.0).contains_35(tmp2_safe_receiver)) {
        tmp_1 = tmp2_safe_receiver;
      } else {
        {
          tmp_1 = null;
        }
      }
      tmp_0 = tmp_1;
    }
    var tmp3_elvis_lhs = tmp_0;
    tmp._quality = tmp3_elvis_lhs == null ? 1.0 : tmp3_elvis_lhs;
  }
  HeaderValue.prototype.toString = function () {
    return '' + 'HeaderValue(value=' + this._value_13 + ', params=' + this._params + ')';
  };
  HeaderValue.prototype.hashCode = function () {
    var result = getStringHashCode(this._value_13);
    result = imul(result, 31) + hashCode(this._params) | 0;
    return result;
  };
  HeaderValue.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof HeaderValue))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof HeaderValue ? other : THROW_CCE();
    if (!(this._value_13 === tmp0_other_with_cast._value_13))
      return false;
    if (!equals_1(this._params, tmp0_other_with_cast._params))
      return false;
    return true;
  };
  HeaderValue.$metadata$ = {
    simpleName: 'HeaderValue',
    kind: 'class',
    interfaces: []
  };
  function parseHeaderValue(text) {
    return parseHeaderValue_0(text, false);
  }
  function parseHeaderValue_0(text, parametersOnly) {
    if (text == null) {
      return emptyList();
    }var position = 0;
    var tmp = LazyThreadSafetyMode_NONE_getInstance();
    var items = lazy_0(tmp, _no_name_provided_$factory_78());
    while (position <= _get_lastIndex__1(text)) {
      position = parseHeaderValueItem(text, position, items, parametersOnly);
    }
    return valueOrEmpty(items);
  }
  function parseHeaderValueItem(text, start, items, parametersOnly) {
    var position = start;
    var tmp = LazyThreadSafetyMode_NONE_getInstance();
    var parameters = lazy_0(tmp, _no_name_provided_$factory_79());
    var valueEnd = parametersOnly ? position : null;
    while (position <= _get_lastIndex__1(text)) {
      var tmp0_subject = charSequenceGet(text, position);
      if (tmp0_subject.equals(new Char(44))) {
        var tmp_0 = items._get_value__27();
        var tmp1_elvis_lhs = valueEnd;
        tmp_0.add_32(new HeaderValue(subtrim(text, start, tmp1_elvis_lhs == null ? position : tmp1_elvis_lhs), valueOrEmpty(parameters)));
        Unit_getInstance();
        return position + 1 | 0;
      } else if (tmp0_subject.equals(new Char(59))) {
        if (valueEnd == null)
          valueEnd = position;
        position = parseHeaderValueParameter(text, position + 1 | 0, parameters);
      } else {
        var tmp_1;
        if (parametersOnly) {
          tmp_1 = parseHeaderValueParameter(text, position, parameters);
        } else {
          tmp_1 = position + 1 | 0;
        }
        position = tmp_1;
      }
    }
    var tmp_2 = items._get_value__27();
    var tmp2_elvis_lhs = valueEnd;
    tmp_2.add_32(new HeaderValue(subtrim(text, start, tmp2_elvis_lhs == null ? position : tmp2_elvis_lhs), valueOrEmpty(parameters)));
    Unit_getInstance();
    return position;
  }
  function valueOrEmpty(_this_) {
    return _this_.isInitialized_0() ? _this_._get_value__27() : emptyList();
  }
  function subtrim(_this_, start, end) {
    var tmp0_trim_0 = _this_.substring(start, end);
    return toString_1(trim(isCharSequence(tmp0_trim_0) ? tmp0_trim_0 : THROW_CCE()));
  }
  function parseHeaderValueParameter(text, start, parameters) {
    var position = start;
    while (position <= _get_lastIndex__1(text)) {
      var tmp0_subject = charSequenceGet(text, position);
      if (tmp0_subject.equals(new Char(61))) {
        var tmp1_container = parseHeaderValueParameterValue(text, position + 1 | 0);
        var paramEnd = tmp1_container.component1_2();
        var paramValue = tmp1_container.component2_2();
        parseHeaderValueParameter$addParam(parameters, text, start, position, paramValue);
        return paramEnd;
      } else if (tmp0_subject.equals(new Char(59)) ? true : tmp0_subject.equals(new Char(44))) {
        parseHeaderValueParameter$addParam(parameters, text, start, position, '');
        return position;
      } else {
        var tmp2 = position;
        position = tmp2 + 1 | 0;
        Unit_getInstance();
      }
    }
    parseHeaderValueParameter$addParam(parameters, text, start, position, '');
    return position;
  }
  function parseHeaderValueParameterValue(value, start) {
    if (value.length === start) {
      return to(start, '');
    }var position = start;
    if (charSequenceGet(value, start).equals(new Char(34))) {
      return parseHeaderValueParameterValueQuoted(value, position + 1 | 0);
    }while (position <= _get_lastIndex__1(value)) {
      var tmp0_subject = charSequenceGet(value, position);
      if (tmp0_subject.equals(new Char(59)) ? true : tmp0_subject.equals(new Char(44)))
        return to(position, subtrim(value, start, position));
      else {
        var tmp1 = position;
        position = tmp1 + 1 | 0;
        Unit_getInstance();
      }
    }
    return to(position, subtrim(value, start, position));
  }
  function parseHeaderValueParameterValueQuoted(value, start) {
    var position = start;
    var builder = StringBuilder_init_$Create$_0();
    loop: while (position <= _get_lastIndex__1(value)) {
      var currentChar = charSequenceGet(value, position);
      if (currentChar.equals(new Char(34)) ? nextIsSemicolonOrEnd(value, position) : false) {
        return to(position + 1 | 0, builder.toString());
      } else if (currentChar.equals(new Char(92)) ? position < (_get_lastIndex__1(value) - 2 | 0) : false) {
        builder.append_23(charSequenceGet(value, position + 1 | 0));
        Unit_getInstance();
        position = position + 2 | 0;
        continue loop;
      }builder.append_23(currentChar);
      Unit_getInstance();
      var tmp0 = position;
      position = tmp0 + 1 | 0;
      Unit_getInstance();
    }
    var tmp = position;
    var tmp0_plus_0 = new Char(34);
    var tmp1_plus_0 = builder.toString();
    return to(tmp, tmp0_plus_0.toString() + tmp1_plus_0);
  }
  function nextIsSemicolonOrEnd(_this_, start) {
    var position = start + 1 | 0;
    loop: while (position < _this_.length ? charSequenceGet(_this_, position).equals(new Char(32)) : false) {
      position = position + 1 | 0;
    }
    return position === _this_.length ? true : charSequenceGet(_this_, position).equals(new Char(59));
  }
  function parseHeaderValueParameter$addParam($parameters, text, start, end, value) {
    var name = subtrim(text, start, end);
    if (charSequenceLength(name) === 0) {
      return Unit_getInstance();
    } else {
    }
    $parameters._get_value__27().add_32(new HeaderValueParam(name, value));
    Unit_getInstance();
  }
  function _no_name_provided__108() {
  }
  _no_name_provided__108.prototype.invoke_411 = function () {
    return ArrayList_init_$Create$();
  };
  _no_name_provided__108.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__109() {
  }
  _no_name_provided__109.prototype.invoke_411 = function () {
    return ArrayList_init_$Create$();
  };
  _no_name_provided__109.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_78() {
    var i = new _no_name_provided__108();
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_79() {
    var i = new _no_name_provided__109();
    return function () {
      return i.invoke_411();
    };
  }
  function HttpHeaders() {
    HttpHeaders_instance = this;
    this._Accept = 'Accept';
    this._AcceptCharset = 'Accept-Charset';
    this._AcceptEncoding = 'Accept-Encoding';
    this._AcceptLanguage = 'Accept-Language';
    this._AcceptRanges = 'Accept-Ranges';
    this._Age = 'Age';
    this._Allow = 'Allow';
    this._ALPN = 'ALPN';
    this._AuthenticationInfo = 'Authentication-Info';
    this._Authorization = 'Authorization';
    this._CacheControl = 'Cache-Control';
    this._Connection = 'Connection';
    this._ContentDisposition = 'Content-Disposition';
    this._ContentEncoding = 'Content-Encoding';
    this._ContentLanguage = 'Content-Language';
    this._ContentLength = 'Content-Length';
    this._ContentLocation = 'Content-Location';
    this._ContentRange = 'Content-Range';
    this._ContentType = 'Content-Type';
    this._Cookie = 'Cookie';
    this._DASL = 'DASL';
    this._Date = 'Date';
    this._DAV = 'DAV';
    this._Depth = 'Depth';
    this._Destination = 'Destination';
    this._ETag = 'ETag';
    this._Expect = 'Expect';
    this._Expires = 'Expires';
    this._From = 'From';
    this._Forwarded = 'Forwarded';
    this._Host = 'Host';
    this._HTTP2Settings = 'HTTP2-Settings';
    this._If = 'If';
    this._IfMatch = 'If-Match';
    this._IfModifiedSince = 'If-Modified-Since';
    this._IfNoneMatch = 'If-None-Match';
    this._IfRange = 'If-Range';
    this._IfScheduleTagMatch = 'If-Schedule-Tag-Match';
    this._IfUnmodifiedSince = 'If-Unmodified-Since';
    this._LastModified = 'Last-Modified';
    this._Location = 'Location';
    this._LockToken = 'Lock-Token';
    this._Link = 'Link';
    this._MaxForwards = 'Max-Forwards';
    this._MIMEVersion = 'MIME-Version';
    this._OrderingType = 'Ordering-Type';
    this._Origin = 'Origin';
    this._Overwrite = 'Overwrite';
    this._Position = 'Position';
    this._Pragma = 'Pragma';
    this._Prefer = 'Prefer';
    this._PreferenceApplied = 'Preference-Applied';
    this._ProxyAuthenticate = 'Proxy-Authenticate';
    this._ProxyAuthenticationInfo = 'Proxy-Authentication-Info';
    this._ProxyAuthorization = 'Proxy-Authorization';
    this._PublicKeyPins = 'Public-Key-Pins';
    this._PublicKeyPinsReportOnly = 'Public-Key-Pins-Report-Only';
    this._Range = 'Range';
    this._Referrer = 'Referer';
    this._RetryAfter = 'Retry-After';
    this._ScheduleReply = 'Schedule-Reply';
    this._ScheduleTag = 'Schedule-Tag';
    this._SecWebSocketAccept = 'Sec-WebSocket-Accept';
    this._SecWebSocketExtensions = 'Sec-WebSocket-Extensions';
    this._SecWebSocketKey = 'Sec-WebSocket-Key';
    this._SecWebSocketProtocol = 'Sec-WebSocket-Protocol';
    this._SecWebSocketVersion = 'Sec-WebSocket-Version';
    this._Server = 'Server';
    this._SetCookie = 'Set-Cookie';
    this._SLUG = 'SLUG';
    this._StrictTransportSecurity = 'Strict-Transport-Security';
    this._TE = 'TE';
    this._Timeout = 'Timeout';
    this._Trailer = 'Trailer';
    this._TransferEncoding = 'Transfer-Encoding';
    this._Upgrade = 'Upgrade';
    this._UserAgent = 'User-Agent';
    this._Vary = 'Vary';
    this._Via = 'Via';
    this._Warning = 'Warning';
    this._WWWAuthenticate = 'WWW-Authenticate';
    this._AccessControlAllowOrigin = 'Access-Control-Allow-Origin';
    this._AccessControlAllowMethods = 'Access-Control-Allow-Methods';
    this._AccessControlAllowCredentials = 'Access-Control-Allow-Credentials';
    this._AccessControlAllowHeaders = 'Access-Control-Allow-Headers';
    this._AccessControlRequestMethod = 'Access-Control-Request-Method';
    this._AccessControlRequestHeaders = 'Access-Control-Request-Headers';
    this._AccessControlExposeHeaders = 'Access-Control-Expose-Headers';
    this._AccessControlMaxAge = 'Access-Control-Max-Age';
    this._XHttpMethodOverride = 'X-Http-Method-Override';
    this._XForwardedHost = 'X-Forwarded-Host';
    this._XForwardedServer = 'X-Forwarded-Server';
    this._XForwardedProto = 'X-Forwarded-Proto';
    this._XForwardedFor = 'X-Forwarded-For';
    this._XRequestId = 'X-Request-ID';
    this._XCorrelationId = 'X-Correlation-ID';
    this._XTotalCount = 'X-Total-Count';
    var tmp = this;
    var tmp0_arrayOf_0 = [this._ContentLength, this._ContentType, this._TransferEncoding, this._Upgrade];
    tmp._UnsafeHeadersArray = tmp0_arrayOf_0;
    this._UnsafeHeadersList = asList(this._UnsafeHeadersArray);
  }
  HttpHeaders.prototype.checkHeaderName = function (name) {
    var index_1 = 0;
    var indexedObject = name;
    var inductionVariable = 0;
    var last_1 = indexedObject.length;
    while (inductionVariable < last_1) {
      var item_3 = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var tmp1_4 = index_1;
      index_1 = tmp1_4 + 1 | 0;
      var tmp0__anonymous__5 = tmp1_4;
      if (item_3.compareTo_12(new Char(32)) <= 0 ? true : isDelimiter(item_3)) {
        throw new IllegalHeaderNameException(name, tmp0__anonymous__5);
      }}
  };
  HttpHeaders.prototype.checkHeaderValue = function (value) {
    var index_1 = 0;
    var indexedObject = value;
    var inductionVariable = 0;
    var last_1 = indexedObject.length;
    while (inductionVariable < last_1) {
      var item_3 = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      l$ret$1: do {
        var tmp1_4 = index_1;
        index_1 = tmp1_4 + 1 | 0;
        var tmp0__anonymous__5 = tmp1_4;
        if (item_3.equals(new Char(32)) ? true : item_3.equals(new Char(9))) {
          tmp$ret$0 = Unit_getInstance();
          break l$ret$1;
        }if (item_3.compareTo_12(new Char(32)) < 0) {
          throw new IllegalHeaderValueException(value, tmp0__anonymous__5);
        }}
       while (false);
    }
  };
  HttpHeaders.$metadata$ = {
    simpleName: 'HttpHeaders',
    kind: 'object',
    interfaces: []
  };
  var HttpHeaders_instance;
  function HttpHeaders_getInstance() {
    if (HttpHeaders_instance == null)
      new HttpHeaders();
    return HttpHeaders_instance;
  }
  function UnsafeHeaderException(header_0) {
    IllegalArgumentException_init_$Init$_0('' + 'Header(s) ' + header_0 + ' are controlled by the engine and ' + 'cannot be set explicitly', this);
    captureStack(this, UnsafeHeaderException);
  }
  UnsafeHeaderException.$metadata$ = {
    simpleName: 'UnsafeHeaderException',
    kind: 'class',
    interfaces: []
  };
  function isDelimiter(ch) {
    return contains$default('"(),/:;<=>?@[\\]{}', ch, false, 2, null);
  }
  function IllegalHeaderNameException(headerName, position) {
    IllegalArgumentException_init_$Init$_0('' + "Header name '" + headerName + "' contains illegal character '" + charSequenceGet(headerName, position) + "'" + ('' + ' (code ' + (charSequenceGet(headerName, position).toInt_5() & 255) + ')'), this);
    this._headerName = headerName;
    this._position = position;
    captureStack(this, IllegalHeaderNameException);
  }
  IllegalHeaderNameException.$metadata$ = {
    simpleName: 'IllegalHeaderNameException',
    kind: 'class',
    interfaces: []
  };
  function IllegalHeaderValueException(headerValue, position) {
    IllegalArgumentException_init_$Init$_0('' + "Header value '" + headerValue + "' contains illegal character '" + charSequenceGet(headerValue, position) + "'" + ('' + ' (code ' + (charSequenceGet(headerValue, position).toInt_5() & 255) + ')'), this);
    this._headerValue = headerValue;
    this._position_0 = position;
    captureStack(this, IllegalHeaderValueException);
  }
  IllegalHeaderValueException.$metadata$ = {
    simpleName: 'IllegalHeaderValueException',
    kind: 'class',
    interfaces: []
  };
  function HttpMessageBuilder() {
  }
  HttpMessageBuilder.$metadata$ = {
    simpleName: 'HttpMessageBuilder',
    kind: 'interface',
    interfaces: []
  };
  function HttpMessage() {
  }
  HttpMessage.$metadata$ = {
    simpleName: 'HttpMessage',
    kind: 'interface',
    interfaces: []
  };
  function contentType(_this_) {
    var tmp0_safe_receiver = _this_._get_headers__24().get_64(HttpHeaders_getInstance()._ContentType);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = Companion_getInstance_30().parse_1(tmp0_safe_receiver);
    }
    return tmp;
  }
  function charset_0(_this_) {
    var tmp0_safe_receiver = contentType_0(_this_);
    return tmp0_safe_receiver == null ? null : charset(tmp0_safe_receiver);
  }
  function contentType_0(_this_) {
    var tmp0_safe_receiver = _this_._get_headers__24().get_64(HttpHeaders_getInstance()._ContentType);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = Companion_getInstance_30().parse_1(tmp0_safe_receiver);
    }
    return tmp;
  }
  function Companion_34() {
    Companion_instance_33 = this;
    this._Get = new HttpMethod('GET');
    this._Post = new HttpMethod('POST');
    this._Put = new HttpMethod('PUT');
    this._Patch = new HttpMethod('PATCH');
    this._Delete = new HttpMethod('DELETE');
    this._Head = new HttpMethod('HEAD');
    this._Options = new HttpMethod('OPTIONS');
    this._DefaultMethods = listOf([this._Get, this._Post, this._Put, this._Patch, this._Delete, this._Head, this._Options]);
  }
  Companion_34.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_33;
  function Companion_getInstance_33() {
    if (Companion_instance_33 == null)
      new Companion_34();
    return Companion_instance_33;
  }
  function HttpMethod(value) {
    Companion_getInstance_33();
    this._value_14 = value;
  }
  HttpMethod.prototype.toString = function () {
    return '' + 'HttpMethod(value=' + this._value_14 + ')';
  };
  HttpMethod.prototype.hashCode = function () {
    return getStringHashCode(this._value_14);
  };
  HttpMethod.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof HttpMethod))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof HttpMethod ? other : THROW_CCE();
    if (!(this._value_14 === tmp0_other_with_cast._value_14))
      return false;
    return true;
  };
  HttpMethod.$metadata$ = {
    simpleName: 'HttpMethod',
    kind: 'class',
    interfaces: []
  };
  function Companion_35() {
    Companion_instance_34 = this;
    this._HTTP_2_0 = new HttpProtocolVersion('HTTP', 2, 0);
    this._HTTP_1_1 = new HttpProtocolVersion('HTTP', 1, 1);
    this._HTTP_1_0 = new HttpProtocolVersion('HTTP', 1, 0);
    this._SPDY_3 = new HttpProtocolVersion('SPDY', 3, 0);
    this._QUIC = new HttpProtocolVersion('QUIC', 1, 0);
  }
  Companion_35.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_34;
  function Companion_getInstance_34() {
    if (Companion_instance_34 == null)
      new Companion_35();
    return Companion_instance_34;
  }
  function HttpProtocolVersion(name, major, minor) {
    Companion_getInstance_34();
    this._name_5 = name;
    this._major = major;
    this._minor = minor;
  }
  HttpProtocolVersion.prototype.toString = function () {
    return '' + this._name_5 + '/' + this._major + '.' + this._minor;
  };
  HttpProtocolVersion.prototype.hashCode = function () {
    var result = getStringHashCode(this._name_5);
    result = imul(result, 31) + this._major | 0;
    result = imul(result, 31) + this._minor | 0;
    return result;
  };
  HttpProtocolVersion.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof HttpProtocolVersion))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof HttpProtocolVersion ? other : THROW_CCE();
    if (!(this._name_5 === tmp0_other_with_cast._name_5))
      return false;
    if (!(this._major === tmp0_other_with_cast._major))
      return false;
    if (!(this._minor === tmp0_other_with_cast._minor))
      return false;
    return true;
  };
  HttpProtocolVersion.$metadata$ = {
    simpleName: 'HttpProtocolVersion',
    kind: 'class',
    interfaces: []
  };
  function Companion_36() {
    Companion_instance_35 = this;
    this._Continue = new HttpStatusCode(100, 'Continue');
    this._SwitchingProtocols = new HttpStatusCode(101, 'Switching Protocols');
    this._Processing = new HttpStatusCode(102, 'Processing');
    this._OK = new HttpStatusCode(200, 'OK');
    this._Created = new HttpStatusCode(201, 'Created');
    this._Accepted = new HttpStatusCode(202, 'Accepted');
    this._NonAuthoritativeInformation = new HttpStatusCode(203, 'Non-Authoritative Information');
    this._NoContent = new HttpStatusCode(204, 'No Content');
    this._ResetContent = new HttpStatusCode(205, 'Reset Content');
    this._PartialContent = new HttpStatusCode(206, 'Partial Content');
    this._MultiStatus = new HttpStatusCode(207, 'Multi-Status');
    this._MultipleChoices = new HttpStatusCode(300, 'Multiple Choices');
    this._MovedPermanently = new HttpStatusCode(301, 'Moved Permanently');
    this._Found = new HttpStatusCode(302, 'Found');
    this._SeeOther = new HttpStatusCode(303, 'See Other');
    this._NotModified = new HttpStatusCode(304, 'Not Modified');
    this._UseProxy = new HttpStatusCode(305, 'Use Proxy');
    this._SwitchProxy = new HttpStatusCode(306, 'Switch Proxy');
    this._TemporaryRedirect = new HttpStatusCode(307, 'Temporary Redirect');
    this._PermanentRedirect = new HttpStatusCode(308, 'Permanent Redirect');
    this._BadRequest = new HttpStatusCode(400, 'Bad Request');
    this._Unauthorized = new HttpStatusCode(401, 'Unauthorized');
    this._PaymentRequired = new HttpStatusCode(402, 'Payment Required');
    this._Forbidden = new HttpStatusCode(403, 'Forbidden');
    this._NotFound = new HttpStatusCode(404, 'Not Found');
    this._MethodNotAllowed = new HttpStatusCode(405, 'Method Not Allowed');
    this._NotAcceptable = new HttpStatusCode(406, 'Not Acceptable');
    this._ProxyAuthenticationRequired = new HttpStatusCode(407, 'Proxy Authentication Required');
    this._RequestTimeout = new HttpStatusCode(408, 'Request Timeout');
    this._Conflict = new HttpStatusCode(409, 'Conflict');
    this._Gone = new HttpStatusCode(410, 'Gone');
    this._LengthRequired = new HttpStatusCode(411, 'Length Required');
    this._PreconditionFailed = new HttpStatusCode(412, 'Precondition Failed');
    this._PayloadTooLarge = new HttpStatusCode(413, 'Payload Too Large');
    this._RequestURITooLong = new HttpStatusCode(414, 'Request-URI Too Long');
    this._UnsupportedMediaType = new HttpStatusCode(415, 'Unsupported Media Type');
    this._RequestedRangeNotSatisfiable = new HttpStatusCode(416, 'Requested Range Not Satisfiable');
    this._ExpectationFailed = new HttpStatusCode(417, 'Expectation Failed');
    this._UnprocessableEntity = new HttpStatusCode(422, 'Unprocessable Entity');
    this._Locked = new HttpStatusCode(423, 'Locked');
    this._FailedDependency = new HttpStatusCode(424, 'Failed Dependency');
    this._UpgradeRequired = new HttpStatusCode(426, 'Upgrade Required');
    this._TooManyRequests = new HttpStatusCode(429, 'Too Many Requests');
    this._RequestHeaderFieldTooLarge = new HttpStatusCode(431, 'Request Header Fields Too Large');
    this._InternalServerError = new HttpStatusCode(500, 'Internal Server Error');
    this._NotImplemented = new HttpStatusCode(501, 'Not Implemented');
    this._BadGateway = new HttpStatusCode(502, 'Bad Gateway');
    this._ServiceUnavailable = new HttpStatusCode(503, 'Service Unavailable');
    this._GatewayTimeout = new HttpStatusCode(504, 'Gateway Timeout');
    this._VersionNotSupported = new HttpStatusCode(505, 'HTTP Version Not Supported');
    this._VariantAlsoNegotiates = new HttpStatusCode(506, 'Variant Also Negotiates');
    this._InsufficientStorage = new HttpStatusCode(507, 'Insufficient Storage');
    this._allStatusCodes = allStatusCodes();
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = 1000;
    var tmp_2 = fillArrayVal(Array(tmp_1), null);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$0;
      l$ret$1: do {
        var tmp0_firstOrNull_0 = Companion_getInstance_35()._allStatusCodes;
        var tmp0_iterator_1 = tmp0_firstOrNull_0.iterator_62();
        while (tmp0_iterator_1.hasNext_29()) {
          var element_2 = tmp0_iterator_1.next_31();
          if (element_2._value_15 === tmp_3) {
            tmp$ret$0 = element_2;
            break l$ret$1;
          } else {
          }
        }
        tmp$ret$0 = null;
      }
       while (false);
      tmp_2[tmp_3] = tmp$ret$0;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp._byValue = tmp_2;
  }
  Companion_36.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_35;
  function Companion_getInstance_35() {
    if (Companion_instance_35 == null)
      new Companion_36();
    return Companion_instance_35;
  }
  function HttpStatusCode(value, description) {
    Companion_getInstance_35();
    this._value_15 = value;
    this._description = description;
  }
  HttpStatusCode.prototype.toString = function () {
    return '' + this._value_15 + ' ' + this._description;
  };
  HttpStatusCode.prototype.equals = function (other) {
    var tmp;
    if (other instanceof HttpStatusCode) {
      tmp = other._value_15 === this._value_15;
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  HttpStatusCode.prototype.hashCode = function () {
    return this._value_15;
  };
  HttpStatusCode.$metadata$ = {
    simpleName: 'HttpStatusCode',
    kind: 'class',
    interfaces: []
  };
  function allStatusCodes() {
    return listOf([Companion_getInstance_35()._Continue, Companion_getInstance_35()._SwitchingProtocols, Companion_getInstance_35()._Processing, Companion_getInstance_35()._OK, Companion_getInstance_35()._Created, Companion_getInstance_35()._Accepted, Companion_getInstance_35()._NonAuthoritativeInformation, Companion_getInstance_35()._NoContent, Companion_getInstance_35()._ResetContent, Companion_getInstance_35()._PartialContent, Companion_getInstance_35()._MultiStatus, Companion_getInstance_35()._MultipleChoices, Companion_getInstance_35()._MovedPermanently, Companion_getInstance_35()._Found, Companion_getInstance_35()._SeeOther, Companion_getInstance_35()._NotModified, Companion_getInstance_35()._UseProxy, Companion_getInstance_35()._SwitchProxy, Companion_getInstance_35()._TemporaryRedirect, Companion_getInstance_35()._PermanentRedirect, Companion_getInstance_35()._BadRequest, Companion_getInstance_35()._Unauthorized, Companion_getInstance_35()._PaymentRequired, Companion_getInstance_35()._Forbidden, Companion_getInstance_35()._NotFound, Companion_getInstance_35()._MethodNotAllowed, Companion_getInstance_35()._NotAcceptable, Companion_getInstance_35()._ProxyAuthenticationRequired, Companion_getInstance_35()._RequestTimeout, Companion_getInstance_35()._Conflict, Companion_getInstance_35()._Gone, Companion_getInstance_35()._LengthRequired, Companion_getInstance_35()._PreconditionFailed, Companion_getInstance_35()._PayloadTooLarge, Companion_getInstance_35()._RequestURITooLong, Companion_getInstance_35()._UnsupportedMediaType, Companion_getInstance_35()._RequestedRangeNotSatisfiable, Companion_getInstance_35()._ExpectationFailed, Companion_getInstance_35()._UnprocessableEntity, Companion_getInstance_35()._Locked, Companion_getInstance_35()._FailedDependency, Companion_getInstance_35()._UpgradeRequired, Companion_getInstance_35()._TooManyRequests, Companion_getInstance_35()._RequestHeaderFieldTooLarge, Companion_getInstance_35()._InternalServerError, Companion_getInstance_35()._NotImplemented, Companion_getInstance_35()._BadGateway, Companion_getInstance_35()._ServiceUnavailable, Companion_getInstance_35()._GatewayTimeout, Companion_getInstance_35()._VersionNotSupported, Companion_getInstance_35()._VariantAlsoNegotiates, Companion_getInstance_35()._InsufficientStorage]);
  }
  function isSuccess(_this_) {
    var containsArg = _this_._value_15;
    return 200 <= containsArg ? containsArg < 300 : false;
  }
  function formUrlEncodeTo(_this_, out) {
    formUrlEncodeTo_1(_this_.entries_10(), out);
  }
  function formUrlEncodeTo_0(_this_, out) {
    formUrlEncodeTo_1(_this_.entries_10(), out);
  }
  function formUrlEncodeTo_1(_this_, out) {
    var tmp0_flatMapTo_0_1 = ArrayList_init_$Create$();
    var tmp0_iterator_1_2 = _this_.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var element_2_3 = tmp0_iterator_1_2.next_31();
      var key_6 = element_2_3._get_key__52();
      var value_7 = element_2_3._get_value__27();
      var tmp;
      if (value_7.isEmpty_50()) {
        tmp = listOf_0(to(key_6, null));
      } else {
        var tmp0_mapTo_0_1_8 = ArrayList_init_$Create$_0(collectionSizeOrDefault(value_7, 10));
        var tmp0_iterator_1_2_9 = value_7.iterator_62();
        while (tmp0_iterator_1_2_9.hasNext_29()) {
          var item_2_3_10 = tmp0_iterator_1_2_9.next_31();
          tmp0_mapTo_0_1_8.add_32(to(key_6, item_2_3_10));
          Unit_getInstance();
        }
        tmp = tmp0_mapTo_0_1_8;
      }
      var list_3_4 = tmp;
      addAll(tmp0_flatMapTo_0_1, list_3_4);
      Unit_getInstance();
    }
    formUrlEncodeTo_2(tmp0_flatMapTo_0_1, out);
  }
  function formUrlEncodeTo_2(_this_, out) {
    joinTo$default(_this_, out, '&', null, null, 0, null, _no_name_provided_$factory_80(), 60, null);
    Unit_getInstance();
  }
  function _no_name_provided__110() {
  }
  _no_name_provided__110.prototype.invoke_162 = function (it) {
    var key = encodeURLParameter(it._first, true);
    var tmp;
    if (it._second == null) {
      tmp = key;
    } else {
      var value = encodeURLParameterValue(toString_0(it._second));
      tmp = '' + key + '=' + value;
    }
    return tmp;
  };
  _no_name_provided__110.prototype.invoke_420 = function (p1) {
    return this.invoke_162(p1 instanceof Pair ? p1 : THROW_CCE());
  };
  _no_name_provided__110.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_80() {
    var i = new _no_name_provided__110();
    return function (p1) {
      return i.invoke_162(p1);
    };
  }
  var IPv4address;
  var IPv6address;
  var IP_PARSER;
  function _get_mimes_() {
    var tmp0_getValue_0 = mimes$delegate;
    var tmp1_getValue_0 = null;
    var tmp2_getValue_0 = mimes$factory();
    return tmp0_getValue_0._get_value__27();
  }
  var mimes$delegate;
  function loadMimes() {
    var tmp = lineSequence(_get_rawMimes_());
    return toList_2(mapNotNull(tmp, _no_name_provided_$factory_82()));
  }
  function _get_rawMimes_() {
    return '\n.123,application/vnd.lotus-1-2-3\n.3dmf,x-world/x-3dmf\n.3dml,text/vnd.in3d.3dml\n.3dm,x-world/x-3dmf\n.3g2,video/3gpp2\n.3gp,video/3gpp\n.7z,application/x-7z-compressed\n.aab,application/x-authorware-bin\n.aac,audio/aac\n.aam,application/x-authorware-map\n.a,application/octet-stream\n.aas,application/x-authorware-seg\n.abc,text/vnd.abc\n.abw,application/x-abiword\n.ac,application/pkix-attr-cert\n.acc,application/vnd.americandynamics.acc\n.ace,application/x-ace-compressed\n.acgi,text/html\n.acu,application/vnd.acucobol\n.adp,audio/adpcm\n.aep,application/vnd.audiograph\n.afl,video/animaflex\n.afp,application/vnd.ibm.modcap\n.ahead,application/vnd.ahead.space\n.ai,application/postscript\n.aif,audio/aiff\n.aifc,audio/aiff\n.aiff,audio/aiff\n.aim,application/x-aim\n.aip,text/x-audiosoft-intra\n.air,application/vnd.adobe.air-application-installer-package+zip\n.ait,application/vnd.dvb.ait\n.ami,application/vnd.amiga.ami\n.ani,application/x-navi-animation\n.aos,application/x-nokia-9000-communicator-add-on-software\n.apk,application/vnd.android.package-archive\n.application,application/x-ms-application\n,application/pgp-encrypted\n.apr,application/vnd.lotus-approach\n.aps,application/mime\n.arc,application/octet-stream\n.arj,application/arj\n.arj,application/octet-stream\n.art,image/x-jg\n.asf,video/x-ms-asf\n.asm,text/x-asm\n.aso,application/vnd.accpac.simply.aso\n.asp,text/asp\n.asx,application/x-mplayer2\n.asx,video/x-ms-asf\n.asx,video/x-ms-asf-plugin\n.atc,application/vnd.acucorp\n.atomcat,application/atomcat+xml\n.atomsvc,application/atomsvc+xml\n.atom,application/atom+xml\n.atx,application/vnd.antix.game-component\n.au,audio/basic\n.au,audio/x-au\n.avi,video/avi\n.avi,video/msvideo\n.avi,video/x-msvideo\n.avs,video/avs-video\n.aw,application/applixware\n.azf,application/vnd.airzip.filesecure.azf\n.azs,application/vnd.airzip.filesecure.azs\n.azw,application/vnd.amazon.ebook\n.bcpio,application/x-bcpio\n.bdf,application/x-font-bdf\n.bdm,application/vnd.syncml.dm+wbxml\n.bed,application/vnd.realvnc.bed\n.bh2,application/vnd.fujitsu.oasysprs\n.bin,application/macbinary\n.bin,application/mac-binary\n.bin,application/octet-stream\n.bin,application/x-binary\n.bin,application/x-macbinary\n.bmi,application/vnd.bmi\n.bm,image/bmp\n.bmp,image/bmp\n.bmp,image/x-windows-bmp\n.boo,application/book\n.book,application/book\n.box,application/vnd.previewsystems.box\n.boz,application/x-bzip2\n.bsh,application/x-bsh\n.btif,image/prs.btif\n.bz2,application/x-bzip2\n.bz,application/x-bzip\n.c11amc,application/vnd.cluetrust.cartomobile-config\n.c11amz,application/vnd.cluetrust.cartomobile-config-pkg\n.c4g,application/vnd.clonk.c4group\n.cab,application/vnd.ms-cab-compressed\n.car,application/vnd.curl.car\n.cat,application/vnd.ms-pki.seccat\n.ccad,application/clariscad\n.cco,application/x-cocoa\n.cc,text/plain\n.cc,text/x-c\n.ccxml,application/ccxml+xml,\n.cdbcmsg,application/vnd.contact.cmsg\n.cdf,application/cdf\n.cdf,application/x-cdf\n.cdf,application/x-netcdf\n.cdkey,application/vnd.mediastation.cdkey\n.cdmia,application/cdmi-capability\n.cdmic,application/cdmi-container\n.cdmid,application/cdmi-domain\n.cdmio,application/cdmi-object\n.cdmiq,application/cdmi-queue\n.cdx,chemical/x-cdx\n.cdxml,application/vnd.chemdraw+xml\n.cdy,application/vnd.cinderella\n.cer,application/pkix-cert\n.cgm,image/cgm\n.cha,application/x-chat\n.chat,application/x-chat\n.chm,application/vnd.ms-htmlhelp\n.chrt,application/vnd.kde.kchart\n.cif,chemical/x-cif\n.cii,application/vnd.anser-web-certificate-issue-initiation\n.cil,application/vnd.ms-artgalry\n.cla,application/vnd.claymore\n.class,application/java\n.class,application/java-byte-code\n.class,application/java-vm\n.class,application/x-java-class\n.clkk,application/vnd.crick.clicker.keyboard\n.clkp,application/vnd.crick.clicker.palette\n.clkt,application/vnd.crick.clicker.template\n.clkw,application/vnd.crick.clicker.wordbank\n.clkx,application/vnd.crick.clicker\n.clp,application/x-msclip\n.cmc,application/vnd.cosmocaller\n.cmdf,chemical/x-cmdf\n.cml,chemical/x-cml\n.cmp,application/vnd.yellowriver-custom-menu\n.cmx,image/x-cmx\n.cod,application/vnd.rim.cod\n.com,application/octet-stream\n.com,text/plain\n.conf,text/plain\n.cpio,application/x-cpio\n.cpp,text/x-c\n.cpt,application/mac-compactpro\n.cpt,application/x-compactpro\n.cpt,application/x-cpt\n.crd,application/x-mscardfile\n.crl,application/pkcs-crl\n.crl,application/pkix-crl\n.crt,application/pkix-cert\n.crt,application/x-x509-ca-cert\n.crt,application/x-x509-user-cert\n.cryptonote,application/vnd.rig.cryptonote\n.csh,application/x-csh\n.csh,text/x-script.csh\n.csml,chemical/x-csml\n.csp,application/vnd.commonspace\n.css,text/css\n.csv,text/csv\n.c,text/plain\n.c++,text/plain\n.c,text/x-c\n.cu,application/cu-seeme\n.curl,text/vnd.curl\n.cww,application/prs.cww\n.cxx,text/plain\n.dat,binary/octet-stream\n.dae,model/vnd.collada+xml\n.daf,application/vnd.mobius.daf\n.davmount,application/davmount+xml\n.dcr,application/x-director\n.dcurl,text/vnd.curl.dcurl\n.dd2,application/vnd.oma.dd2+xml\n.ddd,application/vnd.fujixerox.ddd\n.deb,application/x-debian-package\n.deepv,application/x-deepv\n.def,text/plain\n.der,application/x-x509-ca-cert\n.dfac,application/vnd.dreamfactory\n.dif,video/x-dv\n.dir,application/x-director\n.dis,application/vnd.mobius.dis\n.djvu,image/vnd.djvu\n.dl,video/dl\n.dl,video/x-dl\n.dna,application/vnd.dna\n.doc,application/msword\n.docm,application/vnd.ms-word.document.macroenabled.12\n.docx,application/vnd.openxmlformats-officedocument.wordprocessingml.document\n.dot,application/msword\n.dotm,application/vnd.ms-word.template.macroenabled.12\n.dotx,application/vnd.openxmlformats-officedocument.wordprocessingml.template\n.dp,application/commonground\n.dp,application/vnd.osgi.dp\n.dpg,application/vnd.dpgraph\n.dra,audio/vnd.dra\n.drw,application/drafting\n.dsc,text/prs.lines.tag\n.dssc,application/dssc+der\n.dtb,application/x-dtbook+xml\n.dtd,application/xml-dtd\n.dts,audio/vnd.dts\n.dtshd,audio/vnd.dts.hd\n.dump,application/octet-stream\n.dvi,application/x-dvi\n.dv,video/x-dv\n.dwf,drawing/x-dwf (old)\n.dwf,model/vnd.dwf\n.dwg,application/acad\n.dwg,image/vnd.dwg\n.dwg,image/x-dwg\n.dxf,application/dxf\n.dxf,image/vnd.dwg\n.dxf,image/vnd.dxf\n.dxf,image/x-dwg\n.dxp,application/vnd.spotfire.dxp\n.dxr,application/x-director\n.ecelp4800,audio/vnd.nuera.ecelp4800\n.ecelp7470,audio/vnd.nuera.ecelp7470\n.ecelp9600,audio/vnd.nuera.ecelp9600\n.edm,application/vnd.novadigm.edm\n.edx,application/vnd.novadigm.edx\n.efif,application/vnd.picsel\n.ei6,application/vnd.pg.osasli\n.elc,application/x-bytecode.elisp (compiled elisp)\n.elc,application/x-elc\n.el,text/x-script.elisp\n.eml,message/rfc822\n.emma,application/emma+xml\n.env,application/x-envoy\n.eol,audio/vnd.digital-winds\n.eot,application/vnd.ms-fontobject\n.eps,application/postscript\n.epub,application/epub+zip\n.es3,application/vnd.eszigno3+xml\n.es,application/ecmascript\n.es,application/x-esrehber\n.esf,application/vnd.epson.esf\n.etx,text/x-setext\n.evy,application/envoy\n.evy,application/x-envoy\n.exe,application/octet-stream\n.exe,application/x-msdownload\n.exi,application/exi\n.ext,application/vnd.novadigm.ext\n.ez2,application/vnd.ezpix-album\n.ez3,application/vnd.ezpix-package\n.f4v,video/x-f4v\n.f77,text/x-fortran\n.f90,text/plain\n.f90,text/x-fortran\n.fbs,image/vnd.fastbidsheet\n.fcs,application/vnd.isac.fcs\n.fdf,application/vnd.fdf\n.fe_launch,application/vnd.denovo.fcselayout-link\n.fg5,application/vnd.fujitsu.oasysgp\n.fh,image/x-freehand\n.fif,application/fractals\n.fif,image/fif\n.fig,application/x-xfig\n.fli,video/fli\n.fli,video/x-fli\n.flo,application/vnd.micrografx.flo\n.flo,image/florian\n.flv,video/x-flv\n.flw,application/vnd.kde.kivio\n.flx,text/vnd.fmi.flexstor\n.fly,text/vnd.fly\n.fm,application/vnd.framemaker\n.fmf,video/x-atomic3d-feature\n.fnc,application/vnd.frogans.fnc\n.for,text/plain\n.for,text/x-fortran\n.fpx,image/vnd.fpx\n.fpx,image/vnd.net-fpx\n.frl,application/freeloader\n.fsc,application/vnd.fsc.weblaunch\n.fst,image/vnd.fst\n.ftc,application/vnd.fluxtime.clip\n.f,text/plain\n.f,text/x-fortran\n.fti,application/vnd.anser-web-funds-transfer-initiation\n.funk,audio/make\n.fvt,video/vnd.fvt\n.fxp,application/vnd.adobe.fxp\n.fzs,application/vnd.fuzzysheet\n.g2w,application/vnd.geoplan\n.g3,image/g3fax\n.g3w,application/vnd.geospace\n.gac,application/vnd.groove-account\n.gdl,model/vnd.gdl\n.geo,application/vnd.dynageo\n.gex,application/vnd.geometry-explorer\n.ggb,application/vnd.geogebra.file\n.ggt,application/vnd.geogebra.tool\n.ghf,application/vnd.groove-help\n.gif,image/gif\n.gim,application/vnd.groove-identity-message\n.gl,video/gl\n.gl,video/x-gl\n.gmx,application/vnd.gmx\n.gnumeric,application/x-gnumeric\n.gph,application/vnd.flographit\n.gqf,application/vnd.grafeq\n.gram,application/srgs\n.grv,application/vnd.groove-injector\n.grxml,application/srgs+xml\n.gsd,audio/x-gsm\n.gsf,application/x-font-ghostscript\n.gsm,audio/x-gsm\n.gsp,application/x-gsp\n.gss,application/x-gss\n.gtar,application/x-gtar\n.g,text/plain\n.gtm,application/vnd.groove-tool-message\n.gtw,model/vnd.gtw\n.gv,text/vnd.graphviz\n.gxt,application/vnd.geonext\n.gz,application/x-compressed\n.gz,application/x-gzip\n.gzip,application/x-gzip\n.gzip,multipart/x-gzip\n.h261,video/h261\n.h263,video/h263\n.h264,video/h264\n.hal,application/vnd.hal+xml\n.hbci,application/vnd.hbci\n.hdf,application/x-hdf\n.help,application/x-helpfile\n.hgl,application/vnd.hp-hpgl\n.hh,text/plain\n.hh,text/x-h\n.hlb,text/x-script\n.hlp,application/hlp\n.hlp,application/winhlp\n.hlp,application/x-helpfile\n.hlp,application/x-winhelp\n.hpg,application/vnd.hp-hpgl\n.hpgl,application/vnd.hp-hpgl\n.hpid,application/vnd.hp-hpid\n.hps,application/vnd.hp-hps\n.hqx,application/binhex\n.hqx,application/binhex4\n.hqx,application/mac-binhex\n.hqx,application/mac-binhex40\n.hqx,application/x-binhex40\n.hqx,application/x-mac-binhex40\n.hta,application/hta\n.htc,text/x-component\n.h,text/plain\n.h,text/x-h\n.htke,application/vnd.kenameaapp\n.htmls,text/html\n.html,text/html\n.htm,text/html\n.htt,text/webviewhtml\n.htx,text/html\n.hvd,application/vnd.yamaha.hv-dic\n.hvp,application/vnd.yamaha.hv-voice\n.hvs,application/vnd.yamaha.hv-script\n.i2g,application/vnd.intergeo\n.icc,application/vnd.iccprofile\n.ice,x-conference/x-cooltalk\n.ico,image/x-icon\n.ics,text/calendar\n.idc,text/plain\n.ief,image/ief\n.iefs,image/ief\n.iff,application/iff\n.ifm,application/vnd.shana.informed.formdata\n.iges,application/iges\n.iges,model/iges\n.igl,application/vnd.igloader\n.igm,application/vnd.insors.igm\n.igs,application/iges\n.igs,model/iges\n.igx,application/vnd.micrografx.igx\n.iif,application/vnd.shana.informed.interchange\n.ima,application/x-ima\n.imap,application/x-httpd-imap\n.imp,application/vnd.accpac.simply.imp\n.ims,application/vnd.ms-ims\n.inf,application/inf\n.ins,application/x-internett-signup\n.ip,application/x-ip2\n.ipfix,application/ipfix\n.ipk,application/vnd.shana.informed.package\n.irm,application/vnd.ibm.rights-management\n.irp,application/vnd.irepository.package+xml\n.isu,video/x-isvideo\n.it,audio/it\n.itp,application/vnd.shana.informed.formtemplate\n.iv,application/x-inventor\n.ivp,application/vnd.immervision-ivp\n.ivr,i-world/i-vrml\n.ivu,application/vnd.immervision-ivu\n.ivy,application/x-livescreen\n.jad,text/vnd.sun.j2me.app-descriptor\n.jam,application/vnd.jam\n.jam,audio/x-jam\n.jar,application/java-archive\n.java,text/plain\n.java,text/x-java-source\n.jav,text/plain\n.jav,text/x-java-source\n.jcm,application/x-java-commerce\n.jfif,image/jpeg\n.jfif,image/pjpeg\n.jfif-tbnl,image/jpeg\n.jisp,application/vnd.jisp\n.jlt,application/vnd.hp-jlyt\n.jnlp,application/x-java-jnlp-file\n.joda,application/vnd.joost.joda-archive\n.jpeg,image/jpeg\n.jpe,image/jpeg\n.jpg,image/jpeg\n.jpgv,video/jpeg\n.jpm,video/jpm\n.jps,image/x-jps\n.js,application/javascript\n.json,application/json\n.jut,image/jutvision\n.kar,audio/midi\n.karbon,application/vnd.kde.karbon\n.kar,music/x-karaoke\n.key,application/pgp-keys\n.keychain,application/octet-stream\n.kfo,application/vnd.kde.kformula\n.kia,application/vnd.kidspiration\n.kml,application/vnd.google-earth.kml+xml\n.kmz,application/vnd.google-earth.kmz\n.kne,application/vnd.kinar\n.kon,application/vnd.kde.kontour\n.kpr,application/vnd.kde.kpresenter\n.ksh,application/x-ksh\n.ksh,text/x-script.ksh\n.ksp,application/vnd.kde.kspread\n.ktx,image/ktx\n.ktz,application/vnd.kahootz\n.kwd,application/vnd.kde.kword\n.la,audio/nspaudio\n.la,audio/x-nspaudio\n.lam,audio/x-liveaudio\n.lasxml,application/vnd.las.las+xml\n.latex,application/x-latex\n.lbd,application/vnd.llamagraphics.life-balance.desktop\n.lbe,application/vnd.llamagraphics.life-balance.exchange+xml\n.les,application/vnd.hhe.lesson-player\n.lha,application/lha\n.lha,application/x-lha\n.link66,application/vnd.route66.link66+xml\n.list,text/plain\n.lma,audio/nspaudio\n.lma,audio/x-nspaudio\n.log,text/plain\n.lrm,application/vnd.ms-lrm\n.lsp,application/x-lisp\n.lsp,text/x-script.lisp\n.lst,text/plain\n.lsx,text/x-la-asf\n.ltf,application/vnd.frogans.ltf\n.ltx,application/x-latex\n.lvp,audio/vnd.lucent.voice\n.lwp,application/vnd.lotus-wordpro\n.lzh,application/octet-stream\n.lzh,application/x-lzh\n.lzx,application/lzx\n.lzx,application/octet-stream\n.lzx,application/x-lzx\n.m1v,video/mpeg\n.m21,application/mp21\n.m2a,audio/mpeg\n.m2v,video/mpeg\n.m3u8,application/vnd.apple.mpegurl\n.m3u,audio/x-mpegurl\n.m4a,audio/mp4\n.m4v,video/mp4\n.ma,application/mathematica\n.mads,application/mads+xml\n.mag,application/vnd.ecowin.chart\n.man,application/x-troff-man\n.map,application/x-navimap\n.mar,text/plain\n.mathml,application/mathml+xml\n.mbd,application/mbedlet\n.mbk,application/vnd.mobius.mbk\n.mbox,application/mbox\n.mc1,application/vnd.medcalcdata\n.mc$,application/x-magic-cap-package-1.0\n.mcd,application/mcad\n.mcd,application/vnd.mcd\n.mcd,application/x-mathcad\n.mcf,image/vasa\n.mcf,text/mcf\n.mcp,application/netmc\n.mcurl,text/vnd.curl.mcurl\n.mdb,application/x-msaccess\n.mdi,image/vnd.ms-modi\n.me,application/x-troff-me\n.meta4,application/metalink4+xml\n.mets,application/mets+xml\n.mfm,application/vnd.mfmp\n.mgp,application/vnd.osgeo.mapguide.package\n.mgz,application/vnd.proteus.magazine\n.mht,message/rfc822\n.mhtml,message/rfc822\n.mid,application/x-midi\n.mid,audio/midi\n.mid,audio/x-mid\n.midi,application/x-midi\n.midi,audio/midi\n.midi,audio/x-mid\n.midi,audio/x-midi\n.midi,music/crescendo\n.midi,x-music/x-midi\n.mid,music/crescendo\n.mid,x-music/x-midi\n.mif,application/vnd.mif\n.mif,application/x-frame\n.mif,application/x-mif\n.mime,message/rfc822\n.mime,www/mime\n.mj2,video/mj2\n.mjf,audio/x-vnd.audioexplosion.mjuicemediafile\n.mjpg,video/x-motion-jpeg\n.mkv,video/x-matroska\n.mkv,audio/x-matroska\n.mlp,application/vnd.dolby.mlp\n.mm,application/base64\n.mm,application/x-meme\n.mmd,application/vnd.chipnuts.karaoke-mmd\n.mme,application/base64\n.mmf,application/vnd.smaf\n.mmr,image/vnd.fujixerox.edmics-mmr\n.mny,application/x-msmoney\n.mod,audio/mod\n.mod,audio/x-mod\n.mods,application/mods+xml\n.moov,video/quicktime\n.movie,video/x-sgi-movie\n.mov,video/quicktime\n.mp2,audio/mpeg\n.mp2,audio/x-mpeg\n.mp2,video/mpeg\n.mp2,video/x-mpeg\n.mp2,video/x-mpeq2a\n.mp3,audio/mpeg\n.mp3,audio/mpeg3\n.mp4a,audio/mp4\n.mp4,video/mp4\n.mp4,application/mp4\n.mpa,audio/mpeg\n.mpc,application/vnd.mophun.certificate\n.mpc,application/x-project\n.mpeg,video/mpeg\n.mpe,video/mpeg\n.mpga,audio/mpeg\n.mpg,video/mpeg\n.mpg,audio/mpeg\n.mpkg,application/vnd.apple.installer+xml\n.mpm,application/vnd.blueice.multipass\n.mpn,application/vnd.mophun.application\n.mpp,application/vnd.ms-project\n.mpt,application/x-project\n.mpv,application/x-project\n.mpx,application/x-project\n.mpy,application/vnd.ibm.minipay\n.mqy,application/vnd.mobius.mqy\n.mrc,application/marc\n.mrcx,application/marcxml+xml\n.ms,application/x-troff-ms\n.mscml,application/mediaservercontrol+xml\n.mseq,application/vnd.mseq\n.msf,application/vnd.epson.msf\n.msg,application/vnd.ms-outlook\n.msh,model/mesh\n.msl,application/vnd.mobius.msl\n.msty,application/vnd.muvee.style\n.m,text/plain\n.m,text/x-m\n.mts,model/vnd.mts\n.mus,application/vnd.musician\n.musicxml,application/vnd.recordare.musicxml+xml\n.mvb,application/x-msmediaview\n.mv,video/x-sgi-movie\n.mwf,application/vnd.mfer\n.mxf,application/mxf\n.mxl,application/vnd.recordare.musicxml\n.mxml,application/xv+xml\n.mxs,application/vnd.triscape.mxs\n.mxu,video/vnd.mpegurl\n.my,audio/make\n.mzz,application/x-vnd.audioexplosion.mzz\n.n3,text/n3\nN/A,application/andrew-inset\n.nap,image/naplps\n.naplps,image/naplps\n.nbp,application/vnd.wolfram.player\n.nc,application/x-netcdf\n.ncm,application/vnd.nokia.configuration-message\n.ncx,application/x-dtbncx+xml\n.n-gage,application/vnd.nokia.n-gage.symbian.install\n.ngdat,application/vnd.nokia.n-gage.data\n.niff,image/x-niff\n.nif,image/x-niff\n.nix,application/x-mix-transfer\n.nlu,application/vnd.neurolanguage.nlu\n.nml,application/vnd.enliven\n.nnd,application/vnd.noblenet-directory\n.nns,application/vnd.noblenet-sealer\n.nnw,application/vnd.noblenet-web\n.npx,image/vnd.net-fpx\n.nsc,application/x-conference\n.nsf,application/vnd.lotus-notes\n.nvd,application/x-navidoc\n.oa2,application/vnd.fujitsu.oasys2\n.oa3,application/vnd.fujitsu.oasys3\n.o,application/octet-stream\n.oas,application/vnd.fujitsu.oasys\n.obd,application/x-msbinder\n.oda,application/oda\n.odb,application/vnd.oasis.opendocument.database\n.odc,application/vnd.oasis.opendocument.chart\n.odf,application/vnd.oasis.opendocument.formula\n.odft,application/vnd.oasis.opendocument.formula-template\n.odg,application/vnd.oasis.opendocument.graphics\n.odi,application/vnd.oasis.opendocument.image\n.odm,application/vnd.oasis.opendocument.text-master\n.odp,application/vnd.oasis.opendocument.presentation\n.ods,application/vnd.oasis.opendocument.spreadsheet\n.odt,application/vnd.oasis.opendocument.text\n.oga,audio/ogg\n.ogg,audio/ogg\n.ogv,video/ogg\n.ogx,application/ogg\n.omc,application/x-omc\n.omcd,application/x-omcdatamaker\n.omcr,application/x-omcregerator\n.onetoc,application/onenote\n.opf,application/oebps-package+xml\n.org,application/vnd.lotus-organizer\n.osf,application/vnd.yamaha.openscoreformat\n.osfpvg,application/vnd.yamaha.openscoreformat.osfpvg+xml\n.otc,application/vnd.oasis.opendocument.chart-template\n.otf,application/x-font-otf\n.otg,application/vnd.oasis.opendocument.graphics-template\n.oth,application/vnd.oasis.opendocument.text-web\n.oti,application/vnd.oasis.opendocument.image-template\n.otp,application/vnd.oasis.opendocument.presentation-template\n.ots,application/vnd.oasis.opendocument.spreadsheet-template\n.ott,application/vnd.oasis.opendocument.text-template\n.oxt,application/vnd.openofficeorg.extension\n.p10,application/pkcs10\n.p12,application/pkcs-12\n.p7a,application/x-pkcs7-signature\n.p7b,application/x-pkcs7-certificates\n.p7c,application/pkcs7-mime\n.p7m,application/pkcs7-mime\n.p7r,application/x-pkcs7-certreqresp\n.p7s,application/pkcs7-signature\n.p8,application/pkcs8\n.pages,application/vnd.apple.pages\n.part,application/pro_eng\n.par,text/plain-bas\n.pas,text/pascal\n.paw,application/vnd.pawaafile\n.pbd,application/vnd.powerbuilder6\n.pbm,image/x-portable-bitmap\n.pcf,application/x-font-pcf\n.pcl,application/vnd.hp-pcl\n.pcl,application/x-pcl\n.pclxl,application/vnd.hp-pclxl\n.pct,image/x-pict\n.pcurl,application/vnd.curl.pcurl\n.pcx,image/x-pcx\n.pdb,application/vnd.palm\n.pdb,chemical/x-pdb\n.pdf,application/pdf\n.pem,application/x-pem-file\n.pfa,application/x-font-type1\n.pfr,application/font-tdpfr\n.pfunk,audio/make\n.pfunk,audio/make.my.funk\n.pfx,application/x-pkcs12\n.pgm,image/x-portable-graymap\n.pgn,application/x-chess-pgn\n.pgp,application/pgp-signature\n.pic,image/pict\n.pict,image/pict\n.pkg,application/x-newton-compatible-pkg\n.pki,application/pkixcmp\n.pkipath,application/pkix-pkipath\n.pko,application/vnd.ms-pki.pko\n.plb,application/vnd.3gpp.pic-bw-large\n.plc,application/vnd.mobius.plc\n.plf,application/vnd.pocketlearn\n.pls,application/pls+xml\n.pl,text/plain\n.pl,text/x-script.perl\n.plx,application/x-pixclscript\n.pm4,application/x-pagemaker\n.pm5,application/x-pagemaker\n.pm,image/x-xpixmap\n.pml,application/vnd.ctc-posml\n.pm,text/x-script.perl-module\n.png,image/png\n.pnm,application/x-portable-anymap\n.pnm,image/x-portable-anymap\n.portpkg,application/vnd.macports.portpkg\n.pot,application/mspowerpoint\n.pot,application/vnd.ms-powerpoint\n.potm,application/vnd.ms-powerpoint.template.macroenabled.12\n.potx,application/vnd.openxmlformats-officedocument.presentationml.template\n.pov,model/x-pov\n.ppa,application/vnd.ms-powerpoint\n.ppam,application/vnd.ms-powerpoint.addin.macroenabled.12\n.ppd,application/vnd.cups-ppd\n.ppm,image/x-portable-pixmap\n.pps,application/mspowerpoint\n.pps,application/vnd.ms-powerpoint\n.ppsm,application/vnd.ms-powerpoint.slideshow.macroenabled.12\n.ppsx,application/vnd.openxmlformats-officedocument.presentationml.slideshow\n.ppt,application/mspowerpoint\n.ppt,application/powerpoint\n.ppt,application/vnd.ms-powerpoint\n.ppt,application/x-mspowerpoint\n.pptm,application/vnd.ms-powerpoint.presentation.macroenabled.12\n.pptx,application/vnd.openxmlformats-officedocument.presentationml.presentation\n.ppz,application/mspowerpoint\n.prc,application/x-mobipocket-ebook\n.pre,application/vnd.lotus-freelance\n.pre,application/x-freelance\n.prf,application/pics-rules\n.prt,application/pro_eng\n.ps,application/postscript\n.psb,application/vnd.3gpp.pic-bw-small\n.psd,application/octet-stream\n.psd,image/vnd.adobe.photoshop\n.psf,application/x-font-linux-psf\n.pskcxml,application/pskc+xml\n.p,text/x-pascal\n.ptid,application/vnd.pvi.ptid1\n.pub,application/x-mspublisher\n.pvb,application/vnd.3gpp.pic-bw-var\n.pvu,paleovu/x-pv\n.pwn,application/vnd.3m.post-it-notes\n.pwz,application/vnd.ms-powerpoint\n.pya,audio/vnd.ms-playready.media.pya\n.pyc,application/x-bytecode.python\n.py,text/x-script.python\n.pyv,video/vnd.ms-playready.media.pyv\n.qam,application/vnd.epson.quickanime\n.qbo,application/vnd.intu.qbo\n.qcp,audio/vnd.qcelp\n.qd3d,x-world/x-3dmf\n.qd3,x-world/x-3dmf\n.qfx,application/vnd.intu.qfx\n.qif,image/x-quicktime\n.qps,application/vnd.publishare-delta-tree\n.qtc,video/x-qtc\n.qtif,image/x-quicktime\n.qti,image/x-quicktime\n.qt,video/quicktime\n.qxd,application/vnd.quark.quarkxpress\n.ra,audio/x-pn-realaudio\n.ra,audio/x-pn-realaudio-plugin\n.ra,audio/x-realaudio\n.ram,audio/x-pn-realaudio\n.rar,application/x-rar-compressed\n.ras,application/x-cmu-raster\n.ras,image/cmu-raster\n.ras,image/x-cmu-raster\n.rast,image/cmu-raster\n.rcprofile,application/vnd.ipunplugged.rcprofile\n.rdf,application/rdf+xml\n.rdz,application/vnd.data-vision.rdz\n.rep,application/vnd.businessobjects\n.res,application/x-dtbresource+xml\n.rexx,text/x-script.rexx\n.rf,image/vnd.rn-realflash\n.rgb,image/x-rgb\n.rif,application/reginfo+xml\n.rip,audio/vnd.rip\n.rl,application/resource-lists+xml\n.rlc,image/vnd.fujixerox.edmics-rlc\n.rld,application/resource-lists-diff+xml\n.rm,application/vnd.rn-realmedia\n.rm,audio/x-pn-realaudio\n.rmi,audio/mid\n.rmm,audio/x-pn-realaudio\n.rmp,audio/x-pn-realaudio\n.rmp,audio/x-pn-realaudio-plugin\n.rms,application/vnd.jcp.javame.midlet-rms\n.rnc,application/relax-ng-compact-syntax\n.rng,application/ringing-tones\n.rng,application/vnd.nokia.ringing-tone\n.rnx,application/vnd.rn-realplayer\n.roff,application/x-troff\n.rp9,application/vnd.cloanto.rp9\n.rp,image/vnd.rn-realpix\n.rpm,audio/x-pn-realaudio-plugin\n.rpm,application/x-rpm\n.rpss,application/vnd.nokia.radio-presets\n.rpst,application/vnd.nokia.radio-preset\n.rq,application/sparql-query\n.rs,application/rls-services+xml\n.rsd,application/rsd+xml\n.rss,application/rss+xml\n.rtf,application/rtf\n.rtf,text/rtf\n.rt,text/richtext\n.rt,text/vnd.rn-realtext\n.rtx,application/rtf\n.rtx,text/richtext\n.rv,video/vnd.rn-realvideo\n.s3m,audio/s3m\n.saf,application/vnd.yamaha.smaf-audio\n.saveme,application/octet-stream\n.sbk,application/x-tbook\n.sbml,application/sbml+xml\n.sc,application/vnd.ibm.secure-container\n.scd,application/x-msschedule\n.scm,application/vnd.lotus-screencam\n.scm,application/x-lotusscreencam\n.scm,text/x-script.guile\n.scm,text/x-script.scheme\n.scm,video/x-scm\n.scq,application/scvp-cv-request\n.scs,application/scvp-cv-response\n.scurl,text/vnd.curl.scurl\n.sda,application/vnd.stardivision.draw\n.sdc,application/vnd.stardivision.calc\n.sdd,application/vnd.stardivision.impress\n.sdf,application/octet-stream\n.sdkm,application/vnd.solent.sdkm+xml\n.sdml,text/plain\n.sdp,application/sdp\n.sdp,application/x-sdp\n.sdr,application/sounder\n.sdw,application/vnd.stardivision.writer\n.sea,application/sea\n.sea,application/x-sea\n.see,application/vnd.seemail\n.seed,application/vnd.fdsn.seed\n.sema,application/vnd.sema\n.semd,application/vnd.semd\n.semf,application/vnd.semf\n.ser,application/java-serialized-object\n.set,application/set\n.setpay,application/set-payment-initiation\n.setreg,application/set-registration-initiation\n.sfd-hdstx,application/vnd.hydrostatix.sof-data\n.sfs,application/vnd.spotfire.sfs\n.sgl,application/vnd.stardivision.writer-global\n.sgml,text/sgml\n.sgml,text/x-sgml\n.sgm,text/sgml\n.sgm,text/x-sgml\n.sh,application/x-bsh\n.sh,application/x-sh\n.sh,application/x-shar\n.shar,application/x-bsh\n.shar,application/x-shar\n.shf,application/shf+xml\n.sh,text/x-script.sh\n.shtml,text/html\n.shtml,text/x-server-parsed-html\n.sid,audio/x-psid\n.sis,application/vnd.symbian.install\n.sit,application/x-sit\n.sit,application/x-stuffit\n.sitx,application/x-stuffitx\n.skd,application/x-koan\n.skm,application/x-koan\n.skp,application/vnd.koan\n.skp,application/x-koan\n.skt,application/x-koan\n.sl,application/x-seelogo\n.sldm,application/vnd.ms-powerpoint.slide.macroenabled.12\n.sldx,application/vnd.openxmlformats-officedocument.presentationml.slide\n.slt,application/vnd.epson.salt\n.sm,application/vnd.stepmania.stepchart\n.smf,application/vnd.stardivision.math\n.smi,application/smil\n.smi,application/smil+xml\n.smil,application/smil\n.snd,audio/basic\n.snd,audio/x-adpcm\n.snf,application/x-font-snf\n.sol,application/solids\n.spc,application/x-pkcs7-certificates\n.spc,text/x-speech\n.spf,application/vnd.yamaha.smaf-phrase\n.spl,application/futuresplash\n.spl,application/x-futuresplash\n.spot,text/vnd.in3d.spot\n.spp,application/scvp-vp-response\n.spq,application/scvp-vp-request\n.spr,application/x-sprite\n.sprite,application/x-sprite\n.src,application/x-wais-source\n.srt,text/srt\n.sru,application/sru+xml\n.srx,application/sparql-results+xml\n.sse,application/vnd.kodak-descriptor\n.ssf,application/vnd.epson.ssf\n.ssi,text/x-server-parsed-html\n.ssm,application/streamingmedia\n.ssml,application/ssml+xml\n.sst,application/vnd.ms-pki.certstore\n.st,application/vnd.sailingtracker.track\n.stc,application/vnd.sun.xml.calc.template\n.std,application/vnd.sun.xml.draw.template\n.step,application/step\n.s,text/x-asm\n.stf,application/vnd.wt.stf\n.sti,application/vnd.sun.xml.impress.template\n.stk,application/hyperstudio\n.stl,application/sla\n.stl,application/vnd.ms-pki.stl\n.stl,application/x-navistyle\n.stp,application/step\n.str,application/vnd.pg.format\n.stw,application/vnd.sun.xml.writer.template\n.sub,image/vnd.dvb.subtitle\n.sus,application/vnd.sus-calendar\n.sv4cpio,application/x-sv4cpio\n.sv4crc,application/x-sv4crc\n.svc,application/vnd.dvb.service\n.svd,application/vnd.svd\n.svf,image/vnd.dwg\n.svf,image/x-dwg\n.svg,image/svg+xml\n.svr,application/x-world\n.svr,x-world/x-svr\n.swf,application/x-shockwave-flash\n.swi,application/vnd.aristanetworks.swi\n.sxc,application/vnd.sun.xml.calc\n.sxd,application/vnd.sun.xml.draw\n.sxg,application/vnd.sun.xml.writer.global\n.sxi,application/vnd.sun.xml.impress\n.sxm,application/vnd.sun.xml.math\n.sxw,application/vnd.sun.xml.writer\n.talk,text/x-speech\n.tao,application/vnd.tao.intent-module-archive\n.t,application/x-troff\n.tar,application/x-tar\n.tbk,application/toolbook\n.tbk,application/x-tbook\n.tcap,application/vnd.3gpp2.tcap\n.tcl,application/x-tcl\n.tcl,text/x-script.tcl\n.tcsh,text/x-script.tcsh\n.teacher,application/vnd.smart.teacher\n.tei,application/tei+xml\n.tex,application/x-tex\n.texi,application/x-texinfo\n.texinfo,application/x-texinfo\n.text,text/plain\n.tfi,application/thraud+xml\n.tfm,application/x-tex-tfm\n.tgz,application/gnutar\n.tgz,application/x-compressed\n.thmx,application/vnd.ms-officetheme\n.tiff,image/tiff\n.tif,image/tiff\n.tmo,application/vnd.tmobile-livetv\n.torrent,application/x-bittorrent\n.tpl,application/vnd.groove-tool-template\n.tpt,application/vnd.trid.tpt\n.tra,application/vnd.trueapp\n.tr,application/x-troff\n.trm,application/x-msterminal\n.tsd,application/timestamped-data\n.tsi,audio/tsp-audio\n.tsp,application/dsptype\n.tsp,audio/tsplayer\n.tsv,text/tab-separated-values\n.t,text/troff\n.ttf,application/x-font-ttf\n.ttl,text/turtle\n.turbot,image/florian\n.twd,application/vnd.simtech-mindmapper\n.txd,application/vnd.genomatix.tuxedo\n.txf,application/vnd.mobius.txf\n.txt,text/plain\n.ufd,application/vnd.ufdl\n.uil,text/x-uil\n.umj,application/vnd.umajin\n.unis,text/uri-list\n.uni,text/uri-list\n.unityweb,application/vnd.unity\n.unv,application/i-deas\n.uoml,application/vnd.uoml+xml\n.uris,text/uri-list\n.uri,text/uri-list\n.ustar,application/x-ustar\n.ustar,multipart/x-ustar\n.utz,application/vnd.uiq.theme\n.uu,application/octet-stream\n.uue,text/x-uuencode\n.uu,text/x-uuencode\n.uva,audio/vnd.dece.audio\n.uvh,video/vnd.dece.hd\n.uvi,image/vnd.dece.graphic\n.uvm,video/vnd.dece.mobile\n.uvp,video/vnd.dece.pd\n.uvs,video/vnd.dece.sd\n.uvu,video/vnd.uvvu.mp4\n.uvv,video/vnd.dece.video\n.vcd,application/x-cdlink\n.vcf,text/x-vcard\n.vcg,application/vnd.groove-vcard\n.vcs,text/x-vcalendar\n.vcx,application/vnd.vcx\n.vda,application/vda\n.vdo,video/vdo\n.vew,application/groupwise\n.vis,application/vnd.visionary\n.vivo,video/vivo\n.vivo,video/vnd.vivo\n.viv,video/vivo\n.viv,video/vnd.vivo\n.vmd,application/vocaltec-media-desc\n.vmf,application/vocaltec-media-file\n.vob,video/dvd\n.voc,audio/voc\n.voc,audio/x-voc\n.vos,video/vosaic\n.vox,audio/voxware\n.vqe,audio/x-twinvq-plugin\n.vqf,audio/x-twinvq\n.vql,audio/x-twinvq-plugin\n.vrml,application/x-vrml\n.vrml,model/vrml\n.vrml,x-world/x-vrml\n.vrt,x-world/x-vrt\n.vsd,application/vnd.visio\n.vsd,application/x-visio\n.vsf,application/vnd.vsf\n.vst,application/x-visio\n.vsw,application/x-visio\n.vtt,text/vtt\n.vtu,model/vnd.vtu\n.vxml,application/voicexml+xml\n.w60,application/wordperfect6.0\n.w61,application/wordperfect6.1\n.w6w,application/msword\n.wad,application/x-doom\n.war,application/zip\n.wasm,application/wasm\n.wav,audio/wav\n.wax,audio/x-ms-wax\n.wb1,application/x-qpro\n.wbmp,image/vnd.wap.wbmp\n.wbs,application/vnd.criticaltools.wbs+xml\n.wbxml,application/vnd.wap.wbxml\n.weba,audio/webm\n.web,application/vnd.xara\n.webm,video/webm\n.webp,image/webp\n.wg,application/vnd.pmi.widget\n.wgt,application/widget\n.wiz,application/msword\n.wk1,application/x-123\n.wma,audio/x-ms-wma\n.wmd,application/x-ms-wmd\n.wmf,application/x-msmetafile\n.wmf,windows/metafile\n.wmlc,application/vnd.wap.wmlc\n.wmlsc,application/vnd.wap.wmlscriptc\n.wmls,text/vnd.wap.wmlscript\n.wml,text/vnd.wap.wml\n.wm,video/x-ms-wm\n.wmv,video/x-ms-wmv\n.wmx,video/x-ms-wmx\n.wmz,application/x-ms-wmz\n.woff,application/x-font-woff\n.word,application/msword\n.wp5,application/wordperfect\n.wp5,application/wordperfect6.0\n.wp6,application/wordperfect\n.wp,application/wordperfect\n.wpd,application/vnd.wordperfect\n.wpd,application/wordperfect\n.wpd,application/x-wpwin\n.wpl,application/vnd.ms-wpl\n.wps,application/vnd.ms-works\n.wq1,application/x-lotus\n.wqd,application/vnd.wqd\n.wri,application/mswrite\n.wri,application/x-mswrite\n.wri,application/x-wri\n.wrl,application/x-world\n.wrl,model/vrml\n.wrl,x-world/x-vrml\n.wrz,model/vrml\n.wrz,x-world/x-vrml\n.wsc,text/scriplet\n.wsdl,application/wsdl+xml\n.wspolicy,application/wspolicy+xml\n.wsrc,application/x-wais-source\n.wtb,application/vnd.webturbo\n.wtk,application/x-wintalk\n.wvx,video/x-ms-wvx\n.x3d,application/vnd.hzn-3d-crossword\n.xap,application/x-silverlight-app\n.xar,application/vnd.xara\n.xbap,application/x-ms-xbap\n.xbd,application/vnd.fujixerox.docuworks.binder\n.xbm,image/xbm\n.xbm,image/x-xbitmap\n.xbm,image/x-xbm\n.xdf,application/xcap-diff+xml\n.xdm,application/vnd.syncml.dm+xml\n.xdp,application/vnd.adobe.xdp+xml\n.xdr,video/x-amt-demorun\n.xdssc,application/dssc+xml\n.xdw,application/vnd.fujixerox.docuworks\n.xenc,application/xenc+xml\n.xer,application/patch-ops-error+xml\n.xfdf,application/vnd.adobe.xfdf\n.xfdl,application/vnd.xfdl\n.xgz,xgl/drawing\n.xhtml,application/xhtml+xml\n.xif,image/vnd.xiff\n.xla,application/excel\n.xla,application/x-excel\n.xla,application/x-msexcel\n.xlam,application/vnd.ms-excel.addin.macroenabled.12\n.xl,application/excel\n.xlb,application/excel\n.xlb,application/vnd.ms-excel\n.xlb,application/x-excel\n.xlc,application/excel\n.xlc,application/vnd.ms-excel\n.xlc,application/x-excel\n.xld,application/excel\n.xld,application/x-excel\n.xlk,application/excel\n.xlk,application/x-excel\n.xll,application/excel\n.xll,application/vnd.ms-excel\n.xll,application/x-excel\n.xlm,application/excel\n.xlm,application/vnd.ms-excel\n.xlm,application/x-excel\n.xls,application/excel\n.xls,application/vnd.ms-excel\n.xls,application/x-excel\n.xls,application/x-msexcel\n.xlsb,application/vnd.ms-excel.sheet.binary.macroenabled.12\n.xlsm,application/vnd.ms-excel.sheet.macroenabled.12\n.xlsx,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n.xlt,application/excel\n.xlt,application/x-excel\n.xltm,application/vnd.ms-excel.template.macroenabled.12\n.xltx,application/vnd.openxmlformats-officedocument.spreadsheetml.template\n.xlv,application/excel\n.xlv,application/x-excel\n.xlw,application/excel\n.xlw,application/vnd.ms-excel\n.xlw,application/x-excel\n.xlw,application/x-msexcel\n.xm,audio/xm\n.xml,application/xml\n.xml,text/xml\n.xmz,xgl/movie\n.xo,application/vnd.olpc-sugar\n.xop,application/xop+xml\n.xpi,application/x-xpinstall\n.xpix,application/x-vnd.ls-xpix\n.xpm,image/xpm\n.xpm,image/x-xpixmap\n.x-png,image/png\n.xpr,application/vnd.is-xpr\n.xps,application/vnd.ms-xpsdocument\n.xpw,application/vnd.intercon.formnet\n.xslt,application/xslt+xml\n.xsm,application/vnd.syncml+xml\n.xspf,application/xspf+xml\n.xsr,video/x-amt-showrun\n.xul,application/vnd.mozilla.xul+xml\n.xwd,image/x-xwd\n.xwd,image/x-xwindowdump\n.xyz,chemical/x-pdb\n.xyz,chemical/x-xyz\n.xz,application/x-xz\n.yaml,text/yaml\n.yang,application/yang\n.yin,application/yin+xml\n.z,application/x-compress\n.z,application/x-compressed\n.zaz,application/vnd.zzazz.deck+xml\n.zip,application/zip\n.zip,application/x-compressed\n.zip,application/x-zip-compressed\n.zip,multipart/x-zip\n.zir,application/vnd.zul\n.zmm,application/vnd.handheld-entertainment+xml\n.zoo,application/octet-stream\n.zsh,text/x-script.zsh\n';
  }
  function _no_name_provided__111() {
  }
  _no_name_provided__111.prototype.invoke_411 = function () {
    return loadMimes();
  };
  _no_name_provided__111.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__112() {
  }
  _no_name_provided__112.prototype.invoke_414 = function (it) {
    var line = toString_1(trim(isCharSequence(it) ? it : THROW_CCE()));
    if (charSequenceLength(line) === 0)
      return null;
    else {
    }
    var tmp = new Char(44);
    var index = indexOf$default(line, tmp, 0, false, 6, null);
    var tmp0_substring_0 = 0;
    var extension = line.substring(tmp0_substring_0, index);
    var tmp1_substring_0 = index + 1 | 0;
    var mime = line.substring(tmp1_substring_0);
    return to(toLowerCasePreservingASCIIRules(removePrefix(extension, '.')), toContentType(mime));
  };
  _no_name_provided__112.prototype.invoke_420 = function (p1) {
    return this.invoke_414((!(p1 == null) ? typeof p1 === 'string' : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__112.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function mimes$factory() {
    return getPropertyCallableRef('mimes', 0, KProperty0, function () {
      return _get_mimes_();
    }, null);
  }
  function _no_name_provided_$factory_81() {
    var i = new _no_name_provided__111();
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_82() {
    var i = new _no_name_provided__112();
    return function (p1) {
      return i.invoke_414(p1);
    };
  }
  function ParametersBuilder_init_$Init$(size_0, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      size_0 = 8;
    ParametersBuilder.call($this, size_0);
    return $this;
  }
  function ParametersBuilder_init_$Create$(size_0, $mask0, $marker) {
    return ParametersBuilder_init_$Init$(size_0, $mask0, $marker, Object.create(ParametersBuilder.prototype));
  }
  function ParametersBuilder(size_0) {
    StringValuesBuilder.call(this, true, size_0);
  }
  ParametersBuilder.prototype.build_17 = function () {
    var tmp0_require_0 = !this._get_built__1();
    if (!tmp0_require_0) {
      var message_1 = 'ParametersBuilder can only build a single Parameters instance';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }this._set_built__1(true);
    return new ParametersImpl(this._get_values__14());
  };
  ParametersBuilder.$metadata$ = {
    simpleName: 'ParametersBuilder',
    kind: 'class',
    interfaces: []
  };
  function Companion_37() {
    Companion_instance_36 = this;
    this._Empty_3 = EmptyParameters_getInstance();
  }
  Companion_37.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_36;
  function Companion_getInstance_36() {
    if (Companion_instance_36 == null)
      new Companion_37();
    return Companion_instance_36;
  }
  function Parameters() {
  }
  Parameters.$metadata$ = {
    simpleName: 'Parameters',
    kind: 'interface',
    interfaces: [StringValues]
  };
  function ParametersImpl(values_4) {
    StringValuesImpl.call(this, true, values_4);
  }
  ParametersImpl.prototype.toString = function () {
    return '' + 'Parameters ' + this.entries_10();
  };
  ParametersImpl.$metadata$ = {
    simpleName: 'ParametersImpl',
    kind: 'class',
    interfaces: [Parameters]
  };
  function EmptyParameters() {
    EmptyParameters_instance = this;
  }
  EmptyParameters.prototype._get_caseInsensitiveName__4 = function () {
    return true;
  };
  EmptyParameters.prototype.getAll_8 = function (name) {
    return null;
  };
  EmptyParameters.prototype.entries_10 = function () {
    return emptySet();
  };
  EmptyParameters.prototype.isEmpty_50 = function () {
    return true;
  };
  EmptyParameters.prototype.toString = function () {
    return '' + 'Parameters ' + this.entries_10();
  };
  EmptyParameters.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Parameters) : false) {
      tmp = other.isEmpty_50();
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  EmptyParameters.$metadata$ = {
    simpleName: 'EmptyParameters',
    kind: 'object',
    interfaces: [Parameters]
  };
  var EmptyParameters_instance;
  function EmptyParameters_getInstance() {
    if (EmptyParameters_instance == null)
      new EmptyParameters();
    return EmptyParameters_instance;
  }
  function parseQueryString(query, startIndex, limit) {
    var tmp;
    if (startIndex > _get_lastIndex__1(query)) {
      tmp = Companion_getInstance_36()._Empty_3;
    } else {
      var tmp0_build_0 = Companion_getInstance_36();
      var tmp0_apply_0_1 = ParametersBuilder_init_$Create$(0, 1, null);
      parse(tmp0_apply_0_1, query, startIndex, limit);
      tmp = tmp0_apply_0_1.build_17();
    }
    return tmp;
  }
  function parseQueryString$default(query, startIndex, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      limit = 1000;
    return parseQueryString(query, startIndex, limit);
  }
  function parse(_this_, query, startIndex, limit) {
    var count_0 = 0;
    var nameIndex = startIndex;
    var equalIndex = -1;
    var inductionVariable = startIndex;
    var last_1 = _get_lastIndex__1(query);
    if (inductionVariable <= last_1)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (count_0 === limit) {
          return Unit_getInstance();
        }var tmp1_subject = charSequenceGet(query, index);
        if (tmp1_subject.equals(new Char(38))) {
          appendParam(_this_, query, nameIndex, equalIndex, index);
          nameIndex = index + 1 | 0;
          equalIndex = -1;
          var tmp2 = count_0;
          count_0 = tmp2 + 1 | 0;
          Unit_getInstance();
        } else if (tmp1_subject.equals(new Char(61))) {
          if (equalIndex === -1) {
            equalIndex = index;
          }}}
       while (!(index === last_1));
    if (count_0 === limit) {
      return Unit_getInstance();
    }appendParam(_this_, query, nameIndex, equalIndex, query.length);
  }
  function appendParam(_this_, query, nameIndex, equalIndex, endIndex) {
    if (equalIndex === -1) {
      var spaceNameIndex = trimStart(nameIndex, endIndex, query);
      var spaceEndIndex = trimEnd(spaceNameIndex, endIndex, query);
      if (spaceEndIndex > spaceNameIndex) {
        var name = decodeURLQueryComponent$default(query, spaceNameIndex, spaceEndIndex, false, null, 12, null);
        _this_.appendAll_3(name, emptyList());
      }} else {
      var spaceNameIndex_0 = trimStart(nameIndex, equalIndex, query);
      var spaceEqualIndex = trimEnd(spaceNameIndex_0, equalIndex, query);
      if (spaceEqualIndex > spaceNameIndex_0) {
        var name_0 = decodeURLQueryComponent$default(query, spaceNameIndex_0, spaceEqualIndex, false, null, 12, null);
        var spaceValueIndex = trimStart(equalIndex + 1 | 0, endIndex, query);
        var spaceEndIndex_0 = trimEnd(spaceValueIndex, endIndex, query);
        var value = decodeURLQueryComponent$default(query, spaceValueIndex, spaceEndIndex_0, true, null, 8, null);
        _this_.append_26(name_0, value);
      }}
  }
  function trimStart(start, end, query) {
    var spaceIndex = start;
    while (spaceIndex < end ? isWhitespace(charSequenceGet(query, spaceIndex)) : false) {
      var tmp0 = spaceIndex;
      spaceIndex = tmp0 + 1 | 0;
      Unit_getInstance();
    }
    return spaceIndex;
  }
  function trimEnd(start, end, text) {
    var spaceIndex = end;
    while (spaceIndex > start ? isWhitespace(charSequenceGet(text, spaceIndex - 1 | 0)) : false) {
      var tmp0 = spaceIndex;
      spaceIndex = tmp0 - 1 | 0;
      Unit_getInstance();
    }
    return spaceIndex;
  }
  function URLBuilder_init_$Init$(protocol, host, port, user, password, encodedPath, parameters, fragment, trailingQuery, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      protocol = Companion_getInstance_39()._HTTP;
    if (!(($mask0 & 2) === 0))
      host = 'localhost';
    if (!(($mask0 & 4) === 0))
      port = 0;
    if (!(($mask0 & 8) === 0))
      user = null;
    if (!(($mask0 & 16) === 0))
      password = null;
    if (!(($mask0 & 32) === 0))
      encodedPath = '/';
    if (!(($mask0 & 64) === 0)) {
      parameters = ParametersBuilder_init_$Create$(0, 1, null);
    }if (!(($mask0 & 128) === 0))
      fragment = '';
    if (!(($mask0 & 256) === 0))
      trailingQuery = false;
    URLBuilder.call($this, protocol, host, port, user, password, encodedPath, parameters, fragment, trailingQuery);
    return $this;
  }
  function URLBuilder_init_$Create$(protocol, host, port, user, password, encodedPath, parameters, fragment, trailingQuery, $mask0, $marker) {
    return URLBuilder_init_$Init$(protocol, host, port, user, password, encodedPath, parameters, fragment, trailingQuery, $mask0, $marker, Object.create(URLBuilder.prototype));
  }
  function appendTo($this, out) {
    out.append_22($this._protocol._name_6);
    Unit_getInstance();
    var tmp0_subject = $this._protocol._name_6;
    if (tmp0_subject === 'file') {
      appendFile(out, $this._host, $this._encodedPath);
      return out;
    } else if (tmp0_subject === 'mailto') {
      appendMailto(out, _get_userAndPassword_($this), $this._encodedPath);
      return out;
    }out.append_22('://');
    Unit_getInstance();
    out.append_22(_get_authority__0($this));
    Unit_getInstance();
    appendUrlFullPath(out, $this._encodedPath, $this._parameters_0, $this._trailingQuery);
    var tmp0_isNotEmpty_0 = $this._fragment;
    if (charSequenceLength(tmp0_isNotEmpty_0) > 0) {
      out.append_23(new Char(35));
      Unit_getInstance();
      var tmp = $this._fragment;
      out.append_22(encodeURLQueryComponent$default(tmp, false, false, null, 7, null));
      Unit_getInstance();
    } else {
    }
    return out;
  }
  function Companion_38() {
    Companion_instance_37 = this;
  }
  Companion_38.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_37;
  function Companion_getInstance_37() {
    if (Companion_instance_37 == null)
      new Companion_38();
    return Companion_instance_37;
  }
  function URLBuilder(protocol, host, port, user, password, encodedPath, parameters, fragment, trailingQuery) {
    Companion_getInstance_37();
    this._protocol = protocol;
    this._host = host;
    this._port = port;
    this._user = user;
    this._password = password;
    this._encodedPath = encodedPath;
    this._parameters_0 = parameters;
    this._fragment = fragment;
    this._trailingQuery = trailingQuery;
    var tmp0_safe_receiver = _get_originHost_(Companion_getInstance_37());
    if (tmp0_safe_receiver == null)
      null;
    else {
      takeFrom(this, tmp0_safe_receiver);
    }
    Unit_getInstance();
    var tmp0_isEmpty_0 = this._encodedPath;
    if (charSequenceLength(tmp0_isEmpty_0) === 0) {
      this._encodedPath = '/';
    } else {
    }
  }
  URLBuilder.prototype.buildString = function () {
    return appendTo(this, StringBuilder_init_$Create$(256)).toString();
  };
  URLBuilder.prototype.build_17 = function () {
    return new Url(this._protocol, this._host, this._port, this._encodedPath, this._parameters_0.build_17(), this._fragment, this._user, this._password, this._trailingQuery);
  };
  URLBuilder.$metadata$ = {
    simpleName: 'URLBuilder',
    kind: 'class',
    interfaces: []
  };
  function Companion_39() {
    Companion_instance_38 = this;
  }
  Companion_39.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_38;
  function Companion_getInstance_38() {
    if (Companion_instance_38 == null)
      new Companion_39();
    return Companion_instance_38;
  }
  function Url(protocol, host, specifiedPort, encodedPath, parameters, fragment, user, password, trailingQuery) {
    Companion_getInstance_38();
    this._protocol_0 = protocol;
    this._host_0 = host;
    this._specifiedPort = specifiedPort;
    this._encodedPath_0 = encodedPath;
    this._parameters_1 = parameters;
    this._fragment_0 = fragment;
    this._user_0 = user;
    this._password_0 = password;
    this._trailingQuery_0 = trailingQuery;
    var tmp;
    var containsArg = this._specifiedPort;
    if (1 <= containsArg ? containsArg <= 65536 : false) {
      tmp = true;
    } else {
      {
        tmp = this._specifiedPort === 0;
      }
    }
    var tmp0_require_0 = tmp;
    if (!tmp0_require_0) {
      var message_1 = 'port must be between 1 and 65536, or 0 if not set';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }}
  Url.prototype._get_port__1 = function () {
    var tmp0_takeUnless_0 = this._specifiedPort;
    var tmp;
    if (!(tmp0_takeUnless_0 === 0)) {
      tmp = tmp0_takeUnless_0;
    } else {
      {
        tmp = null;
      }
    }
    var tmp0_elvis_lhs = tmp;
    return tmp0_elvis_lhs == null ? this._protocol_0._defaultPort : tmp0_elvis_lhs;
  };
  Url.prototype.toString = function () {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    var tmp$ret$0;
    l$ret$1: do {
      tmp0_apply_0_1.append_6(this._protocol_0._name_6);
      Unit_getInstance();
      var tmp0_subject_3 = this._protocol_0._name_6;
      if (tmp0_subject_3 === 'file') {
        appendFile(tmp0_apply_0_1, this._host_0, this._encodedPath_0);
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else if (tmp0_subject_3 === 'mailto') {
        var tmp1_elvis_lhs_5 = this._user_0;
        var tmp;
        if (tmp1_elvis_lhs_5 == null) {
          var tmp0_error_0_6 = "User can't be empty.";
          throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0_6));
        } else {
          tmp = tmp1_elvis_lhs_5;
        }
        var userValue_4 = tmp;
        appendMailto(tmp0_apply_0_1, userValue_4, this._host_0);
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      }tmp0_apply_0_1.append_6('://');
      Unit_getInstance();
      tmp0_apply_0_1.append_6(_get_authority_(this));
      Unit_getInstance();
      tmp0_apply_0_1.append_6(_get_fullPath_(this));
      Unit_getInstance();
      var tmp1_isNotEmpty_0_7 = this._fragment_0;
      if (charSequenceLength(tmp1_isNotEmpty_0_7) > 0) {
        tmp0_apply_0_1.append_23(new Char(35));
        Unit_getInstance();
        tmp0_apply_0_1.append_6(this._fragment_0);
        Unit_getInstance();
      } else {
      }
    }
     while (false);
    return tmp0_apply_0_1.toString();
  };
  Url.prototype.hashCode = function () {
    var result = this._protocol_0.hashCode();
    result = imul(result, 31) + getStringHashCode(this._host_0) | 0;
    result = imul(result, 31) + this._specifiedPort | 0;
    result = imul(result, 31) + getStringHashCode(this._encodedPath_0) | 0;
    result = imul(result, 31) + hashCode(this._parameters_1) | 0;
    result = imul(result, 31) + getStringHashCode(this._fragment_0) | 0;
    result = imul(result, 31) + (this._user_0 == null ? 0 : getStringHashCode(this._user_0)) | 0;
    result = imul(result, 31) + (this._password_0 == null ? 0 : getStringHashCode(this._password_0)) | 0;
    result = imul(result, 31) + (this._trailingQuery_0 | 0) | 0;
    return result;
  };
  Url.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Url))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Url ? other : THROW_CCE();
    if (!this._protocol_0.equals(tmp0_other_with_cast._protocol_0))
      return false;
    if (!(this._host_0 === tmp0_other_with_cast._host_0))
      return false;
    if (!(this._specifiedPort === tmp0_other_with_cast._specifiedPort))
      return false;
    if (!(this._encodedPath_0 === tmp0_other_with_cast._encodedPath_0))
      return false;
    if (!equals_1(this._parameters_1, tmp0_other_with_cast._parameters_1))
      return false;
    if (!(this._fragment_0 === tmp0_other_with_cast._fragment_0))
      return false;
    if (!(this._user_0 == tmp0_other_with_cast._user_0))
      return false;
    if (!(this._password_0 == tmp0_other_with_cast._password_0))
      return false;
    if (!(this._trailingQuery_0 === tmp0_other_with_cast._trailingQuery_0))
      return false;
    return true;
  };
  Url.$metadata$ = {
    simpleName: 'Url',
    kind: 'class',
    interfaces: []
  };
  function _get_authority_(_this_) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    tmp0_apply_0_1.append_6(_get_userAndPassword__0(_this_));
    Unit_getInstance();
    if (_this_._specifiedPort === 0) {
      tmp0_apply_0_1.append_6(_this_._host_0);
      Unit_getInstance();
    } else {
      tmp0_apply_0_1.append_6(_get_hostWithPort_(_this_));
      Unit_getInstance();
    }
    return tmp0_apply_0_1.toString();
  }
  function _get_authority__0(_this_) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    tmp0_apply_0_1.append_6(_get_userAndPassword_(_this_));
    Unit_getInstance();
    tmp0_apply_0_1.append_6(_this_._host);
    Unit_getInstance();
    if (!(_this_._port === 0) ? !(_this_._port === _this_._protocol._defaultPort) : false) {
      tmp0_apply_0_1.append_6(':');
      Unit_getInstance();
      tmp0_apply_0_1.append_6(_this_._port.toString());
      Unit_getInstance();
    }return tmp0_apply_0_1.toString();
  }
  function appendFile(_this_, host, encodedPath) {
    _this_.append_22('://');
    Unit_getInstance();
    _this_.append_22(host);
    Unit_getInstance();
    _this_.append_22(encodedPath);
    Unit_getInstance();
  }
  function appendMailto(_this_, user, host) {
    _this_.append_22(':');
    Unit_getInstance();
    _this_.append_22(encodeURLParameter$default(user, false, 1, null));
    Unit_getInstance();
    _this_.append_23(new Char(64));
    Unit_getInstance();
    _this_.append_22(host);
    Unit_getInstance();
  }
  function _get_userAndPassword_(_this_) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    appendUserAndPassword(tmp0_apply_0_1, _this_._user, _this_._password);
    return tmp0_apply_0_1.toString();
  }
  function _get_userAndPassword__0(_this_) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    appendUserAndPassword(tmp0_apply_0_1, _this_._user_0, _this_._password_0);
    return tmp0_apply_0_1.toString();
  }
  function appendUserAndPassword(_this_, user, password) {
    var tmp0_elvis_lhs = user;
    if (tmp0_elvis_lhs == null)
      return Unit_getInstance();
    else
      tmp0_elvis_lhs;
    Unit_getInstance();
    _this_.append_6(encodeURLParameter$default(user, false, 1, null));
    Unit_getInstance();
    if (!(password == null)) {
      _this_.append_23(new Char(58));
      Unit_getInstance();
      _this_.append_6(encodeURLParameter$default(password, false, 1, null));
      Unit_getInstance();
    }_this_.append_6('@');
    Unit_getInstance();
  }
  function takeFrom(_this_, urlString) {
    var tmp;
    try {
      tmp = takeFromUnsafe(_this_, urlString);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        throw new URLParserException(urlString, $p);
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function takeFromUnsafe(_this_, urlString) {
    var tmp$ret$0;
    l$ret$1: do {
      var inductionVariable = 0;
      var last_1 = charSequenceLength(urlString) - 1 | 0;
      if (inductionVariable <= last_1)
        do {
          var index_2 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp0__anonymous__3 = charSequenceGet(urlString, index_2);
          if (!isWhitespace(tmp0__anonymous__3)) {
            tmp$ret$0 = index_2;
            break l$ret$1;
          } else {
          }
        }
         while (inductionVariable <= last_1);
      tmp$ret$0 = -1;
    }
     while (false);
    var startIndex = tmp$ret$0;
    var tmp$ret$2;
    l$ret$3: do {
      var inductionVariable_0 = charSequenceLength(urlString) - 1 | 0;
      if (0 <= inductionVariable_0)
        do {
          var index_2_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + -1 | 0;
          var tmp1__anonymous__3 = charSequenceGet(urlString, index_2_0);
          if (!isWhitespace(tmp1__anonymous__3)) {
            tmp$ret$2 = index_2_0;
            break l$ret$3;
          } else {
          }
        }
         while (0 <= inductionVariable_0);
      tmp$ret$2 = -1;
    }
     while (false);
    var endIndex = tmp$ret$2 + 1 | 0;
    var schemeLength = findScheme(urlString, startIndex, endIndex);
    if (schemeLength > 0) {
      var tmp2_substring_0 = startIndex;
      var tmp3_substring_0 = startIndex + schemeLength | 0;
      var scheme = urlString.substring(tmp2_substring_0, tmp3_substring_0);
      _this_._protocol = Companion_getInstance_39().createOrDefault(scheme);
      startIndex = startIndex + (schemeLength + 1 | 0) | 0;
    }var slashCount = count(urlString, startIndex, endIndex, new Char(47));
    startIndex = startIndex + slashCount | 0;
    if (_this_._protocol._name_6 === 'file') {
      parseFile(_this_, urlString, startIndex, endIndex, slashCount);
      return _this_;
    }if (_this_._protocol._name_6 === 'mailto') {
      var tmp4_require_0 = slashCount === 0;
      if (!tmp4_require_0) {
        var message_2_1 = 'Failed requirement.';
        throw IllegalArgumentException_init_$Create$_0(toString_1(message_2_1));
      }parseMailto(_this_, urlString, startIndex, endIndex);
      return _this_;
    }if (slashCount >= 2) {
      loop: while (true) {
        var tmp = toCharArray('@/\\?#');
        var tmp_0 = startIndex;
        var tmp5_takeIf_0 = indexOfAny$default(urlString, tmp, tmp_0, false, 4, null);
        var tmp_1;
        if (tmp5_takeIf_0 > 0) {
          tmp_1 = tmp5_takeIf_0;
        } else {
          {
            tmp_1 = null;
          }
        }
        var tmp0_elvis_lhs = tmp_1;
        var delimiter = tmp0_elvis_lhs == null ? endIndex : tmp0_elvis_lhs;
        if (delimiter < endIndex ? charSequenceGet(urlString, delimiter).equals(new Char(64)) : false) {
          var passwordIndex = indexOfColonInHostPort(urlString, startIndex, delimiter);
          if (!(passwordIndex === -1)) {
            var tmp_2 = _this_;
            var tmp6_substring_0 = startIndex;
            var tmp_3 = urlString.substring(tmp6_substring_0, passwordIndex);
            tmp_2._user = decodeURLPart$default(tmp_3, 0, 0, null, 7, null);
            var tmp_4 = _this_;
            var tmp7_substring_0 = passwordIndex + 1 | 0;
            var tmp_5 = urlString.substring(tmp7_substring_0, delimiter);
            tmp_4._password = decodeURLPart$default(tmp_5, 0, 0, null, 7, null);
          } else {
            var tmp_6 = _this_;
            var tmp8_substring_0 = startIndex;
            var tmp_7 = urlString.substring(tmp8_substring_0, delimiter);
            tmp_6._user = decodeURLPart$default(tmp_7, 0, 0, null, 7, null);
          }
          startIndex = delimiter + 1 | 0;
        } else {
          fillHost(_this_, urlString, startIndex, delimiter);
          startIndex = delimiter;
          break loop;
        }
      }
    }if (startIndex >= endIndex) {
      _this_._encodedPath = charSequenceGet(urlString, endIndex - 1 | 0).equals(new Char(47)) ? '/' : '';
      return _this_;
    }var tmp_8 = _this_;
    var tmp_9;
    if (slashCount === 0) {
      var tmp_10 = _this_._encodedPath;
      var tmp_11 = new Char(47);
      var lastSlashIndex = lastIndexOf$default_0(tmp_10, tmp_11, 0, false, 6, null);
      var tmp_12;
      if (!(lastSlashIndex === (_this_._encodedPath.length - 1 | 0))) {
        var tmp_13;
        if (!(lastSlashIndex === -1)) {
          var tmp9_substring_0 = _this_._encodedPath;
          var tmp10_substring_0 = 0;
          var tmp11_substring_0 = lastSlashIndex + 1 | 0;
          tmp_13 = tmp9_substring_0.substring(tmp10_substring_0, tmp11_substring_0);
        } else {
          tmp_13 = '/';
        }
        tmp_12 = tmp_13;
      } else {
        tmp_12 = _this_._encodedPath;
      }
      tmp_9 = tmp_12;
    } else {
      tmp_9 = '';
    }
    tmp_8._encodedPath = tmp_9;
    var tmp_14 = toCharArray('?#');
    var tmp_15 = startIndex;
    var tmp12_takeIf_0 = indexOfAny$default(urlString, tmp_14, tmp_15, false, 4, null);
    var tmp_16;
    if (tmp12_takeIf_0 > 0) {
      tmp_16 = tmp12_takeIf_0;
    } else {
      {
        tmp_16 = null;
      }
    }
    var tmp1_elvis_lhs = tmp_16;
    var pathEnd = tmp1_elvis_lhs == null ? endIndex : tmp1_elvis_lhs;
    var tmp13_substring_0 = startIndex;
    var rawPath = urlString.substring(tmp13_substring_0, pathEnd);
    var tmp2_this = _this_;
    tmp2_this._encodedPath = tmp2_this._encodedPath + encodeURLPath(rawPath);
    startIndex = pathEnd;
    if (startIndex < endIndex ? charSequenceGet(urlString, startIndex).equals(new Char(63)) : false) {
      startIndex = parseQuery(_this_, urlString, startIndex, endIndex);
    }parseFragment(_this_, urlString, startIndex, endIndex);
    return _this_;
  }
  function URLParserException(urlString, cause) {
    IllegalStateException_init_$Init$_1('' + 'Fail to parse url: ' + urlString, cause, this);
    captureStack(this, URLParserException);
  }
  URLParserException.$metadata$ = {
    simpleName: 'URLParserException',
    kind: 'class',
    interfaces: []
  };
  function findScheme(urlString, startIndex, endIndex) {
    var current = startIndex;
    var incorrectSchemePosition = -1;
    var firstChar = charSequenceGet(urlString, current);
    if (!(new Char(97) <= firstChar ? firstChar <= new Char(122) : false) ? !(new Char(65) <= firstChar ? firstChar <= new Char(90) : false) : false) {
      incorrectSchemePosition = current;
    }while (current < endIndex) {
      var char = charSequenceGet(urlString, current);
      if (char.equals(new Char(58))) {
        if (!(incorrectSchemePosition === -1)) {
          throw IllegalArgumentException_init_$Create$_0('' + 'Illegal character in scheme at position ' + incorrectSchemePosition);
        }return current - startIndex | 0;
      }if ((char.equals(new Char(47)) ? true : char.equals(new Char(63))) ? true : char.equals(new Char(35)))
        return -1;
      if ((((((incorrectSchemePosition === -1 ? !(new Char(97) <= char ? char <= new Char(122) : false) : false) ? !(new Char(65) <= char ? char <= new Char(90) : false) : false) ? !(new Char(48) <= char ? char <= new Char(57) : false) : false) ? !char.equals(new Char(46)) : false) ? !char.equals(new Char(43)) : false) ? !char.equals(new Char(45)) : false) {
        incorrectSchemePosition = current;
      }current = current + 1 | 0;
      Unit_getInstance();
    }
    return -1;
  }
  function count(urlString, startIndex, endIndex, char) {
    var result = 0;
    $l$break: while ((startIndex + result | 0) < endIndex) {
      if (!charSequenceGet(urlString, startIndex + result | 0).equals(char))
        break $l$break;
      var tmp0 = result;
      result = tmp0 + 1 | 0;
      Unit_getInstance();
    }
    return result;
  }
  function parseFile(_this_, urlString, startIndex, endIndex, slashCount) {
    var tmp0_subject = slashCount;
    switch (tmp0_subject) {
      case 2:
        var tmp = new Char(47);
        var nextSlash = indexOf$default(urlString, tmp, startIndex, false, 4, null);
        if (nextSlash === -1 ? true : nextSlash === endIndex) {
          var tmp_0 = _this_;
          tmp_0._host = urlString.substring(startIndex, endIndex);
          return Unit_getInstance();
        }
        var tmp_1 = _this_;
        tmp_1._host = urlString.substring(startIndex, nextSlash);
        var tmp_2 = _this_;
        tmp_2._encodedPath = urlString.substring(nextSlash, endIndex);
        break;
      case 3:
        _this_._host = '';
        var tmp_3 = _this_;
        tmp_3._encodedPath = '/' + urlString.substring(startIndex, endIndex);
        break;
      default:throw IllegalArgumentException_init_$Create$_0('' + 'Invalid file url: ' + urlString);
    }
  }
  function parseMailto(_this_, urlString, startIndex, endIndex) {
    var delimiter = indexOf$default_0(urlString, '@', startIndex, false, 4, null);
    if (delimiter === -1) {
      throw IllegalArgumentException_init_$Create$_0('' + 'Invalid mailto url: ' + urlString + ", it should contain '@'.");
    }var tmp = _this_;
    var tmp_0 = urlString.substring(startIndex, delimiter);
    tmp._user = decodeURLPart$default(tmp_0, 0, 0, null, 7, null);
    var tmp_1 = _this_;
    var tmp0_substring_0 = delimiter + 1 | 0;
    tmp_1._host = urlString.substring(tmp0_substring_0, endIndex);
  }
  function indexOfColonInHostPort(_this_, startIndex, endIndex) {
    var skip = false;
    var inductionVariable = startIndex;
    if (inductionVariable < endIndex)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp1_subject = charSequenceGet(_this_, index);
        if (tmp1_subject.equals(new Char(91)))
          skip = true;
        else if (tmp1_subject.equals(new Char(93)))
          skip = false;
        else if (tmp1_subject.equals(new Char(58)))
          if (!skip)
            return index;
      }
       while (inductionVariable < endIndex);
    return -1;
  }
  function fillHost(_this_, urlString, startIndex, endIndex) {
    var tmp0_takeIf_0 = indexOfColonInHostPort(urlString, startIndex, endIndex);
    var tmp;
    if (tmp0_takeIf_0 > 0) {
      tmp = tmp0_takeIf_0;
    } else {
      {
        tmp = null;
      }
    }
    var tmp0_elvis_lhs = tmp;
    var colonIndex = tmp0_elvis_lhs == null ? endIndex : tmp0_elvis_lhs;
    var tmp_0 = _this_;
    tmp_0._host = urlString.substring(startIndex, colonIndex);
    if ((colonIndex + 1 | 0) < endIndex) {
      var tmp_1 = _this_;
      var tmp1_substring_0 = colonIndex + 1 | 0;
      tmp_1._port = toInt(urlString.substring(tmp1_substring_0, endIndex));
    } else {
      _this_._port = 0;
    }
  }
  function parseQuery(_this_, urlString, startIndex, endIndex) {
    if ((startIndex + 1 | 0) === endIndex) {
      _this_._trailingQuery = true;
      return endIndex;
    }var tmp = new Char(35);
    var tmp_0 = startIndex + 1 | 0;
    var tmp0_takeIf_0 = indexOf$default(urlString, tmp, tmp_0, false, 4, null);
    var tmp_1;
    if (tmp0_takeIf_0 > 0) {
      tmp_1 = tmp0_takeIf_0;
    } else {
      {
        tmp_1 = null;
      }
    }
    var tmp0_elvis_lhs = tmp_1;
    var fragmentStart = tmp0_elvis_lhs == null ? endIndex : tmp0_elvis_lhs;
    var tmp1_substring_0 = startIndex + 1 | 0;
    var tmp_2 = urlString.substring(tmp1_substring_0, fragmentStart);
    var rawParameters = parseQueryString$default(tmp_2, 0, 0, 6, null);
    rawParameters.forEach_7(_no_name_provided_$factory_83(_this_));
    return fragmentStart;
  }
  function parseFragment(_this_, urlString, startIndex, endIndex) {
    if (startIndex < endIndex ? charSequenceGet(urlString, startIndex).equals(new Char(35)) : false) {
      var tmp = _this_;
      var tmp0_substring_0 = startIndex + 1 | 0;
      tmp._fragment = urlString.substring(tmp0_substring_0, endIndex);
    }}
  function _no_name_provided__113($this_parseQuery) {
    this._$this_parseQuery = $this_parseQuery;
  }
  _no_name_provided__113.prototype.invoke_205 = function (key, values_4) {
    this._$this_parseQuery._parameters_0.appendAll_3(key, values_4);
  };
  _no_name_provided__113.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? typeof p1 === 'string' : false) ? p1 : THROW_CCE();
    this.invoke_205(tmp, (!(p2 == null) ? isInterface(p2, List) : false) ? p2 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__113.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_83($this_parseQuery) {
    var i = new _no_name_provided__113($this_parseQuery);
    return function (p1, p2) {
      i.invoke_205(p1, p2);
      return Unit_getInstance();
    };
  }
  function Companion_40() {
    Companion_instance_39 = this;
    this._HTTP = new URLProtocol('http', 80);
    this._HTTPS = new URLProtocol('https', 443);
    this._WS = new URLProtocol('ws', 80);
    this._WSS = new URLProtocol('wss', 443);
    this._SOCKS = new URLProtocol('socks', 1080);
    var tmp = this;
    var tmp0_associateBy_0 = listOf([this._HTTP, this._HTTPS, this._WS, this._WSS, this._SOCKS]);
    var capacity_1 = coerceAtLeast(mapCapacity(collectionSizeOrDefault(tmp0_associateBy_0, 10)), 16);
    var tmp0_associateByTo_0_2 = LinkedHashMap_init_$Create$_1(capacity_1);
    var tmp0_iterator_1_3 = tmp0_associateBy_0.iterator_62();
    while (tmp0_iterator_1_3.hasNext_29()) {
      var element_2_4 = tmp0_iterator_1_3.next_31();
      tmp0_associateByTo_0_2.put_10(element_2_4._name_6, element_2_4);
      Unit_getInstance();
    }
    tmp._byName = tmp0_associateByTo_0_2;
  }
  Companion_40.prototype.createOrDefault = function (name) {
    var tmp0_let_0 = toLowerCasePreservingASCIIRules(name);
    var tmp0_elvis_lhs_2 = Companion_getInstance_39()._byName.get_65(tmp0_let_0);
    return tmp0_elvis_lhs_2 == null ? new URLProtocol(tmp0_let_0, 0) : tmp0_elvis_lhs_2;
  };
  Companion_40.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_39;
  function Companion_getInstance_39() {
    if (Companion_instance_39 == null)
      new Companion_40();
    return Companion_instance_39;
  }
  function URLProtocol(name, defaultPort) {
    Companion_getInstance_39();
    this._name_6 = name;
    this._defaultPort = defaultPort;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_all_0 = this._name_6;
      var indexedObject = tmp0_all_0;
      var inductionVariable = 0;
      var last_1 = indexedObject.length;
      while (inductionVariable < last_1) {
        var element_2 = charSequenceGet(indexedObject, inductionVariable);
        inductionVariable = inductionVariable + 1 | 0;
        if (!isLowerCase(element_2)) {
          tmp$ret$0 = false;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = true;
    }
     while (false);
    var tmp1_require_0 = tmp$ret$0;
    if (!tmp1_require_0) {
      var message_1 = 'All characters should be lower case';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }}
  URLProtocol.prototype.toString = function () {
    return '' + 'URLProtocol(name=' + this._name_6 + ', defaultPort=' + this._defaultPort + ')';
  };
  URLProtocol.prototype.hashCode = function () {
    var result = getStringHashCode(this._name_6);
    result = imul(result, 31) + this._defaultPort | 0;
    return result;
  };
  URLProtocol.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof URLProtocol))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof URLProtocol ? other : THROW_CCE();
    if (!(this._name_6 === tmp0_other_with_cast._name_6))
      return false;
    if (!(this._defaultPort === tmp0_other_with_cast._defaultPort))
      return false;
    return true;
  };
  URLProtocol.$metadata$ = {
    simpleName: 'URLProtocol',
    kind: 'class',
    interfaces: []
  };
  function isSecure(_this_) {
    return _this_._name_6 === 'https' ? true : _this_._name_6 === 'wss';
  }
  function takeFrom_0(_this_, url_0) {
    _this_._protocol = url_0._protocol;
    _this_._host = url_0._host;
    _this_._port = url_0._port;
    _this_._encodedPath = url_0._encodedPath;
    _this_._user = url_0._user;
    _this_._password = url_0._password;
    appendAll(_this_._parameters_0, url_0._parameters_0);
    Unit_getInstance();
    _this_._fragment = url_0._fragment;
    _this_._trailingQuery = url_0._trailingQuery;
    return _this_;
  }
  function appendUrlFullPath(_this_, encodedPath, queryParameters, trailingQuery) {
    var tmp;
    if (!isBlank(encodedPath)) {
      tmp = !startsWith$default_0(encodedPath, '/', false, 2, null);
    } else {
      {
        tmp = false;
      }
    }
    if (tmp) {
      _this_.append_23(new Char(47));
      Unit_getInstance();
    } else {
    }
    _this_.append_22(encodedPath);
    Unit_getInstance();
    if (!queryParameters.isEmpty_50() ? true : trailingQuery) {
      _this_.append_22('?');
      Unit_getInstance();
    }formUrlEncodeTo(queryParameters, _this_);
  }
  function _get_fullPath_(_this_) {
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    appendUrlFullPath_0(tmp0_apply_0_1, _this_._encodedPath_0, _this_._parameters_1, _this_._trailingQuery_0);
    return tmp0_apply_0_1.toString();
  }
  function _get_hostWithPort_(_this_) {
    return '' + _this_._host_0 + ':' + _this_._get_port__1();
  }
  function appendUrlFullPath_0(_this_, encodedPath, queryParameters, trailingQuery) {
    var tmp;
    if (!isBlank(encodedPath)) {
      tmp = !startsWith$default_0(encodedPath, '/', false, 2, null);
    } else {
      {
        tmp = false;
      }
    }
    if (tmp) {
      _this_.append_23(new Char(47));
      Unit_getInstance();
    } else {
    }
    _this_.append_22(encodedPath);
    Unit_getInstance();
    if (!queryParameters.isEmpty_50() ? true : trailingQuery) {
      _this_.append_22('?');
      Unit_getInstance();
    }formUrlEncodeTo_0(queryParameters, _this_);
  }
  function Url_0(builder) {
    return takeFrom_0(URLBuilder_init_$Create$(null, null, 0, null, null, null, null, null, false, 511, null), builder).build_17();
  }
  var token68Pattern;
  var authSchemePattern;
  var parameterPattern;
  var escapeRegex;
  function token68Pattern$init$() {
    var tmp0_toRegex_0 = '[a-zA-Z0-9\\-._~+/]+=*';
    return Regex_init_$Create$(tmp0_toRegex_0);
  }
  function authSchemePattern$init$() {
    var tmp0_toRegex_0 = '\\S+';
    return Regex_init_$Create$(tmp0_toRegex_0);
  }
  function parameterPattern$init$() {
    var tmp0_toRegex_0 = '' + '\\s*,?\\s*(' + token68Pattern + ')\\s*=\\s*(("((\\\\.)|[^\\\\"])*")|[^\\s,]*)\\s*,?\\s*';
    return Regex_init_$Create$(tmp0_toRegex_0);
  }
  function escapeRegex$init$() {
    var tmp0_toRegex_0 = '\\\\.';
    return Regex_init_$Create$(tmp0_toRegex_0);
  }
  var CachingProperty;
  function NoContent() {
    OutgoingContent.call(this);
  }
  NoContent.$metadata$ = {
    simpleName: 'NoContent',
    kind: 'class',
    interfaces: []
  };
  function ReadChannelContent() {
    OutgoingContent.call(this);
  }
  ReadChannelContent.$metadata$ = {
    simpleName: 'ReadChannelContent',
    kind: 'class',
    interfaces: []
  };
  function WriteChannelContent() {
  }
  WriteChannelContent.$metadata$ = {
    simpleName: 'WriteChannelContent',
    kind: 'class',
    interfaces: []
  };
  function ByteArrayContent() {
    OutgoingContent.call(this);
  }
  ByteArrayContent.$metadata$ = {
    simpleName: 'ByteArrayContent',
    kind: 'class',
    interfaces: []
  };
  function OutgoingContent() {
    this._extensionProperties = null;
  }
  OutgoingContent.prototype._get_contentType__10 = function () {
    return null;
  };
  OutgoingContent.prototype._get_contentLength__7 = function () {
    return null;
  };
  OutgoingContent.prototype._get_status__16 = function () {
    return null;
  };
  OutgoingContent.prototype._get_headers__24 = function () {
    return Companion_getInstance_32()._Empty_2;
  };
  OutgoingContent.$metadata$ = {
    simpleName: 'OutgoingContent',
    kind: 'class',
    interfaces: []
  };
  function TextContent_init_$Init$(text, contentType_1, status, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      status = null;
    TextContent.call($this, text, contentType_1, status);
    return $this;
  }
  function TextContent_init_$Create$(text, contentType_1, status, $mask0, $marker) {
    return TextContent_init_$Init$(text, contentType_1, status, $mask0, $marker, Object.create(TextContent.prototype));
  }
  function TextContent(text, contentType_1, status) {
    ByteArrayContent.call(this);
    this._text = text;
    this._contentType_0 = contentType_1;
    this._status = status;
    var tmp = this;
    var tmp0_toByteArray_0 = this._text;
    var tmp0_elvis_lhs = charset(this._contentType_0);
    var tmp1_toByteArray_0 = tmp0_elvis_lhs == null ? Charsets_getInstance()._UTF_8 : tmp0_elvis_lhs;
    tmp._bytes = encodeToByteArray(tmp1_toByteArray_0.newEncoder_0(), tmp0_toByteArray_0, 0, tmp0_toByteArray_0.length);
  }
  TextContent.prototype._get_contentType__10 = function () {
    return this._contentType_0;
  };
  TextContent.prototype._get_status__16 = function () {
    return this._status;
  };
  TextContent.prototype._get_contentLength__7 = function () {
    return toLong_0(this._bytes.length);
  };
  TextContent.prototype.bytes_1 = function () {
    return this._bytes;
  };
  TextContent.prototype.toString = function () {
    return '' + 'TextContent[' + this._contentType_0 + '] "' + take(this._text, 30) + '"';
  };
  TextContent.$metadata$ = {
    simpleName: 'TextContent',
    kind: 'class',
    interfaces: []
  };
  function Parser() {
  }
  Parser.$metadata$ = {
    simpleName: 'Parser',
    kind: 'interface',
    interfaces: []
  };
  function Grammar() {
  }
  Grammar.$metadata$ = {
    simpleName: 'Grammar',
    kind: 'class',
    interfaces: []
  };
  function then(_this_, grammar) {
    return new SequenceGrammar(listOf([_this_, grammar]));
  }
  function then_0(_this_, value) {
    return then(_this_, new StringGrammar(value));
  }
  function then_1(_this_, grammar) {
    return then(new StringGrammar(_this_), grammar);
  }
  function atLeastOne(grammar) {
    return new AtLeastOne(grammar);
  }
  function or(_this_, value) {
    return or_0(_this_, new StringGrammar(value));
  }
  function or_0(_this_, grammar) {
    return new OrGrammar(listOf([_this_, grammar]));
  }
  function SequenceGrammar(sourceGrammars) {
    Grammar.call(this);
    var tmp = this;
    var result_1 = ArrayList_init_$Create$();
    var tmp0_iterator_1 = sourceGrammars.iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      if (element_2 instanceof SequenceGrammar) {
        var tmp0_plusAssign_0_4 = element_2._get_grammars__1();
        addAll(result_1, tmp0_plusAssign_0_4);
        Unit_getInstance();
      } else {
        {
          result_1.add_32(element_2);
          Unit_getInstance();
        }
      }
    }
    tmp._grammars = result_1;
  }
  SequenceGrammar.prototype._get_grammars__1 = function () {
    return this._grammars;
  };
  SequenceGrammar.$metadata$ = {
    simpleName: 'SequenceGrammar',
    kind: 'class',
    interfaces: [ComplexGrammar]
  };
  function StringGrammar(value) {
    Grammar.call(this);
    this._value_16 = value;
  }
  StringGrammar.$metadata$ = {
    simpleName: 'StringGrammar',
    kind: 'class',
    interfaces: []
  };
  function AtLeastOne(grammar) {
    Grammar.call(this);
    this._grammar = grammar;
  }
  AtLeastOne.prototype._get_grammar__0 = function () {
    return this._grammar;
  };
  AtLeastOne.$metadata$ = {
    simpleName: 'AtLeastOne',
    kind: 'class',
    interfaces: [SimpleGrammar]
  };
  function OrGrammar(sourceGrammars) {
    Grammar.call(this);
    var tmp = this;
    var result_1 = ArrayList_init_$Create$();
    var tmp0_iterator_1 = sourceGrammars.iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      if (element_2 instanceof OrGrammar) {
        var tmp0_plusAssign_0_4 = element_2._get_grammars__1();
        addAll(result_1, tmp0_plusAssign_0_4);
        Unit_getInstance();
      } else {
        {
          result_1.add_32(element_2);
          Unit_getInstance();
        }
      }
    }
    tmp._grammars_0 = result_1;
  }
  OrGrammar.prototype._get_grammars__1 = function () {
    return this._grammars_0;
  };
  OrGrammar.$metadata$ = {
    simpleName: 'OrGrammar',
    kind: 'class',
    interfaces: [ComplexGrammar]
  };
  function ComplexGrammar() {
  }
  ComplexGrammar.$metadata$ = {
    simpleName: 'ComplexGrammar',
    kind: 'interface',
    interfaces: []
  };
  function SimpleGrammar() {
  }
  SimpleGrammar.$metadata$ = {
    simpleName: 'SimpleGrammar',
    kind: 'interface',
    interfaces: []
  };
  function RawGrammar(value) {
    Grammar.call(this);
    this._value_17 = value;
  }
  RawGrammar.$metadata$ = {
    simpleName: 'RawGrammar',
    kind: 'class',
    interfaces: []
  };
  function to_0(_this_, other) {
    return new RangeGrammar(_this_, other);
  }
  function NamedGrammar() {
  }
  NamedGrammar.$metadata$ = {
    simpleName: 'NamedGrammar',
    kind: 'class',
    interfaces: []
  };
  function MaybeGrammar() {
  }
  MaybeGrammar.$metadata$ = {
    simpleName: 'MaybeGrammar',
    kind: 'class',
    interfaces: [SimpleGrammar]
  };
  function ManyGrammar() {
  }
  ManyGrammar.$metadata$ = {
    simpleName: 'ManyGrammar',
    kind: 'class',
    interfaces: [SimpleGrammar]
  };
  function AnyOfGrammar() {
  }
  AnyOfGrammar.$metadata$ = {
    simpleName: 'AnyOfGrammar',
    kind: 'class',
    interfaces: []
  };
  function RangeGrammar(from, to_1) {
    Grammar.call(this);
    this._from = from;
    this._to = to_1;
  }
  RangeGrammar.$metadata$ = {
    simpleName: 'RangeGrammar',
    kind: 'class',
    interfaces: []
  };
  function _get_digits_() {
    return atLeastOne(_get_digit_());
  }
  function _get_hex_() {
    return or_0(or_0(_get_digit_(), to_0(new Char(65), new Char(70))), to_0(new Char(97), new Char(102)));
  }
  function _get_digit_() {
    return new RawGrammar('\\d');
  }
  function RegexParser(expression, indexes) {
    this._expression = expression;
    this._indexes = indexes;
  }
  RegexParser.$metadata$ = {
    simpleName: 'RegexParser',
    kind: 'class',
    interfaces: [Parser]
  };
  function buildRegexParser(_this_) {
    var groups = LinkedHashMap_init_$Create$();
    var expression = toRegex$default(_this_, groups, 0, false, 6, null)._regex;
    return new RegexParser(Regex_init_$Create$(expression), groups);
  }
  function GrammarRegex_init_$Init$(regexRaw, groupsCountRaw, group, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      groupsCountRaw = 0;
    if (!(($mask0 & 4) === 0))
      group = false;
    GrammarRegex.call($this, regexRaw, groupsCountRaw, group);
    return $this;
  }
  function GrammarRegex_init_$Create$(regexRaw, groupsCountRaw, group, $mask0, $marker) {
    return GrammarRegex_init_$Init$(regexRaw, groupsCountRaw, group, $mask0, $marker, Object.create(GrammarRegex.prototype));
  }
  function GrammarRegex(regexRaw, groupsCountRaw, group) {
    this._regex = group ? '' + '(' + regexRaw + ')' : regexRaw;
    this._groupsCount = group ? groupsCountRaw + 1 | 0 : groupsCountRaw;
  }
  GrammarRegex.$metadata$ = {
    simpleName: 'GrammarRegex',
    kind: 'class',
    interfaces: []
  };
  function toRegex(_this_, groups, offset, shouldGroup) {
    var tmp0_subject = _this_;
    var tmp;
    if (tmp0_subject instanceof StringGrammar) {
      var tmp_0 = Companion_getInstance_12().escape(_this_._value_16);
      tmp = GrammarRegex_init_$Create$(tmp_0, 0, false, 6, null);
    } else {
      if (tmp0_subject instanceof RawGrammar) {
        var tmp_1 = _this_._value_17;
        tmp = GrammarRegex_init_$Create$(tmp_1, 0, false, 6, null);
      } else {
        if (tmp0_subject instanceof NamedGrammar) {
          var tmp_2 = _this_._grammar_0;
          var tmp_3 = offset + 1 | 0;
          var nested = toRegex$default(tmp_2, groups, tmp_3, false, 4, null);
          add_0(groups, _this_._name_7, offset);
          tmp = new GrammarRegex(nested._regex, nested._groupsCount, true);
        } else {
          if (isInterface(tmp0_subject, ComplexGrammar)) {
            var expression = StringBuilder_init_$Create$_0();
            var currentOffset = shouldGroup ? offset + 1 | 0 : offset;
            var tmp0_forEachIndexed_0 = _this_._get_grammars__1();
            var index_1 = 0;
            var tmp0_iterator_2 = tmp0_forEachIndexed_0.iterator_62();
            while (tmp0_iterator_2.hasNext_29()) {
              var item_3 = tmp0_iterator_2.next_31();
              var tmp1_4 = index_1;
              index_1 = tmp1_4 + 1 | 0;
              var tmp1__anonymous__5 = checkIndexOverflow(tmp1_4);
              var current_6 = toRegex(item_3, groups, currentOffset, true);
              var tmp_4;
              if (!(tmp1__anonymous__5 === 0)) {
                tmp_4 = _this_ instanceof OrGrammar;
              } else {
                tmp_4 = false;
              }
              if (tmp_4) {
                expression.append_6('|');
                Unit_getInstance();
              } else {
              }
              expression.append_6(current_6._regex);
              Unit_getInstance();
              currentOffset = currentOffset + current_6._groupsCount | 0;
            }
            var groupsCount = shouldGroup ? (currentOffset - offset | 0) - 1 | 0 : currentOffset - offset | 0;
            tmp = new GrammarRegex(expression.toString(), groupsCount, shouldGroup);
          } else {
            if (isInterface(tmp0_subject, SimpleGrammar)) {
              var tmp1_subject = _this_;
              var tmp_5;
              if (tmp1_subject instanceof MaybeGrammar) {
                tmp_5 = new Char(63);
              } else {
                if (tmp1_subject instanceof ManyGrammar) {
                  tmp_5 = new Char(42);
                } else {
                  if (tmp1_subject instanceof AtLeastOne) {
                    tmp_5 = new Char(43);
                  } else {
                    {
                      var tmp2_error_0 = '' + 'Unsupported simple grammar element: ' + _this_;
                      throw IllegalStateException_init_$Create$(toString_1(tmp2_error_0));
                    }
                  }
                }
              }
              var operator = tmp_5;
              var nested_0 = toRegex(_this_._get_grammar__0(), groups, offset, true);
              var tmp_6 = '' + nested_0._regex + operator;
              tmp = GrammarRegex_init_$Create$(tmp_6, nested_0._groupsCount, false, 4, null);
            } else {
              if (tmp0_subject instanceof AnyOfGrammar) {
                var tmp_7 = '' + '[' + Companion_getInstance_12().escape(_this_._value_18) + ']';
                tmp = GrammarRegex_init_$Create$(tmp_7, 0, false, 6, null);
              } else {
                if (tmp0_subject instanceof RangeGrammar) {
                  var tmp_8 = '' + '[' + _this_._from + '-' + _this_._to + ']';
                  tmp = GrammarRegex_init_$Create$(tmp_8, 0, false, 6, null);
                } else {
                  {
                    var tmp3_error_0 = '' + 'Unsupported grammar element: ' + _this_;
                    throw IllegalStateException_init_$Create$(toString_1(tmp3_error_0));
                  }
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  }
  function toRegex$default(_this_, groups, offset, shouldGroup, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 1;
    if (!(($mask0 & 4) === 0))
      shouldGroup = false;
    return toRegex(_this_, groups, offset, shouldGroup);
  }
  function add_0(_this_, key, value) {
    if (!(isInterface(_this_, Map_0) ? _this_ : THROW_CCE()).containsKey_12(key)) {
      var tmp0_set_0 = ArrayList_init_$Create$();
      _this_.put_10(key, tmp0_set_0);
      Unit_getInstance();
    } else {
    }
    var tmp1_plusAssign_0 = ensureNotNull(_this_.get_65(key));
    tmp1_plusAssign_0.add_32(value);
    Unit_getInstance();
  }
  function _get_originHost_(_this_) {
    var tmp;
    if (PlatformUtils_getInstance()._IS_BROWSER) {
      tmp = window.location.origin;
    } else {
      tmp = null;
    }
    return tmp;
  }
  var ChunkSizeBufferPool;
  var CrLf;
  var LastChunkBytes;
  function _no_name_provided__114() {
    DefaultPool.call(this, 2048);
  }
  _no_name_provided__114.prototype.produceInstance_4 = function () {
    return StringBuilder_init_$Create$(128);
  };
  _no_name_provided__114.prototype.clearInstance_4 = function (instance) {
    instance.clear_15();
    Unit_getInstance();
    return instance;
  };
  _no_name_provided__114.prototype.clearInstance_5 = function (instance) {
    return this.clearInstance_4(instance instanceof StringBuilder ? instance : THROW_CCE());
  };
  _no_name_provided__114.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function ChunkSizeBufferPool$init$() {
    return new _no_name_provided__114();
  }
  function CrLf$init$() {
    var tmp0_toByteArray_0 = '\r\n';
    var tmp1_toByteArray_0 = Charsets_getInstance()._UTF_8;
    return encodeToByteArray(tmp1_toByteArray_0.newEncoder_0(), tmp0_toByteArray_0, 0, tmp0_toByteArray_0.length);
  }
  function LastChunkBytes$init$() {
    var tmp0_toByteArray_0 = '0\r\n\r\n';
    var tmp1_toByteArray_0 = Charsets_getInstance()._UTF_8;
    return encodeToByteArray(tmp1_toByteArray_0.newEncoder_0(), tmp0_toByteArray_0, 0, tmp0_toByteArray_0.length);
  }
  var EMPTY_INT_ARRAY;
  var IntArrayPool;
  function _no_name_provided__115() {
    DefaultPool.call(this, 1000);
  }
  _no_name_provided__115.prototype.produceInstance_4 = function () {
    return new Int32Array(512);
  };
  _no_name_provided__115.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function IntArrayPool$init$() {
    return new _no_name_provided__115();
  }
  var versions;
  function build($this, resultList, from, maxLength, idx, length, charAt) {
    var tmp0_groupByTo_0_1 = LinkedHashMap_init_$Create$();
    var tmp0_iterator_1_2 = from.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var element_2_3 = tmp0_iterator_1_2.next_31();
      var key_3_4 = charAt(element_2_3, idx);
      var value_1_6 = tmp0_groupByTo_0_1.get_65(key_3_4);
      var tmp;
      if (value_1_6 == null) {
        var answer_2_7 = ArrayList_init_$Create$();
        tmp0_groupByTo_0_1.put_10(key_3_4, answer_2_7);
        Unit_getInstance();
        tmp = answer_2_7;
      } else {
        tmp = value_1_6;
      }
      var list_4_5 = tmp;
      list_4_5.add_32(element_2_3);
      Unit_getInstance();
    }
    var tmp0_forEach_0 = tmp0_groupByTo_0_1;
    var tmp0_iterator_1 = tmp0_forEach_0._get_entries__8().iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      var ch_4 = element_2._get_key__52();
      var list_5 = element_2._get_value__27();
      var nextIdx_6 = idx + 1 | 0;
      var children_7 = ArrayList_init_$Create$();
      var tmp_0 = Companion_getInstance_40();
      var tmp0_filterTo_0_1_8 = ArrayList_init_$Create$();
      var tmp0_iterator_1_2_9 = list_5.iterator_62();
      while (tmp0_iterator_1_2_9.hasNext_29()) {
        var element_2_3_10 = tmp0_iterator_1_2_9.next_31();
        if (length(element_2_3_10) > nextIdx_6) {
          tmp0_filterTo_0_1_8.add_32(element_2_3_10);
          Unit_getInstance();
        } else {
        }
      }
      build(tmp_0, children_7, tmp0_filterTo_0_1_8, maxLength, nextIdx_6, length, charAt);
      children_7.trimToSize();
      var tmp0_filterTo_0_1_11 = ArrayList_init_$Create$();
      var tmp0_iterator_1_2_12 = list_5.iterator_62();
      while (tmp0_iterator_1_2_12.hasNext_29()) {
        var element_2_3_13 = tmp0_iterator_1_2_12.next_31();
        if (length(element_2_3_13) === nextIdx_6) {
          tmp0_filterTo_0_1_11.add_32(element_2_3_13);
          Unit_getInstance();
        } else {
        }
      }
      resultList.add_32(new Node_0(ch_4, tmp0_filterTo_0_1_11, children_7));
      Unit_getInstance();
    }
  }
  function _no_name_provided__116() {
  }
  _no_name_provided__116.prototype.invoke_169 = function (it) {
    return charSequenceLength(it);
  };
  _no_name_provided__116.prototype.invoke_420 = function (p1) {
    return this.invoke_169((!(p1 == null) ? isCharSequence(p1) : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__116.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__117() {
  }
  _no_name_provided__117.prototype.invoke_171 = function (s, idx) {
    return charSequenceGet(s, idx);
  };
  _no_name_provided__117.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? isCharSequence(p1) : false) ? p1 : THROW_CCE();
    return this.invoke_171(tmp, (!(p2 == null) ? typeof p2 === 'number' : false) ? p2 : THROW_CCE());
  };
  _no_name_provided__117.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function Node_0(ch, exact, children) {
    this._ch = ch;
    this._exact = exact;
    this._children = children;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = 256;
    var tmp_2 = fillArrayVal(Array(tmp_1), null);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$0;
      l$ret$1: do {
        var tmp0_singleOrNull_0 = this._children;
        var single_1_0 = null;
        var found_2 = false;
        var tmp0_iterator_3 = tmp0_singleOrNull_0.iterator_62();
        while (tmp0_iterator_3.hasNext_29()) {
          var element_4 = tmp0_iterator_3.next_31();
          if (element_4._ch.toInt_5() === tmp_3) {
            if (found_2) {
              tmp$ret$0 = null;
              break l$ret$1;
            }single_1_0 = element_4;
            found_2 = true;
          } else {
          }
        }
        if (!found_2) {
          tmp$ret$0 = null;
          break l$ret$1;
        }tmp$ret$0 = single_1_0;
      }
       while (false);
      tmp_2[tmp_3] = tmp$ret$0;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp._array_1 = tmp_2;
  }
  Node_0.$metadata$ = {
    simpleName: 'Node',
    kind: 'class',
    interfaces: []
  };
  function Companion_41() {
    Companion_instance_40 = this;
  }
  Companion_41.prototype.build_3 = function (from) {
    var tmp = _no_name_provided_$factory_84();
    return this.build_4(from, tmp, _no_name_provided_$factory_85());
  };
  Companion_41.prototype.build_4 = function (from, length, charAt) {
    var tmp$ret$0;
    l$ret$1: do {
      var iterator_1 = from.iterator_62();
      if (!iterator_1.hasNext_29()) {
        tmp$ret$0 = null;
        break l$ret$1;
      }var maxElem_2 = iterator_1.next_31();
      if (!iterator_1.hasNext_29()) {
        tmp$ret$0 = maxElem_2;
        break l$ret$1;
      }var maxValue_3 = length(maxElem_2);
      do {
        var e_4 = iterator_1.next_31();
        var v_5 = length(e_4);
        if (compareTo(maxValue_3, v_5) < 0) {
          maxElem_2 = e_4;
          maxValue_3 = v_5;
        }}
       while (iterator_1.hasNext_29());
      tmp$ret$0 = maxElem_2;
    }
     while (false);
    var tmp0_safe_receiver = tmp$ret$0;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = length(tmp0_safe_receiver);
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('Unable to build char tree from an empty list');
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var maxLen = tmp_0;
    var tmp$ret$2;
    l$ret$3: do {
      var tmp_1;
      if (isInterface(from, Collection)) {
        tmp_1 = from.isEmpty_50();
      } else {
        {
          tmp_1 = false;
        }
      }
      if (tmp_1) {
        tmp$ret$2 = false;
        break l$ret$3;
      } else {
      }
      var tmp0_iterator_1 = from.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (length(element_2) === 0) {
          tmp$ret$2 = true;
          break l$ret$3;
        } else {
        }
      }
      tmp$ret$2 = false;
    }
     while (false);
    if (tmp$ret$2)
      throw IllegalArgumentException_init_$Create$_0('There should be no empty entries');
    else {
    }
    var root = ArrayList_init_$Create$();
    build(this, root, from, maxLen, 0, length, charAt);
    root.trimToSize();
    return new AsciiCharTree(new Node_0(new Char(0), emptyList(), root));
  };
  Companion_41.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_40;
  function Companion_getInstance_40() {
    if (Companion_instance_40 == null)
      new Companion_41();
    return Companion_instance_40;
  }
  function AsciiCharTree(root) {
    Companion_getInstance_40();
    this._root = root;
  }
  AsciiCharTree.$metadata$ = {
    simpleName: 'AsciiCharTree',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_84() {
    var i = new _no_name_provided__116();
    return function (p1) {
      return i.invoke_169(p1);
    };
  }
  function _no_name_provided_$factory_85() {
    var i = new _no_name_provided__117();
    return function (p1, p2) {
      return i.invoke_171(p1, p2);
    };
  }
  var CharArrayPool;
  function _no_name_provided__118() {
    DefaultPool.call(this, 4096);
  }
  _no_name_provided__118.prototype.produceInstance_4 = function () {
    return charArray(2048);
  };
  _no_name_provided__118.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function CharArrayPool$init$() {
    return new _no_name_provided__118();
  }
  var DefaultHttpMethods;
  var HexTable;
  var HexLetterTable;
  function _no_name_provided__119() {
  }
  _no_name_provided__119.prototype.invoke_173 = function (it) {
    return it._value_14.length;
  };
  _no_name_provided__119.prototype.invoke_420 = function (p1) {
    return this.invoke_173(p1 instanceof HttpMethod ? p1 : THROW_CCE());
  };
  _no_name_provided__119.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__120() {
  }
  _no_name_provided__120.prototype.invoke_175 = function (m, idx) {
    return charSequenceGet(m._value_14, idx);
  };
  _no_name_provided__120.prototype.invoke_418 = function (p1, p2) {
    var tmp = p1 instanceof HttpMethod ? p1 : THROW_CCE();
    return this.invoke_175(tmp, (!(p2 == null) ? typeof p2 === 'number' : false) ? p2 : THROW_CCE());
  };
  _no_name_provided__120.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_86() {
    var i = new _no_name_provided__119();
    return function (p1) {
      return i.invoke_173(p1);
    };
  }
  function _no_name_provided_$factory_87() {
    var i = new _no_name_provided__120();
    return function (p1, p2) {
      return i.invoke_175(p1, p2);
    };
  }
  function DefaultHttpMethods$init$() {
    var tmp = Companion_getInstance_40();
    var tmp_0 = Companion_getInstance_33()._DefaultMethods;
    var tmp_1 = _no_name_provided_$factory_86();
    return tmp.build_4(tmp_0, tmp_1, _no_name_provided_$factory_87());
  }
  function HexTable$init$() {
    var tmp0_map_0 = numberRangeToNumber(0, 255);
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
    var inductionVariable = tmp0_map_0._get_first__2();
    var last_1 = tmp0_map_0._get_last__2();
    if (inductionVariable <= last_1)
      do {
        var item_2_3 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp;
        if (48 <= item_2_3 ? item_2_3 <= 57 : false) {
          tmp = numberToLong(item_2_3).minus_30(new Long(48, 0));
        } else if (toLong_0(item_2_3).compareTo_59(new Long(97, 0)) >= 0 ? toLong_0(item_2_3).compareTo_59(new Long(102, 0)) <= 0 : false) {
          var tmp0_plus_0_5 = numberToLong(item_2_3).minus_30(new Long(97, 0));
          var tmp1_plus_0_6 = 10;
          tmp = tmp0_plus_0_5.plus_59(toLong_0(tmp1_plus_0_6));
        } else if (toLong_0(item_2_3).compareTo_59(new Long(65, 0)) >= 0 ? toLong_0(item_2_3).compareTo_59(new Long(70, 0)) <= 0 : false) {
          var tmp2_plus_0_7 = numberToLong(item_2_3).minus_30(new Long(65, 0));
          var tmp3_plus_0_8 = 10;
          tmp = tmp2_plus_0_7.plus_59(toLong_0(tmp3_plus_0_8));
        } else {
          tmp = new Long(-1, -1);
        }
        tmp0_mapTo_0_1.add_32(tmp);
        Unit_getInstance();
      }
       while (!(item_2_3 === last_1));
    return toLongArray(tmp0_mapTo_0_1);
  }
  function HexLetterTable$init$() {
    var tmp0_map_0 = numberRangeToNumber(0, 15);
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
    var inductionVariable = tmp0_map_0._get_first__2();
    var last_1 = tmp0_map_0._get_last__2();
    if (inductionVariable <= last_1)
      do {
        var item_2_3 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        tmp0_mapTo_0_1.add_32(item_2_3 < 10 ? toByte(48 + item_2_3 | 0) : toByte((new Char(97)).plus_58(item_2_3).minus_29(10).toInt_5()));
        Unit_getInstance();
      }
       while (!(item_2_3 === last_1));
    return toByteArray(tmp0_mapTo_0_1);
  }
  var Codes_NORMAL_instance;
  var Codes_GOING_AWAY_instance;
  var Codes_PROTOCOL_ERROR_instance;
  var Codes_CANNOT_ACCEPT_instance;
  var Codes_CLOSED_ABNORMALLY_instance;
  var Codes_NOT_CONSISTENT_instance;
  var Codes_VIOLATED_POLICY_instance;
  var Codes_TOO_BIG_instance;
  var Codes_NO_EXTENSION_instance;
  var Codes_INTERNAL_ERROR_instance;
  var Codes_SERVICE_RESTART_instance;
  var Codes_TRY_AGAIN_LATER_instance;
  function Companion_42() {
    Companion_instance_41 = this;
    var tmp = this;
    var tmp0_associateBy_0 = values_1();
    var capacity_1 = coerceAtLeast(mapCapacity(tmp0_associateBy_0.length), 16);
    var tmp0_associateByTo_0_2 = LinkedHashMap_init_$Create$_1(capacity_1);
    var indexedObject = tmp0_associateBy_0;
    var inductionVariable = 0;
    var last_1 = indexedObject.length;
    while (inductionVariable < last_1) {
      var element_2_4 = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      tmp0_associateByTo_0_2.put_10(element_2_4._code, element_2_4);
      Unit_getInstance();
    }
    tmp._byCodeMap = tmp0_associateByTo_0_2;
    this._UNEXPECTED_CONDITION = Codes_INTERNAL_ERROR_getInstance();
  }
  Companion_42.prototype.byCode = function (code) {
    return this._byCodeMap.get_65(code);
  };
  Companion_42.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_41;
  function Companion_getInstance_41() {
    if (Companion_instance_41 == null)
      new Companion_42();
    return Companion_instance_41;
  }
  function values_1() {
    return [Codes_NORMAL_getInstance(), Codes_GOING_AWAY_getInstance(), Codes_PROTOCOL_ERROR_getInstance(), Codes_CANNOT_ACCEPT_getInstance(), Codes_CLOSED_ABNORMALLY_getInstance(), Codes_NOT_CONSISTENT_getInstance(), Codes_VIOLATED_POLICY_getInstance(), Codes_TOO_BIG_getInstance(), Codes_NO_EXTENSION_getInstance(), Codes_INTERNAL_ERROR_getInstance(), Codes_SERVICE_RESTART_getInstance(), Codes_TRY_AGAIN_LATER_getInstance()];
  }
  var Codes_entriesInitialized;
  function Codes_initEntries() {
    if (Codes_entriesInitialized)
      return Unit_getInstance();
    Codes_entriesInitialized = true;
    Codes_NORMAL_instance = new Codes('NORMAL', 0, 1000);
    Codes_GOING_AWAY_instance = new Codes('GOING_AWAY', 1, 1001);
    Codes_PROTOCOL_ERROR_instance = new Codes('PROTOCOL_ERROR', 2, 1002);
    Codes_CANNOT_ACCEPT_instance = new Codes('CANNOT_ACCEPT', 3, 1003);
    Codes_CLOSED_ABNORMALLY_instance = new Codes('CLOSED_ABNORMALLY', 4, 1006);
    Codes_NOT_CONSISTENT_instance = new Codes('NOT_CONSISTENT', 5, 1007);
    Codes_VIOLATED_POLICY_instance = new Codes('VIOLATED_POLICY', 6, 1008);
    Codes_TOO_BIG_instance = new Codes('TOO_BIG', 7, 1009);
    Codes_NO_EXTENSION_instance = new Codes('NO_EXTENSION', 8, 1010);
    Codes_INTERNAL_ERROR_instance = new Codes('INTERNAL_ERROR', 9, 1011);
    Codes_SERVICE_RESTART_instance = new Codes('SERVICE_RESTART', 10, 1012);
    Codes_TRY_AGAIN_LATER_instance = new Codes('TRY_AGAIN_LATER', 11, 1013);
    Companion_getInstance_41();
  }
  function Codes(name, ordinal, code) {
    Enum.call(this, name, ordinal);
    this._code = code;
  }
  Codes.$metadata$ = {
    simpleName: 'Codes',
    kind: 'class',
    interfaces: []
  };
  function Codes_NORMAL_getInstance() {
    Codes_initEntries();
    return Codes_NORMAL_instance;
  }
  function Codes_GOING_AWAY_getInstance() {
    Codes_initEntries();
    return Codes_GOING_AWAY_instance;
  }
  function Codes_PROTOCOL_ERROR_getInstance() {
    Codes_initEntries();
    return Codes_PROTOCOL_ERROR_instance;
  }
  function Codes_CANNOT_ACCEPT_getInstance() {
    Codes_initEntries();
    return Codes_CANNOT_ACCEPT_instance;
  }
  function Codes_CLOSED_ABNORMALLY_getInstance() {
    Codes_initEntries();
    return Codes_CLOSED_ABNORMALLY_instance;
  }
  function Codes_NOT_CONSISTENT_getInstance() {
    Codes_initEntries();
    return Codes_NOT_CONSISTENT_instance;
  }
  function Codes_VIOLATED_POLICY_getInstance() {
    Codes_initEntries();
    return Codes_VIOLATED_POLICY_instance;
  }
  function Codes_TOO_BIG_getInstance() {
    Codes_initEntries();
    return Codes_TOO_BIG_instance;
  }
  function Codes_NO_EXTENSION_getInstance() {
    Codes_initEntries();
    return Codes_NO_EXTENSION_instance;
  }
  function Codes_INTERNAL_ERROR_getInstance() {
    Codes_initEntries();
    return Codes_INTERNAL_ERROR_instance;
  }
  function Codes_SERVICE_RESTART_getInstance() {
    Codes_initEntries();
    return Codes_SERVICE_RESTART_instance;
  }
  function Codes_TRY_AGAIN_LATER_getInstance() {
    Codes_initEntries();
    return Codes_TRY_AGAIN_LATER_instance;
  }
  function CloseReason(code, message) {
    this._code_0 = code;
    this._message = message;
  }
  CloseReason.prototype._get_knownReason_ = function () {
    return Companion_getInstance_41().byCode(this._code_0);
  };
  CloseReason.prototype.toString = function () {
    var tmp0_elvis_lhs = this._get_knownReason_();
    return '' + 'CloseReason(reason=' + (tmp0_elvis_lhs == null ? this._code_0 : tmp0_elvis_lhs) + ', message=' + this._message + ')';
  };
  CloseReason.prototype.hashCode = function () {
    var result = this._code_0;
    result = imul(result, 31) + getStringHashCode(this._message) | 0;
    return result;
  };
  CloseReason.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CloseReason))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof CloseReason ? other : THROW_CCE();
    if (!(this._code_0 === tmp0_other_with_cast._code_0))
      return false;
    if (!(this._message === tmp0_other_with_cast._message))
      return false;
    return true;
  };
  CloseReason.$metadata$ = {
    simpleName: 'CloseReason',
    kind: 'class',
    interfaces: []
  };
  function NonDisposableHandle_0() {
    NonDisposableHandle_instance_0 = this;
  }
  NonDisposableHandle_0.prototype.dispose_29 = function () {
  };
  NonDisposableHandle_0.prototype.toString = function () {
    return 'NonDisposableHandle';
  };
  NonDisposableHandle_0.$metadata$ = {
    simpleName: 'NonDisposableHandle',
    kind: 'object',
    interfaces: [DisposableHandle]
  };
  var NonDisposableHandle_instance_0;
  function NonDisposableHandle_getInstance_0() {
    if (NonDisposableHandle_instance_0 == null)
      new NonDisposableHandle_0();
    return NonDisposableHandle_instance_0;
  }
  var FrameType_TEXT_instance;
  var FrameType_BINARY_instance;
  var FrameType_CLOSE_instance;
  var FrameType_PING_instance;
  var FrameType_PONG_instance;
  function Companion_43() {
    Companion_instance_42 = this;
    var tmp = this;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_maxByOrNull_0 = values_2();
      if (tmp0_maxByOrNull_0.length === 0) {
        tmp$ret$0 = null;
        break l$ret$1;
      } else {
      }
      var maxElem_1 = tmp0_maxByOrNull_0[0];
      var lastIndex_2 = _get_lastIndex_(tmp0_maxByOrNull_0);
      if (lastIndex_2 === 0) {
        tmp$ret$0 = maxElem_1;
        break l$ret$1;
      }var tmp1__anonymous__8 = maxElem_1;
      var maxValue_3 = tmp1__anonymous__8._opcode;
      var inductionVariable = 1;
      if (inductionVariable <= lastIndex_2)
        do {
          var i_5 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var e_6 = tmp0_maxByOrNull_0[i_5];
          var v_7 = e_6._opcode;
          if (compareTo(maxValue_3, v_7) < 0) {
            maxElem_1 = e_6;
            maxValue_3 = v_7;
          }}
         while (!(i_5 === lastIndex_2));
      tmp$ret$0 = maxElem_1;
    }
     while (false);
    tmp._maxOpcode = ensureNotNull(tmp$ret$0)._opcode;
    var tmp_0 = this;
    var tmp_1 = 0;
    var tmp_2 = this._maxOpcode + 1 | 0;
    var tmp_3 = fillArrayVal(Array(tmp_2), null);
    while (tmp_1 < tmp_2) {
      var tmp_4 = tmp_1;
      var tmp$ret$2;
      l$ret$3: do {
        var tmp0_singleOrNull_0 = values_2();
        var single_1_0 = null;
        var found_2 = false;
        var indexedObject = tmp0_singleOrNull_0;
        var inductionVariable_0 = 0;
        var last_1 = indexedObject.length;
        while (inductionVariable_0 < last_1) {
          var element_4 = indexedObject[inductionVariable_0];
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          if (element_4._opcode === tmp_4) {
            if (found_2) {
              tmp$ret$2 = null;
              break l$ret$3;
            }single_1_0 = element_4;
            found_2 = true;
          } else {
          }
        }
        if (!found_2) {
          tmp$ret$2 = null;
          break l$ret$3;
        }tmp$ret$2 = single_1_0;
      }
       while (false);
      tmp_3[tmp_4] = tmp$ret$2;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp_0._byOpcodeArray = tmp_3;
  }
  Companion_43.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_42;
  function Companion_getInstance_42() {
    if (Companion_instance_42 == null)
      new Companion_43();
    return Companion_instance_42;
  }
  function values_2() {
    return [FrameType_TEXT_getInstance(), FrameType_BINARY_getInstance(), FrameType_CLOSE_getInstance(), FrameType_PING_getInstance(), FrameType_PONG_getInstance()];
  }
  var FrameType_entriesInitialized;
  function FrameType_initEntries() {
    if (FrameType_entriesInitialized)
      return Unit_getInstance();
    FrameType_entriesInitialized = true;
    FrameType_TEXT_instance = new FrameType('TEXT', 0, false, 1);
    FrameType_BINARY_instance = new FrameType('BINARY', 1, false, 2);
    FrameType_CLOSE_instance = new FrameType('CLOSE', 2, true, 8);
    FrameType_PING_instance = new FrameType('PING', 3, true, 9);
    FrameType_PONG_instance = new FrameType('PONG', 4, true, 10);
    Companion_getInstance_42();
  }
  function FrameType(name, ordinal, controlFrame, opcode) {
    Enum.call(this, name, ordinal);
    this._controlFrame = controlFrame;
    this._opcode = opcode;
  }
  FrameType.$metadata$ = {
    simpleName: 'FrameType',
    kind: 'class',
    interfaces: []
  };
  function FrameType_TEXT_getInstance() {
    FrameType_initEntries();
    return FrameType_TEXT_instance;
  }
  function FrameType_BINARY_getInstance() {
    FrameType_initEntries();
    return FrameType_BINARY_instance;
  }
  function FrameType_CLOSE_getInstance() {
    FrameType_initEntries();
    return FrameType_CLOSE_instance;
  }
  function FrameType_PING_getInstance() {
    FrameType_initEntries();
    return FrameType_PING_instance;
  }
  function FrameType_PONG_getInstance() {
    FrameType_initEntries();
    return FrameType_PONG_instance;
  }
  function DefaultWebSocketSession() {
  }
  DefaultWebSocketSession.$metadata$ = {
    simpleName: 'DefaultWebSocketSession',
    kind: 'interface',
    interfaces: [WebSocketSession]
  };
  function Binary_init_$Init$(fin, data, $this) {
    Binary.call($this, fin, data, false, false, false);
    return $this;
  }
  function Binary_init_$Create$(fin, data) {
    return Binary_init_$Init$(fin, data, Object.create(Binary.prototype));
  }
  function Text_init_$Init$(fin, data, $this) {
    Text_1.call($this, fin, data, false, false, false);
    return $this;
  }
  function Text_init_$Init$_0(text, $this) {
    var tmp0_toByteArray_0 = Charsets_getInstance()._UTF_8;
    Text_init_$Init$(true, encodeToByteArray(tmp0_toByteArray_0.newEncoder_0(), text, 0, text.length), $this);
    return $this;
  }
  function Text_init_$Create$(text) {
    return Text_init_$Init$_0(text, Object.create(Text_1.prototype));
  }
  function Close_init_$Init$(reason, $this) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_buildPacket_0 = 0;
      var builder_1 = BytePacketBuilder_0(tmp0_buildPacket_0);
      try {
        writeShort_0(builder_1, reason._code_0);
        writeText$default(builder_1, reason._message, 0, 0, null, 14, null);
        tmp$ret$0 = builder_1.build_17();
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof Error) {
          builder_1.release_10();
          throw $p;
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    Close_init_$Init$_0(tmp$ret$0, $this);
    return $this;
  }
  function Close_init_$Create$(reason) {
    return Close_init_$Init$(reason, Object.create(Close.prototype));
  }
  function Close_init_$Init$_0(packet, $this) {
    Close.call($this, readBytes$default(packet, 0, 1, null));
    return $this;
  }
  function Binary(fin, data, rsv1, rsv2, rsv3) {
    Frame.call(this, fin, FrameType_BINARY_getInstance(), data, NonDisposableHandle_getInstance_0(), rsv1, rsv2, rsv3);
  }
  Binary.$metadata$ = {
    simpleName: 'Binary',
    kind: 'class',
    interfaces: []
  };
  function Text_1(fin, data, rsv1, rsv2, rsv3) {
    Frame.call(this, fin, FrameType_TEXT_getInstance(), data, NonDisposableHandle_getInstance_0(), rsv1, rsv2, rsv3);
  }
  Text_1.$metadata$ = {
    simpleName: 'Text',
    kind: 'class',
    interfaces: []
  };
  function Close(data) {
    Frame.call(this, true, FrameType_CLOSE_getInstance(), data, NonDisposableHandle_getInstance_0(), false, false, false);
  }
  Close.$metadata$ = {
    simpleName: 'Close',
    kind: 'class',
    interfaces: []
  };
  function Companion_44() {
    Companion_instance_43 = this;
    this._Empty_4 = new Int8Array(0);
  }
  Companion_44.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_43;
  function Companion_getInstance_43() {
    if (Companion_instance_43 == null)
      new Companion_44();
    return Companion_instance_43;
  }
  function Frame(fin, frameType, data, disposableHandle, rsv1, rsv2, rsv3) {
    Companion_getInstance_43();
    this._fin = fin;
    this._frameType = frameType;
    this._data_4 = data;
    this._disposableHandle = disposableHandle;
    this._rsv1 = rsv1;
    this._rsv2 = rsv2;
    this._rsv3 = rsv3;
  }
  Frame.prototype.toString = function () {
    return '' + 'Frame ' + this._frameType + ' (fin=' + this._fin + ', buffer len = ' + this._data_4.length + ')';
  };
  Frame.$metadata$ = {
    simpleName: 'Frame',
    kind: 'class',
    interfaces: []
  };
  function WebSocketSession() {
  }
  WebSocketSession.$metadata$ = {
    simpleName: 'WebSocketSession',
    kind: 'interface',
    interfaces: [CoroutineScope]
  };
  function _set_manageEngine_($this, _set___) {
    return $this._manageEngine$delegate.setValue_4($this, manageEngine$factory(), _set___);
  }
  function _get_manageEngine_($this) {
    return $this._manageEngine$delegate.getValue_3($this, manageEngine$factory_0());
  }
  function HttpClient_init_$Init$(engine, userConfig, manageEngine, $this) {
    HttpClient.call($this, engine, userConfig);
    _set_manageEngine_($this, manageEngine);
    return $this;
  }
  function HttpClient_init_$Create$(engine, userConfig, manageEngine) {
    return HttpClient_init_$Init$(engine, userConfig, manageEngine, Object.create(HttpClient.prototype));
  }
  function _no_name_provided__121(this$0) {
    this._this$0_38 = this$0;
  }
  _no_name_provided__121.prototype.invoke_310 = function (it) {
    if (!(it == null)) {
      cancel$default(this._this$0_38._engine, null, 1, null);
    }};
  _no_name_provided__121.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__121.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__122(this$0, resultContinuation) {
    this._this$0_39 = this$0;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__122.prototype.invoke_326 = function ($this$intercept, call, $cont) {
    var tmp = this.create_41($this$intercept, call, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__122.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_326(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__122.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            var tmp_0 = this;
            var tmp_1 = this._call;
            tmp_0._tmp0_check_00 = tmp_1 instanceof HttpClientCall;
            if (!this._tmp0_check_00) {
              var message_1 = '' + 'Error: HttpClientCall expected, but found ' + this._call + '(' + getKClassFromExpression_0(this._call) + ').';
              throw IllegalStateException_init_$Create$(toString_1(message_1));
            }
            this._state_0 = 1;
            suspendResult = this._this$0_39._receivePipeline.execute_1(this._call, this._call._get_response__1(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._ARGUMENT1 = suspendResult;
            this._receivedCall2 = this._ARGUMENT1._get_call__6();
            this._state_0 = 2;
            suspendResult = this._$this$intercept.proceedWith_1(this._receivedCall2, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            suspendResult;
            Unit_getInstance();
            return Unit_getInstance();
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__122.prototype.create_41 = function ($this$intercept, call, completion) {
    var i = new _no_name_provided__122(this._this$0_39, completion);
    i._$this$intercept = $this$intercept;
    i._call = call;
    return i;
  };
  _no_name_provided__122.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided__123() {
  }
  _no_name_provided__123.prototype.invoke_192 = function ($this$install) {
    defaultTransformers($this$install);
  };
  _no_name_provided__123.prototype.invoke_420 = function (p1) {
    this.invoke_192(p1 instanceof HttpClient ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__123.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function $executeCOROUTINE$0(_this_, builder, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__21 = _this_;
    this._builder_0 = builder;
  }
  $executeCOROUTINE$0.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this.__this__21._requestPipeline.execute_1(this._builder_0, this._builder_0._body_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var tmp_0 = suspendResult;
            return tmp_0 instanceof HttpClientCall ? tmp_0 : THROW_CCE();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $executeCOROUTINE$0.$metadata$ = {
    simpleName: '$executeCOROUTINE$0',
    kind: 'class',
    interfaces: []
  };
  function HttpClient(engine, userConfig) {
    this._engine = engine;
    this._userConfig = userConfig;
    var tmp = this;
    var tmp0_shared_0 = false;
    tmp._manageEngine$delegate = new _no_name_provided__67(tmp0_shared_0);
    this._closed_0 = atomic_0(false);
    this._clientJob = Job_0(this._engine._get_coroutineContext__27().get_63(Key_getInstance_3()));
    this._coroutineContext_1 = this._engine._get_coroutineContext__27().plus_31(this._clientJob);
    this._requestPipeline = new HttpRequestPipeline(this._userConfig._get_developmentMode__4());
    this._responsePipeline = new HttpResponsePipeline(this._userConfig._get_developmentMode__4());
    this._sendPipeline = new HttpSendPipeline(this._userConfig._get_developmentMode__4());
    this._receivePipeline = new HttpReceivePipeline(this._userConfig._get_developmentMode__4());
    this._attributes_0 = Attributes_1(true);
    this._engineConfig = this._engine._get_config__2();
    this._config = new HttpClientConfig();
    checkCoroutinesVersion();
    if (_get_manageEngine_(this)) {
      this._clientJob.invokeOnCompletion_27(_no_name_provided_$factory_88(this));
      Unit_getInstance();
    }this._engine.install_19(this);
    var tmp_0 = Phases_getInstance_0()._Receive;
    this._sendPipeline.intercept_0(tmp_0, _no_name_provided_$factory_89(this, null));
    var tmp0_with_0 = this._userConfig;
    var tmp_1 = Feature_getInstance_1();
    this._config.install$default(tmp_1, null, 2, null);
    if (tmp0_with_0._get_useDefaultTransformers_()) {
      var tmp_2 = Feature_getInstance();
      this._config.install$default(tmp_2, null, 2, null);
      this._config.install_0('DefaultTransformers', _no_name_provided_$factory_90());
    }var tmp_3 = Feature_getInstance_2();
    this._config.install$default(tmp_3, null, 2, null);
    if (tmp0_with_0._get_followRedirects_()) {
      var tmp_4 = Feature_getInstance_0();
      this._config.install$default(tmp_4, null, 2, null);
    }var tmp0_this_3 = this;
    tmp0_this_3._config.plusAssign(tmp0_with_0);
    addDefaultResponseValidation(this._config);
    this._config.install_19(this);
    makeShared(this);
  }
  HttpClient.prototype._get_coroutineContext__27 = function () {
    return this._coroutineContext_1;
  };
  HttpClient.prototype.execute_9 = function (builder, $cont) {
    var tmp = new $executeCOROUTINE$0(this, builder, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  HttpClient.prototype.close_40 = function () {
    var success = this._closed_0.atomicfu$compareAndSet(false, true);
    if (!success)
      return Unit_getInstance();
    var tmp0_forEach_0 = this._attributes_0._get_allKeys__0();
    var tmp0_iterator_1 = tmp0_forEach_0.iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      var feature_4 = this._attributes_0.get_58(element_2 instanceof AttributeKey ? element_2 : THROW_CCE());
      if (isInterface(feature_4, Closeable)) {
        feature_4.close_40();
      } else {
      }
    }
    this._clientJob.complete_3();
    Unit_getInstance();
    if (_get_manageEngine_(this)) {
      this._engine.close_40();
    }};
  HttpClient.prototype.toString = function () {
    return '' + 'HttpClient[' + this._engine + ']';
  };
  HttpClient.$metadata$ = {
    simpleName: 'HttpClient',
    kind: 'class',
    interfaces: [CoroutineScope, Closeable]
  };
  function HttpClient_0(engineFactory, block) {
    var tmp0_apply_0 = new HttpClientConfig();
    block(tmp0_apply_0);
    var config = tmp0_apply_0;
    var engine = engineFactory.create_28(config._get_engineConfig_());
    var client = HttpClient_init_$Create$(engine, config, true);
    var tmp = ensureNotNull(client._coroutineContext_1.get_63(Key_getInstance_3()));
    tmp.invokeOnCompletion_27(_no_name_provided_$factory_91(engine));
    Unit_getInstance();
    return client;
  }
  function _no_name_provided__124($engine) {
    this._$engine = $engine;
  }
  _no_name_provided__124.prototype.invoke_310 = function (it) {
    this._$engine.close_40();
  };
  _no_name_provided__124.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__124.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function manageEngine$factory() {
    return getPropertyCallableRef('manageEngine', 1, KMutableProperty1, function (receiver) {
      return _get_manageEngine_(receiver);
    }, function (receiver_0, value) {
      return _set_manageEngine_(receiver_0, value);
    });
  }
  function manageEngine$factory_0() {
    return getPropertyCallableRef('manageEngine', 1, KMutableProperty1, function (receiver) {
      return _get_manageEngine_(receiver);
    }, function (receiver_0, value) {
      return _set_manageEngine_(receiver_0, value);
    });
  }
  function _no_name_provided_$factory_88(this$0) {
    var i = new _no_name_provided__121(this$0);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_89(this$0, resultContinuation) {
    var i = new _no_name_provided__122(this$0, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_326(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_90() {
    var i = new _no_name_provided__123();
    return function (p1) {
      i.invoke_192(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_91($engine) {
    var i = new _no_name_provided__124($engine);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided__125() {
  }
  _no_name_provided__125.prototype.invoke_411 = function () {
    return Attributes_1(true);
  };
  _no_name_provided__125.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__126() {
  }
  _no_name_provided__126.prototype.invoke_186 = function ($this$shared) {
    return Unit_getInstance();
  };
  _no_name_provided__126.prototype.invoke_420 = function (p1) {
    this.invoke_186(p1 instanceof HttpClientEngineConfig ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__126.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__127() {
  }
  _no_name_provided__127.prototype.invoke_188 = function ($this$null) {
    return Unit_getInstance();
  };
  _no_name_provided__127.prototype.invoke_420 = function (p1) {
    this.invoke_188(isObject(p1) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__127.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__128($previousConfigBlock, $configure) {
    this._$previousConfigBlock = $previousConfigBlock;
    this._$configure = $configure;
  }
  _no_name_provided__128.prototype.invoke_190 = function ($this$null) {
    var tmp0_safe_receiver_2 = this._$previousConfigBlock;
    if (tmp0_safe_receiver_2 == null)
      null;
    else
      tmp0_safe_receiver_2($this$null);
    Unit_getInstance();
    this._$configure(isObject($this$null) ? $this$null : THROW_CCE());
  };
  _no_name_provided__128.prototype.invoke_420 = function (p1) {
    this.invoke_190(isObject(p1) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__128.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__129($feature) {
    this._$feature = $feature;
  }
  _no_name_provided__129.prototype.invoke_192 = function (scope) {
    var attributes_2 = scope._attributes_0.computeIfAbsent_0(FEATURE_INSTALLED_LIST, _no_name_provided_$factory_96());
    var config_4 = ensureNotNull(scope._config._featureConfigurations.get_65(this._$feature._get_key__52()));
    var featureData_5 = this._$feature.prepare_20(config_4);
    this._$feature.install_23(featureData_5, scope);
    attributes_2.put_11(this._$feature._get_key__52(), featureData_5);
  };
  _no_name_provided__129.prototype.invoke_420 = function (p1) {
    this.invoke_192(p1 instanceof HttpClient ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__129.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function HttpClientConfig() {
    this._features = sharedMap();
    this._featureConfigurations = sharedMap();
    this._customInterceptors = sharedMap();
    var tmp = this;
    tmp._engineConfig$delegate = new _no_name_provided__67(_no_name_provided_$factory_92());
    var tmp_0 = this;
    var tmp0_shared_0 = true;
    tmp_0._followRedirects$delegate = new _no_name_provided__67(tmp0_shared_0);
    var tmp_1 = this;
    var tmp0_shared_0_0 = true;
    tmp_1._useDefaultTransformers$delegate = new _no_name_provided__67(tmp0_shared_0_0);
    var tmp_2 = this;
    var tmp0_shared_0_1 = true;
    tmp_2._expectSuccess$delegate = new _no_name_provided__67(tmp0_shared_0_1);
    var tmp_3 = this;
    var tmp0_shared_0_2 = PlatformUtils_getInstance()._IS_DEVELOPMENT_MODE;
    tmp_3._developmentMode$delegate = new _no_name_provided__67(tmp0_shared_0_2);
  }
  HttpClientConfig.prototype._set_engineConfig_ = function (_set___) {
    return this._engineConfig$delegate.setValue_4(this, engineConfig$factory(), _set___);
  };
  HttpClientConfig.prototype._get_engineConfig_ = function () {
    return this._engineConfig$delegate.getValue_3(this, engineConfig$factory_0());
  };
  HttpClientConfig.prototype._set_followRedirects_ = function (_set___) {
    return this._followRedirects$delegate.setValue_4(this, followRedirects$factory(), _set___);
  };
  HttpClientConfig.prototype._get_followRedirects_ = function () {
    return this._followRedirects$delegate.getValue_3(this, followRedirects$factory_0());
  };
  HttpClientConfig.prototype._set_useDefaultTransformers_ = function (_set___) {
    return this._useDefaultTransformers$delegate.setValue_4(this, useDefaultTransformers$factory(), _set___);
  };
  HttpClientConfig.prototype._get_useDefaultTransformers_ = function () {
    return this._useDefaultTransformers$delegate.getValue_3(this, useDefaultTransformers$factory_0());
  };
  HttpClientConfig.prototype._set_expectSuccess_ = function (_set___) {
    return this._expectSuccess$delegate.setValue_4(this, expectSuccess$factory(), _set___);
  };
  HttpClientConfig.prototype._get_expectSuccess_ = function () {
    return this._expectSuccess$delegate.getValue_3(this, expectSuccess$factory_0());
  };
  HttpClientConfig.prototype._set_developmentMode_ = function (_set___) {
    return this._developmentMode$delegate.setValue_4(this, developmentMode$factory(), _set___);
  };
  HttpClientConfig.prototype._get_developmentMode__4 = function () {
    return this._developmentMode$delegate.getValue_3(this, developmentMode$factory_0());
  };
  HttpClientConfig.prototype.install = function (feature_0, configure) {
    var previousConfigBlock = this._featureConfigurations.get_65(feature_0._get_key__52());
    var tmp0_set_0 = this._featureConfigurations;
    var tmp1_set_0 = feature_0._get_key__52();
    tmp0_set_0.put_10(tmp1_set_0, _no_name_provided_$factory_94(previousConfigBlock, configure));
    Unit_getInstance();
    if (this._features.containsKey_12(feature_0._get_key__52()))
      return Unit_getInstance();
    var tmp2_set_0 = this._features;
    var tmp3_set_0 = feature_0._get_key__52();
    tmp2_set_0.put_10(tmp3_set_0, _no_name_provided_$factory_95(feature_0));
    Unit_getInstance();
  };
  HttpClientConfig.prototype.install$default = function (feature_0, configure, $mask0, $handler) {
    if (!(($mask0 & 2) === 0)) {
      configure = _no_name_provided_$factory_93();
    }return this.install(feature_0, configure);
  };
  HttpClientConfig.prototype.install_0 = function (key, block) {
    var tmp0_set_0 = this._customInterceptors;
    tmp0_set_0.put_10(key, block);
    Unit_getInstance();
  };
  HttpClientConfig.prototype.install_19 = function (client) {
    var tmp0_forEach_0 = this._features._get_values__14();
    var tmp0_iterator_1 = tmp0_forEach_0.iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      element_2(client);
      Unit_getInstance();
    }
    var tmp1_forEach_0 = this._customInterceptors._get_values__14();
    var tmp0_iterator_1_0 = tmp1_forEach_0.iterator_62();
    while (tmp0_iterator_1_0.hasNext_29()) {
      var element_2_0 = tmp0_iterator_1_0.next_31();
      element_2_0(client);
      Unit_getInstance();
    }
  };
  HttpClientConfig.prototype.plusAssign = function (other) {
    this._set_followRedirects_(other._get_followRedirects_());
    this._set_useDefaultTransformers_(other._get_useDefaultTransformers_());
    this._set_expectSuccess_(other._get_expectSuccess_());
    var tmp0_this = this;
    var tmp0_plusAssign_0 = tmp0_this._features;
    var tmp1_plusAssign_0 = other._features;
    tmp0_plusAssign_0.putAll_6(tmp1_plusAssign_0);
    var tmp1_this = this;
    var tmp2_plusAssign_0 = tmp1_this._featureConfigurations;
    var tmp3_plusAssign_0 = other._featureConfigurations;
    tmp2_plusAssign_0.putAll_6(tmp3_plusAssign_0);
    var tmp2_this = this;
    var tmp4_plusAssign_0 = tmp2_this._customInterceptors;
    var tmp5_plusAssign_0 = other._customInterceptors;
    tmp4_plusAssign_0.putAll_6(tmp5_plusAssign_0);
  };
  HttpClientConfig.$metadata$ = {
    simpleName: 'HttpClientConfig',
    kind: 'class',
    interfaces: []
  };
  function engineConfig$factory() {
    return getPropertyCallableRef('engineConfig', 1, KMutableProperty1, function (receiver) {
      return receiver._get_engineConfig_();
    }, function (receiver_0, value) {
      return receiver_0._set_engineConfig_(value);
    });
  }
  function engineConfig$factory_0() {
    return getPropertyCallableRef('engineConfig', 1, KMutableProperty1, function (receiver) {
      return receiver._get_engineConfig_();
    }, function (receiver_0, value) {
      return receiver_0._set_engineConfig_(value);
    });
  }
  function followRedirects$factory() {
    return getPropertyCallableRef('followRedirects', 1, KMutableProperty1, function (receiver) {
      return receiver._get_followRedirects_();
    }, function (receiver_0, value) {
      return receiver_0._set_followRedirects_(value);
    });
  }
  function followRedirects$factory_0() {
    return getPropertyCallableRef('followRedirects', 1, KMutableProperty1, function (receiver) {
      return receiver._get_followRedirects_();
    }, function (receiver_0, value) {
      return receiver_0._set_followRedirects_(value);
    });
  }
  function useDefaultTransformers$factory() {
    return getPropertyCallableRef('useDefaultTransformers', 1, KMutableProperty1, function (receiver) {
      return receiver._get_useDefaultTransformers_();
    }, function (receiver_0, value) {
      return receiver_0._set_useDefaultTransformers_(value);
    });
  }
  function useDefaultTransformers$factory_0() {
    return getPropertyCallableRef('useDefaultTransformers', 1, KMutableProperty1, function (receiver) {
      return receiver._get_useDefaultTransformers_();
    }, function (receiver_0, value) {
      return receiver_0._set_useDefaultTransformers_(value);
    });
  }
  function expectSuccess$factory() {
    return getPropertyCallableRef('expectSuccess', 1, KMutableProperty1, function (receiver) {
      return receiver._get_expectSuccess_();
    }, function (receiver_0, value) {
      return receiver_0._set_expectSuccess_(value);
    });
  }
  function expectSuccess$factory_0() {
    return getPropertyCallableRef('expectSuccess', 1, KMutableProperty1, function (receiver) {
      return receiver._get_expectSuccess_();
    }, function (receiver_0, value) {
      return receiver_0._set_expectSuccess_(value);
    });
  }
  function developmentMode$factory() {
    return getPropertyCallableRef('developmentMode', 1, KMutableProperty1, function (receiver) {
      return receiver._get_developmentMode__4();
    }, function (receiver_0, value) {
      return receiver_0._set_developmentMode_(value);
    });
  }
  function developmentMode$factory_0() {
    return getPropertyCallableRef('developmentMode', 1, KMutableProperty1, function (receiver) {
      return receiver._get_developmentMode__4();
    }, function (receiver_0, value) {
      return receiver_0._set_developmentMode_(value);
    });
  }
  function _no_name_provided_$factory_92() {
    var i = new _no_name_provided__126();
    return function (p1) {
      i.invoke_186(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_93() {
    var i = new _no_name_provided__127();
    return function (p1) {
      i.invoke_188(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_94($previousConfigBlock, $configure) {
    var i = new _no_name_provided__128($previousConfigBlock, $configure);
    return function (p1) {
      i.invoke_190(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_95($feature) {
    var i = new _no_name_provided__129($feature);
    return function (p1) {
      i.invoke_192(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_96() {
    var i = new _no_name_provided__125();
    return function () {
      return i.invoke_411();
    };
  }
  function Companion_45() {
    Companion_instance_44 = this;
    this._CustomResponse = new AttributeKey('CustomResponse');
  }
  Companion_45.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_44;
  function Companion_getInstance_44() {
    if (Companion_instance_44 == null)
      new Companion_45();
    return Companion_instance_44;
  }
  function $receiveCOROUTINE$1(_this_, info_2, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__22 = _this_;
    this._info = info_2;
  }
  $receiveCOROUTINE$1.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 10;
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._state_0 = 2;
            continue $sm;
          case 2:
            this._exceptionState = 9;
            this._exceptionState = 8;
            if (instanceOf(this.__this__22._get_response__1(), this._info._type_0)) {
              this._tmp$ret$01 = this.__this__22._get_response__1();
              this._exceptionState = 10;
              this._state_0 = 7;
              continue $sm;
            } else {
              this._state_0 = 3;
              continue $sm;
            }

            break;
          case 3:
            if (!this.__this__22._get_allowDoubleReceive__1() ? !this.__this__22._received.atomicfu$compareAndSet(false, true) : false) {
              throw new DoubleReceiveException(this.__this__22);
            }
            this._tmp0_elvis_lhs2 = this.__this__22._get_attributes__15().getOrNull_0(Companion_getInstance_44()._CustomResponse);
            if (this._tmp0_elvis_lhs2 == null) {
              this._state_0 = 4;
              suspendResult = this.__this__22.getResponseContent_1(this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              this._WHEN_RESULT3 = this._tmp0_elvis_lhs2;
              this._state_0 = 5;
              continue $sm;
            }

            break;
          case 4:
            this._WHEN_RESULT3 = suspendResult;
            this._state_0 = 5;
            continue $sm;
          case 5:
            this._responseData4 = this._WHEN_RESULT3;
            this._subject5 = new HttpResponseContainer(this._info, this._responseData4);
            var tmp_0 = this;
            var tmp1_elvis_lhs = this.__this__22._get_client__1();
            var tmp_1;
            if (tmp1_elvis_lhs == null) {
              var tmp0_error_0 = '' + 'Failed to receive call(' + this.__this__22 + ') in different native thread.';
              throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
            } else {
              tmp_1 = tmp1_elvis_lhs;
            }

            tmp_0._currentClient6 = tmp_1;
            this._state_0 = 6;
            suspendResult = this._currentClient6._responsePipeline.execute_1(this.__this__22, this._subject5, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 6:
            var ARGUMENT = suspendResult;
            var result = ARGUMENT._response_3;
            if (!instanceOf(result, this._info._type_0)) {
              var from = getKClassFromExpression_0(result);
              var to_1 = this._info._type_0;
              throw new NoTransformationFoundException(this.__this__22._get_response__1(), from, to_1);
            }
            this._tmp$ret$01 = result;
            this._exceptionState = 10;
            this._state_0 = 7;
            var tmp_2 = this;
            continue $sm;
          case 7:
            var tmp_3 = this._tmp$ret$01;
            complete(this.__this__22._get_response__1());
            return tmp_3;
          case 8:
            this._exceptionState = 9;
            var tmp_4 = this._exception_0;
            if (tmp_4 instanceof Error) {
              var cause = this._exception_0;
              var tmp_5 = this;
              cancel_0(this.__this__22._get_response__1(), 'Receive failed', cause);
              throw cause;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 9:
            this._exceptionState = 10;
            var t = this._exception_0;
            complete(this.__this__22._get_response__1());
            throw t;
          case 10:
            throw this._exception_0;
          case 11:
            complete(this.__this__22._get_response__1());
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 10) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $receiveCOROUTINE$1.$metadata$ = {
    simpleName: '$receiveCOROUTINE$1',
    kind: 'class',
    interfaces: []
  };
  function HttpClientCall(client) {
    Companion_getInstance_44();
    this._received = atomic_0(false);
    this._client$delegate = threadLocal(client);
    this._allowDoubleReceive = false;
  }
  HttpClientCall.prototype._get_client__1 = function () {
    return this._client$delegate.getValue_3(this, client$factory());
  };
  HttpClientCall.prototype._get_coroutineContext__27 = function () {
    return this._get_response__1()._get_coroutineContext__27();
  };
  HttpClientCall.prototype._get_attributes__15 = function () {
    return this._get_request__1()._get_attributes__15();
  };
  HttpClientCall.prototype._set_request__1 = function (_set___) {
    this._request = _set___;
  };
  HttpClientCall.prototype._get_request__1 = function () {
    var tmp = this._request;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('request');
    }
  };
  HttpClientCall.prototype._set_response__1 = function (_set___) {
    this._response = _set___;
  };
  HttpClientCall.prototype._get_response__1 = function () {
    var tmp = this._response;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('response');
    }
  };
  HttpClientCall.prototype._get_allowDoubleReceive__1 = function () {
    return this._allowDoubleReceive;
  };
  HttpClientCall.prototype.getResponseContent_1 = function ($cont) {
    return this._get_response__1()._get_content__8();
  };
  HttpClientCall.prototype.receive_1 = function (info_2, $cont) {
    var tmp = new $receiveCOROUTINE$1(this, info_2, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  HttpClientCall.prototype.toString = function () {
    return '' + 'HttpClientCall[' + this._get_request__1()._get_url__8() + ', ' + this._get_response__1()._get_status__16() + ']';
  };
  HttpClientCall.$metadata$ = {
    simpleName: 'HttpClientCall',
    kind: 'class',
    interfaces: [CoroutineScope]
  };
  function HttpClientCall_0(client, requestData, responseData) {
    var tmp0_apply_0 = new HttpClientCall(client);
    tmp0_apply_0._request = new DefaultHttpRequest(tmp0_apply_0, requestData);
    tmp0_apply_0._response = new DefaultHttpResponse(tmp0_apply_0, responseData);
    var tmp = responseData._body_2;
    if (!isInterface(tmp, ByteReadChannel_1)) {
      tmp0_apply_0._get_attributes__15().put_11(Companion_getInstance_44()._CustomResponse, responseData._body_2);
    } else {
    }
    return tmp0_apply_0;
  }
  function DoubleReceiveException(call) {
    IllegalStateException_init_$Init$(this);
    this._message_0 = '' + 'Response already received: ' + call;
    captureStack(this, DoubleReceiveException);
  }
  DoubleReceiveException.prototype._get_message__58 = function () {
    return this._message_0;
  };
  DoubleReceiveException.$metadata$ = {
    simpleName: 'DoubleReceiveException',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(DoubleReceiveException.prototype, 'message', {
    configurable: true,
    get: DoubleReceiveException.prototype._get_message__58
  });
  function _no_name_provided__130() {
  }
  _no_name_provided__130.prototype.invoke_194 = function (_name_for_destructuring_parameter_0_) {
    var key = _name_for_destructuring_parameter_0_.component1_2();
    var value = _name_for_destructuring_parameter_0_.component2_2();
    return '' + key + ': ' + value + '\n';
  };
  _no_name_provided__130.prototype.invoke_420 = function (p1) {
    return this.invoke_194(p1 instanceof Pair ? p1 : THROW_CCE());
  };
  _no_name_provided__130.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function NoTransformationFoundException(response, from, to_1) {
    UnsupportedOperationException_init_$Init$(this);
    var tmp = this;
    var tmp_0 = _get_request_(response)._get_url__8();
    var tmp_1 = response._get_status__16();
    var tmp_2 = flattenEntries(response._get_headers__24());
    var tmp_3 = '' + 'No transformation found: ' + from + ' -> ' + to_1 + '\n        |with response from ' + tmp_0 + ':\n        |status: ' + tmp_1 + '\n        |response headers: \n        |' + joinToString$default_0(tmp_2, null, null, null, 0, null, _no_name_provided_$factory_97(), 31, null) + '\n    ';
    tmp._message_1 = trimMargin$default(tmp_3, null, 1, null);
    captureStack(this, NoTransformationFoundException);
  }
  NoTransformationFoundException.prototype._get_message__58 = function () {
    return this._message_1;
  };
  NoTransformationFoundException.$metadata$ = {
    simpleName: 'NoTransformationFoundException',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(NoTransformationFoundException.prototype, 'message', {
    configurable: true,
    get: NoTransformationFoundException.prototype._get_message__58
  });
  function client$factory() {
    return getPropertyCallableRef('client', 1, KProperty1, function (receiver) {
      return receiver._get_client__1();
    }, null);
  }
  function _no_name_provided_$factory_97() {
    var i = new _no_name_provided__130();
    return function (p1) {
      return i.invoke_194(p1);
    };
  }
  function save(_this_, $cont) {
    var tmp = new $saveCOROUTINE$2(_this_, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function $getResponseContentCOROUTINE$3(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__23 = _this_;
  }
  $getResponseContentCOROUTINE$3.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            if (this.__this__23._responseContent == null) {
              this.__this__23._responseContent = this.__this__23._get_response__1()._get_content__8();
            }
            this._state_0 = 1;
            suspendResult = toByteArray_0(ensureNotNull(this.__this__23._responseContent), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var contentBytes = suspendResult;
            this.__this__23._responseContent = ByteReadChannel(contentBytes);
            return ByteReadChannel(contentBytes);
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $getResponseContentCOROUTINE$3.$metadata$ = {
    simpleName: '$getResponseContentCOROUTINE$3',
    kind: 'class',
    interfaces: []
  };
  function SavedHttpCall(client) {
    HttpClientCall.call(this, client);
    this._responseContent = null;
    this._allowDoubleReceive_0 = true;
  }
  SavedHttpCall.prototype.getResponseContent_1 = function ($cont) {
    var tmp = new $getResponseContentCOROUTINE$3(this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  SavedHttpCall.prototype._get_allowDoubleReceive__1 = function () {
    return this._allowDoubleReceive_0;
  };
  SavedHttpCall.$metadata$ = {
    simpleName: 'SavedHttpCall',
    kind: 'class',
    interfaces: []
  };
  function SavedHttpRequest(call, origin) {
    this._call_0 = call;
    this._$$delegate_0_0 = origin;
  }
  SavedHttpRequest.prototype._get_call__6 = function () {
    return this._call_0;
  };
  SavedHttpRequest.prototype._get_attributes__15 = function () {
    return this._$$delegate_0_0._get_attributes__15();
  };
  SavedHttpRequest.prototype._get_coroutineContext__27 = function () {
    return this._$$delegate_0_0._get_coroutineContext__27();
  };
  SavedHttpRequest.prototype._get_headers__24 = function () {
    return this._$$delegate_0_0._get_headers__24();
  };
  SavedHttpRequest.prototype._get_method__6 = function () {
    return this._$$delegate_0_0._get_method__6();
  };
  SavedHttpRequest.prototype._get_url__8 = function () {
    return this._$$delegate_0_0._get_url__8();
  };
  SavedHttpRequest.$metadata$ = {
    simpleName: 'SavedHttpRequest',
    kind: 'class',
    interfaces: [HttpRequest]
  };
  function SavedHttpResponse(call, body, origin) {
    HttpResponse.call(this);
    this._call_1 = call;
    var tmp = this;
    tmp._context_3 = Job$default(null, 1, null);
    this._status_0 = origin._get_status__16();
    this._version = origin._get_version__3();
    this._requestTime = origin._get_requestTime__2();
    this._responseTime = origin._get_responseTime__2();
    this._headers = origin._get_headers__24();
    this._coroutineContext_2 = origin._get_coroutineContext__27().plus_31(this._context_3);
    this._content_1 = ByteReadChannel(body);
  }
  SavedHttpResponse.prototype._get_call__6 = function () {
    return this._call_1;
  };
  SavedHttpResponse.prototype._get_status__16 = function () {
    return this._status_0;
  };
  SavedHttpResponse.prototype._get_version__3 = function () {
    return this._version;
  };
  SavedHttpResponse.prototype._get_requestTime__2 = function () {
    return this._requestTime;
  };
  SavedHttpResponse.prototype._get_responseTime__2 = function () {
    return this._responseTime;
  };
  SavedHttpResponse.prototype._get_headers__24 = function () {
    return this._headers;
  };
  SavedHttpResponse.prototype._get_coroutineContext__27 = function () {
    return this._coroutineContext_2;
  };
  SavedHttpResponse.prototype._get_content__8 = function () {
    return this._content_1;
  };
  SavedHttpResponse.$metadata$ = {
    simpleName: 'SavedHttpResponse',
    kind: 'class',
    interfaces: []
  };
  function $saveCOROUTINE$2(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__24 = _this_;
  }
  $saveCOROUTINE$2.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            var tmp_0 = this;
            var tmp0_elvis_lhs = this.__this__24._get_client__1();
            var tmp_1;
            if (tmp0_elvis_lhs == null) {
              var tmp0_error_0 = 'Failed to save call in different native thread.';
              throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
            } else {
              tmp_1 = tmp0_elvis_lhs;
            }

            tmp_0._currentClient0 = tmp_1;
            var tmp_2 = this;
            tmp_2._tmp1_also_01 = new SavedHttpCall(this._currentClient0);
            this._state_0 = 1;
            suspendResult = readRemaining(this.__this__24._get_response__1()._get_content__8(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var content_2 = suspendResult;
            this._tmp1_also_01._set_request__1(new SavedHttpRequest(this._tmp1_also_01, this.__this__24._get_request__1()));
            this._tmp1_also_01._set_response__1(new SavedHttpResponse(this._tmp1_also_01, readBytes$default(content_2, 0, 1, null), this.__this__24._get_response__1()));
            return this._tmp1_also_01;
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $saveCOROUTINE$2.$metadata$ = {
    simpleName: '$saveCOROUTINE$2',
    kind: 'class',
    interfaces: []
  };
  function TypeInfo_init_$Init$(type, reifiedType, kotlinType, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      kotlinType = null;
    TypeInfo.call($this, type, reifiedType, kotlinType);
    return $this;
  }
  function TypeInfo_init_$Create$(type, reifiedType, kotlinType, $mask0, $marker) {
    return TypeInfo_init_$Init$(type, reifiedType, kotlinType, $mask0, $marker, Object.create(TypeInfo.prototype));
  }
  function TypeInfo(type, reifiedType, kotlinType) {
    this._type_0 = type;
    this._reifiedType = reifiedType;
    this._kotlinType = kotlinType;
  }
  TypeInfo.prototype.toString = function () {
    return '' + 'TypeInfo(type=' + this._type_0 + ', reifiedType=' + this._reifiedType + ', kotlinType=' + this._kotlinType + ')';
  };
  TypeInfo.prototype.hashCode = function () {
    var result = this._type_0.hashCode();
    result = imul(result, 31) + hashCode(this._reifiedType) | 0;
    result = imul(result, 31) + (this._kotlinType == null ? 0 : hashCode(this._kotlinType)) | 0;
    return result;
  };
  TypeInfo.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof TypeInfo))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof TypeInfo ? other : THROW_CCE();
    if (!this._type_0.equals(tmp0_other_with_cast._type_0))
      return false;
    if (!equals_1(this._reifiedType, tmp0_other_with_cast._reifiedType))
      return false;
    if (!equals_1(this._kotlinType, tmp0_other_with_cast._kotlinType))
      return false;
    return true;
  };
  TypeInfo.$metadata$ = {
    simpleName: 'TypeInfo',
    kind: 'class',
    interfaces: []
  };
  var CALL_COROUTINE;
  function _get_closed_($this) {
    var tmp0_safe_receiver = $this._get_coroutineContext__27().get_63(Key_getInstance_3());
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_isActive__26();
    return !(tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs);
  }
  function executeWithinCallContext($this, requestData, $cont) {
    var tmp = new $executeWithinCallContextCOROUTINE$4($this, requestData, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function checkExtensions($this, requestData) {
    var tmp0_iterator = requestData._requiredCapabilities.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var requestedExtension = tmp0_iterator.next_31();
      var tmp0_require_0 = $this._get_supportedCapabilities__1().contains_48(requestedExtension);
      if (!tmp0_require_0) {
        var message_1 = '' + "Engine doesn't support " + requestedExtension;
        throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
      }}
  }
  function _no_name_provided__131(this$0, $client, resultContinuation) {
    this._this$0_40 = this$0;
    this._$client = $client;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__131.prototype.invoke_326 = function ($this$intercept, content, $cont) {
    var tmp = this.create_41($this$intercept, content, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__131.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_326(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__131.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1._tmp0_apply_00 = new HttpRequestBuilder();
            this._tmp0_apply_00.takeFromWithExecutionContext(this._$this$intercept_0._get_context__113());
            Unit_getInstance();
            this._tmp0_apply_00._body_0 = this._content_2;
            tmp_0._requestData1 = this._tmp0_apply_00.build_17();
            validateHeaders(this._requestData1);
            checkExtensions(this._this$0_40, this._requestData1);
            this._state_0 = 1;
            suspendResult = executeWithinCallContext(this._this$0_40, this._requestData1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._responseData2 = suspendResult;
            this._call3 = HttpClientCall_0(this._$client, this._requestData1, this._responseData2);
            this._state_0 = 2;
            suspendResult = this._$this$intercept_0.proceedWith_1(this._call3, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            suspendResult;
            Unit_getInstance();
            return Unit_getInstance();
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__131.prototype.create_41 = function ($this$intercept, content, completion) {
    var i = new _no_name_provided__131(this._this$0_40, this._$client, completion);
    i._$this$intercept_0 = $this$intercept;
    i._content_2 = content;
    return i;
  };
  _no_name_provided__131.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided__132(this$0, $requestData, resultContinuation) {
    this._this$0_41 = this$0;
    this._$requestData = $requestData;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__132.prototype.invoke_419 = function ($this$async, $cont) {
    var tmp = this.create_47($this$async, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__132.prototype.invoke_420 = function (p1, $cont) {
    return this.invoke_419((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  _no_name_provided__132.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            if (_get_closed_(this._this$0_41)) {
              throw ClientEngineClosedException_init_$Create$(null, 1, null);
            }
            this._state_0 = 1;
            suspendResult = this._this$0_41.execute_16(this._$requestData, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__132.prototype.create_47 = function ($this$async, completion) {
    var i = new _no_name_provided__132(this._this$0_41, this._$requestData, completion);
    i._$this$async_1 = $this$async;
    return i;
  };
  _no_name_provided__132.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function $executeWithinCallContextCOROUTINE$4(_this_, requestData, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__25 = _this_;
    this._requestData = requestData;
  }
  $executeWithinCallContextCOROUTINE$4.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            this._state_0 = 1;
            suspendResult = createCallContext(this.__this__25, this._requestData._executionContext_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._callContext0 = suspendResult;
            makeShared(this._callContext0);
            this._context1 = this._callContext0.plus_31(new KtorCallContextElement(this._callContext0));
            this._state_0 = 2;
            suspendResult = async$default(this.__this__25, this._context1, null, _no_name_provided_$factory_99(this.__this__25, this._requestData, null), 2, null).await_3(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            return suspendResult;
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $executeWithinCallContextCOROUTINE$4.$metadata$ = {
    simpleName: '$executeWithinCallContextCOROUTINE$4',
    kind: 'class',
    interfaces: []
  };
  function HttpClientEngine() {
  }
  HttpClientEngine.prototype._get_supportedCapabilities__1 = function () {
    return emptySet();
  };
  HttpClientEngine.prototype.install_19 = function (client) {
    var tmp = Phases_getInstance_0()._Engine;
    client._sendPipeline.intercept_0(tmp, _no_name_provided_$factory_98(this, client, null));
  };
  HttpClientEngine.$metadata$ = {
    simpleName: 'HttpClientEngine',
    kind: 'interface',
    interfaces: [CoroutineScope, Closeable]
  };
  function validateHeaders(request) {
    var requestHeaders = request._headers_2;
    var tmp0_filter_0 = requestHeaders.names_2();
    var tmp0_filterTo_0_1 = ArrayList_init_$Create$();
    var tmp0_iterator_1_2 = tmp0_filter_0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var element_2_3 = tmp0_iterator_1_2.next_31();
      if (HttpHeaders_getInstance()._UnsafeHeadersList.contains_48(element_2_3)) {
        tmp0_filterTo_0_1.add_32(element_2_3);
        Unit_getInstance();
      } else {
      }
    }
    var unsafeRequestHeaders = tmp0_filterTo_0_1;
    if (!unsafeRequestHeaders.isEmpty_50()) {
      throw new UnsafeHeaderException(toString_1(unsafeRequestHeaders));
    } else {
    }
  }
  function HttpClientEngineFactory() {
  }
  HttpClientEngineFactory.$metadata$ = {
    simpleName: 'HttpClientEngineFactory',
    kind: 'interface',
    interfaces: []
  };
  function _no_name_provided_$factory_98(this$0, $client, resultContinuation) {
    var i = new _no_name_provided__131(this$0, $client, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_326(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_99(this$0, $requestData, resultContinuation) {
    var i = new _no_name_provided__132(this$0, $requestData, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_419(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function ClientEngineClosedException_init_$Init$(cause, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    ClientEngineClosedException.call($this, cause);
    return $this;
  }
  function ClientEngineClosedException_init_$Create$(cause, $mask0, $marker) {
    var tmp = ClientEngineClosedException_init_$Init$(cause, $mask0, $marker, Object.create(ClientEngineClosedException.prototype));
    captureStack(tmp, ClientEngineClosedException_init_$Create$);
    return tmp;
  }
  function ClientEngineClosedException(cause) {
    IllegalStateException_init_$Init$_0('Client already closed', this);
    this._cause_0 = cause;
    captureStack(this, ClientEngineClosedException);
  }
  ClientEngineClosedException.prototype._get_cause__60 = function () {
    return this._cause_0;
  };
  ClientEngineClosedException.$metadata$ = {
    simpleName: 'ClientEngineClosedException',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(ClientEngineClosedException.prototype, 'cause', {
    configurable: true,
    get: ClientEngineClosedException.prototype._get_cause__60
  });
  function _no_name_provided__133(this$0) {
    this._this$0_42 = this$0;
  }
  _no_name_provided__133.prototype.invoke_411 = function () {
    return SilentSupervisor$default(null, 1, null).plus_31(this._this$0_42._get_dispatcher__0()).plus_31(new CoroutineName('' + this._this$0_42._engineName + '-context'));
  };
  _no_name_provided__133.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__134(this$0) {
    this._this$0_43 = this$0;
  }
  _no_name_provided__134.prototype.invoke_310 = function (it) {
    close_0(this._this$0_43._get_dispatcher__0());
    Unit_getInstance();
  };
  _no_name_provided__134.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__134.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function HttpClientEngineBase(engineName) {
    this._engineName = engineName;
    this._closed_1 = atomic_0(false);
    var tmp = this;
    tmp._coroutineContext$delegate = lazy(_no_name_provided_$factory_100(this));
  }
  HttpClientEngineBase.prototype._get_coroutineContext__27 = function () {
    var tmp0_getValue_0 = this._coroutineContext$delegate;
    var tmp1_getValue_0 = coroutineContext$factory();
    return tmp0_getValue_0._get_value__27();
  };
  HttpClientEngineBase.prototype.close_40 = function () {
    if (!this._closed_1.atomicfu$compareAndSet(false, true))
      return Unit_getInstance();
    var tmp = this._get_coroutineContext__27().get_63(Key_getInstance_3());
    var tmp0_elvis_lhs = (!(tmp == null) ? isInterface(tmp, CompletableJob) : false) ? tmp : null;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var requestJob = tmp_0;
    requestJob.complete_3();
    Unit_getInstance();
    requestJob.invokeOnCompletion_27(_no_name_provided_$factory_101(this));
    Unit_getInstance();
  };
  HttpClientEngineBase.$metadata$ = {
    simpleName: 'HttpClientEngineBase',
    kind: 'class',
    interfaces: [HttpClientEngine]
  };
  function close_0(_this_) {
    var tmp;
    try {
      var tmp0_safe_receiver = isInterface(_this_, Closeable) ? _this_ : null;
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        tmp0_safe_receiver.close_40();
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_1;
      if ($p instanceof Error) {
        tmp_1 = Unit_getInstance();
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_1;
    }
    return tmp;
  }
  function coroutineContext$factory() {
    return getPropertyCallableRef('coroutineContext', 1, KProperty1, function (receiver) {
      return receiver._get_coroutineContext__27();
    }, null);
  }
  function _no_name_provided_$factory_100(this$0) {
    var i = new _no_name_provided__133(this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_101(this$0) {
    var i = new _no_name_provided__134(this$0);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  var ENGINE_CAPABILITIES_KEY;
  var DEFAULT_CAPABILITIES;
  function HttpClientEngineCapability() {
  }
  HttpClientEngineCapability.$metadata$ = {
    simpleName: 'HttpClientEngineCapability',
    kind: 'interface',
    interfaces: []
  };
  function HttpClientEngineConfig() {
    this._threadsCount = 4;
    this._pipelining = false;
    this._proxy = null;
  }
  HttpClientEngineConfig.$metadata$ = {
    simpleName: 'HttpClientEngineConfig',
    kind: 'class',
    interfaces: []
  };
  var KTOR_DEFAULT_USER_AGENT;
  function Companion_46() {
    Companion_instance_45 = this;
  }
  Companion_46.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: [Key_0]
  };
  var Companion_instance_45;
  function Companion_getInstance_45() {
    if (Companion_instance_45 == null)
      new Companion_46();
    return Companion_instance_45;
  }
  function KtorCallContextElement(callContext_0) {
    Companion_getInstance_45();
    this._callContext = callContext_0;
  }
  KtorCallContextElement.prototype._get_key__52 = function () {
    return Companion_getInstance_45();
  };
  KtorCallContextElement.$metadata$ = {
    simpleName: 'KtorCallContextElement',
    kind: 'class',
    interfaces: [Element_0]
  };
  function callContext($cont) {
    return ensureNotNull($cont._get_context__113().get_63(Companion_getInstance_45()))._callContext;
  }
  function mergeHeaders(requestHeaders, content, block) {
    var tmp = buildHeaders(_no_name_provided_$factory_102(requestHeaders, content));
    tmp.forEach_7(_no_name_provided_$factory_103(block));
    var missingAgent = requestHeaders.get_64(HttpHeaders_getInstance()._UserAgent) == null ? content._get_headers__24().get_64(HttpHeaders_getInstance()._UserAgent) == null : false;
    if (missingAgent ? needUserAgent() : false) {
      block(HttpHeaders_getInstance()._UserAgent, KTOR_DEFAULT_USER_AGENT);
    }var tmp0_safe_receiver = content._get_contentType__10();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
    var type = tmp1_elvis_lhs == null ? content._get_headers__24().get_64(HttpHeaders_getInstance()._ContentType) : tmp1_elvis_lhs;
    var tmp2_safe_receiver = content._get_contentLength__7();
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.toString();
    var length = tmp3_elvis_lhs == null ? content._get_headers__24().get_64(HttpHeaders_getInstance()._ContentLength) : tmp3_elvis_lhs;
    var tmp4_safe_receiver = type;
    if (tmp4_safe_receiver == null)
      null;
    else {
      block(HttpHeaders_getInstance()._ContentType, tmp4_safe_receiver);
      Unit_getInstance();
    }
    Unit_getInstance();
    var tmp5_safe_receiver = length;
    if (tmp5_safe_receiver == null)
      null;
    else {
      block(HttpHeaders_getInstance()._ContentLength, tmp5_safe_receiver);
      Unit_getInstance();
    }
    Unit_getInstance();
  }
  function needUserAgent() {
    return !PlatformUtils_getInstance()._IS_BROWSER;
  }
  function _no_name_provided__135($requestHeaders, $content) {
    this._$requestHeaders = $requestHeaders;
    this._$content = $content;
  }
  _no_name_provided__135.prototype.invoke_267 = function ($this$buildHeaders) {
    $this$buildHeaders.appendAll_1(this._$requestHeaders);
    $this$buildHeaders.appendAll_1(this._$content._get_headers__24());
  };
  _no_name_provided__135.prototype.invoke_420 = function (p1) {
    this.invoke_267(p1 instanceof HeadersBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__135.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__136($block) {
    this._$block_0 = $block;
  }
  _no_name_provided__136.prototype.invoke_205 = function (key, values_4) {
    if (HttpHeaders_getInstance()._ContentLength === key)
      return Unit_getInstance();
    if (HttpHeaders_getInstance()._ContentType === key)
      return Unit_getInstance();
    this._$block_0(key, joinToString$default_0(values_4, ',', null, null, 0, null, null, 62, null));
  };
  _no_name_provided__136.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? typeof p1 === 'string' : false) ? p1 : THROW_CCE();
    this.invoke_205(tmp, (!(p2 == null) ? isInterface(p2, List) : false) ? p2 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__136.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_102($requestHeaders, $content) {
    var i = new _no_name_provided__135($requestHeaders, $content);
    return function (p1) {
      i.invoke_267(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_103($block) {
    var i = new _no_name_provided__136($block);
    return function (p1, p2) {
      i.invoke_205(p1, p2);
      return Unit_getInstance();
    };
  }
  var ValidateMark;
  function addDefaultResponseValidation(_this_) {
    HttpResponseValidator(_this_, _no_name_provided_$factory_104(_this_));
  }
  function RedirectResponseException(response, cachedResponseText) {
    ResponseException.call(this, response, cachedResponseText);
    this._message_2 = '' + 'Unhandled redirect: ' + response._get_call__6()._get_request__1()._get_url__8() + '. ' + ('' + 'Status: ' + response._get_status__16() + '. Text: "' + cachedResponseText + '"');
    captureStack(this, RedirectResponseException);
  }
  RedirectResponseException.prototype._get_message__58 = function () {
    return this._message_2;
  };
  RedirectResponseException.$metadata$ = {
    simpleName: 'RedirectResponseException',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(RedirectResponseException.prototype, 'message', {
    configurable: true,
    get: RedirectResponseException.prototype._get_message__58
  });
  function ClientRequestException(response, cachedResponseText) {
    ResponseException.call(this, response, cachedResponseText);
    this._message_3 = '' + 'Client request(' + response._get_call__6()._get_request__1()._get_url__8() + ') ' + ('' + 'invalid: ' + response._get_status__16() + '. Text: "' + cachedResponseText + '"');
    captureStack(this, ClientRequestException);
  }
  ClientRequestException.prototype._get_message__58 = function () {
    return this._message_3;
  };
  ClientRequestException.$metadata$ = {
    simpleName: 'ClientRequestException',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(ClientRequestException.prototype, 'message', {
    configurable: true,
    get: ClientRequestException.prototype._get_message__58
  });
  function ServerResponseException(response, cachedResponseText) {
    ResponseException.call(this, response, cachedResponseText);
    this._message_4 = '' + 'Server error(' + response._get_call__6()._get_request__1()._get_url__8() + ': ' + ('' + response._get_status__16() + '. Text: "' + cachedResponseText + '"');
    captureStack(this, ServerResponseException);
  }
  ServerResponseException.prototype._get_message__58 = function () {
    return this._message_4;
  };
  ServerResponseException.$metadata$ = {
    simpleName: 'ServerResponseException',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(ServerResponseException.prototype, 'message', {
    configurable: true,
    get: ServerResponseException.prototype._get_message__58
  });
  function ResponseException(response, cachedResponseText) {
    IllegalStateException_init_$Init$_0('' + 'Bad response: ' + response + '. Text: "' + cachedResponseText + '"', this);
    this.__response$delegate = threadLocal(response);
    captureStack(this, ResponseException);
  }
  ResponseException.$metadata$ = {
    simpleName: 'ResponseException',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__137(resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__137.prototype.invoke_385 = function (response, $cont) {
    var tmp = this.create_43(response, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__137.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_385(p1 instanceof HttpResponse ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__137.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            this._expectSuccess0 = this._response_0._get_call__6()._get_attributes__15().get_58(ExpectSuccessAttributeKey);
            if (!this._expectSuccess0) {
              return Unit_getInstance();
            }
            this._statusCode1 = this._response_0._get_status__16()._value_15;
            this._originCall2 = this._response_0._get_call__6();
            if (this._statusCode1 < 300 ? true : this._originCall2._get_attributes__15().contains_44(ValidateMark)) {
              return Unit_getInstance();
            }
            this._state_0 = 1;
            suspendResult = save(this._originCall2, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._tmp0_apply_03 = suspendResult;
            this._tmp0_apply_03._get_attributes__15().put_11(ValidateMark, Unit_getInstance());
            this._exceptionCall4 = this._tmp0_apply_03;
            this._exceptionResponse5 = this._exceptionCall4._get_response__1();
            this._state_0 = 2;
            suspendResult = readText$default_0(this._exceptionResponse5, null, 1, null, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            var exceptionResponseText = suspendResult;
            var tmp0_subject = this._statusCode1;
            if (300 <= tmp0_subject ? tmp0_subject <= 399 : false)
              throw new RedirectResponseException(this._exceptionResponse5, exceptionResponseText);
            else if (400 <= tmp0_subject ? tmp0_subject <= 499 : false)
              throw new ClientRequestException(this._exceptionResponse5, exceptionResponseText);
            else if (500 <= tmp0_subject ? tmp0_subject <= 599 : false)
              throw new ServerResponseException(this._exceptionResponse5, exceptionResponseText);
            else
              throw new ResponseException(this._exceptionResponse5, exceptionResponseText);
            return Unit_getInstance();
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__137.prototype.create_43 = function (response, completion) {
    var i = new _no_name_provided__137(completion);
    i._response_0 = response;
    return i;
  };
  _no_name_provided__137.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__138($this_addDefaultResponseValidation) {
    this._$this_addDefaultResponseValidation = $this_addDefaultResponseValidation;
  }
  _no_name_provided__138.prototype.invoke_391 = function ($this$HttpResponseValidator) {
    $this$HttpResponseValidator._expectSuccess = this._$this_addDefaultResponseValidation._get_expectSuccess_();
    $this$HttpResponseValidator.validateResponse(_no_name_provided_$factory_105(null));
  };
  _no_name_provided__138.prototype.invoke_420 = function (p1) {
    this.invoke_391(p1 instanceof Config ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__138.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_104($this_addDefaultResponseValidation) {
    var i = new _no_name_provided__138($this_addDefaultResponseValidation);
    return function (p1) {
      i.invoke_391(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_105(resultContinuation) {
    var i = new _no_name_provided__137(resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_385(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function defaultTransformers(_this_) {
    var client = _this_;
    var tmp = Phases_getInstance()._Render;
    _this_._requestPipeline.intercept_0(tmp, _no_name_provided_$factory_106(null));
    var tmp_0 = Phases_getInstance_1()._Parse;
    _this_._responsePipeline.intercept_0(tmp_0, _no_name_provided_$factory_107(client, null));
    platformDefaultTransformers(_this_);
  }
  function _no_name_provided__139($contentType, $body) {
    this._$contentType = $contentType;
    this._$body = $body;
    ByteArrayContent.call(this);
    var tmp = this;
    var tmp0_elvis_lhs = this._$contentType;
    tmp._contentType_1 = tmp0_elvis_lhs == null ? Application_getInstance()._OctetStream : tmp0_elvis_lhs;
    this._contentLength = toLong_0(this._$body.length);
  }
  _no_name_provided__139.prototype._get_contentType__10 = function () {
    return this._contentType_1;
  };
  _no_name_provided__139.prototype._get_contentLength__7 = function () {
    return this._contentLength;
  };
  _no_name_provided__139.prototype.bytes_1 = function () {
    return this._$body;
  };
  _no_name_provided__139.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__140($contentType, $body) {
    this._$contentType_0 = $contentType;
    this._$body_0 = $body;
    ReadChannelContent.call(this);
    var tmp = this;
    var tmp0_elvis_lhs = this._$contentType_0;
    tmp._contentType_2 = tmp0_elvis_lhs == null ? Application_getInstance()._OctetStream : tmp0_elvis_lhs;
  }
  _no_name_provided__140.prototype._get_contentType__10 = function () {
    return this._contentType_2;
  };
  _no_name_provided__140.prototype.readFrom_1 = function () {
    return this._$body_0;
  };
  _no_name_provided__140.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__141(resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__141.prototype.invoke_326 = function ($this$intercept, body, $cont) {
    var tmp = this.create_41($this$intercept, body, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__141.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_326(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__141.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            if (this._$this$intercept_1._get_context__113()._headers_1.get_64(HttpHeaders_getInstance()._Accept) == null) {
              this._$this$intercept_1._get_context__113()._headers_1.append_26(HttpHeaders_getInstance()._Accept, '*/*');
            }
            var tmp_0 = this;
            var tmp0_safe_receiver = this._$this$intercept_1._get_context__113()._headers_1.get_64(HttpHeaders_getInstance()._ContentType);
            var tmp_1;
            if (tmp0_safe_receiver == null) {
              tmp_1 = null;
            } else {
              tmp_1 = Companion_getInstance_30().parse_1(tmp0_safe_receiver);
            }

            tmp_0._contentType0 = tmp_1;
            var tmp_2 = this;
            var tmp1_subject = this._body;
            var tmp_3;
            if (typeof tmp1_subject === 'string') {
              var tmp_4 = this._body;
              var tmp2_elvis_lhs = this._contentType0;
              var tmp_5 = tmp2_elvis_lhs == null ? Text_getInstance()._Plain : tmp2_elvis_lhs;
              tmp_3 = TextContent_init_$Create$(tmp_4, tmp_5, null, 4, null);
            } else {
              if (isByteArray(tmp1_subject)) {
                tmp_3 = new _no_name_provided__139(this._contentType0, this._body);
              } else {
                if (isInterface(tmp1_subject, ByteReadChannel_1)) {
                  tmp_3 = new _no_name_provided__140(this._contentType0, this._body);
                } else {
                  {
                    tmp_3 = null;
                  }
                }
              }
            }

            tmp_2._content1 = tmp_3;
            if (!(this._content1 == null)) {
              this._$this$intercept_1._get_context__113()._headers_1.remove_52(HttpHeaders_getInstance()._ContentType);
              this._state_0 = 1;
              suspendResult = this._$this$intercept_1.proceedWith_1(this._content1, this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              this._state_0 = 2;
              continue $sm;
            }

            break;
          case 1:
            suspendResult;
            Unit_getInstance();
            this._state_0 = 2;
            continue $sm;
          case 2:
            return Unit_getInstance();
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__141.prototype.create_41 = function ($this$intercept, body, completion) {
    var i = new _no_name_provided__141(completion);
    i._$this$intercept_1 = $this$intercept;
    i._body = body;
    return i;
  };
  _no_name_provided__141.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided__142($body, $response, resultContinuation) {
    this._$body_1 = $body;
    this._$response = $response;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__142.prototype.invoke_324 = function ($this$writer, $cont) {
    var tmp = this.create_40($this$writer, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__142.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_324((!(p1 == null) ? isInterface(p1, WriterScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__142.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 5;
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._exceptionState = 4;
            this._exceptionState = 3;
            this._state_0 = 2;
            var tmp_0 = this._$body_1;
            var tmp_1 = this._$this$writer._get_channel__2();
            Companion_getInstance_15();
            suspendResult = copyTo(tmp_0, tmp_1, new Long(-1, 2147483647), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            var tmp_2 = this;
            suspendResult;
            tmp_2._tmp$ret$00 = Unit_getInstance();
            this._exceptionState = 5;
            this._state_0 = 6;
            continue $sm;
          case 3:
            this._exceptionState = 4;
            var tmp_3 = this._exception_0;
            if (tmp_3 instanceof CancellationException) {
              var cause = this._exception_0;
              var tmp_4 = this;
              cancel(this._$response, cause);
              throw cause;
            } else {
              {
                var tmp_5 = this._exception_0;
                if (tmp_5 instanceof Error) {
                  var cause_0 = this._exception_0;
                  var tmp_6 = this;
                  cancel_0(this._$response, 'Receive failed', cause_0);
                  throw cause_0;
                } else {
                  {
                    throw this._exception_0;
                  }
                }
              }
            }

            break;
          case 4:
            this._exceptionState = 5;
            var t = this._exception_0;
            complete(this._$response);
            throw t;
          case 5:
            throw this._exception_0;
          case 6:
            complete(this._$response);
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 5) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__142.prototype.create_40 = function ($this$writer, completion) {
    var i = new _no_name_provided__142(this._$body_1, this._$response, completion);
    i._$this$writer = $this$writer;
    return i;
  };
  _no_name_provided__142.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__143($responseJobHolder) {
    this._$responseJobHolder = $responseJobHolder;
  }
  _no_name_provided__143.prototype.invoke_310 = function (it) {
    this._$responseJobHolder.complete_3();
    Unit_getInstance();
  };
  _no_name_provided__143.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__143.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__144($client, resultContinuation) {
    this._$client_0 = $client;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__144.prototype.invoke_328 = function ($this$intercept, _name_for_destructuring_parameter_0_, $cont) {
    var tmp = this.create_42($this$intercept, _name_for_destructuring_parameter_0_, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__144.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_328(tmp, p2 instanceof HttpResponseContainer ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__144.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 11;
            this._info0 = this.__name_for_destructuring_parameter_0_.component1_2();
            this._body1 = this.__name_for_destructuring_parameter_0_.component2_2();
            var tmp_0 = this._body1;
            if (!isInterface(tmp_0, ByteReadChannel_1))
              return Unit_getInstance();
            else {
            }

            this._response2 = this._$this$intercept_2._get_context__113()._get_response__1();
            var tmp_1 = this;
            var tmp0_safe_receiver = this._response2._get_headers__24().get_64(HttpHeaders_getInstance()._ContentLength);
            var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toLong(tmp0_safe_receiver);
            var tmp_2;
            if (tmp1_elvis_lhs == null) {
              Companion_getInstance_15();
              tmp_2 = new Long(-1, 2147483647);
            } else {
              tmp_2 = tmp1_elvis_lhs;
            }

            tmp_1._contentLength3 = tmp_2;
            this._tmp2_subject4 = this._info0._type_0;
            if (this._tmp2_subject4.equals(getKClass_0(Unit))) {
              cancel_3(this._body1);
              Unit_getInstance();
              this._state_0 = 9;
              suspendResult = this._$this$intercept_2.proceedWith_1(new HttpResponseContainer(this._info0, Unit_getInstance()), this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              if (this._tmp2_subject4.equals(PrimitiveClasses_getInstance()._get_intClass_())) {
                this._state_0 = 7;
                suspendResult = readRemaining(this._body1, this);
                if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                  return suspendResult;
                }continue $sm;
              } else {
                if (this._tmp2_subject4.equals(getKClass_0(ByteReadPacket)) ? true : this._tmp2_subject4.equals(getKClass_0(Input))) {
                  this._state_0 = 5;
                  suspendResult = readRemaining(this._body1, this);
                  if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                    return suspendResult;
                  }continue $sm;
                } else {
                  if (this._tmp2_subject4.equals(PrimitiveClasses_getInstance()._get_byteArrayClass_())) {
                    this._state_0 = 3;
                    suspendResult = readRemaining_0(this._body1, this._contentLength3, this);
                    if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                      return suspendResult;
                    }continue $sm;
                  } else {
                    if (this._tmp2_subject4.equals(getKClass_0(ByteReadChannel_1))) {
                      this._responseJobHolder5 = Job_0(this._response2._get_coroutineContext__27().get_63(Key_getInstance_3()));
                      var tmp_3 = this;
                      var tmp_4 = this;
                      tmp_4._tmp1_also_06 = writer$default(this._$this$intercept_2, this._$client_0._coroutineContext_1, false, _no_name_provided_$factory_108(this._body1, this._response2, null), 2, null);
                      this._tmp1_also_06.invokeOnCompletion_27(_no_name_provided_$factory_109(this._responseJobHolder5));
                      Unit_getInstance();
                      tmp_3._channel7 = this._tmp1_also_06._get_channel__2();
                      this._state_0 = 2;
                      suspendResult = this._$this$intercept_2.proceedWith_1(new HttpResponseContainer(this._info0, this._channel7), this);
                      if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                        return suspendResult;
                      }continue $sm;
                    } else {
                      if (this._tmp2_subject4.equals(getKClass_0(HttpStatusCode))) {
                        cancel_3(this._body1);
                        Unit_getInstance();
                        this._state_0 = 1;
                        suspendResult = this._$this$intercept_2.proceedWith_1(new HttpResponseContainer(this._info0, this._response2._get_status__16()), this);
                        if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                          return suspendResult;
                        }continue $sm;
                      } else {
                        this._state_0 = 10;
                        continue $sm;
                      }
                    }
                  }
                }
              }
            }

            break;
          case 1:
            suspendResult;
            Unit_getInstance();
            this._state_0 = 10;
            continue $sm;
          case 2:
            suspendResult;
            Unit_getInstance();
            this._state_0 = 10;
            continue $sm;
          case 3:
            this._readRemaining8 = suspendResult;
            Companion_getInstance_15();
            if (this._contentLength3.compareTo_59(new Long(-1, 2147483647)) < 0) {
              var tmp0_check_0 = this._readRemaining8._get_remaining__2().equals(this._contentLength3);
              if (!tmp0_check_0) {
                var message_1 = '' + 'Expected ' + this._contentLength3 + ', actual ' + this._readRemaining8._get_remaining__2();
                throw IllegalStateException_init_$Create$(toString_1(message_1));
              }} else {
            }

            this._state_0 = 4;
            suspendResult = this._$this$intercept_2.proceedWith_1(new HttpResponseContainer(this._info0, readBytes$default(this._readRemaining8, 0, 1, null)), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 4:
            suspendResult;
            Unit_getInstance();
            this._state_0 = 10;
            continue $sm;
          case 5:
            this._ARGUMENT9 = suspendResult;
            this._ARGUMENT10 = new HttpResponseContainer(this._info0, this._ARGUMENT9);
            this._state_0 = 6;
            suspendResult = this._$this$intercept_2.proceedWith_1(this._ARGUMENT10, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 6:
            suspendResult;
            Unit_getInstance();
            this._state_0 = 10;
            continue $sm;
          case 7:
            this._ARGUMENT11 = suspendResult;
            var tmp_5 = this;
            tmp_5._ARGUMENT12 = this._ARGUMENT11.readText$default_2(0, 0, 3, null);
            this._ARGUMENT13 = toInt(this._ARGUMENT12);
            this._ARGUMENT14 = new HttpResponseContainer(this._info0, this._ARGUMENT13);
            this._state_0 = 8;
            suspendResult = this._$this$intercept_2.proceedWith_1(this._ARGUMENT14, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 8:
            suspendResult;
            Unit_getInstance();
            this._state_0 = 10;
            continue $sm;
          case 9:
            suspendResult;
            Unit_getInstance();
            this._state_0 = 10;
            continue $sm;
          case 10:
            return Unit_getInstance();
          case 11:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 11) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__144.prototype.create_42 = function ($this$intercept, _name_for_destructuring_parameter_0_, completion) {
    var i = new _no_name_provided__144(this._$client_0, completion);
    i._$this$intercept_2 = $this$intercept;
    i.__name_for_destructuring_parameter_0_ = _name_for_destructuring_parameter_0_;
    return i;
  };
  _no_name_provided__144.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided_$factory_106(resultContinuation) {
    var i = new _no_name_provided__141(resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_326(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_107($client, resultContinuation) {
    var i = new _no_name_provided__144($client, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_328(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_108($body, $response, resultContinuation) {
    var i = new _no_name_provided__142($body, $response, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_324(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_109($responseJobHolder) {
    var i = new _no_name_provided__143($responseJobHolder);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  var ExpectSuccessAttributeKey;
  function HttpResponseValidator(_this_, block) {
    _this_.install(Companion_getInstance_46(), block);
  }
  function _no_name_provided__145($feature) {
    this._$feature_0 = $feature;
  }
  _no_name_provided__145.prototype.invoke_411 = function () {
    return this._$feature_0._expectSuccess_0;
  };
  _no_name_provided__145.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__146($feature, resultContinuation) {
    this._$feature_1 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__146.prototype.invoke_326 = function ($this$intercept, it, $cont) {
    var tmp = this.create_41($this$intercept, it, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__146.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_326(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__146.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 5;
            this._exceptionState = 3;
            var tmp_0 = this._$this$intercept_3._get_context__113()._attributes_2;
            tmp_0.computeIfAbsent_0(ExpectSuccessAttributeKey, _no_name_provided_$factory_113(this._$feature_1));
            Unit_getInstance();
            this._state_0 = 1;
            suspendResult = this._$this$intercept_3.proceedWith_1(this._it, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            Unit_getInstance();
            this._exceptionState = 5;
            this._state_0 = 2;
            continue $sm;
          case 2:
            this._exceptionState = 5;
            return Unit_getInstance();
          case 3:
            this._exceptionState = 5;
            var tmp_1 = this._exception_0;
            if (tmp_1 instanceof Error) {
              this._cause0 = this._exception_0;
              this._unwrappedCause1 = unwrapCancellationException(this._cause0);
              this._state_0 = 4;
              suspendResult = processException(this._$feature_1, this._unwrappedCause1, this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 4:
            suspendResult;
            throw this._unwrappedCause1;
          case 5:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 5) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__146.prototype.create_41 = function ($this$intercept, it, completion) {
    var i = new _no_name_provided__146(this._$feature_1, completion);
    i._$this$intercept_3 = $this$intercept;
    i._it = it;
    return i;
  };
  _no_name_provided__146.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided__147($feature, resultContinuation) {
    this._$feature_2 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__147.prototype.invoke_328 = function ($this$intercept, container, $cont) {
    var tmp = this.create_42($this$intercept, container, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__147.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_328(tmp, p2 instanceof HttpResponseContainer ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__147.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 5;
            this._exceptionState = 3;
            this._state_0 = 1;
            suspendResult = this._$this$intercept_4.proceedWith_1(this._container, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            Unit_getInstance();
            this._exceptionState = 5;
            this._state_0 = 2;
            continue $sm;
          case 2:
            this._exceptionState = 5;
            return Unit_getInstance();
          case 3:
            this._exceptionState = 5;
            var tmp_0 = this._exception_0;
            if (tmp_0 instanceof Error) {
              this._cause0_0 = this._exception_0;
              this._unwrappedCause1_0 = unwrapCancellationException(this._cause0_0);
              this._state_0 = 4;
              suspendResult = processException(this._$feature_2, this._unwrappedCause1_0, this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 4:
            suspendResult;
            throw this._unwrappedCause1_0;
          case 5:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 5) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__147.prototype.create_42 = function ($this$intercept, container, completion) {
    var i = new _no_name_provided__147(this._$feature_2, completion);
    i._$this$intercept_4 = $this$intercept;
    i._container = container;
    return i;
  };
  _no_name_provided__147.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided__148($feature, resultContinuation) {
    this._$feature_3 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__148.prototype.invoke_234 = function ($this$intercept, call, _anonymous_parameter_1_, $cont) {
    var tmp = this.create_18($this$intercept, call, _anonymous_parameter_1_, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__148.prototype.invoke_235 = function (p1, p2, p3, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, Sender) : false) ? p1 : THROW_CCE();
    var tmp_0 = p2 instanceof HttpClientCall ? p2 : THROW_CCE();
    return this.invoke_234(tmp, tmp_0, p3 instanceof HttpRequestBuilder ? p3 : THROW_CCE(), $cont);
  };
  _no_name_provided__148.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = validateResponse(this._$feature_3, this._call_2._get_response__1(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            return this._call_2;
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__148.prototype.create_18 = function ($this$intercept, call, _anonymous_parameter_1_, completion) {
    var i = new _no_name_provided__148(this._$feature_3, completion);
    i._$this$intercept_5 = $this$intercept;
    i._call_2 = call;
    i.__anonymous_parameter_1_ = _anonymous_parameter_1_;
    return i;
  };
  _no_name_provided__148.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 3
  };
  function validateResponse($this, response, $cont) {
    var tmp = new $validateResponseCOROUTINE$5($this, response, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function processException($this, cause, $cont) {
    var tmp = new $processExceptionCOROUTINE$6($this, cause, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function Config() {
    var tmp = this;
    tmp._responseValidators = ArrayList_init_$Create$();
    var tmp_0 = this;
    tmp_0._responseExceptionHandlers = ArrayList_init_$Create$();
    this._expectSuccess = true;
  }
  Config.prototype.validateResponse = function (block) {
    var tmp0_this = this;
    var tmp0_plusAssign_0 = tmp0_this._responseValidators;
    tmp0_plusAssign_0.add_32(block);
    Unit_getInstance();
  };
  Config.$metadata$ = {
    simpleName: 'Config',
    kind: 'class',
    interfaces: []
  };
  function Companion_47() {
    Companion_instance_46 = this;
    this._key_3 = new AttributeKey('HttpResponseValidator');
  }
  Companion_47.prototype._get_key__52 = function () {
    return this._key_3;
  };
  Companion_47.prototype.prepare_5 = function (block) {
    var tmp0_apply_0 = new Config();
    block(tmp0_apply_0);
    var config = tmp0_apply_0;
    return new HttpCallValidator(reversed(config._responseValidators), reversed(config._responseExceptionHandlers), config._expectSuccess);
  };
  Companion_47.prototype.prepare_20 = function (block) {
    return this.prepare_5(block);
  };
  Companion_47.prototype.install_4 = function (feature_0, scope) {
    var tmp = Phases_getInstance()._Before;
    scope._requestPipeline.intercept_0(tmp, _no_name_provided_$factory_110(feature_0, null));
    var BeforeReceive = new PipelinePhase('BeforeReceive');
    scope._responsePipeline.insertPhaseBefore_0(Phases_getInstance_1()._Receive_0, BeforeReceive);
    scope._responsePipeline.intercept_0(BeforeReceive, _no_name_provided_$factory_111(feature_0, null));
    var tmp_0 = get(scope, Feature_getInstance_2());
    tmp_0.intercept_1(_no_name_provided_$factory_112(feature_0, null));
  };
  Companion_47.prototype.install_23 = function (feature_0, scope) {
    return this.install_4(feature_0 instanceof HttpCallValidator ? feature_0 : THROW_CCE(), scope);
  };
  Companion_47.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: [HttpClientFeature]
  };
  var Companion_instance_46;
  function Companion_getInstance_46() {
    if (Companion_instance_46 == null)
      new Companion_47();
    return Companion_instance_46;
  }
  function $validateResponseCOROUTINE$5(_this_, response, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__26 = _this_;
    this._response_1 = response;
  }
  $validateResponseCOROUTINE$5.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            var tmp_0 = this;
            tmp_0._tmp0_forEach_00 = this.__this__26._responseValidators_0;
            this._tmp0_iterator_11 = this._tmp0_forEach_00.iterator_62();
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (!this._tmp0_iterator_11.hasNext_29()) {
              this._state_0 = 3;
              continue $sm;
            }
            this._element_22 = this._tmp0_iterator_11.next_31();
            this._state_0 = 2;
            suspendResult = this._element_22(this._response_1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            suspendResult;
            this._state_0 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $validateResponseCOROUTINE$5.$metadata$ = {
    simpleName: '$validateResponseCOROUTINE$5',
    kind: 'class',
    interfaces: []
  };
  function $processExceptionCOROUTINE$6(_this_, cause, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__27 = _this_;
    this._cause_1 = cause;
  }
  $processExceptionCOROUTINE$6.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            var tmp_0 = this;
            tmp_0._tmp0_forEach_00_0 = this.__this__27._callExceptionHandlers;
            this._tmp0_iterator_11_0 = this._tmp0_forEach_00_0.iterator_62();
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (!this._tmp0_iterator_11_0.hasNext_29()) {
              this._state_0 = 3;
              continue $sm;
            }
            this._element_22_0 = this._tmp0_iterator_11_0.next_31();
            this._state_0 = 2;
            suspendResult = this._element_22_0(this._cause_1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            suspendResult;
            this._state_0 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $processExceptionCOROUTINE$6.$metadata$ = {
    simpleName: '$processExceptionCOROUTINE$6',
    kind: 'class',
    interfaces: []
  };
  function HttpCallValidator(responseValidators, callExceptionHandlers, expectSuccess) {
    Companion_getInstance_46();
    this._responseValidators_0 = responseValidators;
    this._callExceptionHandlers = callExceptionHandlers;
    this._expectSuccess_0 = expectSuccess;
  }
  HttpCallValidator.$metadata$ = {
    simpleName: 'HttpCallValidator',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_110($feature, resultContinuation) {
    var i = new _no_name_provided__146($feature, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_326(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_111($feature, resultContinuation) {
    var i = new _no_name_provided__147($feature, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_328(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_112($feature, resultContinuation) {
    var i = new _no_name_provided__148($feature, resultContinuation);
    var l = function (p1, p2, p3, $cont) {
      return i.invoke_234(p1, p2, p3, $cont);
    };
    l.$arity = 3;
    return l;
  }
  function _no_name_provided_$factory_113($feature) {
    var i = new _no_name_provided__145($feature);
    return function () {
      return i.invoke_411();
    };
  }
  var FEATURE_INSTALLED_LIST;
  function HttpClientFeature() {
  }
  HttpClientFeature.$metadata$ = {
    simpleName: 'HttpClientFeature',
    kind: 'interface',
    interfaces: []
  };
  function get(_this_, feature_0) {
    var requestedFeature = feature(_this_, feature_0);
    if (!(requestedFeature == null)) {
      return requestedFeature;
    }var message = '' + 'Feature ' + feature_0 + ' is not installed. Consider using `install(' + feature_0._get_key__52() + ')` in client config first.';
    throw IllegalStateException_init_$Create$(toString_1(message));
  }
  function feature(_this_, feature_0) {
    var tmp0_safe_receiver = _this_._attributes_0.getOrNull_0(FEATURE_INSTALLED_LIST);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.getOrNull_0(feature_0._get_key__52());
  }
  function _no_name_provided__149($feature, resultContinuation) {
    this._$feature_4 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__149.prototype.invoke_326 = function ($this$intercept, content, $cont) {
    var tmp = this.create_41($this$intercept, content, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__149.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_326(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__149.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._$feature_4.addCharsetHeaders(this._$this$intercept_6._get_context__113());
            var tmp_0 = this._content_3;
            if (!(typeof tmp_0 === 'string')) {
              return Unit_getInstance();
            } else {
            }

            this._contentType0_0 = contentType(this._$this$intercept_6._get_context__113());
            if (!(this._contentType0_0 == null) ? !(this._contentType0_0._contentType === Text_getInstance()._Plain._contentType) : false) {
              return Unit_getInstance();
            }
            var tmp_1 = this;
            var tmp0_safe_receiver = this._contentType0_0;
            tmp_1._contentCharset1 = tmp0_safe_receiver == null ? null : charset(tmp0_safe_receiver);
            this._state_0 = 1;
            suspendResult = this._$this$intercept_6.proceedWith_1(wrapContent(this._$feature_4, this._content_3, this._contentCharset1), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            Unit_getInstance();
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__149.prototype.create_41 = function ($this$intercept, content, completion) {
    var i = new _no_name_provided__149(this._$feature_4, completion);
    i._$this$intercept_6 = $this$intercept;
    i._content_3 = content;
    return i;
  };
  _no_name_provided__149.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided__150($feature, resultContinuation) {
    this._$feature_5 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__150.prototype.invoke_328 = function ($this$intercept, _name_for_destructuring_parameter_0_, $cont) {
    var tmp = this.create_42($this$intercept, _name_for_destructuring_parameter_0_, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__150.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_328(tmp, p2 instanceof HttpResponseContainer ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__150.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            this._info0_0 = this.__name_for_destructuring_parameter_0__0.component1_2();
            this._body1_0 = this.__name_for_destructuring_parameter_0__0.component2_2();
            var tmp_0;
            if (!this._info0_0._type_0.equals(PrimitiveClasses_getInstance()._get_stringClass_())) {
              tmp_0 = true;
            } else {
              var tmp_1 = this._body1_0;
              tmp_0 = !isInterface(tmp_1, ByteReadChannel_1);
            }

            if (tmp_0)
              return Unit_getInstance();
            else {
            }

            this._state_0 = 1;
            suspendResult = readRemaining(this._body1_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._bodyBytes2 = suspendResult;
            this._content3 = this._$feature_5.read_0(this._$this$intercept_7._get_context__113(), this._bodyBytes2);
            this._state_0 = 2;
            suspendResult = this._$this$intercept_7.proceedWith_1(new HttpResponseContainer(this._info0_0, this._content3), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            suspendResult;
            Unit_getInstance();
            return Unit_getInstance();
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__150.prototype.create_42 = function ($this$intercept, _name_for_destructuring_parameter_0_, completion) {
    var i = new _no_name_provided__150(this._$feature_5, completion);
    i._$this$intercept_7 = $this$intercept;
    i.__name_for_destructuring_parameter_0__0 = _name_for_destructuring_parameter_0_;
    return i;
  };
  _no_name_provided__150.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function Config_0() {
    var tmp = this;
    tmp._charsets = LinkedHashSet_init_$Create$();
    var tmp_0 = this;
    tmp_0._charsetQuality = LinkedHashMap_init_$Create$();
    this._sendCharset = null;
    this._responseCharsetFallback = Charsets_getInstance()._UTF_8;
    this._defaultCharset = Charsets_getInstance()._UTF_8;
  }
  Config_0.$metadata$ = {
    simpleName: 'Config',
    kind: 'class',
    interfaces: []
  };
  function Feature() {
    Feature_instance = this;
    this._key_4 = new AttributeKey('HttpPlainText');
  }
  Feature.prototype._get_key__52 = function () {
    return this._key_4;
  };
  Feature.prototype.prepare_5 = function (block) {
    var tmp0_apply_0 = new Config_0();
    block(tmp0_apply_0);
    var config = tmp0_apply_0;
    return new HttpPlainText(config._charsets, config._charsetQuality, config._sendCharset, config._responseCharsetFallback);
  };
  Feature.prototype.prepare_20 = function (block) {
    return this.prepare_5(block);
  };
  Feature.prototype.install_7 = function (feature_0, scope) {
    var tmp = Phases_getInstance()._Render;
    scope._requestPipeline.intercept_0(tmp, _no_name_provided_$factory_116(feature_0, null));
    var tmp_0 = Phases_getInstance_1()._Parse;
    scope._responsePipeline.intercept_0(tmp_0, _no_name_provided_$factory_117(feature_0, null));
  };
  Feature.prototype.install_23 = function (feature_0, scope) {
    return this.install_7(feature_0 instanceof HttpPlainText ? feature_0 : THROW_CCE(), scope);
  };
  Feature.$metadata$ = {
    simpleName: 'Feature',
    kind: 'object',
    interfaces: [HttpClientFeature]
  };
  var Feature_instance;
  function Feature_getInstance() {
    if (Feature_instance == null)
      new Feature();
    return Feature_instance;
  }
  function wrapContent($this, content, contentCharset) {
    var tmp0_elvis_lhs = contentCharset;
    var charset_1 = tmp0_elvis_lhs == null ? $this._requestCharset : tmp0_elvis_lhs;
    var tmp = withCharset(Text_getInstance()._Plain, charset_1);
    return TextContent_init_$Create$(content, tmp, null, 4, null);
  }
  function sam$kotlin_Comparator$0(function_0) {
    this._function_0 = function_0;
  }
  sam$kotlin_Comparator$0.prototype.compare_4 = function (a, b) {
    return this._function_0(a, b);
  };
  sam$kotlin_Comparator$0.prototype.compare = function (a, b) {
    return this.compare_4(a, b);
  };
  sam$kotlin_Comparator$0.$metadata$ = {
    simpleName: 'sam$kotlin_Comparator$0',
    kind: 'class',
    interfaces: [Comparator]
  };
  function _no_name_provided__151() {
  }
  _no_name_provided__151.prototype.invoke_230 = function (a, b) {
    var tmp = b._second;
    return compareValues(tmp, a._second);
  };
  _no_name_provided__151.prototype.invoke_418 = function (p1, p2) {
    var tmp = p1 instanceof Pair ? p1 : THROW_CCE();
    return this.invoke_230(tmp, p2 instanceof Pair ? p2 : THROW_CCE());
  };
  _no_name_provided__151.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__152() {
  }
  _no_name_provided__152.prototype.invoke_232 = function (a, b) {
    var tmp = _get_name_(a);
    return compareValues(tmp, _get_name_(b));
  };
  _no_name_provided__152.prototype.invoke_418 = function (p1, p2) {
    var tmp = p1 instanceof Charset ? p1 : THROW_CCE();
    return this.invoke_232(tmp, p2 instanceof Charset ? p2 : THROW_CCE());
  };
  _no_name_provided__152.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function HttpPlainText(charsets, charsetQuality, sendCharset, responseCharsetFallback) {
    Feature_getInstance();
    this._responseCharsetFallback_0 = responseCharsetFallback;
    var tmp0_sortedByDescending_0 = toList_1(charsetQuality);
    var tmp = _no_name_provided_$factory_114();
    var withQuality = sortedWith(tmp0_sortedByDescending_0, new sam$kotlin_Comparator$0(tmp));
    var tmp0_filterTo_0_1 = ArrayList_init_$Create$();
    var tmp0_iterator_1_2 = charsets.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var element_2_3 = tmp0_iterator_1_2.next_31();
      if (!charsetQuality.containsKey_12(element_2_3)) {
        tmp0_filterTo_0_1.add_32(element_2_3);
        Unit_getInstance();
      } else {
      }
    }
    var tmp1_sortedBy_0 = tmp0_filterTo_0_1;
    var tmp_0 = _no_name_provided_$factory_115();
    var withoutQuality = sortedWith(tmp1_sortedBy_0, new sam$kotlin_Comparator$0(tmp_0));
    var tmp_1 = this;
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    var tmp0_iterator_1_3 = withoutQuality.iterator_62();
    while (tmp0_iterator_1_3.hasNext_29()) {
      var element_2_4 = tmp0_iterator_1_3.next_31();
      if (tmp0_apply_0_1._get_length__41() > 0) {
        tmp0_apply_0_1.append_6(',');
        Unit_getInstance();
      }tmp0_apply_0_1.append_6(_get_name_(element_2_4));
      Unit_getInstance();
    }
    var tmp0_iterator_1_5 = withQuality.iterator_62();
    while (tmp0_iterator_1_5.hasNext_29()) {
      var element_2_6 = tmp0_iterator_1_5.next_31();
      var charset_4_7 = element_2_6.component1_2();
      var quality_5_8 = element_2_6.component2_2();
      if (tmp0_apply_0_1._get_length__41() > 0) {
        tmp0_apply_0_1.append_6(',');
        Unit_getInstance();
      }var containsArg = quality_5_8;
      var tmp0_check_0_6_9 = 0.0 <= containsArg ? containsArg <= 1.0 : false;
      if (!tmp0_check_0_6_9) {
        var message_2_1_7_10 = 'Check failed.';
        throw IllegalStateException_init_$Create$(toString_1(message_2_1_7_10));
      }var tmp1_roundToInt_0_9_12 = 100 * quality_5_8;
      var truncatedQuality_8_11 = roundToInt(tmp1_roundToInt_0_9_12) / 100.0;
      tmp0_apply_0_1.append_6('' + _get_name_(charset_4_7) + ';q=' + truncatedQuality_8_11);
      Unit_getInstance();
    }
    if (charSequenceLength(tmp0_apply_0_1) === 0) {
      tmp0_apply_0_1.append_6(_get_name_(this._responseCharsetFallback_0));
      Unit_getInstance();
    } else {
    }
    tmp_1._acceptCharsetHeader = tmp0_apply_0_1.toString();
    var tmp_2 = this;
    var tmp0_elvis_lhs = sendCharset;
    var tmp2_elvis_lhs = tmp0_elvis_lhs == null ? firstOrNull_0(withoutQuality) : tmp0_elvis_lhs;
    var tmp_3;
    if (tmp2_elvis_lhs == null) {
      var tmp1_safe_receiver = firstOrNull_0(withQuality);
      tmp_3 = tmp1_safe_receiver == null ? null : tmp1_safe_receiver._first;
    } else {
      tmp_3 = tmp2_elvis_lhs;
    }
    var tmp3_elvis_lhs = tmp_3;
    tmp_2._requestCharset = tmp3_elvis_lhs == null ? Charsets_getInstance()._UTF_8 : tmp3_elvis_lhs;
  }
  HttpPlainText.prototype.read_0 = function (call, body) {
    var tmp0_elvis_lhs = charset_0(call._get_response__1());
    var actualCharset = tmp0_elvis_lhs == null ? this._responseCharsetFallback_0 : tmp0_elvis_lhs;
    return readText$default(body, actualCharset, 0, 2, null);
  };
  HttpPlainText.prototype.addCharsetHeaders = function (context) {
    if (!(context._headers_1.get_64(HttpHeaders_getInstance()._AcceptCharset) == null))
      return Unit_getInstance();
    context._headers_1.set_8(HttpHeaders_getInstance()._AcceptCharset, this._acceptCharsetHeader);
  };
  HttpPlainText.$metadata$ = {
    simpleName: 'HttpPlainText',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_114() {
    var i = new _no_name_provided__151();
    return function (p1, p2) {
      return i.invoke_230(p1, p2);
    };
  }
  function _no_name_provided_$factory_115() {
    var i = new _no_name_provided__152();
    return function (p1, p2) {
      return i.invoke_232(p1, p2);
    };
  }
  function _no_name_provided_$factory_116($feature, resultContinuation) {
    var i = new _no_name_provided__149($feature, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_326(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_117($feature, resultContinuation) {
    var i = new _no_name_provided__150($feature, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_328(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  var ALLOWED_FOR_REDIRECT;
  function handleCall(_this_, $this, context, origin, allowHttpsDowngrade, $cont) {
    var tmp = new $handleCallCOROUTINE$7($this, _this_, context, origin, allowHttpsDowngrade, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function _no_name_provided__153($feature, resultContinuation) {
    this._$feature_6 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__153.prototype.invoke_234 = function ($this$intercept, origin, context, $cont) {
    var tmp = this.create_18($this$intercept, origin, context, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__153.prototype.invoke_235 = function (p1, p2, p3, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, Sender) : false) ? p1 : THROW_CCE();
    var tmp_0 = p2 instanceof HttpClientCall ? p2 : THROW_CCE();
    return this.invoke_234(tmp, tmp_0, p3 instanceof HttpRequestBuilder ? p3 : THROW_CCE(), $cont);
  };
  _no_name_provided__153.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            if (this._$feature_6._get_checkHttpMethod_() ? !ALLOWED_FOR_REDIRECT.contains_48(this._origin_0._get_request__1()._get_method__6()) : false) {
              return this._origin_0;
            }
            this._state_0 = 1;
            suspendResult = handleCall(this._$this$intercept_8, Feature_getInstance_0(), this._context_4, this._origin_0, this._$feature_6._get_allowHttpsDowngrade_(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__153.prototype.create_18 = function ($this$intercept, origin, context, completion) {
    var i = new _no_name_provided__153(this._$feature_6, completion);
    i._$this$intercept_8 = $this$intercept;
    i._origin_0 = origin;
    i._context_4 = context;
    return i;
  };
  _no_name_provided__153.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 3
  };
  function $handleCallCOROUTINE$7(_this_, _this__0, context, origin, allowHttpsDowngrade, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__28 = _this_;
    this.__this__29 = _this__0;
    this._context_5 = context;
    this._origin_1 = origin;
    this._allowHttpsDowngrade = allowHttpsDowngrade;
  }
  $handleCallCOROUTINE$7.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            if (!isRedirect(this._origin_1._get_response__1()._get_status__16()))
              return this._origin_1;
            this._call0 = this._origin_1;
            this._requestBuilder1 = this._context_5;
            this._originProtocol2 = this._origin_1._get_request__1()._get_url__8()._protocol_0;
            this._originAuthority3 = _get_authority_(this._origin_1._get_request__1()._get_url__8());
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (false) {}
            this._location4 = this._call0._get_response__1()._get_headers__24().get_64(HttpHeaders_getInstance()._Location);
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1._tmp0_apply_05 = new HttpRequestBuilder();
            this._tmp0_apply_05.takeFromWithExecutionContext(this._requestBuilder1);
            Unit_getInstance();
            this._tmp0_apply_05._url_0._parameters_0.clear_26();
            var tmp0_safe_receiver_2 = this._location4;
            if (tmp0_safe_receiver_2 == null)
              null;
            else {
              takeFrom(this._tmp0_apply_05._url_0, tmp0_safe_receiver_2);
            }

            Unit_getInstance();
            if ((!this._allowHttpsDowngrade ? isSecure(this._originProtocol2) : false) ? !isSecure(this._tmp0_apply_05._url_0._protocol) : false) {
              return this._call0;
            }
            if (!(this._originAuthority3 === _get_authority__0(this._tmp0_apply_05._url_0))) {
              this._tmp0_apply_05._headers_1.remove_52(HttpHeaders_getInstance()._Authorization);
            }
            tmp_0._requestBuilder1 = this._tmp0_apply_05;
            this._state_0 = 2;
            suspendResult = this.__this__29.execute_9(this._requestBuilder1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            this._call0 = suspendResult;
            if (!isRedirect(this._call0._get_response__1()._get_status__16()))
              return this._call0;
            this._state_0 = 1;
            continue $sm;
          case 3:
            throw this._exception_0;
          case 4:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $handleCallCOROUTINE$7.$metadata$ = {
    simpleName: '$handleCallCOROUTINE$7',
    kind: 'class',
    interfaces: []
  };
  function Feature_0() {
    Feature_instance_0 = this;
    this._key_5 = new AttributeKey('HttpRedirect');
  }
  Feature_0.prototype._get_key__52 = function () {
    return this._key_5;
  };
  Feature_0.prototype.prepare_7 = function (block) {
    var tmp0_apply_0 = new HttpRedirect();
    block(tmp0_apply_0);
    return tmp0_apply_0;
  };
  Feature_0.prototype.prepare_20 = function (block) {
    return this.prepare_7(block);
  };
  Feature_0.prototype.install_9 = function (feature_0, scope) {
    var tmp = get(scope, Feature_getInstance_2());
    tmp.intercept_1(_no_name_provided_$factory_118(feature_0, null));
  };
  Feature_0.prototype.install_23 = function (feature_0, scope) {
    return this.install_9(feature_0 instanceof HttpRedirect ? feature_0 : THROW_CCE(), scope);
  };
  Feature_0.$metadata$ = {
    simpleName: 'Feature',
    kind: 'object',
    interfaces: [HttpClientFeature]
  };
  var Feature_instance_0;
  function Feature_getInstance_0() {
    if (Feature_instance_0 == null)
      new Feature_0();
    return Feature_instance_0;
  }
  function HttpRedirect() {
    Feature_getInstance_0();
    this.__checkHttpMethod = atomic_0(true);
    this.__allowHttpsDowngrade = atomic_0(false);
  }
  HttpRedirect.prototype._get_checkHttpMethod_ = function () {
    return this.__checkHttpMethod._value_3;
  };
  HttpRedirect.prototype._get_allowHttpsDowngrade_ = function () {
    return this.__allowHttpsDowngrade._value_3;
  };
  HttpRedirect.$metadata$ = {
    simpleName: 'HttpRedirect',
    kind: 'class',
    interfaces: []
  };
  function isRedirect(_this_) {
    var tmp0_subject = _this_._value_15;
    return ((((tmp0_subject === Companion_getInstance_35()._MovedPermanently._value_15 ? true : tmp0_subject === Companion_getInstance_35()._Found._value_15) ? true : tmp0_subject === Companion_getInstance_35()._TemporaryRedirect._value_15) ? true : tmp0_subject === Companion_getInstance_35()._PermanentRedirect._value_15) ? true : tmp0_subject === Companion_getInstance_35()._SeeOther._value_15) ? true : false;
  }
  function _no_name_provided_$factory_118($feature, resultContinuation) {
    var i = new _no_name_provided__153($feature, resultContinuation);
    var l = function (p1, p2, p3, $cont) {
      return i.invoke_234(p1, p2, p3, $cont);
    };
    l.$arity = 3;
    return l;
  }
  function _no_name_provided__154($scope, resultContinuation) {
    this._$scope = $scope;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__154.prototype.invoke_326 = function ($this$intercept, it, $cont) {
    var tmp = this.create_41($this$intercept, it, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__154.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_326(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__154.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 6;
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1._tmp0_also_00 = Job_0(this._$this$intercept_9._get_context__113()._executionContext);
            makeShared(this._tmp0_also_00);
            tmp_0._executionContext1 = this._tmp0_also_00;
            attachToClientEngineJob(this._executionContext1, ensureNotNull(this._$scope._coroutineContext_1.get_63(Key_getInstance_3())));
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._exceptionState = 4;
            this._exceptionState = 3;
            this._$this$intercept_9._get_context__113()._set_executionContext_(this._executionContext1);
            this._state_0 = 2;
            suspendResult = this._$this$intercept_9.proceed_1(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            var tmp_2 = this;
            suspendResult;
            tmp_2._tmp$ret$02_2 = Unit_getInstance();
            this._exceptionState = 6;
            this._state_0 = 5;
            continue $sm;
          case 3:
            this._exceptionState = 4;
            var tmp_3 = this._exception_0;
            if (tmp_3 instanceof Error) {
              var cause = this._exception_0;
              var tmp_4 = this;
              this._executionContext1.completeExceptionally_3(cause);
              Unit_getInstance();
              throw cause;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 4:
            this._exceptionState = 6;
            var t = this._exception_0;
            this._executionContext1.complete_3();
            Unit_getInstance();
            throw t;
          case 5:
            this._executionContext1.complete_3();
            Unit_getInstance();
            return Unit_getInstance();
          case 6:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 6) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__154.prototype.create_41 = function ($this$intercept, it, completion) {
    var i = new _no_name_provided__154(this._$scope, completion);
    i._$this$intercept_9 = $this$intercept;
    i._it_0 = it;
    return i;
  };
  _no_name_provided__154.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function Feature_1() {
    Feature_instance_1 = this;
    this._key_6 = new AttributeKey('RequestLifecycle');
  }
  Feature_1.prototype._get_key__52 = function () {
    return this._key_6;
  };
  Feature_1.prototype.prepare_9 = function (block) {
    return new HttpRequestLifecycle();
  };
  Feature_1.prototype.prepare_20 = function (block) {
    return this.prepare_9(block);
  };
  Feature_1.prototype.install_11 = function (feature_0, scope) {
    var tmp = Phases_getInstance()._Before;
    scope._requestPipeline.intercept_0(tmp, _no_name_provided_$factory_119(scope, null));
  };
  Feature_1.prototype.install_23 = function (feature_0, scope) {
    return this.install_11(feature_0 instanceof HttpRequestLifecycle ? feature_0 : THROW_CCE(), scope);
  };
  Feature_1.$metadata$ = {
    simpleName: 'Feature',
    kind: 'object',
    interfaces: [HttpClientFeature]
  };
  var Feature_instance_1;
  function Feature_getInstance_1() {
    if (Feature_instance_1 == null)
      new Feature_1();
    return Feature_instance_1;
  }
  function HttpRequestLifecycle() {
    Feature_getInstance_1();
  }
  HttpRequestLifecycle.$metadata$ = {
    simpleName: 'HttpRequestLifecycle',
    kind: 'class',
    interfaces: []
  };
  function attachToClientEngineJob(requestJob, clientEngineJob) {
    makeShared(clientEngineJob);
    var handler = clientEngineJob.invokeOnCompletion_27(_no_name_provided_$factory_120(requestJob));
    requestJob.invokeOnCompletion_27(_no_name_provided_$factory_121(handler));
    Unit_getInstance();
  }
  function _no_name_provided__155($requestJob) {
    this._$requestJob = $requestJob;
  }
  _no_name_provided__155.prototype.invoke_310 = function (cause) {
    if (!(cause == null)) {
      cancel_1(this._$requestJob, 'Engine failed', cause);
    } else {
      this._$requestJob.complete_3();
      Unit_getInstance();
    }
  };
  _no_name_provided__155.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__155.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__156($handler) {
    this._$handler = $handler;
  }
  _no_name_provided__156.prototype.invoke_310 = function (it) {
    this._$handler.dispose_29();
  };
  _no_name_provided__156.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__156.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_119($scope, resultContinuation) {
    var i = new _no_name_provided__154($scope, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_326(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_120($requestJob) {
    var i = new _no_name_provided__155($requestJob);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_121($handler) {
    var i = new _no_name_provided__156($handler);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided__157($feature, $scope, resultContinuation) {
    this._$feature_7 = $feature;
    this._$scope_0 = $scope;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__157.prototype.invoke_326 = function ($this$intercept, content, $cont) {
    var tmp = this.create_41($this$intercept, content, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__157.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_326(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__157.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 9;
            var tmp_0 = this;
            var tmp_1 = this._content_4;
            tmp_0._tmp0_check_00_0 = tmp_1 instanceof OutgoingContent;
            if (!this._tmp0_check_00_0) {
              var tmp_2 = '' + '\n|Fail to serialize body. Content has type: ' + getKClassFromExpression_0(this._content_4) + ', but OutgoingContent expected.\n|If you expect serialized body, please check that you have installed the corresponding feature(like `Json`) and set `Content-Type` header.';
              var message_1 = trimMargin$default(tmp_2, null, 1, null);
              throw IllegalStateException_init_$Create$(toString_1(message_1));
            }
            this._$this$intercept_10._get_context__113()._body_0 = this._content_4;
            this._sender1 = new DefaultSender(this._$feature_7._get_maxSendCount_(), this._$scope_0);
            this._state_0 = 1;
            suspendResult = this._sender1.execute_9(this._$this$intercept_10._get_context__113(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._currentCall2 = suspendResult;
            this._state_0 = 2;
            continue $sm;
          case 2:
            this._callChanged3 = false;
            this._tmp0_iterator4 = this._$feature_7._interceptors_0.iterator_62();
            this._state_0 = 3;
            continue $sm;
          case 3:
            if (!this._tmp0_iterator4.hasNext_29()) {
              this._state_0 = 6;
              continue $sm;
            }
            this._interceptor5 = this._tmp0_iterator4.next_31();
            this._state_0 = 4;
            suspendResult = this._interceptor5(this._sender1, this._currentCall2, this._$this$intercept_10._get_context__113(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 4:
            this._transformed6 = suspendResult;
            if (this._transformed6 === this._currentCall2) {
              this._state_0 = 3;
              continue $sm;
            } else {
              this._state_0 = 5;
              continue $sm;
            }

            break;
          case 5:
            this._currentCall2 = this._transformed6;
            this._callChanged3 = true;
            this._state_0 = 6;
            continue $sm;
          case 6:
            if (this._callChanged3) {
              this._state_0 = 2;
              continue $sm;
            }
            this._state_0 = 7;
            continue $sm;
          case 7:
            this._state_0 = 8;
            suspendResult = this._$this$intercept_10.proceedWith_1(this._currentCall2, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 8:
            suspendResult;
            Unit_getInstance();
            return Unit_getInstance();
          case 9:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 9) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__157.prototype.create_41 = function ($this$intercept, content, completion) {
    var i = new _no_name_provided__157(this._$feature_7, this._$scope_0, completion);
    i._$this$intercept_10 = $this$intercept;
    i._content_4 = content;
    return i;
  };
  _no_name_provided__157.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function $executeCOROUTINE$8(_this_, requestBuilder, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__30 = _this_;
    this._requestBuilder = requestBuilder;
  }
  $executeCOROUTINE$8.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            var tmp0_safe_receiver = this.__this__30._currentCall;
            if (tmp0_safe_receiver == null)
              null;
            else {
              cancel$default(tmp0_safe_receiver, null, 1, null);
              Unit_getInstance();
            }

            Unit_getInstance();
            if (this.__this__30._sentCount >= this.__this__30._maxSendCount) {
              throw new SendCountExceedException('' + 'Max send count ' + this.__this__30._maxSendCount + ' exceeded. Consider increasing the property ' + 'maxSendCount if more is required.');
            }
            var tmp1_this = this.__this__30;
            var tmp2 = tmp1_this._sentCount;
            tmp1_this._sentCount = tmp2 + 1 | 0;
            Unit_getInstance();
            this._state_0 = 1;
            suspendResult = this.__this__30._client._sendPipeline.execute_1(this._requestBuilder, this._requestBuilder._body_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var sendResult = suspendResult;
            var tmp3_elvis_lhs = sendResult instanceof HttpClientCall ? sendResult : null;
            var tmp_0;
            if (tmp3_elvis_lhs == null) {
              var tmp0_error_0 = '' + 'Failed to execute send pipeline. Expected [HttpClientCall], but received ' + sendResult;
              throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
            } else {
              tmp_0 = tmp3_elvis_lhs;
            }

            var call = tmp_0;
            this.__this__30._currentCall = call;
            return call;
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $executeCOROUTINE$8.$metadata$ = {
    simpleName: '$executeCOROUTINE$8',
    kind: 'class',
    interfaces: []
  };
  function HttpSend_init_$Init$(maxSendCount, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      maxSendCount = 20;
    HttpSend.call($this, maxSendCount);
    return $this;
  }
  function HttpSend_init_$Create$(maxSendCount, $mask0, $marker) {
    return HttpSend_init_$Init$(maxSendCount, $mask0, $marker, Object.create(HttpSend.prototype));
  }
  function Feature_2() {
    Feature_instance_2 = this;
    this._key_7 = new AttributeKey('HttpSend');
  }
  Feature_2.prototype._get_key__52 = function () {
    return this._key_7;
  };
  Feature_2.prototype.prepare_11 = function (block) {
    var tmp0_apply_0 = HttpSend_init_$Create$(0, 1, null);
    block(tmp0_apply_0);
    return tmp0_apply_0;
  };
  Feature_2.prototype.prepare_20 = function (block) {
    return this.prepare_11(block);
  };
  Feature_2.prototype.install_13 = function (feature_0, scope) {
    var tmp = Phases_getInstance()._Send;
    scope._requestPipeline.intercept_0(tmp, _no_name_provided_$factory_122(feature_0, scope, null));
  };
  Feature_2.prototype.install_23 = function (feature_0, scope) {
    return this.install_13(feature_0 instanceof HttpSend ? feature_0 : THROW_CCE(), scope);
  };
  Feature_2.$metadata$ = {
    simpleName: 'Feature',
    kind: 'object',
    interfaces: [HttpClientFeature]
  };
  var Feature_instance_2;
  function Feature_getInstance_2() {
    if (Feature_instance_2 == null)
      new Feature_2();
    return Feature_instance_2;
  }
  function DefaultSender(maxSendCount, client) {
    this._maxSendCount = maxSendCount;
    this._client = client;
    this._sentCount = 0;
    this._currentCall = null;
  }
  DefaultSender.prototype.execute_9 = function (requestBuilder, $cont) {
    var tmp = new $executeCOROUTINE$8(this, requestBuilder, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  DefaultSender.$metadata$ = {
    simpleName: 'DefaultSender',
    kind: 'class',
    interfaces: [Sender]
  };
  function HttpSend(maxSendCount) {
    Feature_getInstance_2();
    var tmp = this;
    tmp._maxSendCount$delegate = new _no_name_provided__67(maxSendCount);
    this._interceptors_0 = sharedList();
    makeShared(this);
  }
  HttpSend.prototype._set_maxSendCount_ = function (_set___) {
    return this._maxSendCount$delegate.setValue_4(this, maxSendCount$factory(), _set___);
  };
  HttpSend.prototype._get_maxSendCount_ = function () {
    return this._maxSendCount$delegate.getValue_3(this, maxSendCount$factory_0());
  };
  HttpSend.prototype.intercept_1 = function (block) {
    var tmp0_this = this;
    var tmp0_plusAssign_0 = tmp0_this._interceptors_0;
    tmp0_plusAssign_0.add_32(block);
    Unit_getInstance();
  };
  HttpSend.$metadata$ = {
    simpleName: 'HttpSend',
    kind: 'class',
    interfaces: []
  };
  function Sender() {
  }
  Sender.$metadata$ = {
    simpleName: 'Sender',
    kind: 'interface',
    interfaces: []
  };
  function SendCountExceedException(message) {
    IllegalStateException_init_$Init$_0(message, this);
    captureStack(this, SendCountExceedException);
  }
  SendCountExceedException.$metadata$ = {
    simpleName: 'SendCountExceedException',
    kind: 'class',
    interfaces: []
  };
  function maxSendCount$factory() {
    return getPropertyCallableRef('maxSendCount', 1, KMutableProperty1, function (receiver) {
      return receiver._get_maxSendCount_();
    }, function (receiver_0, value) {
      return receiver_0._set_maxSendCount_(value);
    });
  }
  function maxSendCount$factory_0() {
    return getPropertyCallableRef('maxSendCount', 1, KMutableProperty1, function (receiver) {
      return receiver._get_maxSendCount_();
    }, function (receiver_0, value) {
      return receiver_0._set_maxSendCount_(value);
    });
  }
  function _no_name_provided_$factory_122($feature, $scope, resultContinuation) {
    var i = new _no_name_provided__157($feature, $scope, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_326(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _set__requestTimeoutMillis_($this, _set___) {
    return $this.__requestTimeoutMillis$delegate.setValue_4($this, _requestTimeoutMillis$factory(), _set___);
  }
  function _get__requestTimeoutMillis_($this) {
    return $this.__requestTimeoutMillis$delegate.getValue_3($this, _requestTimeoutMillis$factory_0());
  }
  function _set__connectTimeoutMillis_($this, _set___) {
    return $this.__connectTimeoutMillis$delegate.setValue_4($this, _connectTimeoutMillis$factory(), _set___);
  }
  function _get__connectTimeoutMillis_($this) {
    return $this.__connectTimeoutMillis$delegate.getValue_3($this, _connectTimeoutMillis$factory_0());
  }
  function _set__socketTimeoutMillis_($this, _set___) {
    return $this.__socketTimeoutMillis$delegate.setValue_4($this, _socketTimeoutMillis$factory(), _set___);
  }
  function _get__socketTimeoutMillis_($this) {
    return $this.__socketTimeoutMillis$delegate.getValue_3($this, _socketTimeoutMillis$factory_0());
  }
  function HttpTimeoutCapabilityConfiguration_init_$Init$(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis, $this) {
    HttpTimeoutCapabilityConfiguration.call($this);
    $this._set_requestTimeoutMillis_(requestTimeoutMillis);
    $this._set_connectTimeoutMillis_(connectTimeoutMillis);
    $this._set_socketTimeoutMillis_(socketTimeoutMillis);
    return $this;
  }
  function HttpTimeoutCapabilityConfiguration_init_$Init$_0(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      requestTimeoutMillis = null;
    if (!(($mask0 & 2) === 0))
      connectTimeoutMillis = null;
    if (!(($mask0 & 4) === 0))
      socketTimeoutMillis = null;
    HttpTimeoutCapabilityConfiguration_init_$Init$(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis, $this);
    return $this;
  }
  function HttpTimeoutCapabilityConfiguration_init_$Create$(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis, $mask0, $marker) {
    return HttpTimeoutCapabilityConfiguration_init_$Init$_0(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis, $mask0, $marker, Object.create(HttpTimeoutCapabilityConfiguration.prototype));
  }
  function checkTimeoutValue($this, value) {
    var tmp0_require_0 = value == null ? true : value.compareTo_59(new Long(0, 0)) > 0;
    if (!tmp0_require_0) {
      var message_1 = 'Only positive timeout values are allowed, for infinite timeout use HttpTimeout.INFINITE_TIMEOUT_MS';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }return value;
  }
  function Companion_48() {
    Companion_instance_47 = this;
    this._key_8 = new AttributeKey('TimeoutConfiguration');
  }
  Companion_48.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_47;
  function Companion_getInstance_47() {
    if (Companion_instance_47 == null)
      new Companion_48();
    return Companion_instance_47;
  }
  function _no_name_provided__158($requestTimeout_5, $executionContext_7, $this_intercept, resultContinuation) {
    this._$requestTimeout_5 = $requestTimeout_5;
    this._$executionContext_7 = $executionContext_7;
    this._$this_intercept = $this_intercept;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__158.prototype.invoke_322 = function ($this$launch, $cont) {
    var tmp = this.create_47($this$launch, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__158.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__158.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = delay(this._$requestTimeout_5, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            this._$executionContext_7.cancel_22(new HttpRequestTimeoutException(this._$this_intercept._get_context__113()));
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__158.prototype.create_47 = function ($this$launch, completion) {
    var i = new _no_name_provided__158(this._$requestTimeout_5, this._$executionContext_7, this._$this_intercept, completion);
    i._$this$launch_2 = $this$launch;
    return i;
  };
  _no_name_provided__158.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__159($killer_8) {
    this._$killer_8 = $killer_8;
  }
  _no_name_provided__159.prototype.invoke_310 = function (it) {
    this._$killer_8.cancel$default_17(null, 1, null);
  };
  _no_name_provided__159.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__159.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__160($feature, $scope, resultContinuation) {
    this._$feature_8 = $feature;
    this._$scope_1 = $scope;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__160.prototype.invoke_326 = function ($this$intercept, it, $cont) {
    var tmp = this.create_41($this$intercept, it, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__160.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_326(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__160.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        if (tmp === 0) {
          this._exceptionState = 1;
          var configuration = this._$this$intercept_11._get_context__113().getCapabilityOrNull(Feature_getInstance_3());
          if (configuration == null ? hasNotNullTimeouts(this._$feature_8) : false) {
            configuration = HttpTimeoutCapabilityConfiguration_init_$Create$(null, null, null, 7, null);
            this._$this$intercept_11._get_context__113().setCapability(Feature_getInstance_3(), configuration);
          }var tmp0_safe_receiver = configuration;
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$0;
            l$ret$1: do {
              var tmp0_elvis_lhs_2 = tmp0_safe_receiver._get_connectTimeoutMillis_();
              tmp0_safe_receiver._set_connectTimeoutMillis_(tmp0_elvis_lhs_2 == null ? this._$feature_8._connectTimeoutMillis : tmp0_elvis_lhs_2);
              var tmp1_elvis_lhs_3 = tmp0_safe_receiver._get_socketTimeoutMillis_();
              tmp0_safe_receiver._set_socketTimeoutMillis_(tmp1_elvis_lhs_3 == null ? this._$feature_8._socketTimeoutMillis : tmp1_elvis_lhs_3);
              var tmp2_elvis_lhs_4 = tmp0_safe_receiver._get_requestTimeoutMillis_();
              tmp0_safe_receiver._set_requestTimeoutMillis_(tmp2_elvis_lhs_4 == null ? this._$feature_8._requestTimeoutMillis : tmp2_elvis_lhs_4);
              var tmp3_elvis_lhs_6 = tmp0_safe_receiver._get_requestTimeoutMillis_();
              var requestTimeout_5 = tmp3_elvis_lhs_6 == null ? this._$feature_8._requestTimeoutMillis : tmp3_elvis_lhs_6;
              var tmp_0;
              if (requestTimeout_5 == null) {
                tmp_0 = true;
              } else {
                Feature_getInstance_3();
                tmp_0 = equals_1(requestTimeout_5, new Long(-1, 2147483647));
              }
              if (tmp_0) {
                tmp$ret$0 = Unit_getInstance();
                break l$ret$1;
              } else {
              }
              var executionContext_7 = this._$this$intercept_11._get_context__113()._executionContext;
              var killer_8 = launch$default(this._$scope_1, null, null, _no_name_provided_$factory_124(requestTimeout_5, executionContext_7, this._$this$intercept_11, null), 3, null);
              var tmp_1 = this._$this$intercept_11._get_context__113()._executionContext;
              tmp_1.invokeOnCompletion_27(_no_name_provided_$factory_125(killer_8));
              Unit_getInstance();
            }
             while (false);
          }
          Unit_getInstance();
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this._exception_0;
        }} catch ($p) {
        throw $p;
      }
     while (true);
  };
  _no_name_provided__160.prototype.create_41 = function ($this$intercept, it, completion) {
    var i = new _no_name_provided__160(this._$feature_8, this._$scope_1, completion);
    i._$this$intercept_11 = $this$intercept;
    i._it_1 = it;
    return i;
  };
  _no_name_provided__160.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  HttpTimeoutCapabilityConfiguration.prototype._set_requestTimeoutMillis_ = function (value) {
    _set__requestTimeoutMillis_(this, checkTimeoutValue(this, value));
  };
  HttpTimeoutCapabilityConfiguration.prototype._get_requestTimeoutMillis_ = function () {
    return _get__requestTimeoutMillis_(this);
  };
  HttpTimeoutCapabilityConfiguration.prototype._set_connectTimeoutMillis_ = function (value) {
    _set__connectTimeoutMillis_(this, checkTimeoutValue(this, value));
  };
  HttpTimeoutCapabilityConfiguration.prototype._get_connectTimeoutMillis_ = function () {
    return _get__connectTimeoutMillis_(this);
  };
  HttpTimeoutCapabilityConfiguration.prototype._set_socketTimeoutMillis_ = function (value) {
    _set__socketTimeoutMillis_(this, checkTimeoutValue(this, value));
  };
  HttpTimeoutCapabilityConfiguration.prototype._get_socketTimeoutMillis_ = function () {
    return _get__socketTimeoutMillis_(this);
  };
  HttpTimeoutCapabilityConfiguration.prototype.build_17 = function () {
    return new HttpTimeout(this._get_requestTimeoutMillis_(), this._get_connectTimeoutMillis_(), this._get_socketTimeoutMillis_());
  };
  HttpTimeoutCapabilityConfiguration.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression_0(this).equals(getKClassFromExpression_0(other)))
      return false;
    if (other instanceof HttpTimeoutCapabilityConfiguration)
      other;
    else
      THROW_CCE();
    Unit_getInstance();
    if (!equals_1(_get__requestTimeoutMillis_(this), _get__requestTimeoutMillis_(other)))
      return false;
    if (!equals_1(_get__connectTimeoutMillis_(this), _get__connectTimeoutMillis_(other)))
      return false;
    if (!equals_1(_get__socketTimeoutMillis_(this), _get__socketTimeoutMillis_(other)))
      return false;
    return true;
  };
  HttpTimeoutCapabilityConfiguration.prototype.hashCode = function () {
    var tmp0_safe_receiver = _get__requestTimeoutMillis_(this);
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hashCode();
    var result = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp = imul(31, result);
    var tmp2_safe_receiver = _get__connectTimeoutMillis_(this);
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.hashCode();
    result = tmp + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp4_safe_receiver = _get__socketTimeoutMillis_(this);
    var tmp5_elvis_lhs = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.hashCode();
    result = tmp_0 + (tmp5_elvis_lhs == null ? 0 : tmp5_elvis_lhs) | 0;
    return result;
  };
  function HttpTimeoutCapabilityConfiguration() {
    Companion_getInstance_47();
    var tmp = this;
    var tmp0_shared_0 = new Long(0, 0);
    tmp.__requestTimeoutMillis$delegate = new _no_name_provided__67(tmp0_shared_0);
    var tmp_0 = this;
    var tmp0_shared_0_0 = new Long(0, 0);
    tmp_0.__connectTimeoutMillis$delegate = new _no_name_provided__67(tmp0_shared_0_0);
    var tmp_1 = this;
    var tmp0_shared_0_1 = new Long(0, 0);
    tmp_1.__socketTimeoutMillis$delegate = new _no_name_provided__67(tmp0_shared_0_1);
  }
  HttpTimeoutCapabilityConfiguration.$metadata$ = {
    simpleName: 'HttpTimeoutCapabilityConfiguration',
    kind: 'class',
    interfaces: []
  };
  function hasNotNullTimeouts($this) {
    return (!($this._requestTimeoutMillis == null) ? true : !($this._connectTimeoutMillis == null)) ? true : !($this._socketTimeoutMillis == null);
  }
  function Feature_3() {
    Feature_instance_3 = this;
    this._key_9 = new AttributeKey('TimeoutFeature');
    this._INFINITE_TIMEOUT_MS = new Long(-1, 2147483647);
  }
  Feature_3.prototype._get_key__52 = function () {
    return this._key_9;
  };
  Feature_3.prototype.prepare_13 = function (block) {
    var tmp0_apply_0 = HttpTimeoutCapabilityConfiguration_init_$Create$(null, null, null, 7, null);
    block(tmp0_apply_0);
    return tmp0_apply_0.build_17();
  };
  Feature_3.prototype.prepare_20 = function (block) {
    return this.prepare_13(block);
  };
  Feature_3.prototype.install_15 = function (feature_0, scope) {
    var tmp = Phases_getInstance()._Before;
    scope._requestPipeline.intercept_0(tmp, _no_name_provided_$factory_123(feature_0, scope, null));
  };
  Feature_3.prototype.install_23 = function (feature_0, scope) {
    return this.install_15(feature_0 instanceof HttpTimeout ? feature_0 : THROW_CCE(), scope);
  };
  Feature_3.$metadata$ = {
    simpleName: 'Feature',
    kind: 'object',
    interfaces: [HttpClientFeature, HttpClientEngineCapability]
  };
  var Feature_instance_3;
  function Feature_getInstance_3() {
    if (Feature_instance_3 == null)
      new Feature_3();
    return Feature_instance_3;
  }
  function HttpTimeout(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis) {
    Feature_getInstance_3();
    this._requestTimeoutMillis = requestTimeoutMillis;
    this._connectTimeoutMillis = connectTimeoutMillis;
    this._socketTimeoutMillis = socketTimeoutMillis;
  }
  HttpTimeout.$metadata$ = {
    simpleName: 'HttpTimeout',
    kind: 'class',
    interfaces: []
  };
  function HttpRequestTimeoutException(request) {
    var tmp = '' + 'Request timeout has expired [url=' + request._url_0.buildString() + ', ';
    var tmp0_safe_receiver = request.getCapabilityOrNull(Feature_getInstance_3());
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_requestTimeoutMillis_();
    CancellationException_init_$Init$(tmp + ('' + 'request_timeout=' + (tmp1_elvis_lhs == null ? 'unknown' : tmp1_elvis_lhs) + ' ms]'), this);
    captureStack(this, HttpRequestTimeoutException);
  }
  HttpRequestTimeoutException.$metadata$ = {
    simpleName: 'HttpRequestTimeoutException',
    kind: 'class',
    interfaces: []
  };
  function _requestTimeoutMillis$factory() {
    return getPropertyCallableRef('_requestTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__requestTimeoutMillis_(receiver);
    }, function (receiver_0, value) {
      return _set__requestTimeoutMillis_(receiver_0, value);
    });
  }
  function _requestTimeoutMillis$factory_0() {
    return getPropertyCallableRef('_requestTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__requestTimeoutMillis_(receiver);
    }, function (receiver_0, value) {
      return _set__requestTimeoutMillis_(receiver_0, value);
    });
  }
  function _connectTimeoutMillis$factory() {
    return getPropertyCallableRef('_connectTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__connectTimeoutMillis_(receiver);
    }, function (receiver_0, value) {
      return _set__connectTimeoutMillis_(receiver_0, value);
    });
  }
  function _connectTimeoutMillis$factory_0() {
    return getPropertyCallableRef('_connectTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__connectTimeoutMillis_(receiver);
    }, function (receiver_0, value) {
      return _set__connectTimeoutMillis_(receiver_0, value);
    });
  }
  function _socketTimeoutMillis$factory() {
    return getPropertyCallableRef('_socketTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__socketTimeoutMillis_(receiver);
    }, function (receiver_0, value) {
      return _set__socketTimeoutMillis_(receiver_0, value);
    });
  }
  function _socketTimeoutMillis$factory_0() {
    return getPropertyCallableRef('_socketTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__socketTimeoutMillis_(receiver);
    }, function (receiver_0, value) {
      return _set__socketTimeoutMillis_(receiver_0, value);
    });
  }
  function _no_name_provided_$factory_123($feature, $scope, resultContinuation) {
    var i = new _no_name_provided__160($feature, $scope, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_326(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_124($requestTimeout_5, $executionContext_7, $this_intercept, resultContinuation) {
    var i = new _no_name_provided__158($requestTimeout_5, $executionContext_7, $this_intercept, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_125($killer_8) {
    var i = new _no_name_provided__159($killer_8);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function wrapWithContent(_this_, content) {
    var tmp0_elvis_lhs = _this_._get_client__1();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_error_0 = 'Fail to create response observer in different native thread.';
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var currentClient = tmp;
    return new DelegatedCall(currentClient, content, _this_);
  }
  function DelegatedCall(client, content, originCall) {
    HttpClientCall.call(this, client);
    this._set_request__1(new DelegatedRequest(this, originCall._get_request__1()));
    this._set_response__1(new DelegatedResponse(this, content, originCall._get_response__1()));
  }
  DelegatedCall.$metadata$ = {
    simpleName: 'DelegatedCall',
    kind: 'class',
    interfaces: []
  };
  function DelegatedRequest(call, origin) {
    this._call_3 = call;
    this._$$delegate_0_1 = origin;
  }
  DelegatedRequest.prototype._get_call__6 = function () {
    return this._call_3;
  };
  DelegatedRequest.prototype._get_attributes__15 = function () {
    return this._$$delegate_0_1._get_attributes__15();
  };
  DelegatedRequest.prototype._get_coroutineContext__27 = function () {
    return this._$$delegate_0_1._get_coroutineContext__27();
  };
  DelegatedRequest.prototype._get_headers__24 = function () {
    return this._$$delegate_0_1._get_headers__24();
  };
  DelegatedRequest.prototype._get_method__6 = function () {
    return this._$$delegate_0_1._get_method__6();
  };
  DelegatedRequest.prototype._get_url__8 = function () {
    return this._$$delegate_0_1._get_url__8();
  };
  DelegatedRequest.$metadata$ = {
    simpleName: 'DelegatedRequest',
    kind: 'class',
    interfaces: [HttpRequest]
  };
  function DelegatedResponse(call, content, origin) {
    HttpResponse.call(this);
    this._call_4 = call;
    this._content_5 = content;
    this._origin_2 = origin;
    this._coroutineContext_3 = this._origin_2._get_coroutineContext__27();
  }
  DelegatedResponse.prototype._get_call__6 = function () {
    return this._call_4;
  };
  DelegatedResponse.prototype._get_content__8 = function () {
    return this._content_5;
  };
  DelegatedResponse.prototype._get_coroutineContext__27 = function () {
    return this._coroutineContext_3;
  };
  DelegatedResponse.prototype._get_status__16 = function () {
    return this._origin_2._get_status__16();
  };
  DelegatedResponse.prototype._get_version__3 = function () {
    return this._origin_2._get_version__3();
  };
  DelegatedResponse.prototype._get_requestTime__2 = function () {
    return this._origin_2._get_requestTime__2();
  };
  DelegatedResponse.prototype._get_responseTime__2 = function () {
    return this._origin_2._get_responseTime__2();
  };
  DelegatedResponse.prototype._get_headers__24 = function () {
    return this._origin_2._get_headers__24();
  };
  DelegatedResponse.$metadata$ = {
    simpleName: 'DelegatedResponse',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__161(resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__161.prototype.invoke_385 = function (it, $cont) {
    var tmp = this.create_43(it, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__161.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_385(p1 instanceof HttpResponse ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__161.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        if (tmp === 0) {
          this._exceptionState = 1;
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this._exception_0;
        }} catch ($p) {
        throw $p;
      }
     while (true);
  };
  _no_name_provided__161.prototype.create_43 = function (it, completion) {
    var i = new _no_name_provided__161(completion);
    i._it_2 = it;
    return i;
  };
  _no_name_provided__161.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__162($feature, $sideCall, resultContinuation) {
    this._$feature_9 = $feature;
    this._$sideCall = $sideCall;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__162.prototype.invoke_322 = function ($this$launch, $cont) {
    var tmp = this.create_47($this$launch, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__162.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__162.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 6;
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this._$feature_9._responseHandler_0(this._$sideCall._get_response__1(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            this._exceptionState = 6;
            this._state_0 = 3;
            continue $sm;
          case 2:
            this._exceptionState = 6;
            var tmp_0 = this._exception_0;
            if (tmp_0 instanceof Error) {
              this.__0 = this._exception_0;
              this._state_0 = 3;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 3:
            this._exceptionState = 6;
            this._content1_0 = this._$sideCall._get_response__1()._get_content__8();
            if (!this._content1_0._get_isClosedForRead__1()) {
              this._state_0 = 4;
              suspendResult = discard(this._content1_0, this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              this._state_0 = 5;
              continue $sm;
            }

            break;
          case 4:
            suspendResult;
            Unit_getInstance();
            this._state_0 = 5;
            continue $sm;
          case 5:
            return Unit_getInstance();
          case 6:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 6) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__162.prototype.create_47 = function ($this$launch, completion) {
    var i = new _no_name_provided__162(this._$feature_9, this._$sideCall, completion);
    i._$this$launch_3 = $this$launch;
    return i;
  };
  _no_name_provided__162.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__163($scope, $feature, resultContinuation) {
    this._$scope_2 = $scope;
    this._$feature_10 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__163.prototype.invoke_314 = function ($this$intercept, response, $cont) {
    var tmp = this.create_36($this$intercept, response, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__163.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_314(tmp, p2 instanceof HttpResponse ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__163.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._tmp0_container0 = split_1(this._response_2._get_content__8(), this._response_2);
            this._loggingContent1 = this._tmp0_container0.component1_2();
            this._responseContent2 = this._tmp0_container0.component2_2();
            this._newClientCall3 = wrapWithContent(this._$this$intercept_12._get_context__113(), this._responseContent2);
            this._sideCall4 = wrapWithContent(this._newClientCall3, this._loggingContent1);
            launch$default(this._$scope_2, null, null, _no_name_provided_$factory_128(this._$feature_10, this._sideCall4, null), 3, null);
            Unit_getInstance();
            this._$this$intercept_12._get_context__113()._response = this._newClientCall3._get_response__1();
            this._$this$intercept_12._get_context__113()._request = this._newClientCall3._get_request__1();
            var tmp_0 = this._response_2._get_coroutineContext__27().get_63(Key_getInstance_3());
            ((!(tmp_0 == null) ? isInterface(tmp_0, CompletableJob) : false) ? tmp_0 : THROW_CCE()).complete_3();
            Unit_getInstance();
            this._state_0 = 1;
            suspendResult = this._$this$intercept_12.proceedWith_1(this._$this$intercept_12._get_context__113()._get_response__1(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            Unit_getInstance();
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__163.prototype.create_36 = function ($this$intercept, response, completion) {
    var i = new _no_name_provided__163(this._$scope_2, this._$feature_10, completion);
    i._$this$intercept_12 = $this$intercept;
    i._response_2 = response;
    return i;
  };
  _no_name_provided__163.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function Config_1() {
    var tmp = this;
    tmp._responseHandler = _no_name_provided_$factory_126(null);
  }
  Config_1.$metadata$ = {
    simpleName: 'Config',
    kind: 'class',
    interfaces: []
  };
  function Feature_4() {
    Feature_instance_4 = this;
    this._key_10 = new AttributeKey('BodyInterceptor');
  }
  Feature_4.prototype._get_key__52 = function () {
    return this._key_10;
  };
  Feature_4.prototype.prepare_15 = function (block) {
    var tmp0_apply_0 = new Config_1();
    block(tmp0_apply_0);
    return new ResponseObserver(tmp0_apply_0._responseHandler);
  };
  Feature_4.prototype.prepare_20 = function (block) {
    return this.prepare_15(block);
  };
  Feature_4.prototype.install_17 = function (feature_0, scope) {
    var tmp = Phases_getInstance_2()._After_0;
    scope._receivePipeline.intercept_0(tmp, _no_name_provided_$factory_127(scope, feature_0, null));
  };
  Feature_4.prototype.install_23 = function (feature_0, scope) {
    return this.install_17(feature_0 instanceof ResponseObserver ? feature_0 : THROW_CCE(), scope);
  };
  Feature_4.$metadata$ = {
    simpleName: 'Feature',
    kind: 'object',
    interfaces: [HttpClientFeature]
  };
  var Feature_instance_4;
  function Feature_getInstance_4() {
    if (Feature_instance_4 == null)
      new Feature_4();
    return Feature_instance_4;
  }
  function ResponseObserver(responseHandler) {
    Feature_getInstance_4();
    this._responseHandler_0 = responseHandler;
  }
  ResponseObserver.$metadata$ = {
    simpleName: 'ResponseObserver',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_126(resultContinuation) {
    var i = new _no_name_provided__161(resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_385(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_127($scope, $feature, resultContinuation) {
    var i = new _no_name_provided__163($scope, $feature, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_314(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_128($feature, $sideCall, resultContinuation) {
    var i = new _no_name_provided__162($feature, $sideCall, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  var REQUEST_EXTENSIONS_KEY;
  function WebSocketCapability() {
    WebSocketCapability_instance = this;
  }
  WebSocketCapability.prototype.toString = function () {
    return 'WebSocketCapability';
  };
  WebSocketCapability.$metadata$ = {
    simpleName: 'WebSocketCapability',
    kind: 'object',
    interfaces: [HttpClientEngineCapability]
  };
  var WebSocketCapability_instance;
  function WebSocketCapability_getInstance() {
    if (WebSocketCapability_instance == null)
      new WebSocketCapability();
    return WebSocketCapability_instance;
  }
  function WebSocketException(message) {
    IllegalStateException_init_$Init$_0(message, this);
    captureStack(this, WebSocketException);
  }
  WebSocketException.$metadata$ = {
    simpleName: 'WebSocketException',
    kind: 'class',
    interfaces: []
  };
  function ClientUpgradeContent() {
  }
  ClientUpgradeContent.$metadata$ = {
    simpleName: 'ClientUpgradeContent',
    kind: 'class',
    interfaces: []
  };
  function DefaultHttpRequest(call, data) {
    this._call_5 = call;
    this._method = data._method_1;
    this._url = data._url_1;
    this._content_6 = data._body_1;
    this._headers_0 = data._headers_2;
    this._attributes_1 = data._attributes_3;
  }
  DefaultHttpRequest.prototype._get_call__6 = function () {
    return this._call_5;
  };
  DefaultHttpRequest.prototype._get_coroutineContext__27 = function () {
    return this._get_call__6()._get_coroutineContext__27();
  };
  DefaultHttpRequest.prototype._get_method__6 = function () {
    return this._method;
  };
  DefaultHttpRequest.prototype._get_url__8 = function () {
    return this._url;
  };
  DefaultHttpRequest.prototype._get_headers__24 = function () {
    return this._headers_0;
  };
  DefaultHttpRequest.prototype._get_attributes__15 = function () {
    return this._attributes_1;
  };
  DefaultHttpRequest.$metadata$ = {
    simpleName: 'DefaultHttpRequest',
    kind: 'class',
    interfaces: [HttpRequest]
  };
  function Companion_49() {
    Companion_instance_48 = this;
  }
  Companion_49.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_48;
  function Companion_getInstance_48() {
    if (Companion_instance_48 == null)
      new Companion_49();
    return Companion_instance_48;
  }
  function _no_name_provided__164() {
  }
  _no_name_provided__164.prototype.invoke_411 = function () {
    return sharedMap();
  };
  _no_name_provided__164.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function HttpRequestBuilder() {
    Companion_getInstance_48();
    var tmp = this;
    tmp._url_0 = URLBuilder_init_$Create$(null, null, 0, null, null, null, null, null, false, 511, null);
    this._method_0 = Companion_getInstance_33()._Get;
    var tmp_0 = this;
    tmp_0._headers_1 = HeadersBuilder_init_$Create$(0, 1, null);
    this._body_0 = EmptyContent_getInstance();
    var tmp_1 = this;
    var tmp0_also_0 = SupervisorJob$default(null, 1, null);
    makeShared(tmp0_also_0);
    tmp_1._executionContext = tmp0_also_0;
    this._attributes_2 = Attributes_1(true);
  }
  HttpRequestBuilder.prototype._get_headers__24 = function () {
    return this._headers_1;
  };
  HttpRequestBuilder.prototype._set_executionContext_ = function (value) {
    makeShared(value);
    this._executionContext = value;
  };
  HttpRequestBuilder.prototype.url_0 = function (block) {
    return block(this._url_0, this._url_0);
  };
  HttpRequestBuilder.prototype.build_17 = function () {
    var tmp = this._url_0.build_17();
    var tmp_0 = this._method_0;
    var tmp_1 = this._headers_1.build_17();
    var tmp_2 = this._body_0;
    var tmp0_elvis_lhs = tmp_2 instanceof OutgoingContent ? tmp_2 : null;
    var tmp_3;
    if (tmp0_elvis_lhs == null) {
      var tmp0_error_0 = '' + 'No request transformation found: ' + this._body_0;
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    } else {
      tmp_3 = tmp0_elvis_lhs;
    }
    return new HttpRequestData(tmp, tmp_0, tmp_1, tmp_3, this._executionContext, this._attributes_2);
  };
  HttpRequestBuilder.prototype.takeFromWithExecutionContext = function (builder) {
    this._set_executionContext_(builder._executionContext);
    return this.takeFrom(builder);
  };
  HttpRequestBuilder.prototype.takeFrom = function (builder) {
    this._method_0 = builder._method_0;
    this._body_0 = builder._body_0;
    takeFrom_0(this._url_0, builder._url_0);
    Unit_getInstance();
    this._url_0._encodedPath = isBlank(this._url_0._encodedPath) ? '/' : this._url_0._encodedPath;
    appendAll(this._headers_1, builder._headers_1);
    Unit_getInstance();
    putAll_1(this._attributes_2, builder._attributes_2);
    return this;
  };
  HttpRequestBuilder.prototype.setCapability = function (key, capability) {
    var capabilities = this._attributes_2.computeIfAbsent_0(ENGINE_CAPABILITIES_KEY, _no_name_provided_$factory_129());
    capabilities.put_10(key, capability);
    Unit_getInstance();
  };
  HttpRequestBuilder.prototype.getCapabilityOrNull = function (key) {
    var tmp0_safe_receiver = this._attributes_2.getOrNull_0(ENGINE_CAPABILITIES_KEY);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_65(key);
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  HttpRequestBuilder.$metadata$ = {
    simpleName: 'HttpRequestBuilder',
    kind: 'class',
    interfaces: [HttpMessageBuilder]
  };
  function HttpRequestData(url_0, method, headers, body, executionContext, attributes) {
    this._url_1 = url_0;
    this._method_1 = method;
    this._headers_2 = headers;
    this._body_1 = body;
    this._executionContext_0 = executionContext;
    this._attributes_3 = attributes;
    var tmp = this;
    var tmp0_safe_receiver = this._attributes_3.getOrNull_0(ENGINE_CAPABILITIES_KEY);
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_keys__8();
    tmp._requiredCapabilities = tmp1_elvis_lhs == null ? emptySet() : tmp1_elvis_lhs;
  }
  HttpRequestData.prototype.toString = function () {
    return '' + 'HttpRequestData(url=' + this._url_1 + ', method=' + this._method_1 + ')';
  };
  HttpRequestData.$metadata$ = {
    simpleName: 'HttpRequestData',
    kind: 'class',
    interfaces: []
  };
  function putAll_1(_this_, other) {
    var tmp0_forEach_0 = other._get_allKeys__0();
    var tmp0_iterator_1 = tmp0_forEach_0.iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      _this_.put_11(element_2 instanceof AttributeKey ? element_2 : THROW_CCE(), other.get_58(element_2));
    }
  }
  function HttpResponseData(statusCode, requestTime, headers, version, body, callContext_0) {
    this._statusCode = statusCode;
    this._requestTime_0 = requestTime;
    this._headers_3 = headers;
    this._version_0 = version;
    this._body_2 = body;
    this._callContext_0 = callContext_0;
    var tmp = this;
    tmp._responseTime_0 = GMTDate$default(null, 1, null);
  }
  HttpResponseData.prototype.toString = function () {
    return '' + 'HttpResponseData=(statusCode=' + this._statusCode + ')';
  };
  HttpResponseData.$metadata$ = {
    simpleName: 'HttpResponseData',
    kind: 'class',
    interfaces: []
  };
  function HttpRequest() {
  }
  HttpRequest.prototype._get_coroutineContext__27 = function () {
    return this._get_call__6()._get_coroutineContext__27();
  };
  HttpRequest.$metadata$ = {
    simpleName: 'HttpRequest',
    kind: 'interface',
    interfaces: [HttpMessage, CoroutineScope]
  };
  function url(_this_, scheme, host, port, path_0, block) {
    var tmp0_apply_0 = _this_._url_0;
    tmp0_apply_0._protocol = Companion_getInstance_39().createOrDefault(scheme);
    tmp0_apply_0._host = host;
    tmp0_apply_0._port = port;
    tmp0_apply_0._encodedPath = path_0;
    block(_this_._url_0);
    Unit_getInstance();
  }
  function url$default(_this_, scheme, host, port, path_0, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      scheme = 'http';
    if (!(($mask0 & 2) === 0))
      host = 'localhost';
    if (!(($mask0 & 4) === 0))
      port = 0;
    if (!(($mask0 & 8) === 0))
      path_0 = '/';
    if (!(($mask0 & 16) === 0)) {
      block = _no_name_provided_$factory_130();
    }return url(_this_, scheme, host, port, path_0, block);
  }
  function isUpgradeRequest(_this_) {
    var tmp = _this_._body_1;
    return tmp instanceof ClientUpgradeContent;
  }
  function _no_name_provided__165() {
  }
  _no_name_provided__165.prototype.invoke_257 = function ($this$null) {
    return Unit_getInstance();
  };
  _no_name_provided__165.prototype.invoke_420 = function (p1) {
    this.invoke_257(p1 instanceof URLBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__165.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_129() {
    var i = new _no_name_provided__164();
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_130() {
    var i = new _no_name_provided__165();
    return function (p1) {
      i.invoke_257(p1);
      return Unit_getInstance();
    };
  }
  function Phases() {
    Phases_instance = this;
    this._Before = new PipelinePhase('Before');
    this._State = new PipelinePhase('State');
    this._Transform = new PipelinePhase('Transform');
    this._Render = new PipelinePhase('Render');
    this._Send = new PipelinePhase('Send');
  }
  Phases.$metadata$ = {
    simpleName: 'Phases',
    kind: 'object',
    interfaces: []
  };
  var Phases_instance;
  function Phases_getInstance() {
    if (Phases_instance == null)
      new Phases();
    return Phases_instance;
  }
  function HttpRequestPipeline(developmentMode) {
    Phases_getInstance();
    Pipeline.call(this, [Phases_getInstance()._Before, Phases_getInstance()._State, Phases_getInstance()._Transform, Phases_getInstance()._Render, Phases_getInstance()._Send]);
    this._developmentMode_0 = developmentMode;
  }
  HttpRequestPipeline.prototype._get_developmentMode__4 = function () {
    return this._developmentMode_0;
  };
  HttpRequestPipeline.$metadata$ = {
    simpleName: 'HttpRequestPipeline',
    kind: 'class',
    interfaces: []
  };
  function Phases_0() {
    Phases_instance_0 = this;
    this._Before_0 = new PipelinePhase('Before');
    this._State_0 = new PipelinePhase('State');
    this._Monitoring = new PipelinePhase('Monitoring');
    this._Engine = new PipelinePhase('Engine');
    this._Receive = new PipelinePhase('Receive');
  }
  Phases_0.$metadata$ = {
    simpleName: 'Phases',
    kind: 'object',
    interfaces: []
  };
  var Phases_instance_0;
  function Phases_getInstance_0() {
    if (Phases_instance_0 == null)
      new Phases_0();
    return Phases_instance_0;
  }
  function HttpSendPipeline(developmentMode) {
    Phases_getInstance_0();
    Pipeline.call(this, [Phases_getInstance_0()._Before_0, Phases_getInstance_0()._State_0, Phases_getInstance_0()._Monitoring, Phases_getInstance_0()._Engine, Phases_getInstance_0()._Receive]);
    this._developmentMode_1 = developmentMode;
  }
  HttpSendPipeline.prototype._get_developmentMode__4 = function () {
    return this._developmentMode_1;
  };
  HttpSendPipeline.$metadata$ = {
    simpleName: 'HttpSendPipeline',
    kind: 'class',
    interfaces: []
  };
  var RN_BYTES;
  function RN_BYTES$init$() {
    var tmp0_toByteArray_0 = '\r\n';
    var tmp1_toByteArray_0 = Charsets_getInstance()._UTF_8;
    return encodeToByteArray(tmp1_toByteArray_0.newEncoder_0(), tmp0_toByteArray_0, 0, tmp0_toByteArray_0.length);
  }
  function parameter(_this_, key, value) {
    var tmp0_safe_receiver = value;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      _this_._url_0._parameters_0.append_26(key, toString_1(tmp0_safe_receiver));
      tmp = Unit_getInstance();
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      tmp_0 = Unit_getInstance();
    } else {
      tmp_0 = Unit_getInstance();
    }
    return tmp_0;
  }
  function header(_this_, key, value) {
    var tmp0_safe_receiver = value;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      _this_._headers_1.append_26(key, toString_1(tmp0_safe_receiver));
      tmp = Unit_getInstance();
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      tmp_0 = Unit_getInstance();
    } else {
      tmp_0 = Unit_getInstance();
    }
    return tmp_0;
  }
  function accept(_this_, contentType_1) {
    return _this_._headers_1.append_26(HttpHeaders_getInstance()._Accept, contentType_1.toString());
  }
  function DefaultHttpResponse(call, responseData) {
    HttpResponse.call(this);
    this._call_6 = call;
    this._coroutineContext_4 = responseData._callContext_0;
    this._status_1 = responseData._statusCode;
    this._version_1 = responseData._version_0;
    this._requestTime_1 = responseData._requestTime_0;
    this._responseTime_1 = responseData._responseTime_0;
    var tmp = this;
    var tmp_0 = responseData._body_2;
    var tmp0_elvis_lhs = isInterface(tmp_0, ByteReadChannel_1) ? tmp_0 : null;
    tmp._content_7 = tmp0_elvis_lhs == null ? Companion_getInstance_21()._get_Empty__1() : tmp0_elvis_lhs;
    this._headers_4 = responseData._headers_3;
  }
  DefaultHttpResponse.prototype._get_call__6 = function () {
    return this._call_6;
  };
  DefaultHttpResponse.prototype._get_coroutineContext__27 = function () {
    return this._coroutineContext_4;
  };
  DefaultHttpResponse.prototype._get_status__16 = function () {
    return this._status_1;
  };
  DefaultHttpResponse.prototype._get_version__3 = function () {
    return this._version_1;
  };
  DefaultHttpResponse.prototype._get_requestTime__2 = function () {
    return this._requestTime_1;
  };
  DefaultHttpResponse.prototype._get_responseTime__2 = function () {
    return this._responseTime_1;
  };
  DefaultHttpResponse.prototype._get_content__8 = function () {
    return this._content_7;
  };
  DefaultHttpResponse.prototype._get_headers__24 = function () {
    return this._headers_4;
  };
  DefaultHttpResponse.$metadata$ = {
    simpleName: 'DefaultHttpResponse',
    kind: 'class',
    interfaces: []
  };
  function HttpResponse() {
  }
  HttpResponse.prototype.toString = function () {
    return '' + 'HttpResponse[' + _get_request_(this)._get_url__8() + ', ' + this._get_status__16() + ']';
  };
  HttpResponse.$metadata$ = {
    simpleName: 'HttpResponse',
    kind: 'class',
    interfaces: [HttpMessage, CoroutineScope]
  };
  function complete(_this_) {
    var tmp = ensureNotNull(_this_._get_coroutineContext__27().get_63(Key_getInstance_3()));
    var job = isInterface(tmp, CompletableJob) ? tmp : THROW_CCE();
    job.complete_3();
    Unit_getInstance();
  }
  function _get_request_(_this_) {
    return _this_._get_call__6()._get_request__1();
  }
  function Phases_1() {
    Phases_instance_1 = this;
    this._Receive_0 = new PipelinePhase('Receive');
    this._Parse = new PipelinePhase('Parse');
    this._Transform_0 = new PipelinePhase('Transform');
    this._State_1 = new PipelinePhase('State');
    this._After = new PipelinePhase('After');
  }
  Phases_1.$metadata$ = {
    simpleName: 'Phases',
    kind: 'object',
    interfaces: []
  };
  var Phases_instance_1;
  function Phases_getInstance_1() {
    if (Phases_instance_1 == null)
      new Phases_1();
    return Phases_instance_1;
  }
  function HttpResponsePipeline(developmentMode) {
    Phases_getInstance_1();
    Pipeline.call(this, [Phases_getInstance_1()._Receive_0, Phases_getInstance_1()._Parse, Phases_getInstance_1()._Transform_0, Phases_getInstance_1()._State_1, Phases_getInstance_1()._After]);
    this._developmentMode_2 = developmentMode;
  }
  HttpResponsePipeline.prototype._get_developmentMode__4 = function () {
    return this._developmentMode_2;
  };
  HttpResponsePipeline.$metadata$ = {
    simpleName: 'HttpResponsePipeline',
    kind: 'class',
    interfaces: []
  };
  function Phases_2() {
    Phases_instance_2 = this;
    this._Before_1 = new PipelinePhase('Before');
    this._State_2 = new PipelinePhase('State');
    this._After_0 = new PipelinePhase('After');
  }
  Phases_2.$metadata$ = {
    simpleName: 'Phases',
    kind: 'object',
    interfaces: []
  };
  var Phases_instance_2;
  function Phases_getInstance_2() {
    if (Phases_instance_2 == null)
      new Phases_2();
    return Phases_instance_2;
  }
  function HttpReceivePipeline(developmentMode) {
    Phases_getInstance_2();
    Pipeline.call(this, [Phases_getInstance_2()._Before_1, Phases_getInstance_2()._State_2, Phases_getInstance_2()._After_0]);
    this._developmentMode_3 = developmentMode;
  }
  HttpReceivePipeline.prototype._get_developmentMode__4 = function () {
    return this._developmentMode_3;
  };
  HttpReceivePipeline.$metadata$ = {
    simpleName: 'HttpReceivePipeline',
    kind: 'class',
    interfaces: []
  };
  function HttpResponseContainer(expectedType, response) {
    this._expectedType = expectedType;
    this._response_3 = response;
  }
  HttpResponseContainer.prototype.component1_2 = function () {
    return this._expectedType;
  };
  HttpResponseContainer.prototype.component2_2 = function () {
    return this._response_3;
  };
  HttpResponseContainer.prototype.toString = function () {
    return '' + 'HttpResponseContainer(expectedType=' + this._expectedType + ', response=' + this._response_3 + ')';
  };
  HttpResponseContainer.prototype.hashCode = function () {
    var result = this._expectedType.hashCode();
    result = imul(result, 31) + hashCode(this._response_3) | 0;
    return result;
  };
  HttpResponseContainer.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof HttpResponseContainer))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof HttpResponseContainer ? other : THROW_CCE();
    if (!this._expectedType.equals(tmp0_other_with_cast._expectedType))
      return false;
    if (!equals_1(this._response_3, tmp0_other_with_cast._response_3))
      return false;
    return true;
  };
  HttpResponseContainer.$metadata$ = {
    simpleName: 'HttpResponseContainer',
    kind: 'class',
    interfaces: []
  };
  function readText_0(_this_, fallbackCharset, $cont) {
    var tmp = new $readTextCOROUTINE$10(_this_, fallbackCharset, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function readText$default_0(_this_, fallbackCharset, $mask0, $handler, $cont) {
    if (!(($mask0 & 1) === 0))
      fallbackCharset = null;
    return readText_0(_this_, fallbackCharset, $cont);
  }
  function checkCapabilities($this) {
    var tmp0_safe_receiver = $this._builder_1._attributes_2.getOrNull_0(ENGINE_CAPABILITIES_KEY);
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_keys__8();
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp0_filterIsInstanceTo_0_1 = ArrayList_init_$Create$();
      var tmp0_iterator_1_2 = tmp1_safe_receiver.iterator_62();
      while (tmp0_iterator_1_2.hasNext_29()) {
        var element_2_3 = tmp0_iterator_1_2.next_31();
        if (!(element_2_3 == null) ? isInterface(element_2_3, HttpClientFeature) : false) {
          tmp0_filterIsInstanceTo_0_1.add_32(element_2_3);
          Unit_getInstance();
        } else {
        }
      }
      tmp = tmp0_filterIsInstanceTo_0_1;
    }
    var tmp2_safe_receiver = tmp;
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp0_iterator_1 = tmp2_safe_receiver.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        var tmp$ret$0;
        l$ret$1: do {
          var tmp0_requireNotNull_0_4 = feature($this._client_0, element_2);
          if (tmp0_requireNotNull_0_4 == null) {
            var message_1_5 = '' + 'Consider installing ' + element_2 + ' feature because the request requires it to be installed';
            throw IllegalArgumentException_init_$Create$_0(toString_1(message_1_5));
          } else {
            tmp$ret$0 = tmp0_requireNotNull_0_4;
            break l$ret$1;
          }
        }
         while (false);
        Unit_getInstance();
      }
      Unit_getInstance();
    }
    Unit_getInstance();
  }
  function _no_name_provided__166(resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__166.prototype.invoke_259 = function (it, $cont) {
    var tmp = this.create_43(it, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__166.prototype.invoke_420 = function (p1, $cont) {
    return this.invoke_259(p1 instanceof HttpResponse ? p1 : THROW_CCE(), $cont);
  };
  _no_name_provided__166.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = save(this._it_3._get_call__6(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var savedCall = suspendResult;
            return savedCall._get_response__1();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__166.prototype.create_43 = function (it, completion) {
    var i = new _no_name_provided__166(completion);
    i._it_3 = it;
    return i;
  };
  _no_name_provided__166.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function $executeCOROUTINE$11(_this_, block, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__31 = _this_;
    this._block = block;
  }
  $executeCOROUTINE$11.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 11;
            this._state_0 = 1;
            suspendResult = this.__this__31.executeUnsafe(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._response0 = suspendResult;
            this._state_0 = 2;
            continue $sm;
          case 2:
            this._state_0 = 3;
            continue $sm;
          case 3:
            this._exceptionState = 9;
            this._state_0 = 4;
            suspendResult = this._block(this._response0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 4:
            this._tmp$ret$02_3 = suspendResult;
            this._exceptionState = 11;
            this._state_0 = 5;
            var tmp_0 = this;
            continue $sm;
          case 5:
            this._tmp3 = this._tmp$ret$02_3;
            this._state_0 = 6;
            suspendResult = this.__this__31.cleanup(this._response0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 6:
            suspendResult;
            return this._tmp3;
          case 7:
            this._state_0 = 8;
            suspendResult = this.__this__31.cleanup(this._response0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 8:
            suspendResult;
            return Unit_getInstance();
          case 9:
            this._exceptionState = 11;
            this._t4 = this._exception_0;
            this._state_0 = 10;
            suspendResult = this.__this__31.cleanup(this._response0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 10:
            suspendResult;
            throw this._t4;
          case 11:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 11) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $executeCOROUTINE$11.$metadata$ = {
    simpleName: '$executeCOROUTINE$11',
    kind: 'class',
    interfaces: []
  };
  function $executeUnsafeCOROUTINE$12(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__32 = _this_;
  }
  $executeUnsafeCOROUTINE$12.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._builder0_0 = (new HttpRequestBuilder()).takeFromWithExecutionContext(this.__this__32._builder_1);
            this._state_0 = 1;
            suspendResult = this.__this__32._client_0.execute_9(this._builder0_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var call = suspendResult;
            return call._get_response__1();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $executeUnsafeCOROUTINE$12.$metadata$ = {
    simpleName: '$executeUnsafeCOROUTINE$12',
    kind: 'class',
    interfaces: []
  };
  function $cleanupCOROUTINE$13(_this_, _this__0, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__33 = _this_;
    this.__this__34 = _this__0;
  }
  $cleanupCOROUTINE$13.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            var tmp_0 = this;
            var tmp_1 = ensureNotNull(this.__this__34._get_coroutineContext__27().get_63(Key_getInstance_3()));
            tmp_0._job0 = isInterface(tmp_1, CompletableJob) ? tmp_1 : THROW_CCE();
            this._job0.complete_3();
            Unit_getInstance();
            this._exceptionState = 1;
            cancel_3(this.__this__34._get_content__8());
            Unit_getInstance();
            this._exceptionState = 4;
            this._state_0 = 2;
            continue $sm;
          case 1:
            this._exceptionState = 4;
            var tmp_2 = this._exception_0;
            if (tmp_2 instanceof Error) {
              this.___21 = this._exception_0;
              this._state_0 = 2;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 2:
            this._exceptionState = 4;
            this._state_0 = 3;
            suspendResult = this._job0.join_3(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            suspendResult;
            Unit_getInstance();
            return Unit_getInstance();
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $cleanupCOROUTINE$13.$metadata$ = {
    simpleName: '$cleanupCOROUTINE$13',
    kind: 'class',
    interfaces: []
  };
  function HttpStatement(builder, client) {
    this._builder_1 = builder;
    this._client_0 = client;
    checkCapabilities(this);
  }
  HttpStatement.prototype.execute_14 = function (block, $cont) {
    var tmp = new $executeCOROUTINE$11(this, block, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  HttpStatement.prototype.execute_15 = function ($cont) {
    return this.execute_14(_no_name_provided_$factory_131(null), $cont);
  };
  HttpStatement.prototype.executeUnsafe = function ($cont) {
    var tmp = new $executeUnsafeCOROUTINE$12(this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  HttpStatement.prototype.cleanup = function (_this__0, $cont) {
    var tmp = new $cleanupCOROUTINE$13(this, _this__0, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  HttpStatement.prototype.toString = function () {
    return '' + 'HttpStatement[' + this._builder_1._url_0.buildString() + ']';
  };
  HttpStatement.$metadata$ = {
    simpleName: 'HttpStatement',
    kind: 'class',
    interfaces: []
  };
  function $readTextCOROUTINE$10(_this_, fallbackCharset, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__35 = _this_;
    this._fallbackCharset = fallbackCharset;
  }
  $readTextCOROUTINE$10.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            var tmp_0 = this;
            var tmp0_elvis_lhs = charset_0(this.__this__35);
            var tmp1_elvis_lhs = tmp0_elvis_lhs == null ? this._fallbackCharset : tmp0_elvis_lhs;
            tmp_0._originCharset0 = tmp1_elvis_lhs == null ? Charsets_getInstance()._UTF_8 : tmp1_elvis_lhs;
            this._decoder1 = this._originCharset0.newDecoder_0();
            this._state_0 = 1;
            var tmp_1 = this.__this__35._get_call__6();
            var tmp_2;
            try {
              tmp_2 = new TypeInfo(getKClass_0(Input), JsType_getInstance(), createKType_0(getKClass_0(Input), [], false));
            } catch ($p) {
              var tmp_3;
              {
                var tmp_4 = getKClass_0(Input);
                var tmp_5 = JsType_getInstance();
                tmp_3 = TypeInfo_init_$Create$(tmp_4, tmp_5, null, 4, null);
              }
              tmp_2 = tmp_3;
            }

            suspendResult = tmp_1.receive_1(tmp_2, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var tmp_6 = suspendResult;
            var input = isInterface(tmp_6, Input) ? tmp_6 : THROW_CCE();
            return decode$default(this._decoder1, input, 0, 2, null);
          case 2:
            throw this._exception_0;
        }
      } catch ($p_0) {
        if (this._exceptionState === 2) {
          throw $p_0;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p_0;
        }
      }
     while (true);
  };
  $readTextCOROUTINE$10.$metadata$ = {
    simpleName: '$readTextCOROUTINE$10',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_131(resultContinuation) {
    var i = new _no_name_provided__166(resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_259(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function EmptyContent() {
    EmptyContent_instance = this;
    NoContent.call(this);
    this._contentLength_0 = new Long(0, 0);
  }
  EmptyContent.prototype._get_contentLength__7 = function () {
    return this._contentLength_0;
  };
  EmptyContent.prototype.toString = function () {
    return 'EmptyContent';
  };
  EmptyContent.$metadata$ = {
    simpleName: 'EmptyContent',
    kind: 'object',
    interfaces: []
  };
  var EmptyContent_instance;
  function EmptyContent_getInstance() {
    if (EmptyContent_instance == null)
      new EmptyContent();
    return EmptyContent_instance;
  }
  function sharedMap() {
    if (PlatformUtils_getInstance()._IS_NATIVE) {
      return ConcurrentMap_init_$Create$(null, 0, 3, null);
    }return LinkedHashMap_init_$Create$();
  }
  function sharedList() {
    if (PlatformUtils_getInstance()._IS_NATIVE) {
      return new ConcurrentList();
    }return ArrayList_init_$Create$();
  }
  function buildHeaders(block) {
    var tmp0_apply_0 = HeadersBuilder_init_$Create$(0, 1, null);
    block(tmp0_apply_0);
    return tmp0_apply_0.build_17();
  }
  function HttpClient_1(block) {
    return HttpClient_0(JsClient_0(), block);
  }
  function instanceOf(_this_, type) {
    return type.isInstance_4(_this_);
  }
  function Type() {
  }
  Type.$metadata$ = {
    simpleName: 'Type',
    kind: 'interface',
    interfaces: []
  };
  function JsType() {
    JsType_instance = this;
  }
  JsType.$metadata$ = {
    simpleName: 'JsType',
    kind: 'object',
    interfaces: [Type]
  };
  var JsType_instance;
  function JsType_getInstance() {
    if (JsType_instance == null)
      new JsType();
    return JsType_instance;
  }
  function createCallContext(_this_, parentJob, $cont) {
    var callJob = Job_0(parentJob);
    var callContext_0 = _this_._get_coroutineContext__27().plus_31(callJob).plus_31(CALL_COROUTINE);
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_elvis_lhs_2 = $cont._get_context__113().get_63(Key_getInstance_3());
      var tmp;
      if (tmp0_elvis_lhs_2 == null) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
        tmp = tmp0_elvis_lhs_2;
      }
      var userJob_1 = tmp;
      var cleanupHandler_3 = userJob_1.invokeOnCompletion$default_11(true, false, _no_name_provided_$factory_132(callJob), 2, null);
      callJob.invokeOnCompletion_27(_no_name_provided_$factory_133(cleanupHandler_3));
      Unit_getInstance();
    }
     while (false);
    return callContext_0;
  }
  function _no_name_provided__167($callJob) {
    this._$callJob = $callJob;
  }
  _no_name_provided__167.prototype.invoke_310 = function (cause) {
    var tmp0_elvis_lhs_5 = cause;
    if (tmp0_elvis_lhs_5 == null)
      return Unit_getInstance();
    else
      tmp0_elvis_lhs_5;
    Unit_getInstance();
    this._$callJob.cancel_22(CancellationException_init_$Create$(cause.message));
  };
  _no_name_provided__167.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__167.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__168($cleanupHandler_3) {
    this._$cleanupHandler_3 = $cleanupHandler_3;
  }
  _no_name_provided__168.prototype.invoke_310 = function (it) {
    this._$cleanupHandler_3.dispose_29();
  };
  _no_name_provided__168.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__168.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_132($callJob) {
    var i = new _no_name_provided__167($callJob);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_133($cleanupHandler_3) {
    var i = new _no_name_provided__168($cleanupHandler_3);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function JsClient_0() {
    return Js_getInstance();
  }
  function Js() {
    Js_instance = this;
  }
  Js.prototype.create_27 = function (block) {
    var tmp0_apply_0 = new HttpClientEngineConfig();
    block(tmp0_apply_0);
    return new JsClientEngine(tmp0_apply_0);
  };
  Js.prototype.create_28 = function (block) {
    return this.create_27(block);
  };
  Js.$metadata$ = {
    simpleName: 'Js',
    kind: 'object',
    interfaces: [HttpClientEngineFactory]
  };
  var Js_instance;
  function Js_getInstance() {
    if (Js_instance == null)
      new Js();
    return Js_instance;
  }
  function createWebSocket($this, urlString_capturingHack) {
    var tmp;
    if (PlatformUtils_getInstance()._IS_NODE) {
      var ws_capturingHack = __nccwpck_require__(963);
      tmp = createWebSocket$outlinedJsCode$(ws_capturingHack, urlString_capturingHack);
    } else {
      tmp = createWebSocket$outlinedJsCode$_0(urlString_capturingHack);
    }
    return tmp;
  }
  function executeWebSocketRequest($this, request, callContext_0, $cont) {
    var tmp = new $executeWebSocketRequestCOROUTINE$15($this, request, callContext_0, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function createWebSocket$outlinedJsCode$(ws_capturingHack, urlString_capturingHack) {
    return new ws_capturingHack(urlString_capturingHack);
  }
  function createWebSocket$outlinedJsCode$_0(urlString_capturingHack) {
    return new WebSocket(urlString_capturingHack);
  }
  function $executeCOROUTINE$14(_this_, data, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__36 = _this_;
    this._data_5 = data;
  }
  $executeCOROUTINE$14.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 6;
            this._state_0 = 1;
            suspendResult = callContext(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._callContext0_0 = suspendResult;
            if (isUpgradeRequest(this._data_5)) {
              this._state_0 = 5;
              suspendResult = executeWebSocketRequest(this.__this__36, this._data_5, this._callContext0_0, this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              this._state_0 = 2;
              continue $sm;
            }

            break;
          case 2:
            var tmp_0 = this;
            tmp_0._requestTime1 = GMTDate$default(null, 1, null);
            this._state_0 = 3;
            suspendResult = toRaw(this._data_5, this._callContext0_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            this._rawRequest2 = suspendResult;
            this._state_0 = 4;
            suspendResult = commonFetch(this._data_5._url_1.toString(), this._rawRequest2, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 4:
            var rawResponse = suspendResult;
            var status = new HttpStatusCode(numberToInt(rawResponse.status), rawResponse.statusText);
            var headers = mapToKtor(rawResponse.headers);
            var version = Companion_getInstance_34()._HTTP_1_1;
            var body = readBody(CoroutineScope_0(this._callContext0_0), rawResponse);
            return new HttpResponseData(status, this._requestTime1, headers, version, body, this._callContext0_0);
          case 5:
            return suspendResult;
          case 6:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 6) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $executeCOROUTINE$14.$metadata$ = {
    simpleName: '$executeCOROUTINE$14',
    kind: 'class',
    interfaces: []
  };
  function $executeWebSocketRequestCOROUTINE$15(_this_, request, callContext_0, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__37 = _this_;
    this._request_0 = request;
    this._callContext_1 = callContext_0;
  }
  $executeWebSocketRequestCOROUTINE$15.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            var tmp_0 = this;
            tmp_0._requestTime0 = GMTDate$default(null, 1, null);
            this._urlString1 = this._request_0._url_1.toString();
            this._socket2 = createWebSocket(this.__this__37, this._urlString1);
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = awaitConnection(this._socket2, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            Unit_getInstance();
            this._exceptionState = 4;
            this._state_0 = 3;
            continue $sm;
          case 2:
            this._exceptionState = 4;
            var tmp_1 = this._exception_0;
            if (tmp_1 instanceof Error) {
              var cause = this._exception_0;
              cancel_2(this._callContext_1, new CancellationException('' + 'Failed to connect to ' + this._urlString1, cause));
              throw cause;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 3:
            this._exceptionState = 4;
            var session = new JsWebSocketSession(this._callContext_1, this._socket2);
            return new HttpResponseData(Companion_getInstance_35()._OK, this._requestTime0, Companion_getInstance_32()._Empty_2, Companion_getInstance_34()._HTTP_1_1, session, this._callContext_1);
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $executeWebSocketRequestCOROUTINE$15.$metadata$ = {
    simpleName: '$executeWebSocketRequestCOROUTINE$15',
    kind: 'class',
    interfaces: []
  };
  function JsClientEngine(config) {
    HttpClientEngineBase.call(this, 'ktor-js');
    this._config_0 = config;
    this._dispatcher_0 = Dispatchers_getInstance()._Default;
    this._supportedCapabilities = setOf([Feature_getInstance_3(), WebSocketCapability_getInstance()]);
    var tmp0_check_0 = this._config_0._proxy == null;
    if (!tmp0_check_0) {
      var message_1 = 'Proxy unsupported in Js engine.';
      throw IllegalStateException_init_$Create$(toString_1(message_1));
    }}
  JsClientEngine.prototype._get_config__2 = function () {
    return this._config_0;
  };
  JsClientEngine.prototype._get_dispatcher__0 = function () {
    return this._dispatcher_0;
  };
  JsClientEngine.prototype._get_supportedCapabilities__1 = function () {
    return this._supportedCapabilities;
  };
  JsClientEngine.prototype.execute_16 = function (data, $cont) {
    var tmp = new $executeCOROUTINE$14(this, data, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  JsClientEngine.$metadata$ = {
    simpleName: 'JsClientEngine',
    kind: 'class',
    interfaces: []
  };
  function mapToKtor(_this_) {
    return buildHeaders(_no_name_provided_$factory_134(_this_));
  }
  function awaitConnection(_this_, $cont) {
    var tmp0__anonymous__1_1 = $cont;
    var cancellable_2_2 = new CancellableContinuationImpl(intercepted(tmp0__anonymous__1_1), 1);
    cancellable_2_2.initCancellability_0();
    var tmp$ret$0;
    l$ret$1: do {
      if (cancellable_2_2._get_isCancelled__1()) {
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      }var eventListener_4 = _no_name_provided_$factory_135(cancellable_2_2, _this_);
      _this_.addEventListener('open', eventListener_4);
      _this_.addEventListener('error', eventListener_4);
      cancellable_2_2.invokeOnCancellation_1(_no_name_provided_$factory_136(_this_, eventListener_4));
    }
     while (false);
    return cancellable_2_2.getResult_0();
  }
  function JsError(origin) {
    extendThrowable(this, '' + 'Error from javascript[' + origin + '].', void 1);
    this._origin_3 = origin;
    captureStack(this, JsError);
  }
  JsError.$metadata$ = {
    simpleName: 'JsError',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__169($this_buildHeaders) {
    this._$this_buildHeaders = $this_buildHeaders;
  }
  _no_name_provided__169.prototype.invoke_273 = function (value, key) {
    this._$this_buildHeaders.append_26(key, value);
  };
  _no_name_provided__169.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? typeof p1 === 'string' : false) ? p1 : THROW_CCE();
    this.invoke_273(tmp, (!(p2 == null) ? typeof p2 === 'string' : false) ? p2 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__169.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__170($this_mapToKtor) {
    this._$this_mapToKtor = $this_mapToKtor;
  }
  _no_name_provided__170.prototype.invoke_267 = function ($this$buildHeaders) {
    this._$this_mapToKtor.forEach(_no_name_provided_$factory_137($this$buildHeaders));
    Unit_getInstance();
  };
  _no_name_provided__170.prototype.invoke_420 = function (p1) {
    this.invoke_267(p1 instanceof HeadersBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__170.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__171($cancellable_2_2, $this_awaitConnection) {
    this._$cancellable_2_2_1 = $cancellable_2_2;
    this._$this_awaitConnection = $this_awaitConnection;
  }
  _no_name_provided__171.prototype.invoke_304 = function (event) {
    var tmp0_subject_6 = event.type;
    if (tmp0_subject_6 === 'open') {
      var tmp0_success_0_1_7 = Companion_getInstance_3();
      this._$cancellable_2_2_1.resumeWith_46(_Result___init__impl_(this._$this_awaitConnection));
    } else if (tmp0_subject_6 === 'error') {
      var tmp0_resumeWithException_0_8 = new WebSocketException(JSON.stringify(event));
      var tmp0_failure_0_1_9 = Companion_getInstance_3();
      this._$cancellable_2_2_1.resumeWith_46(_Result___init__impl_(createFailure(tmp0_resumeWithException_0_8)));
    }};
  _no_name_provided__171.prototype.invoke_420 = function (p1) {
    this.invoke_304(p1 instanceof Event ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__171.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__172($this_awaitConnection, $eventListener_4) {
    this._$this_awaitConnection_0 = $this_awaitConnection;
    this._$eventListener_4 = $eventListener_4;
  }
  _no_name_provided__172.prototype.invoke_310 = function (it) {
    this._$this_awaitConnection_0.removeEventListener('open', this._$eventListener_4);
    this._$this_awaitConnection_0.removeEventListener('error', this._$eventListener_4);
    if (!(it == null)) {
      this._$this_awaitConnection_0.close();
    }};
  _no_name_provided__172.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__172.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_134($this_mapToKtor) {
    var i = new _no_name_provided__170($this_mapToKtor);
    return function (p1) {
      i.invoke_267(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_135($cancellable_2_2, $this_awaitConnection) {
    var i = new _no_name_provided__171($cancellable_2_2, $this_awaitConnection);
    return function (p1) {
      i.invoke_304(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_136($this_awaitConnection, $eventListener_4) {
    var i = new _no_name_provided__172($this_awaitConnection, $eventListener_4);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_137($this_buildHeaders) {
    var i = new _no_name_provided__169($this_buildHeaders);
    return function (p1, p2) {
      i.invoke_273(p1, p2);
      return Unit_getInstance();
    };
  }
  function toRaw(_this_, callContext_0, $cont) {
    var tmp = new $toRawCOROUTINE$16(_this_, callContext_0, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function buildObject(block) {
    var tmp = {};
    var tmp0_apply_0 = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
    block(tmp0_apply_0);
    return tmp0_apply_0;
  }
  function _no_name_provided__173($jsHeaders) {
    this._$jsHeaders = $jsHeaders;
  }
  _no_name_provided__173.prototype.invoke_273 = function (key, value) {
    this._$jsHeaders[key] = value;
  };
  _no_name_provided__173.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? typeof p1 === 'string' : false) ? p1 : THROW_CCE();
    this.invoke_273(tmp, (!(p2 == null) ? typeof p2 === 'string' : false) ? p2 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__173.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__174($content, resultContinuation) {
    this._$content_0 = $content;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__174.prototype.invoke_324 = function ($this$writer, $cont) {
    var tmp = this.create_40($this$writer, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__174.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_324((!(p1 == null) ? isInterface(p1, WriterScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__174.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this._$content_0.writeTo(this._$this$writer_0._get_channel__2(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__174.prototype.create_40 = function ($this$writer, completion) {
    var i = new _no_name_provided__174(this._$content_0, completion);
    i._$this$writer_0 = $this$writer;
    return i;
  };
  _no_name_provided__174.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__175($this_toRaw, $jsHeaders, $bodyBytes) {
    this._$this_toRaw = $this_toRaw;
    this._$jsHeaders_0 = $jsHeaders;
    this._$bodyBytes = $bodyBytes;
  }
  _no_name_provided__175.prototype.invoke_277 = function ($this$buildObject) {
    $this$buildObject.method = this._$this_toRaw._method_1._value_14;
    $this$buildObject.headers = this._$jsHeaders_0;
    var tmp0__get_FOLLOW__0 = null;
    var tmp0_asDynamic_0_2 = 'follow';
    var tmp1_unsafeCast_0_1 = tmp0_asDynamic_0_2;
    $this$buildObject.redirect = tmp1_unsafeCast_0_1;
    var tmp0_safe_receiver = this._$bodyBytes;
    if (tmp0_safe_receiver == null)
      null;
    else {
      $this$buildObject.body = new Uint8Array(toTypedArray(tmp0_safe_receiver));
      Unit_getInstance();
    }
    Unit_getInstance();
  };
  _no_name_provided__175.prototype.invoke_420 = function (p1) {
    this.invoke_277((!(p1 == null) ? isObject(p1) : false) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__175.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function $toRawCOROUTINE$16(_this_, callContext_0, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__38 = _this_;
    this._callContext_2 = callContext_0;
  }
  $toRawCOROUTINE$16.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            this._jsHeaders0 = {};
            mergeHeaders(this.__this__38._headers_2, this.__this__38._body_1, _no_name_provided_$factory_138(this._jsHeaders0));
            this._content1_1 = this.__this__38._body_1;
            var tmp_0 = this._content1_1;
            if (tmp_0 instanceof ByteArrayContent) {
              this._WHEN_RESULT2 = this._content1_1.bytes_1();
              this._state_0 = 3;
              continue $sm;
            } else {
              {
                var tmp_1 = this._content1_1;
                if (tmp_1 instanceof ReadChannelContent) {
                  this._state_0 = 2;
                  suspendResult = readRemaining(this._content1_1.readFrom_1(), this);
                  if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                    return suspendResult;
                  }continue $sm;
                } else {
                  {
                    var tmp_2 = this._content1_1;
                    if (tmp_2 instanceof WriteChannelContent) {
                      this._state_0 = 1;
                      var tmp_3 = GlobalScope_getInstance();
                      suspendResult = readRemaining(writer$default(tmp_3, this._callContext_2, false, _no_name_provided_$factory_139(this._content1_1, null), 2, null)._get_channel__2(), this);
                      if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                        return suspendResult;
                      }continue $sm;
                    } else {
                      {
                        this._WHEN_RESULT2 = null;
                        this._state_0 = 3;
                        continue $sm;
                      }
                    }
                    Unit_getInstance();
                  }
                }
                Unit_getInstance();
              }
            }

            break;
          case 1:
            var ARGUMENT = suspendResult;
            var tmp_4 = this;
            tmp_4._WHEN_RESULT2 = readBytes$default(ARGUMENT, 0, 1, null);
            this._state_0 = 3;
            continue $sm;
          case 2:
            var ARGUMENT_0 = suspendResult;
            var tmp_5 = this;
            tmp_5._WHEN_RESULT2 = readBytes$default(ARGUMENT_0, 0, 1, null);
            this._state_0 = 3;
            continue $sm;
          case 3:
            var bodyBytes = this._WHEN_RESULT2;
            return buildObject(_no_name_provided_$factory_140(this.__this__38, this._jsHeaders0, bodyBytes));
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $toRawCOROUTINE$16.$metadata$ = {
    simpleName: '$toRawCOROUTINE$16',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_138($jsHeaders) {
    var i = new _no_name_provided__173($jsHeaders);
    return function (p1, p2) {
      i.invoke_273(p1, p2);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_139($content, resultContinuation) {
    var i = new _no_name_provided__174($content, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_324(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_140($this_toRaw, $jsHeaders, $bodyBytes) {
    var i = new _no_name_provided__175($this_toRaw, $jsHeaders, $bodyBytes);
    return function (p1) {
      i.invoke_277(p1);
      return Unit_getInstance();
    };
  }
  function readChunk(_this_, $cont) {
    var tmp0__anonymous__1_1 = $cont;
    var cancellable_2_2 = new CancellableContinuationImpl(intercepted(tmp0__anonymous__1_1), 1);
    cancellable_2_2.initCancellability_0();
    var tmp = _this_.read();
    var tmp_0 = tmp.then(_no_name_provided_$factory_141(cancellable_2_2));
    tmp_0.catch(_no_name_provided_$factory_142(cancellable_2_2));
    Unit_getInstance();
    return cancellable_2_2.getResult_0();
  }
  function asByteArray(_this_) {
    var tmp0_asDynamic_0 = new Int8Array(_this_.buffer, _this_.byteOffset, _this_.length);
    return tmp0_asDynamic_0;
  }
  function _no_name_provided__176($cancellable_2_2) {
    this._$cancellable_2_2_2 = $cancellable_2_2;
  }
  _no_name_provided__176.prototype.invoke_279 = function (it) {
    var chunk_5 = it.value;
    var result_6 = (it.done ? true : chunk_5 == null) ? null : chunk_5;
    var tmp0_success_0_7 = Companion_getInstance_3();
    this._$cancellable_2_2_2.resumeWith_46(_Result___init__impl_(result_6));
  };
  _no_name_provided__176.prototype.invoke_420 = function (p1) {
    this.invoke_279((!(p1 == null) ? isObject(p1) : false) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__176.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__177($cancellable_2_2) {
    this._$cancellable_2_2_3 = $cancellable_2_2;
  }
  _no_name_provided__177.prototype.invoke_289 = function (cause) {
    var tmp0_failure_0_1_9 = Companion_getInstance_3();
    this._$cancellable_2_2_3.resumeWith_46(_Result___init__impl_(createFailure(cause)));
  };
  _no_name_provided__177.prototype.invoke_420 = function (p1) {
    this.invoke_289(p1 instanceof Error ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__177.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_141($cancellable_2_2) {
    var i = new _no_name_provided__176($cancellable_2_2);
    return function (p1) {
      i.invoke_279(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_142($cancellable_2_2) {
    var i = new _no_name_provided__177($cancellable_2_2);
    return function (p1) {
      i.invoke_289(p1);
      return Unit_getInstance();
    };
  }
  function readBodyBrowser(_this_, response) {
    var tmp = response.body;
    var tmp0_elvis_lhs = (!(tmp == null) ? isObject(tmp) : false) ? tmp : null;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      var tmp0_error_0 = '' + 'Fail to obtain native stream: ' + response;
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var stream = tmp_0;
    return channelFromStream(_this_, stream);
  }
  function channelFromStream(_this_, stream) {
    return writer$default(_this_, null, false, _no_name_provided_$factory_143(stream, null), 3, null)._get_channel__2();
  }
  function _no_name_provided__178($stream, resultContinuation) {
    this._$stream = $stream;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__178.prototype.invoke_324 = function ($this$writer, $cont) {
    var tmp = this.create_40($this$writer, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__178.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_324((!(p1 == null) ? isInterface(p1, WriterScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__178.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 6;
            this._reader0 = this._$stream.getReader();
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (false) {}
            this._exceptionState = 5;
            this._state_0 = 2;
            suspendResult = readChunk(this._reader0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            this._tmp0_elvis_lhs1 = suspendResult;
            if (this._tmp0_elvis_lhs1 == null) {
              this._exceptionState = 6;
              this._state_0 = 8;
              var tmp_0 = this;
              continue $sm;
            } else {
              this._WHEN_RESULT2_0 = this._tmp0_elvis_lhs1;
              this._state_0 = 3;
              continue $sm;
            }

            break;
          case 3:
            this._chunk3 = this._WHEN_RESULT2_0;
            this._state_0 = 4;
            suspendResult = writeFully(this._$this$writer_1._get_channel__2(), asByteArray(this._chunk3), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 4:
            suspendResult;
            this._exceptionState = 6;
            this._state_0 = 7;
            continue $sm;
          case 5:
            this._exceptionState = 6;
            var tmp_1 = this._exception_0;
            if (tmp_1 instanceof Error) {
              var cause = this._exception_0;
              this._reader0.cancel(cause);
              Unit_getInstance();
              throw cause;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 6:
            throw this._exception_0;
          case 7:
            this._exceptionState = 6;
            this._state_0 = 1;
            continue $sm;
          case 8:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 6) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__178.prototype.create_40 = function ($this$writer, completion) {
    var i = new _no_name_provided__178(this._$stream, completion);
    i._$this$writer_1 = $this$writer;
    return i;
  };
  _no_name_provided__178.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided_$factory_143($stream, resultContinuation) {
    var i = new _no_name_provided__178($stream, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_324(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function commonFetch(input, init, $cont) {
    var tmp0__anonymous__1_1 = $cont;
    var cancellable_2_2 = new CancellableContinuationImpl(intercepted(tmp0__anonymous__1_1), 1);
    cancellable_2_2.initCancellability_0();
    var controller_4 = AbortController_0();
    init.signal = controller_4.signal;
    cancellable_2_2.invokeOnCancellation_1(_no_name_provided_$factory_144(controller_4));
    var tmp;
    if (PlatformUtils_getInstance()._IS_BROWSER) {
      tmp = fetch(input, init);
    } else {
      tmp = jsRequireNodeFetch()(input, init);
    }
    var promise_6 = tmp;
    var tmp_0 = _no_name_provided_$factory_145(cancellable_2_2);
    promise_6.then(tmp_0, _no_name_provided_$factory_146(cancellable_2_2));
    Unit_getInstance();
    return cancellable_2_2.getResult_0();
  }
  function readBody(_this_, response) {
    var tmp;
    if (PlatformUtils_getInstance()._IS_BROWSER) {
      tmp = readBodyBrowser(_this_, response);
    } else {
      tmp = readBodyNode(_this_, response);
    }
    return tmp;
  }
  function AbortController_0() {
    var tmp;
    if (PlatformUtils_getInstance()._IS_BROWSER) {
      tmp = new AbortController();
    } else {
      var controller = __nccwpck_require__(935);
      tmp = AbortController$outlinedJsCode$(controller);
    }
    return tmp;
  }
  function jsRequireNodeFetch() {
    var tmp;
    try {
      tmp = __nccwpck_require__(534);
    } catch ($p) {
      var tmp_0;
      {
        throw Error_init_$Create$('' + "Error loading module 'node-fetch': " + $p);
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function AbortController$outlinedJsCode$(controller) {
    return new controller();
  }
  function _no_name_provided__179($controller_4) {
    this._$controller_4 = $controller_4;
  }
  _no_name_provided__179.prototype.invoke_310 = function (it) {
    this._$controller_4.abort();
  };
  _no_name_provided__179.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__179.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__180($cancellable_2_2) {
    this._$cancellable_2_2_4 = $cancellable_2_2;
  }
  _no_name_provided__180.prototype.invoke_287 = function (it) {
    var tmp0_success_0_8 = Companion_getInstance_3();
    this._$cancellable_2_2_4.resumeWith_46(_Result___init__impl_(it));
  };
  _no_name_provided__180.prototype.invoke_420 = function (p1) {
    this.invoke_287((!(p1 == null) ? isObject(p1) : false) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__180.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__181($cancellable_2_2) {
    this._$cancellable_2_2_5 = $cancellable_2_2;
  }
  _no_name_provided__181.prototype.invoke_289 = function (it) {
    var tmp0_failure_0_10 = Companion_getInstance_3();
    var tmp1_failure_0_11 = Error_init_$Create$_0('Fail to fetch', it);
    this._$cancellable_2_2_5.resumeWith_46(_Result___init__impl_(createFailure(tmp1_failure_0_11)));
  };
  _no_name_provided__181.prototype.invoke_420 = function (p1) {
    this.invoke_289(p1 instanceof Error ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__181.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_144($controller_4) {
    var i = new _no_name_provided__179($controller_4);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_145($cancellable_2_2) {
    var i = new _no_name_provided__180($cancellable_2_2);
    return function (p1) {
      i.invoke_287(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_146($cancellable_2_2) {
    var i = new _no_name_provided__181($cancellable_2_2);
    return function (p1) {
      i.invoke_289(p1);
      return Unit_getInstance();
    };
  }
  function readBodyNode(_this_, response) {
    return writer$default(_this_, null, false, _no_name_provided_$factory_147(response, null), 3, null)._get_channel__2();
  }
  function _no_name_provided__182($responseData, $body) {
    this._$responseData = $responseData;
    this._$body_2 = $body;
  }
  _no_name_provided__182.prototype.invoke_291 = function (chunk) {
    var result = this._$responseData.offer_5(asByteArray(new Uint8Array(chunk)));
    return this._$body_2.pause();
  };
  _no_name_provided__182.prototype.invoke_420 = function (p1) {
    return this.invoke_291(p1 instanceof ArrayBuffer ? p1 : THROW_CCE());
  };
  _no_name_provided__182.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__183($responseData, $this_writer) {
    this._$responseData_0 = $responseData;
    this._$this_writer = $this_writer;
  }
  _no_name_provided__183.prototype.invoke_293 = function (error_1) {
    var cause = new JsError(error_1);
    this._$responseData_0.close_27(cause);
    Unit_getInstance();
    return this._$this_writer._get_channel__2().close_27(cause);
  };
  _no_name_provided__183.prototype.invoke_420 = function (p1) {
    return this.invoke_293((p1 == null ? true : p1) ? p1 : THROW_CCE());
  };
  _no_name_provided__183.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__184($responseData) {
    this._$responseData_1 = $responseData;
  }
  _no_name_provided__184.prototype.invoke_411 = function () {
    return this._$responseData_1.close$default_5(null, 1, null);
  };
  _no_name_provided__184.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__185($response, resultContinuation) {
    this._$response_0 = $response;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__185.prototype.invoke_324 = function ($this$writer, $cont) {
    var tmp = this.create_40($this$writer, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__185.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_324((!(p1 == null) ? isInterface(p1, WriterScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__185.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 6;
            var tmp_0 = this;
            var tmp0_elvis_lhs = this._$response_0.body;
            var tmp_1;
            if (tmp0_elvis_lhs == null) {
              var tmp0_error_0 = 'Fail to get body';
              throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
            } else {
              tmp_1 = tmp0_elvis_lhs;
            }

            tmp_0._body0 = tmp_1;
            var tmp_2 = this;
            tmp_2._responseData1 = Channel$default(1, null, null, 6, null);
            this._body0.on('data', _no_name_provided_$factory_148(this._responseData1, this._body0));
            this._body0.on('error', _no_name_provided_$factory_149(this._responseData1, this._$this$writer_2));
            this._body0.on('end', _no_name_provided_$factory_150(this._responseData1));
            this._exceptionState = 5;
            this._tmp1_iterator2 = this._responseData1.iterator_62();
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._state_0 = 2;
            suspendResult = this._tmp1_iterator2.hasNext_29(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            if (!suspendResult) {
              this._state_0 = 4;
              continue $sm;
            }
            this._chunk3_0 = this._tmp1_iterator2.next_31();
            this._state_0 = 3;
            suspendResult = writeFully(this._$this$writer_2._get_channel__2(), this._chunk3_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            suspendResult;
            this._body0.resume();
            this._state_0 = 1;
            continue $sm;
          case 4:
            this._exceptionState = 6;
            this._state_0 = 7;
            continue $sm;
          case 5:
            this._exceptionState = 6;
            var tmp_3 = this._exception_0;
            if (tmp_3 instanceof Error) {
              var cause = this._exception_0;
              this._body0.destroy(cause);
              throw cause;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 6:
            throw this._exception_0;
          case 7:
            this._exceptionState = 6;
            Unit_getInstance();
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 6) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__185.prototype.create_40 = function ($this$writer, completion) {
    var i = new _no_name_provided__185(this._$response_0, completion);
    i._$this$writer_2 = $this$writer;
    return i;
  };
  _no_name_provided__185.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided_$factory_147($response, resultContinuation) {
    var i = new _no_name_provided__185($response, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_324(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_148($responseData, $body) {
    var i = new _no_name_provided__182($responseData, $body);
    return function (p1) {
      return i.invoke_291(p1);
    };
  }
  function _no_name_provided_$factory_149($responseData, $this_writer) {
    var i = new _no_name_provided__183($responseData, $this_writer);
    return function (p1) {
      return i.invoke_293(p1);
    };
  }
  function _no_name_provided_$factory_150($responseData) {
    var i = new _no_name_provided__184($responseData);
    return function () {
      return i.invoke_411();
    };
  }
  function platformDefaultTransformers(_this_) {
  }
  function _no_name_provided__186($event, this$0, resultContinuation) {
    this._$event = $event;
    this._this$0_44 = this$0;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__186.prototype.invoke_322 = function ($this$launch, $cont) {
    var tmp = this.create_47($this$launch, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__186.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__186.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        if (tmp === 0) {
          this._exceptionState = 1;
          var data = this._$event.data;
          var tmp0_subject = data;
          var tmp_0;
          if (tmp0_subject instanceof ArrayBuffer) {
            var tmp0_unsafeCast_0 = new Int8Array(data);
            tmp_0 = Binary_init_$Create$(false, tmp0_unsafeCast_0);
          } else {
            if (!(tmp0_subject == null) ? typeof tmp0_subject === 'string' : false) {
              tmp_0 = Text_init_$Create$(data);
            } else {
              {
                var error_1 = IllegalStateException_init_$Create$('' + 'Unknown frame type: ' + this._$event.type);
                this._this$0_44.__closeReason.completeExceptionally_3(error_1);
                Unit_getInstance();
                throw error_1;
              }
            }
          }
          var frame = tmp_0;
          this._this$0_44.__incoming.offer_5(frame);
          Unit_getInstance();
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this._exception_0;
        }} catch ($p) {
        throw $p;
      }
     while (true);
  };
  _no_name_provided__186.prototype.create_47 = function ($this$launch, completion) {
    var i = new _no_name_provided__186(this._$event, this._this$0_44, completion);
    i._$this$launch_4 = $this$launch;
    return i;
  };
  _no_name_provided__186.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__187($event, this$0, resultContinuation) {
    this._$event_0 = $event;
    this._this$0_45 = this$0;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__187.prototype.invoke_322 = function ($this$launch, $cont) {
    var tmp = this.create_47($this$launch, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__187.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__187.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            var tmp_0 = this;
            var tmp_1 = this._$event_0.code;
            var tmp_2 = (!(tmp_1 == null) ? typeof tmp_1 === 'number' : false) ? tmp_1 : THROW_CCE();
            var tmp_3 = this._$event_0.reason;
            tmp_0._reason0 = new CloseReason(tmp_2, (!(tmp_3 == null) ? typeof tmp_3 === 'string' : false) ? tmp_3 : THROW_CCE());
            this._this$0_45.__closeReason.complete_0(this._reason0);
            Unit_getInstance();
            this._state_0 = 1;
            suspendResult = this._this$0_45.__incoming.send_6(Close_init_$Create$(this._reason0), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            this._this$0_45.__incoming.close$default_5(null, 1, null);
            Unit_getInstance();
            this._this$0_45.__outgoing.cancel$default_17(null, 1, null);
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__187.prototype.create_47 = function ($this$launch, completion) {
    var i = new _no_name_provided__187(this._$event_0, this._this$0_45, completion);
    i._$this$launch_5 = $this$launch;
    return i;
  };
  _no_name_provided__187.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function isReservedStatusCode(_this_, $this) {
    var tmp0_let_0 = Companion_getInstance_41().byCode(_this_);
    return tmp0_let_0 == null ? true : equals_1(tmp0_let_0, Codes_CLOSED_ABNORMALLY_getInstance());
  }
  function _no_name_provided__188(this$0) {
    this._this$0_46 = this$0;
  }
  _no_name_provided__188.prototype.invoke_304 = function (it) {
    var event = it;
    launch$default(this._this$0_46, null, null, _no_name_provided_$factory_156(event, this._this$0_46, null), 3, null);
    Unit_getInstance();
  };
  _no_name_provided__188.prototype.invoke_420 = function (p1) {
    this.invoke_304(p1 instanceof Event ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__188.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__189(this$0) {
    this._this$0_47 = this$0;
  }
  _no_name_provided__189.prototype.invoke_304 = function (it) {
    var cause = new WebSocketException('' + it);
    this._this$0_47.__closeReason.completeExceptionally_3(cause);
    Unit_getInstance();
    this._this$0_47.__incoming.close_27(cause);
    Unit_getInstance();
    this._this$0_47.__outgoing.cancel$default_17(null, 1, null);
  };
  _no_name_provided__189.prototype.invoke_420 = function (p1) {
    this.invoke_304(p1 instanceof Event ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__189.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__190(this$0) {
    this._this$0_48 = this$0;
  }
  _no_name_provided__190.prototype.invoke_306 = function (event) {
    launch$default(this._this$0_48, null, null, _no_name_provided_$factory_157(event, this._this$0_48, null), 3, null);
    Unit_getInstance();
  };
  _no_name_provided__190.prototype.invoke_420 = function (p1) {
    this.invoke_306((p1 == null ? true : p1) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__190.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__191(this$0, resultContinuation) {
    this._this$0_49 = this$0;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__191.prototype.invoke_322 = function ($this$launch, $cont) {
    var tmp = this.create_47($this$launch, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__191.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__191.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 10;
            var tmp_0 = this;
            tmp_0._tmp0_consumeEach_00 = this._this$0_49.__outgoing;
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._cause_2_12 = null;
            this._state_0 = 2;
            continue $sm;
          case 2:
            this._state_0 = 3;
            continue $sm;
          case 3:
            this._exceptionState = 9;
            this._exceptionState = 8;
            this._tmp0_iterator_5_25 = this._tmp0_consumeEach_00.iterator_62();
            this._state_0 = 4;
            continue $sm;
          case 4:
            this._state_0 = 5;
            suspendResult = this._tmp0_iterator_5_25.hasNext_29(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 5:
            if (!suspendResult) {
              this._state_0 = 6;
              continue $sm;
            }
            var e_6_3 = this._tmp0_iterator_5_25.next_31();
            var tmp0_subject_6 = e_6_3._frameType;
            if (tmp0_subject_6.equals(FrameType_TEXT_getInstance())) {
              var text_7 = e_6_3._data_4;
              this._this$0_49._websocket.send(String$default(text_7, 0, 0, null, 14, null));
            } else if (tmp0_subject_6.equals(FrameType_BINARY_getInstance())) {
              var tmp_1 = e_6_3._data_4;
              var source_8 = tmp_1 instanceof Int8Array ? tmp_1 : THROW_CCE();
              var frameData_9 = source_8.buffer.slice(source_8.byteOffset, source_8.byteOffset + source_8.byteLength | 0);
              this._this$0_49._websocket.send(frameData_9);
            } else if (tmp0_subject_6.equals(FrameType_CLOSE_getInstance())) {
              var tmp$ret$0;
              l$ret$1: do {
                var tmp0_buildPacket_0_11 = 0;
                var builder_1_12 = BytePacketBuilder_0(tmp0_buildPacket_0_11);
                try {
                  writeFully$default(builder_1_12, e_6_3._data_4, 0, 0, 6, null);
                  tmp$ret$0 = builder_1_12.build_17();
                  break l$ret$1;
                } catch ($p) {
                  if ($p instanceof Error) {
                    builder_1_12.release_10();
                    throw $p;
                  } else {
                    {
                      throw $p;
                    }
                  }
                }
              }
               while (false);
              var data_10 = tmp$ret$0;
              var code_14 = readShort_0(data_10);
              var reason_15 = data_10.readText$default_2(0, 0, 3, null);
              this._this$0_49.__closeReason.complete_0(new CloseReason(code_14, reason_15));
              Unit_getInstance();
              if (isReservedStatusCode(code_14, this._this$0_49)) {
                this._this$0_49._websocket.close();
              } else {
                this._this$0_49._websocket.close(code_14, reason_15);
              }
            } else if (tmp0_subject_6.equals(FrameType_PING_getInstance()) ? true : tmp0_subject_6.equals(FrameType_PONG_getInstance())) {
            }
            this._state_0 = 4;
            continue $sm;
          case 6:
            this._tmp$ret$24 = Unit_getInstance();
            this._exceptionState = 10;
            this._state_0 = 7;
            var tmp_2 = this;
            continue $sm;
          case 7:
            var tmp_3 = this;
            tmp_3._tmp$ret$61 = cancelConsumed(this._tmp0_consumeEach_00, this._cause_2_12);
            this._state_0 = 12;
            continue $sm;
          case 8:
            this._exceptionState = 9;
            var tmp_4 = this._exception_0;
            if (tmp_4 instanceof Error) {
              var e_3_4 = this._exception_0;
              var tmp_5 = this;
              this._cause_2_12 = e_3_4;
              throw e_3_4;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 9:
            this._exceptionState = 10;
            var t = this._exception_0;
            cancelConsumed(this._tmp0_consumeEach_00, this._cause_2_12);
            throw t;
          case 10:
            throw this._exception_0;
          case 11:
            cancelConsumed(this._tmp0_consumeEach_00, this._cause_2_12);
            if (false) {}
            this._state_0 = 12;
            continue $sm;
          case 12:
            return Unit_getInstance();
        }
      } catch ($p_0) {
        if (this._exceptionState === 10) {
          throw $p_0;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p_0;
        }
      }
     while (true);
  };
  _no_name_provided__191.prototype.create_47 = function ($this$launch, completion) {
    var i = new _no_name_provided__191(this._this$0_49, completion);
    i._$this$launch_6 = $this$launch;
    return i;
  };
  _no_name_provided__191.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__192(this$0) {
    this._this$0_50 = this$0;
  }
  _no_name_provided__192.prototype.invoke_310 = function (cause) {
    if (cause == null) {
      this._this$0_50._websocket.close();
    } else {
      this._this$0_50._websocket.close(Codes_INTERNAL_ERROR_getInstance()._code, 'Client failed');
    }
  };
  _no_name_provided__192.prototype.invoke_420 = function (p1) {
    this.invoke_310((p1 == null ? true : p1 instanceof Error) ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__192.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function JsWebSocketSession(coroutineContext, websocket) {
    this._coroutineContext_5 = coroutineContext;
    this._websocket = websocket;
    var tmp = this;
    tmp.__closeReason = CompletableDeferred$default(null, 1, null);
    var tmp_0 = this;
    Factory_getInstance();
    tmp_0.__incoming = Channel$default(2147483647, null, null, 6, null);
    var tmp_1 = this;
    Factory_getInstance();
    tmp_1.__outgoing = Channel$default(2147483647, null, null, 6, null);
    this._incoming = this.__incoming;
    this._outgoing = this.__outgoing;
    this._closeReason = this.__closeReason;
    var tmp0__get_ARRAYBUFFER__0 = null;
    var tmp0_asDynamic_0_2 = 'arraybuffer';
    var tmp1_unsafeCast_0_1 = tmp0_asDynamic_0_2;
    this._websocket.binaryType = tmp1_unsafeCast_0_1;
    this._websocket.addEventListener('message', _no_name_provided_$factory_151(this));
    this._websocket.addEventListener('error', _no_name_provided_$factory_152(this));
    this._websocket.addEventListener('close', _no_name_provided_$factory_153(this));
    launch$default(this, null, null, _no_name_provided_$factory_154(this, null), 3, null);
    Unit_getInstance();
    var tmp0_safe_receiver = this._coroutineContext_5.get_63(Key_getInstance_3());
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.invokeOnCompletion_27(_no_name_provided_$factory_155(this));
    }
    Unit_getInstance();
  }
  JsWebSocketSession.prototype._get_coroutineContext__27 = function () {
    return this._coroutineContext_5;
  };
  JsWebSocketSession.$metadata$ = {
    simpleName: 'JsWebSocketSession',
    kind: 'class',
    interfaces: [DefaultWebSocketSession]
  };
  function _no_name_provided_$factory_151(this$0) {
    var i = new _no_name_provided__188(this$0);
    return function (p1) {
      i.invoke_304(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_152(this$0) {
    var i = new _no_name_provided__189(this$0);
    return function (p1) {
      i.invoke_304(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_153(this$0) {
    var i = new _no_name_provided__190(this$0);
    return function (p1) {
      i.invoke_306(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_154(this$0, resultContinuation) {
    var i = new _no_name_provided__191(this$0, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_155(this$0) {
    var i = new _no_name_provided__192(this$0);
    return function (p1) {
      i.invoke_310(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_156($event, this$0, resultContinuation) {
    var i = new _no_name_provided__186($event, this$0, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_157($event, this$0, resultContinuation) {
    var i = new _no_name_provided__187($event, this$0, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function checkCoroutinesVersion() {
  }
  function unwrapCancellationException(_this_) {
    return _this_;
  }
  var LogLevel_ALL_instance;
  var LogLevel_HEADERS_instance;
  var LogLevel_BODY_instance;
  var LogLevel_INFO_instance;
  var LogLevel_NONE_instance;
  var LogLevel_entriesInitialized;
  function LogLevel_initEntries() {
    if (LogLevel_entriesInitialized)
      return Unit_getInstance();
    LogLevel_entriesInitialized = true;
    LogLevel_ALL_instance = new LogLevel('ALL', 0, true, true, true);
    LogLevel_HEADERS_instance = new LogLevel('HEADERS', 1, true, true, false);
    LogLevel_BODY_instance = new LogLevel('BODY', 2, true, false, true);
    LogLevel_INFO_instance = new LogLevel('INFO', 3, true, false, false);
    LogLevel_NONE_instance = new LogLevel('NONE', 4, false, false, false);
  }
  function LogLevel(name, ordinal, info_2, headers, body) {
    Enum.call(this, name, ordinal);
    this._info_0 = info_2;
    this._headers_5 = headers;
    this._body_3 = body;
  }
  LogLevel.$metadata$ = {
    simpleName: 'LogLevel',
    kind: 'class',
    interfaces: []
  };
  function LogLevel_HEADERS_getInstance() {
    LogLevel_initEntries();
    return LogLevel_HEADERS_instance;
  }
  function LogLevel_INFO_getInstance() {
    LogLevel_initEntries();
    return LogLevel_INFO_instance;
  }
  function LoggedContent(originalContent, channel) {
    ReadChannelContent.call(this);
    this._originalContent = originalContent;
    this._channel_2 = channel;
    this._contentType_3 = this._originalContent._get_contentType__10();
    this._contentLength_1 = this._originalContent._get_contentLength__7();
    this._status_2 = this._originalContent._get_status__16();
    this._headers_6 = this._originalContent._get_headers__24();
  }
  LoggedContent.prototype._get_contentType__10 = function () {
    return this._contentType_3;
  };
  LoggedContent.prototype._get_contentLength__7 = function () {
    return this._contentLength_1;
  };
  LoggedContent.prototype._get_status__16 = function () {
    return this._status_2;
  };
  LoggedContent.prototype._get_headers__24 = function () {
    return this._headers_6;
  };
  LoggedContent.prototype.readFrom_1 = function () {
    return this._channel_2;
  };
  LoggedContent.$metadata$ = {
    simpleName: 'LoggedContent',
    kind: 'class',
    interfaces: []
  };
  function Companion_50() {
    Companion_instance_49 = this;
  }
  Companion_50.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_49;
  function Companion_getInstance_49() {
    if (Companion_instance_49 == null)
      new Companion_50();
    return Companion_instance_49;
  }
  function Logger() {
  }
  Logger.$metadata$ = {
    simpleName: 'Logger',
    kind: 'interface',
    interfaces: []
  };
  function _get_SIMPLE_(_this_) {
    return new SimpleLogger();
  }
  function SimpleLogger() {
  }
  SimpleLogger.prototype.log_1 = function (message) {
    println('' + 'HttpClient: ' + message);
  };
  SimpleLogger.$metadata$ = {
    simpleName: 'SimpleLogger',
    kind: 'class',
    interfaces: [Logger]
  };
  function _no_name_provided__193($feature, resultContinuation) {
    this._$feature_11 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__193.prototype.invoke_326 = function ($this$intercept, it, $cont) {
    var tmp = this.create_41($this$intercept, it, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__193.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_326(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__193.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 12;
            var tmp_0;
            if (this._$feature_11._filters_0.isEmpty_50()) {
              tmp_0 = true;
            } else {
              l$ret$1: do {
                var tmp0_any_0 = this._$feature_11._filters_0;
                var tmp_1;
                if (isInterface(tmp0_any_0, Collection)) {
                  tmp_1 = tmp0_any_0.isEmpty_50();
                } else {
                  {
                    tmp_1 = false;
                  }
                }
                if (tmp_1) {
                  this._tmp$ret$01_0 = false;
                  break l$ret$1;
                } else {
                }
                var tmp0_iterator_1 = tmp0_any_0.iterator_62();
                while (tmp0_iterator_1.hasNext_29()) {
                  var element_2 = tmp0_iterator_1.next_31();
                  if (element_2(this._$this$intercept_13._get_context__113())) {
                    this._tmp$ret$01_0 = true;
                    break l$ret$1;
                  } else {
                  }
                }
                this._tmp$ret$01_0 = false;
              }
               while (false);
              tmp_0 = this._tmp$ret$01_0;
            }

            if (tmp_0) {
              this._state_0 = 1;
              continue $sm;
            } else {
              {
                this._WHEN_RESULT0_2 = null;
                this._state_0 = 7;
                continue $sm;
              }
            }

            break;
          case 1:
            this._exceptionState = 5;
            this._exceptionState = 4;
            this._state_0 = 2;
            suspendResult = beginLogging(this._$feature_11, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            suspendResult;
            this._state_0 = 3;
            suspendResult = logRequest(this._$feature_11, this._$this$intercept_13._get_context__113(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            this._tmp$ret$22 = suspendResult;
            this._exceptionState = 12;
            this._state_0 = 6;
            continue $sm;
          case 4:
            this._exceptionState = 5;
            var tmp_2 = this._exception_0;
            if (tmp_2 instanceof Error) {
              this.__3 = this._exception_0;
              var tmp_3 = this;
              tmp_3._tmp$ret$22 = null;
              this._exceptionState = 12;
              this._state_0 = 6;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 5:
            this._exceptionState = 12;
            this._t4_0 = this._exception_0;
            doneLogging(this._$feature_11);
            throw this._t4_0;
          case 6:
            this._tmp5 = this._tmp$ret$22;
            doneLogging(this._$feature_11);
            this._WHEN_RESULT0_2 = this._tmp5;
            this._state_0 = 7;
            continue $sm;
          case 7:
            this._response6 = this._WHEN_RESULT0_2;
            this._state_0 = 8;
            continue $sm;
          case 8:
            this._exceptionState = 11;
            this._exceptionState = 10;
            this._state_0 = 9;
            var tmp0_elvis_lhs = this._response6;
            suspendResult = this._$this$intercept_13.proceedWith_1(tmp0_elvis_lhs == null ? this._$this$intercept_13._get_subject__1() : tmp0_elvis_lhs, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 9:
            var tmp_4 = this;
            suspendResult;
            tmp_4._tmp$ret$47 = Unit_getInstance();
            this._exceptionState = 12;
            this._state_0 = 13;
            continue $sm;
          case 10:
            this._exceptionState = 11;
            var tmp_5 = this._exception_0;
            if (tmp_5 instanceof Error) {
              var cause = this._exception_0;
              var tmp_6 = this;
              logRequestException(this._$feature_11, this._$this$intercept_13._get_context__113(), cause);
              throw cause;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 11:
            this._exceptionState = 12;
            var t = this._exception_0;
            throw t;
          case 12:
            throw this._exception_0;
          case 13:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 12) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__193.prototype.create_41 = function ($this$intercept, it, completion) {
    var i = new _no_name_provided__193(this._$feature_11, completion);
    i._$this$intercept_13 = $this$intercept;
    i._it_4 = it;
    return i;
  };
  _no_name_provided__193.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided__194($feature, resultContinuation) {
    this._$feature_12 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__194.prototype.invoke_314 = function ($this$intercept, it, $cont) {
    var tmp = this.create_36($this$intercept, it, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__194.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_314(tmp, p2 instanceof HttpResponse ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__194.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 6;
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._exceptionState = 5;
            this._exceptionState = 4;
            this._state_0 = 2;
            suspendResult = beginLogging(this._$feature_12, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            suspendResult;
            logResponse(this._$feature_12, this._$this$intercept_14._get_context__113()._get_response__1());
            this._state_0 = 3;
            suspendResult = this._$this$intercept_14.proceedWith_1(this._$this$intercept_14._get_subject__1(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            var tmp_0 = this;
            suspendResult;
            tmp_0._tmp$ret$00_0 = Unit_getInstance();
            this._exceptionState = 6;
            this._state_0 = 7;
            continue $sm;
          case 4:
            this._exceptionState = 5;
            var tmp_1 = this._exception_0;
            if (tmp_1 instanceof Error) {
              var cause = this._exception_0;
              var tmp_2 = this;
              logResponseException(this._$feature_12, this._$this$intercept_14._get_context__113(), cause);
              throw cause;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 5:
            this._exceptionState = 6;
            var t = this._exception_0;
            if (!this._$feature_12._level_0._body_3) {
              doneLogging(this._$feature_12);
            }
            throw t;
          case 6:
            throw this._exception_0;
          case 7:
            if (!this._$feature_12._level_0._body_3) {
              doneLogging(this._$feature_12);
            }
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 6) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__194.prototype.create_36 = function ($this$intercept, it, completion) {
    var i = new _no_name_provided__194(this._$feature_12, completion);
    i._$this$intercept_14 = $this$intercept;
    i._it_5 = it;
    return i;
  };
  _no_name_provided__194.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided__195($feature, resultContinuation) {
    this._$feature_13 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__195.prototype.invoke_328 = function ($this$intercept, it, $cont) {
    var tmp = this.create_42($this$intercept, it, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__195.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_328(tmp, p2 instanceof HttpResponseContainer ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__195.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this._$this$intercept_15.proceed_1(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            Unit_getInstance();
            this._exceptionState = 3;
            this._state_0 = 4;
            continue $sm;
          case 2:
            this._exceptionState = 3;
            var tmp_0 = this._exception_0;
            if (tmp_0 instanceof Error) {
              var cause = this._exception_0;
              logResponseException(this._$feature_13, this._$this$intercept_15._get_context__113(), cause);
              throw cause;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 3:
            throw this._exception_0;
          case 4:
            this._exceptionState = 3;
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__195.prototype.create_42 = function ($this$intercept, it, completion) {
    var i = new _no_name_provided__195(this._$feature_13, completion);
    i._$this$intercept_15 = $this$intercept;
    i._it_6 = it;
    return i;
  };
  _no_name_provided__195.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided__196($feature, resultContinuation) {
    this._$feature_14 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__196.prototype.invoke_385 = function (it, $cont) {
    var tmp = this.create_43(it, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__196.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_385(p1 instanceof HttpResponse ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__196.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 5;
            this._state_0 = 1;
            continue $sm;
          case 1:
            this._exceptionState = 4;
            this._exceptionState = 3;
            this._state_0 = 2;
            suspendResult = logResponseBody(this._$feature_14, contentType_0(this._it_7), this._it_7._get_content__8(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            this._tmp$ret$00_1 = suspendResult;
            this._exceptionState = 5;
            this._state_0 = 6;
            continue $sm;
          case 3:
            this._exceptionState = 4;
            var tmp_0 = this._exception_0;
            if (tmp_0 instanceof Error) {
              var _ = this._exception_0;
              var tmp_1 = this;
              tmp_1._tmp$ret$00_1 = Unit_getInstance();
              this._exceptionState = 5;
              this._state_0 = 6;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 4:
            this._exceptionState = 5;
            var t = this._exception_0;
            doneLogging(this._$feature_14);
            throw t;
          case 5:
            throw this._exception_0;
          case 6:
            doneLogging(this._$feature_14);
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this._exceptionState === 5) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__196.prototype.create_43 = function (it, completion) {
    var i = new _no_name_provided__196(this._$feature_14, completion);
    i._it_7 = it;
    return i;
  };
  _no_name_provided__196.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function Config_2() {
    var tmp = this;
    tmp._filters = ArrayList_init_$Create$();
    this._logger = _get_DEFAULT_(Companion_getInstance_49());
    this._level = LogLevel_HEADERS_getInstance();
  }
  Config_2.$metadata$ = {
    simpleName: 'Config',
    kind: 'class',
    interfaces: []
  };
  function beginLogging($this, $cont) {
    return $this._mutex.lock$default_0(null, 1, null, $cont);
  }
  function doneLogging($this) {
    $this._mutex.unlock$default_0(null, 1, null);
  }
  function logRequest($this, request, $cont) {
    var tmp = new $logRequestCOROUTINE$0($this, request, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function logResponse($this, response) {
    if ($this._level_0._info_0) {
      $this._logger_0.log_1('' + 'RESPONSE: ' + response._get_status__16());
      $this._logger_0.log_1('' + 'METHOD: ' + response._get_call__6()._get_request__1()._get_method__6());
      $this._logger_0.log_1('' + 'FROM: ' + response._get_call__6()._get_request__1()._get_url__8());
    }if ($this._level_0._headers_5) {
      $this._logger_0.log_1('COMMON HEADERS');
      logHeaders($this, response._get_headers__24().entries_10());
    }}
  function logResponseBody($this, contentType_1, content, $cont) {
    var tmp = new $logResponseBodyCOROUTINE$1($this, contentType_1, content, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function logRequestException($this, context, cause) {
    if ($this._level_0._info_0) {
      $this._logger_0.log_1('' + 'REQUEST ' + Url_0(context._url_0) + ' failed with exception: ' + cause);
    }}
  function logResponseException($this, context, cause) {
    if ($this._level_0._info_0) {
      $this._logger_0.log_1('' + 'RESPONSE ' + context._get_request__1()._get_url__8() + ' failed with exception: ' + cause);
    }}
  function logHeaders($this, headers) {
    var tmp0_sortedBy_0 = toList_0(headers);
    var tmp = _no_name_provided_$factory_158();
    var sortedHeaders = sortedWith(tmp0_sortedBy_0, new sam$kotlin_Comparator$0_0(tmp));
    var tmp0_iterator_1 = sortedHeaders.iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      var key_4 = element_2._get_key__52();
      var values_5 = element_2._get_value__27();
      logHeader($this._logger_0, $this, key_4, joinToString$default_0(values_5, '; ', null, null, 0, null, null, 62, null));
    }
  }
  function logHeader(_this_, $this, key, value) {
    _this_.log_1('' + '-> ' + key + ': ' + value);
  }
  function logRequestBody($this, content, $cont) {
    $this._logger_0.log_1('' + 'BODY Content-Type: ' + content._get_contentType__10());
    var tmp0_safe_receiver = content._get_contentType__10();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : charset(tmp0_safe_receiver);
    var charset_1 = tmp1_elvis_lhs == null ? Charsets_getInstance()._UTF_8 : tmp1_elvis_lhs;
    var channel = ByteChannel$default(false, 1, null);
    var tmp = GlobalScope_getInstance();
    var tmp_0 = Dispatchers_getInstance()._Unconfined;
    launch$default(tmp, tmp_0, null, _no_name_provided_$factory_159(channel, charset_1, $this, null), 2, null);
    Unit_getInstance();
    return observe(content, channel, $cont);
  }
  function Companion_51() {
    Companion_instance_50 = this;
    this._key_11 = new AttributeKey('ClientLogging');
  }
  Companion_51.prototype._get_key__52 = function () {
    return this._key_11;
  };
  Companion_51.prototype.prepare_17 = function (block) {
    var tmp0_apply_0 = new Config_2();
    block(tmp0_apply_0);
    var config = tmp0_apply_0;
    return new Logging(config._logger, config._level, config._filters);
  };
  Companion_51.prototype.prepare_20 = function (block) {
    return this.prepare_17(block);
  };
  Companion_51.prototype.install_20 = function (feature_0, scope) {
    var tmp = Phases_getInstance_0()._Monitoring;
    scope._sendPipeline.intercept_0(tmp, _no_name_provided_$factory_160(feature_0, null));
    var tmp_0 = Phases_getInstance_2()._State_2;
    scope._receivePipeline.intercept_0(tmp_0, _no_name_provided_$factory_161(feature_0, null));
    var tmp_1 = Phases_getInstance_1()._Receive_0;
    scope._responsePipeline.intercept_0(tmp_1, _no_name_provided_$factory_162(feature_0, null));
    if (!feature_0._level_0._body_3) {
      return Unit_getInstance();
    }var observer = _no_name_provided_$factory_163(feature_0, null);
    Feature_getInstance_4().install_17(new ResponseObserver(observer), scope);
  };
  Companion_51.prototype.install_23 = function (feature_0, scope) {
    return this.install_20(feature_0 instanceof Logging ? feature_0 : THROW_CCE(), scope);
  };
  Companion_51.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: [HttpClientFeature]
  };
  var Companion_instance_50;
  function Companion_getInstance_50() {
    if (Companion_instance_50 == null)
      new Companion_51();
    return Companion_instance_50;
  }
  function sam$kotlin_Comparator$0_0(function_0) {
    this._function_1 = function_0;
  }
  sam$kotlin_Comparator$0_0.prototype.compare_4 = function (a, b) {
    return this._function_1(a, b);
  };
  sam$kotlin_Comparator$0_0.prototype.compare = function (a, b) {
    return this.compare_4(a, b);
  };
  sam$kotlin_Comparator$0_0.$metadata$ = {
    simpleName: 'sam$kotlin_Comparator$0',
    kind: 'class',
    interfaces: [Comparator]
  };
  function _no_name_provided__197() {
  }
  _no_name_provided__197.prototype.invoke_320 = function (a, b) {
    var tmp = a._get_key__52();
    return compareValues(tmp, b._get_key__52());
  };
  _no_name_provided__197.prototype.invoke_418 = function (p1, p2) {
    var tmp = (!(p1 == null) ? isInterface(p1, Entry) : false) ? p1 : THROW_CCE();
    return this.invoke_320(tmp, (!(p2 == null) ? isInterface(p2, Entry) : false) ? p2 : THROW_CCE());
  };
  _no_name_provided__197.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__198($channel, $charset, this$0, resultContinuation) {
    this._$channel_1 = $channel;
    this._$charset = $charset;
    this._this$0_51 = this$0;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__198.prototype.invoke_322 = function ($this$launch, $cont) {
    var tmp = this.create_47($this$launch, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__198.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_322((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__198.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = readRemaining(this._$channel_1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            var tmp_0 = this;
            tmp_0._TRY_RESULT0 = readText$default(ARGUMENT, this._$charset, 0, 2, null);
            this._exceptionState = 4;
            this._state_0 = 3;
            continue $sm;
          case 2:
            this._exceptionState = 4;
            var tmp_1 = this._exception_0;
            if (tmp_1 instanceof Error) {
              var cause_1 = this._exception_0;
              var tmp_2 = this;
              tmp_2._TRY_RESULT0 = null;
              this._state_0 = 3;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 3:
            this._exceptionState = 4;
            var tmp0_elvis_lhs = this._TRY_RESULT0;
            var text = tmp0_elvis_lhs == null ? '[request body omitted]' : tmp0_elvis_lhs;
            this._this$0_51._logger_0.log_1('BODY START');
            this._this$0_51._logger_0.log_1(text);
            this._this$0_51._logger_0.log_1('BODY END');
            return Unit_getInstance();
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__198.prototype.create_47 = function ($this$launch, completion) {
    var i = new _no_name_provided__198(this._$channel_1, this._$charset, this._this$0_51, completion);
    i._$this$launch_7 = $this$launch;
    return i;
  };
  _no_name_provided__198.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function $logRequestCOROUTINE$0(_this_, request, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__39 = _this_;
    this._request_1 = request;
  }
  $logRequestCOROUTINE$0.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            if (this.__this__39._level_0._info_0) {
              this.__this__39._logger_0.log_1('' + 'REQUEST: ' + Url_0(this._request_1._url_0));
              this.__this__39._logger_0.log_1('' + 'METHOD: ' + this._request_1._method_0);
            }
            var tmp_0 = this;
            var tmp_1 = this._request_1._body_0;
            tmp_0._content0 = tmp_1 instanceof OutgoingContent ? tmp_1 : THROW_CCE();
            if (this.__this__39._level_0._headers_5) {
              this.__this__39._logger_0.log_1('COMMON HEADERS');
              logHeaders(this.__this__39, this._request_1._headers_1.entries_10());
              this.__this__39._logger_0.log_1('CONTENT HEADERS');
              var tmp0_safe_receiver = this._content0._get_contentLength__7();
              if (tmp0_safe_receiver == null)
                null;
              else {
                logHeader(this.__this__39._logger_0, this.__this__39, HttpHeaders_getInstance()._ContentLength, tmp0_safe_receiver.toString());
                Unit_getInstance();
              }
              Unit_getInstance();
              var tmp1_safe_receiver = this._content0._get_contentType__10();
              if (tmp1_safe_receiver == null)
                null;
              else {
                logHeader(this.__this__39._logger_0, this.__this__39, HttpHeaders_getInstance()._ContentType, tmp1_safe_receiver.toString());
                Unit_getInstance();
              }
              Unit_getInstance();
              logHeaders(this.__this__39, this._content0._get_headers__24().entries_10());
            }
            if (this.__this__39._level_0._body_3) {
              this._state_0 = 1;
              suspendResult = logRequestBody(this.__this__39, this._content0, this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              this._WHEN_RESULT1_0 = null;
              this._state_0 = 2;
              continue $sm;
            }

            break;
          case 1:
            this._WHEN_RESULT1_0 = suspendResult;
            this._state_0 = 2;
            continue $sm;
          case 2:
            return this._WHEN_RESULT1_0;
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $logRequestCOROUTINE$0.$metadata$ = {
    simpleName: '$logRequestCOROUTINE$0',
    kind: 'class',
    interfaces: []
  };
  function $logResponseBodyCOROUTINE$1(_this_, contentType_1, content, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__40 = _this_;
    this._contentType_4 = contentType_1;
    this._content_8 = content;
  }
  $logResponseBodyCOROUTINE$1.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            var tmp_0 = this;
            tmp_0._tmp0_with_00 = this.__this__40._logger_0;
            this._tmp0_with_00.log_1('' + 'BODY Content-Type: ' + this._contentType_4);
            this._tmp0_with_00.log_1('BODY START');
            var tmp_1 = this;
            var tmp0_safe_receiver_6 = this._contentType_4;
            var tmp1_elvis_lhs_5 = tmp0_safe_receiver_6 == null ? null : charset(tmp0_safe_receiver_6);
            tmp_1._tmp0_tryReadText_0_41 = tmp1_elvis_lhs_5 == null ? Charsets_getInstance()._UTF_8 : tmp1_elvis_lhs_5;
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = readRemaining(this._content_8, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            var tmp_2 = this;
            tmp_2._TRY_RESULT2 = readText$default(ARGUMENT, this._tmp0_tryReadText_0_41, 0, 2, null);
            this._exceptionState = 4;
            this._state_0 = 3;
            continue $sm;
          case 2:
            this._exceptionState = 4;
            var tmp_3 = this._exception_0;
            if (tmp_3 instanceof Error) {
              var cause_1_7 = this._exception_0;
              var tmp_4 = this;
              tmp_4._TRY_RESULT2 = null;
              this._state_0 = 3;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 3:
            this._exceptionState = 4;
            var tmp2_elvis_lhs_3 = this._TRY_RESULT2;
            var message_2 = tmp2_elvis_lhs_3 == null ? '[response body omitted]' : tmp2_elvis_lhs_3;
            this._tmp0_with_00.log_1(message_2);
            this._tmp0_with_00.log_1('BODY END');
            return Unit_getInstance();
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $logResponseBodyCOROUTINE$1.$metadata$ = {
    simpleName: '$logResponseBodyCOROUTINE$1',
    kind: 'class',
    interfaces: []
  };
  function Logging(logger, level, filters) {
    Companion_getInstance_50();
    this._logger_0 = logger;
    this._level_0 = level;
    this._filters_0 = filters;
    var tmp = this;
    tmp._mutex = Mutex$default(false, 1, null);
  }
  Logging.$metadata$ = {
    simpleName: 'Logging',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_158() {
    var i = new _no_name_provided__197();
    return function (p1, p2) {
      return i.invoke_320(p1, p2);
    };
  }
  function _no_name_provided_$factory_159($channel, $charset, this$0, resultContinuation) {
    var i = new _no_name_provided__198($channel, $charset, this$0, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_322(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_160($feature, resultContinuation) {
    var i = new _no_name_provided__193($feature, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_326(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_161($feature, resultContinuation) {
    var i = new _no_name_provided__194($feature, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_314(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_162($feature, resultContinuation) {
    var i = new _no_name_provided__195($feature, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_328(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_163($feature, resultContinuation) {
    var i = new _no_name_provided__196($feature, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_385(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function observe(_this_, log, $cont) {
    var tmp = new $observeCOROUTINE$3(_this_, log, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function toReadChannel(_this_) {
    var tmp = GlobalScope_getInstance();
    var tmp_0 = Dispatchers_getInstance()._Unconfined;
    return writer$default(tmp, tmp_0, false, _no_name_provided_$factory_164(_this_, null), 2, null)._get_channel__2();
  }
  function _no_name_provided__199($this_toReadChannel, resultContinuation) {
    this._$this_toReadChannel = $this_toReadChannel;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__199.prototype.invoke_324 = function ($this$writer, $cont) {
    var tmp = this.create_40($this$writer, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__199.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_324((!(p1 == null) ? isInterface(p1, WriterScope) : false) ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__199.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this._$this_toReadChannel.writeTo(this._$this$writer_3._get_channel__2(), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__199.prototype.create_40 = function ($this$writer, completion) {
    var i = new _no_name_provided__199(this._$this_toReadChannel, completion);
    i._$this$writer_3 = $this$writer;
    return i;
  };
  _no_name_provided__199.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function $observeCOROUTINE$3(_this_, log, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__41 = _this_;
    this._log = log;
  }
  $observeCOROUTINE$3.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            this._tmp0_subject0 = this.__this__41;
            var tmp_0 = this._tmp0_subject0;
            if (tmp_0 instanceof ByteArrayContent) {
              this._state_0 = 1;
              suspendResult = writeFully(this._log, this.__this__41.bytes_1(), this);
              if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                return suspendResult;
              }continue $sm;
            } else {
              {
                var tmp_1 = this._tmp0_subject0;
                if (tmp_1 instanceof ReadChannelContent) {
                  var tmp_2 = this;
                  var responseChannel = ByteChannel$default(false, 1, null);
                  var content = this.__this__41.readFrom_1();
                  copyToBoth(content, this._log, responseChannel);
                  tmp_2._WHEN_RESULT1_1 = new LoggedContent(this.__this__41, responseChannel);
                  this._state_0 = 2;
                  continue $sm;
                } else {
                  {
                    var tmp_3 = this._tmp0_subject0;
                    if (tmp_3 instanceof WriteChannelContent) {
                      var tmp_4 = this;
                      var responseChannel_0 = ByteChannel$default(false, 1, null);
                      var content_0 = toReadChannel(this.__this__41);
                      copyToBoth(content_0, this._log, responseChannel_0);
                      tmp_4._WHEN_RESULT1_1 = new LoggedContent(this.__this__41, responseChannel_0);
                      this._state_0 = 2;
                      continue $sm;
                    } else {
                      {
                        var tmp_5 = this;
                        close(this._log);
                        Unit_getInstance();
                        tmp_5._WHEN_RESULT1_1 = this.__this__41;
                        this._state_0 = 2;
                        continue $sm;
                      }
                    }
                    Unit_getInstance();
                  }
                }
                Unit_getInstance();
              }
            }

            break;
          case 1:
            suspendResult;
            close(this._log);
            Unit_getInstance();
            this._WHEN_RESULT1_1 = this.__this__41;
            this._state_0 = 2;
            continue $sm;
          case 2:
            return this._WHEN_RESULT1_1;
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $observeCOROUTINE$3.$metadata$ = {
    simpleName: '$observeCOROUTINE$3',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_164($this_toReadChannel, resultContinuation) {
    var i = new _no_name_provided__199($this_toReadChannel, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_324(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _get_DEFAULT_(_this_) {
    return _get_SIMPLE_(_this_);
  }
  function JsonContentTypeMatcher() {
  }
  JsonContentTypeMatcher.prototype.contains_46 = function (contentType_1) {
    if (Application_getInstance()._Json.match_0(contentType_1)) {
      return true;
    }var value = contentType_1.withoutParameters().toString();
    var tmp;
    if (startsWith$default_0(value, 'application/', false, 2, null)) {
      tmp = endsWith$default(value, '+json', false, 2, null);
    } else {
      {
        tmp = false;
      }
    }
    return tmp;
  };
  JsonContentTypeMatcher.$metadata$ = {
    simpleName: 'JsonContentTypeMatcher',
    kind: 'class',
    interfaces: [ContentTypeMatcher]
  };
  function _no_name_provided__200($feature, resultContinuation) {
    this._$feature_15 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__200.prototype.invoke_326 = function ($this$intercept, payload, $cont) {
    var tmp = this.create_41($this$intercept, payload, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__200.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_326(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__200.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            var tmp_0 = this;
            tmp_0._tmp0_forEach_00_1 = this._$feature_15._acceptContentTypes;
            var tmp0_iterator_1 = this._tmp0_forEach_00_1.iterator_62();
            while (tmp0_iterator_1.hasNext_29()) {
              var element_2 = tmp0_iterator_1.next_31();
              accept(this._$this$intercept_16._get_context__113(), element_2);
            }

            var tmp_1 = this;
            var tmp0_elvis_lhs = contentType(this._$this$intercept_16._get_context__113());
            var tmp_2;
            if (tmp0_elvis_lhs == null) {
              return Unit_getInstance();
            } else {
              tmp_2 = tmp0_elvis_lhs;
            }

            tmp_1._contentType1 = tmp_2;
            if (!this._$feature_15.canHandle(this._contentType1))
              return Unit_getInstance();
            this._$this$intercept_16._get_context__113()._headers_1.remove_52(HttpHeaders_getInstance()._ContentType);
            var tmp_3 = this;
            var tmp1_subject = this._payload;
            var tmp_4;
            if (equals_1(tmp1_subject, Unit_getInstance())) {
              tmp_4 = EmptyContent_getInstance();
            } else {
              if (tmp1_subject instanceof EmptyContent) {
                tmp_4 = EmptyContent_getInstance();
              } else {
                {
                  tmp_4 = this._$feature_15._serializer_0.write_1(this._payload, this._contentType1);
                }
              }
            }

            tmp_3._serializedContent2 = tmp_4;
            this._state_0 = 1;
            suspendResult = this._$this$intercept_16.proceedWith_1(this._serializedContent2, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            suspendResult;
            Unit_getInstance();
            return Unit_getInstance();
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__200.prototype.create_41 = function ($this$intercept, payload, completion) {
    var i = new _no_name_provided__200(this._$feature_15, completion);
    i._$this$intercept_16 = $this$intercept;
    i._payload = payload;
    return i;
  };
  _no_name_provided__200.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function _no_name_provided__201($feature, resultContinuation) {
    this._$feature_16 = $feature;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__201.prototype.invoke_328 = function ($this$intercept, _name_for_destructuring_parameter_0_, $cont) {
    var tmp = this.create_42($this$intercept, _name_for_destructuring_parameter_0_, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__201.prototype.invoke_418 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    this.invoke_328(tmp, p2 instanceof HttpResponseContainer ? p2 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__201.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 3;
            this._info0_1 = this.__name_for_destructuring_parameter_0__1.component1_2();
            this._body1_1 = this.__name_for_destructuring_parameter_0__1.component2_2();
            var tmp_0 = this._body1_1;
            if (!isInterface(tmp_0, ByteReadChannel_1))
              return Unit_getInstance();
            else {
            }

            var tmp_1 = this;
            var tmp0_elvis_lhs = contentType_0(this._$this$intercept_17._get_context__113()._get_response__1());
            var tmp_2;
            if (tmp0_elvis_lhs == null) {
              return Unit_getInstance();
            } else {
              tmp_2 = tmp0_elvis_lhs;
            }

            tmp_1._contentType2 = tmp_2;
            if (!this._$feature_16.canHandle(this._contentType2))
              return Unit_getInstance();
            this._ARGUMENT3 = this._$feature_16._serializer_0;
            this._state_0 = 1;
            suspendResult = readRemaining(this._body1_1, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._ARGUMENT4 = suspendResult;
            this._parsedBody5 = this._ARGUMENT3.read_3(this._info0_1, this._ARGUMENT4);
            this._response6_0 = new HttpResponseContainer(this._info0_1, this._parsedBody5);
            this._state_0 = 2;
            suspendResult = this._$this$intercept_17.proceedWith_1(this._response6_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            suspendResult;
            Unit_getInstance();
            return Unit_getInstance();
          case 3:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 3) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__201.prototype.create_42 = function ($this$intercept, _name_for_destructuring_parameter_0_, completion) {
    var i = new _no_name_provided__201(this._$feature_16, completion);
    i._$this$intercept_17 = $this$intercept;
    i.__name_for_destructuring_parameter_0__1 = _name_for_destructuring_parameter_0_;
    return i;
  };
  _no_name_provided__201.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 2
  };
  function Config_3() {
    this._serializer = null;
    this.__acceptContentTypes = mutableListOf([Application_getInstance()._Json]);
    this.__receiveContentTypeMatchers = mutableListOf([new JsonContentTypeMatcher()]);
  }
  Config_3.prototype._get_acceptContentTypes_ = function () {
    return this.__acceptContentTypes;
  };
  Config_3.prototype._get_receiveContentTypeMatchers_ = function () {
    return this.__receiveContentTypeMatchers;
  };
  Config_3.$metadata$ = {
    simpleName: 'Config',
    kind: 'class',
    interfaces: []
  };
  function Feature_5() {
    Feature_instance_5 = this;
    this._key_12 = new AttributeKey('Json');
  }
  Feature_5.prototype._get_key__52 = function () {
    return this._key_12;
  };
  Feature_5.prototype.prepare_19 = function (block) {
    var tmp0_apply_0 = new Config_3();
    block(tmp0_apply_0);
    var config = tmp0_apply_0;
    var tmp0_elvis_lhs = config._serializer;
    var serializer_16 = tmp0_elvis_lhs == null ? defaultSerializer() : tmp0_elvis_lhs;
    var allowedContentTypes = toList_0(config._get_acceptContentTypes_());
    var receiveContentTypeMatchers = config._get_receiveContentTypeMatchers_();
    return new JsonFeature(serializer_16, allowedContentTypes, receiveContentTypeMatchers);
  };
  Feature_5.prototype.prepare_20 = function (block) {
    return this.prepare_19(block);
  };
  Feature_5.prototype.install_22 = function (feature_0, scope) {
    var tmp = Phases_getInstance()._Transform;
    scope._requestPipeline.intercept_0(tmp, _no_name_provided_$factory_165(feature_0, null));
    var tmp_0 = Phases_getInstance_1()._Transform_0;
    scope._responsePipeline.intercept_0(tmp_0, _no_name_provided_$factory_166(feature_0, null));
  };
  Feature_5.prototype.install_23 = function (feature_0, scope) {
    return this.install_22(feature_0 instanceof JsonFeature ? feature_0 : THROW_CCE(), scope);
  };
  Feature_5.$metadata$ = {
    simpleName: 'Feature',
    kind: 'object',
    interfaces: [HttpClientFeature]
  };
  var Feature_instance_5;
  function Feature_getInstance_5() {
    if (Feature_instance_5 == null)
      new Feature_5();
    return Feature_instance_5;
  }
  function JsonFeature(serializer_16, acceptContentTypes, receiveContentTypeMatchers) {
    Feature_getInstance_5();
    this._serializer_0 = serializer_16;
    this._acceptContentTypes = acceptContentTypes;
    this._receiveContentTypeMatchers = receiveContentTypeMatchers;
  }
  JsonFeature.prototype.canHandle = function (contentType_1) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_any_0 = this._acceptContentTypes;
      var tmp;
      if (isInterface(tmp0_any_0, Collection)) {
        tmp = tmp0_any_0.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = tmp0_any_0.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (contentType_1.match_0(element_2)) {
          tmp$ret$0 = true;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = false;
    }
     while (false);
    var accepted = tmp$ret$0;
    var matchers = this._receiveContentTypeMatchers;
    var tmp_0;
    if (accepted) {
      tmp_0 = true;
    } else {
      var tmp$ret$2;
      l$ret$3: do {
        var tmp_1;
        if (isInterface(matchers, Collection)) {
          tmp_1 = matchers.isEmpty_50();
        } else {
          {
            tmp_1 = false;
          }
        }
        if (tmp_1) {
          tmp$ret$2 = false;
          break l$ret$3;
        } else {
        }
        var tmp0_iterator_1_0 = matchers.iterator_62();
        while (tmp0_iterator_1_0.hasNext_29()) {
          var element_2_0 = tmp0_iterator_1_0.next_31();
          if (element_2_0.contains_46(contentType_1)) {
            tmp$ret$2 = true;
            break l$ret$3;
          } else {
          }
        }
        tmp$ret$2 = false;
      }
       while (false);
      tmp_0 = tmp$ret$2;
    }
    return tmp_0;
  };
  JsonFeature.$metadata$ = {
    simpleName: 'JsonFeature',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_165($feature, resultContinuation) {
    var i = new _no_name_provided__200($feature, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_326(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function _no_name_provided_$factory_166($feature, resultContinuation) {
    var i = new _no_name_provided__201($feature, resultContinuation);
    var l = function (p1, p2, $cont) {
      return i.invoke_328(p1, p2, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function JsonSerializer() {
  }
  JsonSerializer.$metadata$ = {
    simpleName: 'JsonSerializer',
    kind: 'interface',
    interfaces: []
  };
  var serializersStore;
  function defaultSerializer() {
    return first(serializersStore);
  }
  function serializersStore$init$() {
    return ArrayList_init_$Create$();
  }
  function KSerializer() {
  }
  KSerializer.$metadata$ = {
    simpleName: 'KSerializer',
    kind: 'interface',
    interfaces: [SerializationStrategy, DeserializationStrategy]
  };
  function DeserializationStrategy() {
  }
  DeserializationStrategy.$metadata$ = {
    simpleName: 'DeserializationStrategy',
    kind: 'interface',
    interfaces: []
  };
  function SerializationStrategy() {
  }
  SerializationStrategy.$metadata$ = {
    simpleName: 'SerializationStrategy',
    kind: 'interface',
    interfaces: []
  };
  function _no_name_provided__202(this$0) {
    this._this$0_52 = this$0;
  }
  _no_name_provided__202.prototype.invoke_378 = function ($this$buildSerialDescriptor) {
    var tmp = serializer_2(StringCompanionObject_getInstance())._get_descriptor__77();
    $this$buildSerialDescriptor.element$default('type', tmp, null, false, 12, null);
    var tmp_0 = '' + 'kotlinx.serialization.Polymorphic<' + this._this$0_52._baseClass._get_simpleName__4() + '>';
    var tmp_1 = CONTEXTUAL_getInstance();
    var tmp_2 = [];
    var tmp_3 = buildSerialDescriptor$default(tmp_0, tmp_1, tmp_2, null, 12, null);
    $this$buildSerialDescriptor.element$default('value', tmp_3, null, false, 12, null);
  };
  _no_name_provided__202.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__202.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function PolymorphicSerializer(baseClass) {
    AbstractPolymorphicSerializer.call(this);
    this._baseClass = baseClass;
    var tmp = this;
    var tmp_0 = OPEN_getInstance();
    var tmp_1 = [];
    tmp._descriptor = withContext(buildSerialDescriptor$default('kotlinx.serialization.Polymorphic', tmp_0, tmp_1, _no_name_provided_$factory_167(this), 4, null), this._baseClass);
  }
  PolymorphicSerializer.prototype._get_baseClass__3 = function () {
    return this._baseClass;
  };
  PolymorphicSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor;
  };
  PolymorphicSerializer.prototype.toString = function () {
    return '' + 'kotlinx.serialization.PolymorphicSerializer(baseClass: ' + this._baseClass + ')';
  };
  PolymorphicSerializer.$metadata$ = {
    simpleName: 'PolymorphicSerializer',
    kind: 'class',
    interfaces: []
  };
  function findPolymorphicSerializer(_this_, encoder, value) {
    var tmp0_elvis_lhs = _this_.findPolymorphicSerializerOrNull_10(encoder, value);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throwSubtypeNotRegistered(getKClassFromExpression_0(value), _this_._get_baseClass__3());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function findPolymorphicSerializer_0(_this_, decoder, klassName) {
    var tmp0_elvis_lhs = _this_.findPolymorphicSerializerOrNull_8(decoder, klassName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throwSubtypeNotRegistered_0(klassName, _this_._get_baseClass__3());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function _no_name_provided_$factory_167(this$0) {
    var i = new _no_name_provided__202(this$0);
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided__203($subclassSerializers) {
    this._$subclassSerializers = $subclassSerializers;
  }
  _no_name_provided__203.prototype.invoke_378 = function ($this$buildSerialDescriptor) {
    var indexedObject = this._$subclassSerializers;
    var inductionVariable = 0;
    var last_1 = indexedObject.length;
    while (inductionVariable < last_1) {
      var element_2 = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var d_4 = element_2._get_descriptor__77();
      var tmp = d_4._get_serialName__17();
      $this$buildSerialDescriptor.element$default(tmp, d_4, null, false, 12, null);
    }
  };
  _no_name_provided__203.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__203.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__204(this$0, $subclassSerializers) {
    this._this$0_53 = this$0;
    this._$subclassSerializers_0 = $subclassSerializers;
  }
  _no_name_provided__204.prototype.invoke_378 = function ($this$buildSerialDescriptor) {
    var tmp = serializer_2(StringCompanionObject_getInstance())._get_descriptor__77();
    $this$buildSerialDescriptor.element$default('type', tmp, null, false, 12, null);
    var tmp_0 = '' + 'kotlinx.serialization.Sealed<' + this._this$0_53._baseClass_0._get_simpleName__4() + '>';
    var tmp_1 = CONTEXTUAL_getInstance();
    var tmp_2 = [];
    var elementDescriptor = buildSerialDescriptor$default(tmp_0, tmp_1, tmp_2, _no_name_provided_$factory_169(this._$subclassSerializers_0), 4, null);
    $this$buildSerialDescriptor.element$default('value', elementDescriptor, null, false, 12, null);
  };
  _no_name_provided__204.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__204.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__1_4($tmp0_groupingBy_0) {
    this._$tmp0_groupingBy_0 = $tmp0_groupingBy_0;
  }
  _no_name_provided__1_4.prototype.sourceIterator_2 = function () {
    return this._$tmp0_groupingBy_0.iterator_62();
  };
  _no_name_provided__1_4.prototype.sourceIterator_0 = function () {
    return this.sourceIterator_2();
  };
  _no_name_provided__1_4.prototype.keyOf_3 = function (element) {
    return element._get_value__27()._get_descriptor__77()._get_serialName__17();
  };
  _no_name_provided__1_4.prototype.keyOf_0 = function (element) {
    return this.keyOf_3((!(element == null) ? isInterface(element, Entry) : false) ? element : THROW_CCE());
  };
  _no_name_provided__1_4.$metadata$ = {
    simpleName: '<no name provided>_1',
    kind: 'class',
    interfaces: [Grouping]
  };
  function SealedClassSerializer(serialName, baseClass, subclasses, subclassSerializers) {
    AbstractPolymorphicSerializer.call(this);
    this._baseClass_0 = baseClass;
    var tmp = this;
    var tmp_0 = SEALED_getInstance();
    var tmp_1 = [];
    tmp._descriptor_0 = buildSerialDescriptor$default(serialName, tmp_0, tmp_1, _no_name_provided_$factory_168(this, subclassSerializers), 4, null);
    if (!(subclasses.length === subclassSerializers.length)) {
      throw IllegalArgumentException_init_$Create$_0('' + 'All subclasses of sealed class ' + this._baseClass_0._get_simpleName__4() + ' should be marked @Serializable');
    }this._class2Serializer = toMap(zip(subclasses, subclassSerializers));
    var tmp_2 = this;
    var tmp0_groupingBy_0 = this._class2Serializer._get_entries__8();
    var tmp1_aggregate_0 = new _no_name_provided__1_4(tmp0_groupingBy_0);
    var tmp2_aggregateTo_0_1 = LinkedHashMap_init_$Create$();
    var tmp0_iterator_0_3 = tmp1_aggregate_0.sourceIterator_0();
    var tmp0_iterator_1_2 = tmp0_iterator_0_3;
    while (tmp0_iterator_1_2.hasNext_29()) {
      var e_2_4 = tmp0_iterator_1_2.next_31();
      var key_3_5 = tmp1_aggregate_0.keyOf_0(e_2_4);
      var accumulator_4_6 = tmp2_aggregateTo_0_1.get_65(key_3_5);
      var tmp2__anonymous__8 = accumulator_4_6 == null ? !tmp2_aggregateTo_0_1.containsKey_12(key_3_5) : false;
      if (!(accumulator_4_6 == null)) {
        var tmp0_error_0_9 = '' + "Multiple sealed subclasses of '" + this._baseClass_0 + "' have the same serial name '" + key_3_5 + "':" + ('' + " '" + accumulator_4_6._get_key__52() + "', '" + e_2_4._get_key__52() + "'");
        throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0_9));
      }var tmp1_set_0_7 = e_2_4;
      tmp2_aggregateTo_0_1.put_10(key_3_5, tmp1_set_0_7);
      Unit_getInstance();
    }
    var tmp3_mapValues_0 = tmp2_aggregateTo_0_1;
    var tmp1_mapValuesTo_0_1 = LinkedHashMap_init_$Create$_1(mapCapacity(tmp3_mapValues_0._get_size__48()));
    var tmp0_associateByTo_0_2 = tmp3_mapValues_0._get_entries__8();
    var tmp0_iterator_1_3 = tmp0_associateByTo_0_2.iterator_62();
    while (tmp0_iterator_1_3.hasNext_29()) {
      var element_2_4 = tmp0_iterator_1_3.next_31();
      var tmp_3 = element_2_4._get_key__52();
      tmp1_mapValuesTo_0_1.put_10(tmp_3, element_2_4._get_value__27()._get_value__27());
      Unit_getInstance();
    }
    tmp_2._serialName2Serializer = tmp1_mapValuesTo_0_1;
  }
  SealedClassSerializer.prototype._get_baseClass__3 = function () {
    return this._baseClass_0;
  };
  SealedClassSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_0;
  };
  SealedClassSerializer.prototype.findPolymorphicSerializerOrNull_8 = function (decoder, klassName) {
    var tmp0_get_0 = this._serialName2Serializer;
    var tmp0_elvis_lhs = (isInterface(tmp0_get_0, Map_0) ? tmp0_get_0 : THROW_CCE()).get_65(klassName);
    return tmp0_elvis_lhs == null ? AbstractPolymorphicSerializer.prototype.findPolymorphicSerializerOrNull_8.call(this, decoder, klassName) : tmp0_elvis_lhs;
  };
  SealedClassSerializer.prototype.findPolymorphicSerializerOrNull_10 = function (encoder, value) {
    var tmp0_elvis_lhs = this._class2Serializer.get_65(getKClassFromExpression_0(value));
    var tmp1_safe_receiver = tmp0_elvis_lhs == null ? AbstractPolymorphicSerializer.prototype.findPolymorphicSerializerOrNull_10.call(this, encoder, value) : tmp0_elvis_lhs;
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = (!(tmp1_safe_receiver == null) ? isInterface(tmp1_safe_receiver, SerializationStrategy) : false) ? tmp1_safe_receiver : THROW_CCE();
    }
    return tmp;
  };
  SealedClassSerializer.$metadata$ = {
    simpleName: 'SealedClassSerializer',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_168(this$0, $subclassSerializers) {
    var i = new _no_name_provided__204(this$0, $subclassSerializers);
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_169($subclassSerializers) {
    var i = new _no_name_provided__203($subclassSerializers);
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function StringFormat() {
  }
  StringFormat.$metadata$ = {
    simpleName: 'StringFormat',
    kind: 'interface',
    interfaces: [SerialFormat]
  };
  function SerialFormat() {
  }
  SerialFormat.$metadata$ = {
    simpleName: 'SerialFormat',
    kind: 'interface',
    interfaces: []
  };
  function SerializationException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$_0(message, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException_init_$Create$(message) {
    var tmp = SerializationException_init_$Init$(message, Object.create(SerializationException.prototype));
    captureStack(tmp, SerializationException_init_$Create$);
    return tmp;
  }
  function SerializationException_init_$Init$_0(message, cause, $this) {
    IllegalArgumentException_init_$Init$_1(message, cause, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException() {
    captureStack(this, SerializationException);
  }
  SerializationException.$metadata$ = {
    simpleName: 'SerializationException',
    kind: 'class',
    interfaces: []
  };
  function UnknownFieldException_init_$Init$(index, $this) {
    UnknownFieldException.call($this, '' + 'An unknown field for index ' + index);
    return $this;
  }
  function UnknownFieldException_init_$Create$(index) {
    var tmp = UnknownFieldException_init_$Init$(index, Object.create(UnknownFieldException.prototype));
    captureStack(tmp, UnknownFieldException_init_$Create$);
    return tmp;
  }
  function UnknownFieldException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, UnknownFieldException);
  }
  UnknownFieldException.$metadata$ = {
    simpleName: 'UnknownFieldException',
    kind: 'class',
    interfaces: []
  };
  function MissingFieldException_init_$Init$(fieldName, $this) {
    MissingFieldException.call($this, '' + "Field '" + fieldName + "' is required, but it was missing", null);
    return $this;
  }
  function MissingFieldException_init_$Create$(fieldName) {
    var tmp = MissingFieldException_init_$Init$(fieldName, Object.create(MissingFieldException.prototype));
    captureStack(tmp, MissingFieldException_init_$Create$);
    return tmp;
  }
  function MissingFieldException(message, cause) {
    SerializationException_init_$Init$_0(message, cause, this);
    captureStack(this, MissingFieldException);
  }
  MissingFieldException.$metadata$ = {
    simpleName: 'MissingFieldException',
    kind: 'class',
    interfaces: []
  };
  function serializer(type) {
    return serializer_1(EmptySerializersModule, type);
  }
  function serializer_0(_this_) {
    var tmp0_elvis_lhs = serializerOrNull(_this_);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      serializerNotRegistered(_this_);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function serializer_1(_this_, type) {
    var tmp0_elvis_lhs = serializerByKTypeImpl(_this_, type, true);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      platformSpecificSerializerNotRegistered(kclass(type));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function serializerOrNull(_this_) {
    var tmp0_elvis_lhs = compiledSerializerImpl(_this_);
    return tmp0_elvis_lhs == null ? builtinSerializerOrNull(_this_) : tmp0_elvis_lhs;
  }
  function serializerByKTypeImpl(_this_, type, failOnMissingTypeArgSerializer) {
    var rootClass = kclass(type);
    var isNullable = type._get_isMarkedNullable__0();
    var tmp0_map_0 = type._get_arguments__0();
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
    var tmp0_iterator_1_2 = tmp0_map_0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var item_2_3 = tmp0_iterator_1_2.next_31();
      var tmp$ret$0;
      l$ret$1: do {
        var tmp0_requireNotNull_0_5 = item_2_3._type;
        if (tmp0_requireNotNull_0_5 == null) {
          var message_1_6 = '' + 'Star projections in type arguments are not allowed, but had ' + type;
          throw IllegalArgumentException_init_$Create$_0(toString_1(message_1_6));
        } else {
          tmp$ret$0 = tmp0_requireNotNull_0_5;
          break l$ret$1;
        }
      }
       while (false);
      tmp0_mapTo_0_1.add_32(tmp$ret$0);
      Unit_getInstance();
    }
    var typeArguments = tmp0_mapTo_0_1;
    var tmp;
    if (typeArguments.isEmpty_50()) {
      var tmp0_elvis_lhs = serializerOrNull(rootClass);
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        tmp_0 = _this_.getContextual$default(rootClass, null, 2, null);
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      tmp = builtinSerializer(_this_, typeArguments, rootClass, failOnMissingTypeArgSerializer);
    }
    var tmp1_safe_receiver = tmp;
    var tmp_1;
    if (tmp1_safe_receiver == null) {
      tmp_1 = null;
    } else {
      tmp_1 = (!(tmp1_safe_receiver == null) ? isInterface(tmp1_safe_receiver, KSerializer) : false) ? tmp1_safe_receiver : THROW_CCE();
    }
    var result = tmp_1;
    var tmp2_safe_receiver = result;
    return tmp2_safe_receiver == null ? null : nullable(tmp2_safe_receiver, isNullable);
  }
  function builtinSerializer(_this_, typeArguments, rootClass, failOnMissingTypeArgSerializer) {
    var tmp;
    if (failOnMissingTypeArgSerializer) {
      var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(typeArguments, 10));
      var tmp0_iterator_1_2 = typeArguments.iterator_62();
      while (tmp0_iterator_1_2.hasNext_29()) {
        var item_2_3 = tmp0_iterator_1_2.next_31();
        tmp0_mapTo_0_1.add_32(serializer_1(_this_, item_2_3));
        Unit_getInstance();
      }
      tmp = tmp0_mapTo_0_1;
    } else {
      var tmp0_mapTo_0_1_0 = ArrayList_init_$Create$_0(collectionSizeOrDefault(typeArguments, 10));
      var tmp0_iterator_1_2_0 = typeArguments.iterator_62();
      while (tmp0_iterator_1_2_0.hasNext_29()) {
        var item_2_3_0 = tmp0_iterator_1_2_0.next_31();
        var tmp0_elvis_lhs_5 = serializerOrNull_0(_this_, item_2_3_0);
        var tmp_0;
        if (tmp0_elvis_lhs_5 == null) {
          return null;
        } else {
          tmp_0 = tmp0_elvis_lhs_5;
        }
        tmp0_mapTo_0_1_0.add_32(tmp_0);
        Unit_getInstance();
      }
      tmp = tmp0_mapTo_0_1_0;
    }
    var serializers = tmp;
    var tmp0_subject = rootClass;
    var tmp_1;
    if (((tmp0_subject.equals(getKClass_0(Collection)) ? true : tmp0_subject.equals(getKClass_0(List))) ? true : tmp0_subject.equals(getKClass_0(MutableList))) ? true : tmp0_subject.equals(getKClass_0(ArrayList))) {
      tmp_1 = new ArrayListSerializer(serializers.get_77(0));
    } else if (tmp0_subject.equals(getKClass_0(HashSet))) {
      tmp_1 = new HashSetSerializer(serializers.get_77(0));
    } else if ((tmp0_subject.equals(getKClass_0(Set)) ? true : tmp0_subject.equals(getKClass_0(MutableSet))) ? true : tmp0_subject.equals(getKClass_0(LinkedHashSet))) {
      tmp_1 = new LinkedHashSetSerializer(serializers.get_77(0));
    } else if (tmp0_subject.equals(getKClass_0(HashMap))) {
      tmp_1 = new HashMapSerializer(serializers.get_77(0), serializers.get_77(1));
    } else if ((tmp0_subject.equals(getKClass_0(Map_0)) ? true : tmp0_subject.equals(getKClass_0(MutableMap))) ? true : tmp0_subject.equals(getKClass_0(LinkedHashMap))) {
      tmp_1 = new LinkedHashMapSerializer(serializers.get_77(0), serializers.get_77(1));
    } else if (tmp0_subject.equals(getKClass_0(Entry))) {
      tmp_1 = MapEntrySerializer(serializers.get_77(0), serializers.get_77(1));
    } else if (tmp0_subject.equals(getKClass_0(Pair))) {
      tmp_1 = PairSerializer(serializers.get_77(0), serializers.get_77(1));
    } else if (tmp0_subject.equals(getKClass_0(Triple))) {
      tmp_1 = TripleSerializer(serializers.get_77(0), serializers.get_77(1), serializers.get_77(2));
    } else {
      if (isReferenceArray(rootClass)) {
        var tmp_2 = typeArguments.get_77(0)._get_classifier__0();
        var tmp0_cast_0 = ArraySerializer((!(tmp_2 == null) ? isInterface(tmp_2, KClass) : false) ? tmp_2 : THROW_CCE(), serializers.get_77(0));
        return isInterface(tmp0_cast_0, KSerializer) ? tmp0_cast_0 : THROW_CCE();
      }var args = copyToArray_0(serializers);
      var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(rootClass, args.slice());
      tmp_1 = tmp1_elvis_lhs == null ? reflectiveOrContextual(_this_, rootClass, serializers) : tmp1_elvis_lhs;
    }
    return tmp_1;
  }
  function nullable(_this_, shouldBeNullable) {
    if (shouldBeNullable)
      return _get_nullable_(_this_);
    return isInterface(_this_, KSerializer) ? _this_ : THROW_CCE();
  }
  function serializerOrNull_0(_this_, type) {
    return serializerByKTypeImpl(_this_, type, false);
  }
  function reflectiveOrContextual(_this_, kClass, typeArgumentsSerializers) {
    var tmp0_elvis_lhs = serializerOrNull(kClass);
    return tmp0_elvis_lhs == null ? _this_.getContextual_1(kClass, typeArgumentsSerializers) : tmp0_elvis_lhs;
  }
  function serializer_2(_this_) {
    return StringSerializer_getInstance();
  }
  function serializer_3(_this_) {
    return CharSerializer_getInstance();
  }
  function CharArraySerializer() {
    return CharArraySerializer_getInstance();
  }
  function serializer_4(_this_) {
    return DoubleSerializer_getInstance();
  }
  function DoubleArraySerializer() {
    return DoubleArraySerializer_getInstance();
  }
  function serializer_5(_this_) {
    return FloatSerializer_getInstance();
  }
  function FloatArraySerializer() {
    return FloatArraySerializer_getInstance();
  }
  function serializer_6(_this_) {
    return LongSerializer_getInstance();
  }
  function LongArraySerializer() {
    return LongArraySerializer_getInstance();
  }
  function serializer_7(_this_) {
    return IntSerializer_getInstance();
  }
  function IntArraySerializer() {
    return IntArraySerializer_getInstance();
  }
  function serializer_8(_this_) {
    return ShortSerializer_getInstance();
  }
  function ShortArraySerializer() {
    return ShortArraySerializer_getInstance();
  }
  function serializer_9(_this_) {
    return ByteSerializer_getInstance();
  }
  function ByteArraySerializer() {
    return ByteArraySerializer_getInstance();
  }
  function serializer_10(_this_) {
    return BooleanSerializer_getInstance();
  }
  function BooleanArraySerializer() {
    return BooleanArraySerializer_getInstance();
  }
  function serializer_11(_this_) {
    return UnitSerializer_getInstance();
  }
  function serializer_12(_this_) {
    return UIntSerializer_getInstance();
  }
  function serializer_13(_this_) {
    return ULongSerializer_getInstance();
  }
  function serializer_14(_this_) {
    return UByteSerializer_getInstance();
  }
  function serializer_15(_this_) {
    return UShortSerializer_getInstance();
  }
  function ListSerializer(elementSerializer_0) {
    return new ArrayListSerializer(elementSerializer_0);
  }
  function SetSerializer(elementSerializer_0) {
    return new LinkedHashSetSerializer(elementSerializer_0);
  }
  function MapSerializer(keySerializer, valueSerializer) {
    return new LinkedHashMapSerializer(keySerializer, valueSerializer);
  }
  function _get_nullable_(_this_) {
    var tmp;
    if (_this_._get_descriptor__77()._get_isNullable__17()) {
      tmp = isInterface(_this_, KSerializer) ? _this_ : THROW_CCE();
    } else {
      tmp = new NullableSerializer(_this_);
    }
    return tmp;
  }
  function MapEntrySerializer(keySerializer, valueSerializer) {
    return new MapEntrySerializer_0(keySerializer, valueSerializer);
  }
  function PairSerializer(keySerializer, valueSerializer) {
    return new PairSerializer_0(keySerializer, valueSerializer);
  }
  function TripleSerializer(aSerializer, bSerializer, cSerializer) {
    return new TripleSerializer_0(aSerializer, bSerializer, cSerializer);
  }
  function ArraySerializer(kClass, elementSerializer_0) {
    return new ReferenceArraySerializer(kClass, elementSerializer_0);
  }
  function withContext(_this_, context) {
    return new ContextDescriptor(_this_, context);
  }
  function ContextDescriptor(original, kClass) {
    this._original = original;
    this._kClass = kClass;
    this._serialName = '' + this._original._get_serialName__17() + '<' + this._kClass._get_simpleName__4() + '>';
  }
  ContextDescriptor.prototype.getElementAnnotations_17 = function (index) {
    return this._original.getElementAnnotations_17(index);
  };
  ContextDescriptor.prototype.getElementDescriptor_17 = function (index) {
    return this._original.getElementDescriptor_17(index);
  };
  ContextDescriptor.prototype.getElementIndex_17 = function (name) {
    return this._original.getElementIndex_17(name);
  };
  ContextDescriptor.prototype.getElementName_17 = function (index) {
    return this._original.getElementName_17(index);
  };
  ContextDescriptor.prototype._get_elementsCount__17 = function () {
    return this._original._get_elementsCount__17();
  };
  ContextDescriptor.prototype._get_isInline__17 = function () {
    return this._original._get_isInline__17();
  };
  ContextDescriptor.prototype._get_isNullable__17 = function () {
    return this._original._get_isNullable__17();
  };
  ContextDescriptor.prototype._get_kind__20 = function () {
    return this._original._get_kind__20();
  };
  ContextDescriptor.prototype._get_serialName__17 = function () {
    return this._serialName;
  };
  ContextDescriptor.prototype.equals = function (other) {
    var tmp0_elvis_lhs = other instanceof ContextDescriptor ? other : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var another = tmp;
    return equals_1(this._original, another._original) ? another._kClass.equals(this._kClass) : false;
  };
  ContextDescriptor.prototype.hashCode = function () {
    var result = this._kClass.hashCode();
    result = imul(31, result) + getStringHashCode(this._serialName) | 0;
    return result;
  };
  ContextDescriptor.prototype.toString = function () {
    return '' + 'ContextDescriptor(kClass: ' + this._kClass + ', original: ' + this._original + ')';
  };
  ContextDescriptor.$metadata$ = {
    simpleName: 'ContextDescriptor',
    kind: 'class',
    interfaces: [SerialDescriptor]
  };
  function SerialDescriptor() {
  }
  SerialDescriptor.prototype._get_isNullable__17 = function () {
    return false;
  };
  SerialDescriptor.prototype._get_isInline__17 = function () {
    return false;
  };
  SerialDescriptor.$metadata$ = {
    simpleName: 'SerialDescriptor',
    kind: 'interface',
    interfaces: []
  };
  function _get_elementDescriptors_(_this_) {
    return new _no_name_provided__1_5(_this_);
  }
  function _no_name_provided__205($this_elementDescriptors) {
    this._$this_elementDescriptors = $this_elementDescriptors;
    this._elementsLeft = this._$this_elementDescriptors._get_elementsCount__17();
  }
  _no_name_provided__205.prototype.hasNext_29 = function () {
    return this._elementsLeft > 0;
  };
  _no_name_provided__205.prototype.next_31 = function () {
    var tmp = this._$this_elementDescriptors._get_elementsCount__17();
    var tmp0_this = this;
    var tmp1 = tmp0_this._elementsLeft;
    tmp0_this._elementsLeft = tmp1 - 1 | 0;
    return this._$this_elementDescriptors.getElementDescriptor_17(tmp - tmp1 | 0);
  };
  _no_name_provided__205.$metadata$ = {
    kind: 'class',
    interfaces: [Iterator_0]
  };
  function _no_name_provided__1_5($this_elementDescriptors) {
    this._$this_elementDescriptors_0 = $this_elementDescriptors;
  }
  _no_name_provided__1_5.prototype.iterator_2_1 = function () {
    return new _no_name_provided__205(this._$this_elementDescriptors_0);
  };
  _no_name_provided__1_5.prototype.iterator_62 = function () {
    return this.iterator_2_1();
  };
  _no_name_provided__1_5.$metadata$ = {
    simpleName: '<no name provided>_1',
    kind: 'class',
    interfaces: [Iterable_0]
  };
  function buildSerialDescriptor(serialName, kind, typeParameters, builder) {
    var tmp0_require_0 = !isBlank(serialName);
    if (!tmp0_require_0) {
      var message_1 = 'Blank serial names are prohibited';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var tmp1_require_0 = !equals_1(kind, CLASS_getInstance());
    if (!tmp1_require_0) {
      var message_1_0 = "For StructureKind.CLASS please use 'buildClassSerialDescriptor' instead";
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1_0));
    }var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builder(sdBuilder);
    return new SerialDescriptorImpl(serialName, kind, sdBuilder._elementNames._get_size__48(), toList(typeParameters), sdBuilder);
  }
  function buildSerialDescriptor$default(serialName, kind, typeParameters, builder, $mask0, $handler) {
    if (!(($mask0 & 8) === 0)) {
      builder = _no_name_provided_$factory_170();
    }return buildSerialDescriptor(serialName, kind, typeParameters, builder);
  }
  function ClassSerialDescriptorBuilder(serialName) {
    this._serialName_0 = serialName;
    this._isNullable = false;
    this._annotations = emptyList();
    this._elementNames = ArrayList_init_$Create$();
    this._uniqueNames = HashSet_init_$Create$();
    this._elementDescriptors = ArrayList_init_$Create$();
    this._elementAnnotations = ArrayList_init_$Create$();
    this._elementOptionality = ArrayList_init_$Create$();
  }
  ClassSerialDescriptorBuilder.prototype.element = function (elementName, descriptor, annotations, isOptional) {
    var tmp0_require_0 = this._uniqueNames.add_32(elementName);
    if (!tmp0_require_0) {
      var message_1 = '' + "Element with name '" + elementName + "' is already registered";
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var tmp0_this = this;
    var tmp1_plusAssign_0 = tmp0_this._elementNames;
    tmp1_plusAssign_0.add_32(elementName);
    Unit_getInstance();
    var tmp1_this = this;
    var tmp2_plusAssign_0 = tmp1_this._elementDescriptors;
    tmp2_plusAssign_0.add_32(descriptor);
    Unit_getInstance();
    var tmp2_this = this;
    var tmp3_plusAssign_0 = tmp2_this._elementAnnotations;
    tmp3_plusAssign_0.add_32(annotations);
    Unit_getInstance();
    var tmp3_this = this;
    var tmp4_plusAssign_0 = tmp3_this._elementOptionality;
    tmp4_plusAssign_0.add_32(isOptional);
    Unit_getInstance();
  };
  ClassSerialDescriptorBuilder.prototype.element$default = function (elementName, descriptor, annotations, isOptional, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      annotations = emptyList();
    if (!(($mask0 & 8) === 0))
      isOptional = false;
    return this.element(elementName, descriptor, annotations, isOptional);
  };
  ClassSerialDescriptorBuilder.$metadata$ = {
    simpleName: 'ClassSerialDescriptorBuilder',
    kind: 'class',
    interfaces: []
  };
  function _get__hashCode_($this) {
    var tmp0_getValue_0 = $this.__hashCode$delegate;
    var tmp1_getValue_0 = _hashCode$factory();
    return tmp0_getValue_0._get_value__27();
  }
  function _no_name_provided__206(this$0) {
    this._this$0_54 = this$0;
  }
  _no_name_provided__206.prototype.invoke_411 = function () {
    return hashCodeImpl(this._this$0_54, this._this$0_54._typeParametersDescriptors);
  };
  _no_name_provided__206.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__207(this$0) {
    this._this$0_55 = this$0;
  }
  _no_name_provided__207.prototype.invoke_346 = function (it) {
    return this._this$0_55.getElementName_17(it) + ': ' + this._this$0_55.getElementDescriptor_17(it)._get_serialName__17();
  };
  _no_name_provided__207.prototype.invoke_420 = function (p1) {
    return this.invoke_346((!(p1 == null) ? typeof p1 === 'number' : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__207.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function SerialDescriptorImpl(serialName, kind, elementsCount, typeParameters, builder) {
    this._serialName_1 = serialName;
    this._kind = kind;
    this._elementsCount = elementsCount;
    this._annotations_0 = builder._annotations;
    this._serialNames = toHashSet(builder._elementNames);
    var tmp = this;
    var tmp0_toTypedArray_0 = builder._elementNames;
    tmp._elementNames_0 = copyToArray_0(tmp0_toTypedArray_0);
    this._elementDescriptors_0 = compactArray(builder._elementDescriptors);
    var tmp_0 = this;
    var tmp0_toTypedArray_0_0 = builder._elementAnnotations;
    tmp_0._elementAnnotations_0 = copyToArray_0(tmp0_toTypedArray_0_0);
    this._elementOptionality_0 = toBooleanArray(builder._elementOptionality);
    var tmp_1 = this;
    var tmp0_map_0 = withIndex(this._elementNames_0);
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
    var tmp0_iterator_1_2 = tmp0_map_0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var item_2_3 = tmp0_iterator_1_2.next_31();
      tmp0_mapTo_0_1.add_32(to(item_2_3._value, item_2_3._index));
      Unit_getInstance();
    }
    tmp_1._name2Index = toMap(tmp0_mapTo_0_1);
    this._typeParametersDescriptors = compactArray(typeParameters);
    var tmp_2 = this;
    tmp_2.__hashCode$delegate = lazy(_no_name_provided_$factory_171(this));
  }
  SerialDescriptorImpl.prototype._get_serialName__17 = function () {
    return this._serialName_1;
  };
  SerialDescriptorImpl.prototype._get_kind__20 = function () {
    return this._kind;
  };
  SerialDescriptorImpl.prototype._get_elementsCount__17 = function () {
    return this._elementsCount;
  };
  SerialDescriptorImpl.prototype._get_serialNames__3 = function () {
    return this._serialNames;
  };
  SerialDescriptorImpl.prototype.getElementName_17 = function (index) {
    return getChecked(this._elementNames_0, index);
  };
  SerialDescriptorImpl.prototype.getElementIndex_17 = function (name) {
    var tmp0_elvis_lhs = this._name2Index.get_65(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_51();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  SerialDescriptorImpl.prototype.getElementAnnotations_17 = function (index) {
    return getChecked(this._elementAnnotations_0, index);
  };
  SerialDescriptorImpl.prototype.getElementDescriptor_17 = function (index) {
    return getChecked(this._elementDescriptors_0, index);
  };
  SerialDescriptorImpl.prototype.equals = function (other) {
    var tmp$ret$0;
    l$ret$1: do {
      if (this === other) {
        tmp$ret$0 = true;
        break l$ret$1;
      }if (!(other instanceof SerialDescriptorImpl)) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      if (!(this._get_serialName__17() === other._get_serialName__17())) {
        tmp$ret$0 = false;
        break l$ret$1;
      }var tmp0__anonymous__3 = other;
      if (!contentEquals(this._typeParametersDescriptors, tmp0__anonymous__3._typeParametersDescriptors)) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      if (!(this._get_elementsCount__17() === other._get_elementsCount__17())) {
        tmp$ret$0 = false;
        break l$ret$1;
      }var inductionVariable = 0;
      var last_1 = this._get_elementsCount__17();
      if (inductionVariable < last_1)
        do {
          var index_2 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.getElementDescriptor_17(index_2)._get_serialName__17() === other.getElementDescriptor_17(index_2)._get_serialName__17())) {
            tmp$ret$0 = false;
            break l$ret$1;
          }if (!equals_1(this.getElementDescriptor_17(index_2)._get_kind__20(), other.getElementDescriptor_17(index_2)._get_kind__20())) {
            tmp$ret$0 = false;
            break l$ret$1;
          }}
         while (inductionVariable < last_1);
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  SerialDescriptorImpl.prototype.hashCode = function () {
    return _get__hashCode_(this);
  };
  SerialDescriptorImpl.prototype.toString = function () {
    var tmp = until(0, this._elementsCount);
    var tmp_0 = '' + this._serialName_1 + '(';
    return joinToString$default_0(tmp, ', ', tmp_0, ')', 0, null, _no_name_provided_$factory_172(this), 24, null);
  };
  SerialDescriptorImpl.$metadata$ = {
    simpleName: 'SerialDescriptorImpl',
    kind: 'class',
    interfaces: [SerialDescriptor, CachedNames]
  };
  function buildClassSerialDescriptor(serialName, typeParameters, builderAction) {
    var tmp0_require_0 = !isBlank(serialName);
    if (!tmp0_require_0) {
      var message_1 = 'Blank serial names are prohibited';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builderAction(sdBuilder);
    return new SerialDescriptorImpl(serialName, CLASS_getInstance(), sdBuilder._elementNames._get_size__48(), toList(typeParameters), sdBuilder);
  }
  function buildClassSerialDescriptor$default(serialName, typeParameters, builderAction, $mask0, $handler) {
    if (!(($mask0 & 4) === 0)) {
      builderAction = _no_name_provided_$factory_173();
    }return buildClassSerialDescriptor(serialName, typeParameters, builderAction);
  }
  function PrimitiveSerialDescriptor(serialName, kind) {
    var tmp0_require_0 = !isBlank(serialName);
    if (!tmp0_require_0) {
      var message_1 = 'Blank serial names are prohibited';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }return PrimitiveDescriptorSafe(serialName, kind);
  }
  function _no_name_provided__208() {
  }
  _no_name_provided__208.prototype.invoke_378 = function ($this$null) {
    return Unit_getInstance();
  };
  _no_name_provided__208.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__208.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__209() {
  }
  _no_name_provided__209.prototype.invoke_378 = function ($this$null) {
    return Unit_getInstance();
  };
  _no_name_provided__209.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__209.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _hashCode$factory() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode_(receiver);
    }, null);
  }
  function _no_name_provided_$factory_170() {
    var i = new _no_name_provided__208();
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_171(this$0) {
    var i = new _no_name_provided__206(this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_172(this$0) {
    var i = new _no_name_provided__207(this$0);
    return function (p1) {
      return i.invoke_346(p1);
    };
  }
  function _no_name_provided_$factory_173() {
    var i = new _no_name_provided__209();
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function ENUM() {
    ENUM_instance = this;
    SerialKind.call(this);
  }
  ENUM.$metadata$ = {
    simpleName: 'ENUM',
    kind: 'object',
    interfaces: []
  };
  var ENUM_instance;
  function ENUM_getInstance() {
    if (ENUM_instance == null)
      new ENUM();
    return ENUM_instance;
  }
  function CONTEXTUAL() {
    CONTEXTUAL_instance = this;
    SerialKind.call(this);
  }
  CONTEXTUAL.$metadata$ = {
    simpleName: 'CONTEXTUAL',
    kind: 'object',
    interfaces: []
  };
  var CONTEXTUAL_instance;
  function CONTEXTUAL_getInstance() {
    if (CONTEXTUAL_instance == null)
      new CONTEXTUAL();
    return CONTEXTUAL_instance;
  }
  function SerialKind() {
  }
  SerialKind.prototype.toString = function () {
    return ensureNotNull(getKClassFromExpression_0(this)._get_simpleName__4());
  };
  SerialKind.prototype.hashCode = function () {
    return getStringHashCode(this.toString());
  };
  SerialKind.$metadata$ = {
    simpleName: 'SerialKind',
    kind: 'class',
    interfaces: []
  };
  function BOOLEAN() {
    BOOLEAN_instance = this;
    PrimitiveKind.call(this);
  }
  BOOLEAN.$metadata$ = {
    simpleName: 'BOOLEAN',
    kind: 'object',
    interfaces: []
  };
  var BOOLEAN_instance;
  function BOOLEAN_getInstance() {
    if (BOOLEAN_instance == null)
      new BOOLEAN();
    return BOOLEAN_instance;
  }
  function BYTE() {
    BYTE_instance = this;
    PrimitiveKind.call(this);
  }
  BYTE.$metadata$ = {
    simpleName: 'BYTE',
    kind: 'object',
    interfaces: []
  };
  var BYTE_instance;
  function BYTE_getInstance() {
    if (BYTE_instance == null)
      new BYTE();
    return BYTE_instance;
  }
  function CHAR() {
    CHAR_instance = this;
    PrimitiveKind.call(this);
  }
  CHAR.$metadata$ = {
    simpleName: 'CHAR',
    kind: 'object',
    interfaces: []
  };
  var CHAR_instance;
  function CHAR_getInstance() {
    if (CHAR_instance == null)
      new CHAR();
    return CHAR_instance;
  }
  function SHORT() {
    SHORT_instance = this;
    PrimitiveKind.call(this);
  }
  SHORT.$metadata$ = {
    simpleName: 'SHORT',
    kind: 'object',
    interfaces: []
  };
  var SHORT_instance;
  function SHORT_getInstance() {
    if (SHORT_instance == null)
      new SHORT();
    return SHORT_instance;
  }
  function INT() {
    INT_instance = this;
    PrimitiveKind.call(this);
  }
  INT.$metadata$ = {
    simpleName: 'INT',
    kind: 'object',
    interfaces: []
  };
  var INT_instance;
  function INT_getInstance() {
    if (INT_instance == null)
      new INT();
    return INT_instance;
  }
  function LONG() {
    LONG_instance = this;
    PrimitiveKind.call(this);
  }
  LONG.$metadata$ = {
    simpleName: 'LONG',
    kind: 'object',
    interfaces: []
  };
  var LONG_instance;
  function LONG_getInstance() {
    if (LONG_instance == null)
      new LONG();
    return LONG_instance;
  }
  function FLOAT() {
    FLOAT_instance = this;
    PrimitiveKind.call(this);
  }
  FLOAT.$metadata$ = {
    simpleName: 'FLOAT',
    kind: 'object',
    interfaces: []
  };
  var FLOAT_instance;
  function FLOAT_getInstance() {
    if (FLOAT_instance == null)
      new FLOAT();
    return FLOAT_instance;
  }
  function DOUBLE() {
    DOUBLE_instance = this;
    PrimitiveKind.call(this);
  }
  DOUBLE.$metadata$ = {
    simpleName: 'DOUBLE',
    kind: 'object',
    interfaces: []
  };
  var DOUBLE_instance;
  function DOUBLE_getInstance() {
    if (DOUBLE_instance == null)
      new DOUBLE();
    return DOUBLE_instance;
  }
  function STRING() {
    STRING_instance = this;
    PrimitiveKind.call(this);
  }
  STRING.$metadata$ = {
    simpleName: 'STRING',
    kind: 'object',
    interfaces: []
  };
  var STRING_instance;
  function STRING_getInstance() {
    if (STRING_instance == null)
      new STRING();
    return STRING_instance;
  }
  function PrimitiveKind() {
    SerialKind.call(this);
  }
  PrimitiveKind.$metadata$ = {
    simpleName: 'PrimitiveKind',
    kind: 'class',
    interfaces: []
  };
  function CLASS() {
    CLASS_instance = this;
    StructureKind.call(this);
  }
  CLASS.$metadata$ = {
    simpleName: 'CLASS',
    kind: 'object',
    interfaces: []
  };
  var CLASS_instance;
  function CLASS_getInstance() {
    if (CLASS_instance == null)
      new CLASS();
    return CLASS_instance;
  }
  function LIST() {
    LIST_instance = this;
    StructureKind.call(this);
  }
  LIST.$metadata$ = {
    simpleName: 'LIST',
    kind: 'object',
    interfaces: []
  };
  var LIST_instance;
  function LIST_getInstance() {
    if (LIST_instance == null)
      new LIST();
    return LIST_instance;
  }
  function MAP() {
    MAP_instance = this;
    StructureKind.call(this);
  }
  MAP.$metadata$ = {
    simpleName: 'MAP',
    kind: 'object',
    interfaces: []
  };
  var MAP_instance;
  function MAP_getInstance() {
    if (MAP_instance == null)
      new MAP();
    return MAP_instance;
  }
  function OBJECT() {
    OBJECT_instance = this;
    StructureKind.call(this);
  }
  OBJECT.$metadata$ = {
    simpleName: 'OBJECT',
    kind: 'object',
    interfaces: []
  };
  var OBJECT_instance;
  function OBJECT_getInstance() {
    if (OBJECT_instance == null)
      new OBJECT();
    return OBJECT_instance;
  }
  function StructureKind() {
    SerialKind.call(this);
  }
  StructureKind.$metadata$ = {
    simpleName: 'StructureKind',
    kind: 'class',
    interfaces: []
  };
  function SEALED_0() {
    SEALED_instance = this;
    PolymorphicKind.call(this);
  }
  SEALED_0.$metadata$ = {
    simpleName: 'SEALED',
    kind: 'object',
    interfaces: []
  };
  var SEALED_instance;
  function SEALED_getInstance() {
    if (SEALED_instance == null)
      new SEALED_0();
    return SEALED_instance;
  }
  function OPEN() {
    OPEN_instance = this;
    PolymorphicKind.call(this);
  }
  OPEN.$metadata$ = {
    simpleName: 'OPEN',
    kind: 'object',
    interfaces: []
  };
  var OPEN_instance;
  function OPEN_getInstance() {
    if (OPEN_instance == null)
      new OPEN();
    return OPEN_instance;
  }
  function PolymorphicKind() {
    SerialKind.call(this);
  }
  PolymorphicKind.$metadata$ = {
    simpleName: 'PolymorphicKind',
    kind: 'class',
    interfaces: []
  };
  function AbstractDecoder() {
  }
  AbstractDecoder.prototype.decodeValue_1 = function () {
    throw SerializationException_init_$Create$('' + getKClassFromExpression_0(this) + " can't retrieve untyped values");
  };
  AbstractDecoder.prototype.decodeNotNullMark_8 = function () {
    return true;
  };
  AbstractDecoder.prototype.decodeNull_8 = function () {
    return null;
  };
  AbstractDecoder.prototype.decodeBoolean_8 = function () {
    var tmp = this.decodeValue_1();
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.decodeByte_8 = function () {
    var tmp = this.decodeValue_1();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.decodeShort_8 = function () {
    var tmp = this.decodeValue_1();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.decodeInt_8 = function () {
    var tmp = this.decodeValue_1();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.decodeLong_8 = function () {
    var tmp = this.decodeValue_1();
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.decodeFloat_8 = function () {
    var tmp = this.decodeValue_1();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.decodeDouble_8 = function () {
    var tmp = this.decodeValue_1();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.decodeChar_8 = function () {
    var tmp = this.decodeValue_1();
    return tmp instanceof Char ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.decodeString_8 = function () {
    var tmp = this.decodeValue_1();
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.decodeInline_8 = function (inlineDescriptor) {
    return this;
  };
  AbstractDecoder.prototype.decodeSerializableValue_17 = function (deserializer, previousValue) {
    return this.decodeSerializableValue_16(deserializer);
  };
  AbstractDecoder.prototype.beginStructure_11 = function (descriptor) {
    return this;
  };
  AbstractDecoder.prototype.endStructure_11 = function (descriptor) {
  };
  AbstractDecoder.prototype.decodeBooleanElement_8 = function (descriptor, index) {
    return this.decodeBoolean_8();
  };
  AbstractDecoder.prototype.decodeByteElement_8 = function (descriptor, index) {
    return this.decodeByte_8();
  };
  AbstractDecoder.prototype.decodeShortElement_8 = function (descriptor, index) {
    return this.decodeShort_8();
  };
  AbstractDecoder.prototype.decodeIntElement_8 = function (descriptor, index) {
    return this.decodeInt_8();
  };
  AbstractDecoder.prototype.decodeLongElement_8 = function (descriptor, index) {
    return this.decodeLong_8();
  };
  AbstractDecoder.prototype.decodeFloatElement_8 = function (descriptor, index) {
    return this.decodeFloat_8();
  };
  AbstractDecoder.prototype.decodeDoubleElement_8 = function (descriptor, index) {
    return this.decodeDouble_8();
  };
  AbstractDecoder.prototype.decodeCharElement_8 = function (descriptor, index) {
    return this.decodeChar_8();
  };
  AbstractDecoder.prototype.decodeStringElement_8 = function (descriptor, index) {
    return this.decodeString_8();
  };
  AbstractDecoder.prototype.decodeSerializableElement_8 = function (descriptor, index, deserializer, previousValue) {
    return this.decodeSerializableValue_17(deserializer, previousValue);
  };
  AbstractDecoder.prototype.decodeNullableSerializableElement_8 = function (descriptor, index, deserializer, previousValue) {
    var isNullabilitySupported = deserializer._get_descriptor__77()._get_isNullable__17();
    return (isNullabilitySupported ? true : this.decodeNotNullMark_8()) ? this.decodeSerializableValue_17(deserializer, previousValue) : this.decodeNull_8();
  };
  AbstractDecoder.$metadata$ = {
    simpleName: 'AbstractDecoder',
    kind: 'class',
    interfaces: [Decoder_1, CompositeDecoder]
  };
  function AbstractEncoder() {
  }
  AbstractEncoder.prototype.beginStructure_11 = function (descriptor) {
    return this;
  };
  AbstractEncoder.prototype.endStructure_11 = function (descriptor) {
  };
  AbstractEncoder.prototype.encodeElement_0 = function (descriptor, index) {
    return true;
  };
  AbstractEncoder.prototype.encodeValue_0 = function (value) {
    throw SerializationException_init_$Create$('' + 'Non-serializable ' + getKClassFromExpression_0(value) + ' is not supported by ' + getKClassFromExpression_0(this) + ' encoder');
  };
  AbstractEncoder.prototype.encodeNull_1 = function () {
    throw SerializationException_init_$Create$("'null' is not supported by default");
  };
  AbstractEncoder.prototype.encodeBoolean_1 = function (value) {
    return this.encodeValue_0(value);
  };
  AbstractEncoder.prototype.encodeByte_1 = function (value) {
    return this.encodeValue_0(value);
  };
  AbstractEncoder.prototype.encodeShort_1 = function (value) {
    return this.encodeValue_0(value);
  };
  AbstractEncoder.prototype.encodeInt_1 = function (value) {
    return this.encodeValue_0(value);
  };
  AbstractEncoder.prototype.encodeLong_1 = function (value) {
    return this.encodeValue_0(value);
  };
  AbstractEncoder.prototype.encodeFloat_1 = function (value) {
    return this.encodeValue_0(value);
  };
  AbstractEncoder.prototype.encodeDouble_1 = function (value) {
    return this.encodeValue_0(value);
  };
  AbstractEncoder.prototype.encodeChar_1 = function (value) {
    return this.encodeValue_0(value);
  };
  AbstractEncoder.prototype.encodeString_1 = function (value) {
    return this.encodeValue_0(value);
  };
  AbstractEncoder.prototype.encodeInline_1 = function (inlineDescriptor) {
    return this;
  };
  AbstractEncoder.prototype.encodeBooleanElement_1 = function (descriptor, index, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeBoolean_1(value);
  };
  AbstractEncoder.prototype.encodeByteElement_1 = function (descriptor, index, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeByte_1(value);
  };
  AbstractEncoder.prototype.encodeShortElement_1 = function (descriptor, index, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeShort_1(value);
  };
  AbstractEncoder.prototype.encodeIntElement_1 = function (descriptor, index, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeInt_1(value);
  };
  AbstractEncoder.prototype.encodeLongElement_1 = function (descriptor, index, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeLong_1(value);
  };
  AbstractEncoder.prototype.encodeFloatElement_1 = function (descriptor, index, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeFloat_1(value);
  };
  AbstractEncoder.prototype.encodeDoubleElement_1 = function (descriptor, index, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeDouble_1(value);
  };
  AbstractEncoder.prototype.encodeCharElement_1 = function (descriptor, index, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeChar_1(value);
  };
  AbstractEncoder.prototype.encodeStringElement_1 = function (descriptor, index, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeString_1(value);
  };
  AbstractEncoder.prototype.encodeSerializableElement_1 = function (descriptor, index, serializer_16, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeSerializableValue_1(serializer_16, value);
  };
  AbstractEncoder.prototype.encodeNullableSerializableElement_1 = function (descriptor, index, serializer_16, value) {
    if (this.encodeElement_0(descriptor, index))
      this.encodeNullableSerializableValue_1(serializer_16, value);
  };
  AbstractEncoder.$metadata$ = {
    simpleName: 'AbstractEncoder',
    kind: 'class',
    interfaces: [Encoder, CompositeEncoder]
  };
  function Decoder_1() {
  }
  Decoder_1.prototype.decodeSerializableValue_16 = function (deserializer) {
    return deserializer.deserialize_81(this);
  };
  Decoder_1.$metadata$ = {
    simpleName: 'Decoder',
    kind: 'interface',
    interfaces: []
  };
  function Companion_52() {
    Companion_instance_51 = this;
    this._DECODE_DONE = -1;
    this._UNKNOWN_NAME = -3;
  }
  Companion_52.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_51;
  function Companion_getInstance_51() {
    if (Companion_instance_51 == null)
      new Companion_52();
    return Companion_instance_51;
  }
  function CompositeDecoder() {
  }
  CompositeDecoder.prototype.decodeSequentially_8 = function () {
    return false;
  };
  CompositeDecoder.prototype.decodeCollectionSize_8 = function (descriptor) {
    return -1;
  };
  CompositeDecoder.prototype.decodeSerializableElement$default_8 = function (descriptor, index, deserializer, previousValue, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      previousValue = null;
    return $handler == null ? this.decodeSerializableElement_8(descriptor, index, deserializer, previousValue) : $handler(descriptor, index, deserializer, previousValue);
  };
  CompositeDecoder.$metadata$ = {
    simpleName: 'CompositeDecoder',
    kind: 'interface',
    interfaces: []
  };
  function Encoder() {
  }
  Encoder.prototype.encodeNotNullMark_1 = function () {
  };
  Encoder.prototype.beginCollection_1 = function (descriptor, collectionSize) {
    return this.beginStructure_11(descriptor);
  };
  Encoder.prototype.encodeSerializableValue_1 = function (serializer_16, value) {
    serializer_16.serialize_129(this, value);
  };
  Encoder.prototype.encodeNullableSerializableValue_1 = function (serializer_16, value) {
    var isNullabilitySupported = serializer_16._get_descriptor__77()._get_isNullable__17();
    if (isNullabilitySupported) {
      return this.encodeSerializableValue_1(isInterface(serializer_16, SerializationStrategy) ? serializer_16 : THROW_CCE(), value);
    }if (value == null) {
      this.encodeNull_1();
    } else {
      this.encodeNotNullMark_1();
      this.encodeSerializableValue_1(serializer_16, value);
    }
  };
  Encoder.$metadata$ = {
    simpleName: 'Encoder',
    kind: 'interface',
    interfaces: []
  };
  function CompositeEncoder() {
  }
  CompositeEncoder.$metadata$ = {
    simpleName: 'CompositeEncoder',
    kind: 'interface',
    interfaces: []
  };
  function decodeSequentially($this, compositeDecoder) {
    var klassName = compositeDecoder.decodeStringElement_8($this._get_descriptor__77(), 0);
    var serializer_16 = findPolymorphicSerializer_0($this, compositeDecoder, klassName);
    var tmp = $this._get_descriptor__77();
    return compositeDecoder.decodeSerializableElement$default_8(tmp, 1, serializer_16, null, 8, null);
  }
  function AbstractPolymorphicSerializer() {
  }
  AbstractPolymorphicSerializer.prototype.serialize_129 = function (encoder, value) {
    var actualSerializer = findPolymorphicSerializer(this, encoder, value);
    var tmp0_encodeStructure_0 = this._get_descriptor__77();
    var composite_1 = encoder.beginStructure_11(tmp0_encodeStructure_0);
    var ex_2 = null;
    try {
      composite_1.encodeStringElement_1(this._get_descriptor__77(), 0, actualSerializer._get_descriptor__77()._get_serialName__17());
      var tmp = this._get_descriptor__77();
      composite_1.encodeSerializableElement_1(tmp, 1, isInterface(actualSerializer, SerializationStrategy) ? actualSerializer : THROW_CCE(), value);
    } catch ($p) {
      if ($p instanceof Error) {
        ex_2 = $p;
        throw $p;
      } else {
        {
          throw $p;
        }
      }
    }
    finally {
      if (ex_2 == null)
        composite_1.endStructure_11(tmp0_encodeStructure_0);
    }
  };
  AbstractPolymorphicSerializer.prototype.deserialize_81 = function (decoder) {
    var tmp$ret$4;
    l$ret$5: do {
      var tmp0_decodeStructure_0 = this._get_descriptor__77();
      var composite_1 = decoder.beginStructure_11(tmp0_decodeStructure_0);
      var ex_2 = null;
      try {
        var klassName_5 = null;
        var value_6 = null;
        if (composite_1.decodeSequentially_8()) {
          return decodeSequentially(this, composite_1);
        }mainLoop: while (true) {
          var index_7 = composite_1.decodeElementIndex_8(this._get_descriptor__77());
          Companion_getInstance_51();
          if (index_7 === -1) {
            break mainLoop;
          } else {
            if (index_7 === 0) {
              klassName_5 = composite_1.decodeStringElement_8(this._get_descriptor__77(), index_7);
            } else {
              if (index_7 === 1) {
                var tmp$ret$0;
                l$ret$1: do {
                  var tmp0_requireNotNull_0_8 = klassName_5;
                  if (tmp0_requireNotNull_0_8 == null) {
                    var message_1_9 = 'Cannot read polymorphic value before its type token';
                    throw IllegalArgumentException_init_$Create$_0(toString_1(message_1_9));
                  } else {
                    tmp$ret$0 = tmp0_requireNotNull_0_8;
                    break l$ret$1;
                  }
                }
                 while (false);
                klassName_5 = tmp$ret$0;
                var serializer_10_0 = findPolymorphicSerializer_0(this, composite_1, klassName_5);
                var tmp = this._get_descriptor__77();
                value_6 = composite_1.decodeSerializableElement$default_8(tmp, index_7, serializer_10_0, null, 8, null);
              } else {
                {
                  var tmp0_elvis_lhs_11 = klassName_5;
                  throw SerializationException_init_$Create$('Invalid index in polymorphic deserialization of ' + (tmp0_elvis_lhs_11 == null ? 'unknown class' : tmp0_elvis_lhs_11) + ('' + '\n Expected 0, 1 or DECODE_DONE(-1), but found ' + index_7));
                }
              }
            }
          }
        }
        var tmp$ret$2;
        l$ret$3: do {
          var tmp1_requireNotNull_0_12 = value_6;
          if (tmp1_requireNotNull_0_12 == null) {
            var message_1_13 = '' + 'Polymorphic value has not been read for class ' + klassName_5;
            throw IllegalArgumentException_init_$Create$_0(toString_1(message_1_13));
          } else {
            tmp$ret$2 = tmp1_requireNotNull_0_12;
            break l$ret$3;
          }
        }
         while (false);
        var tmp_0 = tmp$ret$2;
        tmp$ret$4 = isObject(tmp_0) ? tmp_0 : THROW_CCE();
        break l$ret$5;
      } catch ($p) {
        if ($p instanceof Error) {
          ex_2 = $p;
          throw $p;
        } else {
          {
            throw $p;
          }
        }
      }
      finally {
        if (ex_2 == null)
          composite_1.endStructure_11(tmp0_decodeStructure_0);
      }
    }
     while (false);
    return tmp$ret$4;
  };
  AbstractPolymorphicSerializer.prototype.findPolymorphicSerializerOrNull_8 = function (decoder, klassName) {
    return decoder._get_serializersModule__15().getPolymorphic_2(this._get_baseClass__3(), klassName);
  };
  AbstractPolymorphicSerializer.prototype.findPolymorphicSerializerOrNull_10 = function (encoder, value) {
    return encoder._get_serializersModule__15().getPolymorphic_1(this._get_baseClass__3(), value);
  };
  AbstractPolymorphicSerializer.$metadata$ = {
    simpleName: 'AbstractPolymorphicSerializer',
    kind: 'class',
    interfaces: [KSerializer]
  };
  function throwSubtypeNotRegistered(subClass, baseClass) {
    var tmp0_elvis_lhs = subClass._get_simpleName__4();
    throwSubtypeNotRegistered_0(tmp0_elvis_lhs == null ? '' + subClass : tmp0_elvis_lhs, baseClass);
  }
  function throwSubtypeNotRegistered_0(subClassName, baseClass) {
    var scope = '' + "in the scope of '" + baseClass._get_simpleName__4() + "'";
    throw SerializationException_init_$Create$(subClassName == null ? '' + 'Class discriminator was missing and no default polymorphic serializers were registered ' + scope : '' + "Class '" + subClassName + "' is not registered for polymorphic serialization " + scope + '.\n' + "Mark the base class as 'sealed' or register the serializer explicitly.");
  }
  function CachedNames() {
  }
  CachedNames.$metadata$ = {
    simpleName: 'CachedNames',
    kind: 'interface',
    interfaces: []
  };
  function PrimitiveArrayDescriptor(primitive) {
    ListLikeDescriptor.call(this, primitive);
    this._serialName_2 = '' + primitive._get_serialName__17() + 'Array';
  }
  PrimitiveArrayDescriptor.prototype._get_serialName__17 = function () {
    return this._serialName_2;
  };
  PrimitiveArrayDescriptor.$metadata$ = {
    simpleName: 'PrimitiveArrayDescriptor',
    kind: 'class',
    interfaces: []
  };
  function ListLikeDescriptor(elementDescriptor) {
    this._elementDescriptor = elementDescriptor;
    this._elementsCount_0 = 1;
  }
  ListLikeDescriptor.prototype._get_kind__20 = function () {
    return LIST_getInstance();
  };
  ListLikeDescriptor.prototype._get_elementsCount__17 = function () {
    return this._elementsCount_0;
  };
  ListLikeDescriptor.prototype.getElementName_17 = function (index) {
    return index.toString();
  };
  ListLikeDescriptor.prototype.getElementIndex_17 = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$_0('' + name + ' is not a valid list index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  ListLikeDescriptor.prototype.getElementAnnotations_17 = function (index) {
    var tmp0_require_0 = index >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Illegal index ' + index + ', ' + this._get_serialName__17() + ' expects only non-negative indices';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }return emptyList();
  };
  ListLikeDescriptor.prototype.getElementDescriptor_17 = function (index) {
    var tmp0_require_0 = index >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Illegal index ' + index + ', ' + this._get_serialName__17() + ' expects only non-negative indices';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }return this._elementDescriptor;
  };
  ListLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ListLikeDescriptor))
      return false;
    else {
    }
    if (equals_1(this._elementDescriptor, other._elementDescriptor) ? this._get_serialName__17() === other._get_serialName__17() : false)
      return true;
    return false;
  };
  ListLikeDescriptor.prototype.hashCode = function () {
    return imul(hashCode(this._elementDescriptor), 31) + getStringHashCode(this._get_serialName__17()) | 0;
  };
  ListLikeDescriptor.prototype.toString = function () {
    return '' + this._get_serialName__17() + '(' + this._elementDescriptor + ')';
  };
  ListLikeDescriptor.$metadata$ = {
    simpleName: 'ListLikeDescriptor',
    kind: 'class',
    interfaces: [SerialDescriptor]
  };
  function ArrayListClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayListClassDesc.prototype._get_serialName__17 = function () {
    return 'kotlin.collections.ArrayList';
  };
  ArrayListClassDesc.$metadata$ = {
    simpleName: 'ArrayListClassDesc',
    kind: 'class',
    interfaces: []
  };
  function LinkedHashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  LinkedHashSetClassDesc.prototype._get_serialName__17 = function () {
    return 'kotlin.collections.LinkedHashSet';
  };
  LinkedHashSetClassDesc.$metadata$ = {
    simpleName: 'LinkedHashSetClassDesc',
    kind: 'class',
    interfaces: []
  };
  function LinkedHashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.LinkedHashMap', keyDesc, valueDesc);
  }
  LinkedHashMapClassDesc.$metadata$ = {
    simpleName: 'LinkedHashMapClassDesc',
    kind: 'class',
    interfaces: []
  };
  function HashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  HashSetClassDesc.prototype._get_serialName__17 = function () {
    return 'kotlin.collections.HashSet';
  };
  HashSetClassDesc.$metadata$ = {
    simpleName: 'HashSetClassDesc',
    kind: 'class',
    interfaces: []
  };
  function HashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.HashMap', keyDesc, valueDesc);
  }
  HashMapClassDesc.$metadata$ = {
    simpleName: 'HashMapClassDesc',
    kind: 'class',
    interfaces: []
  };
  function MapLikeDescriptor(serialName, keyDescriptor, valueDescriptor) {
    this._serialName_3 = serialName;
    this._keyDescriptor = keyDescriptor;
    this._valueDescriptor = valueDescriptor;
    this._elementsCount_1 = 2;
  }
  MapLikeDescriptor.prototype._get_serialName__17 = function () {
    return this._serialName_3;
  };
  MapLikeDescriptor.prototype._get_kind__20 = function () {
    return MAP_getInstance();
  };
  MapLikeDescriptor.prototype._get_elementsCount__17 = function () {
    return this._elementsCount_1;
  };
  MapLikeDescriptor.prototype.getElementName_17 = function (index) {
    return index.toString();
  };
  MapLikeDescriptor.prototype.getElementIndex_17 = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$_0('' + name + ' is not a valid map index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  MapLikeDescriptor.prototype.getElementAnnotations_17 = function (index) {
    var tmp0_require_0 = index >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Illegal index ' + index + ', ' + this._get_serialName__17() + ' expects only non-negative indices';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }return emptyList();
  };
  MapLikeDescriptor.prototype.getElementDescriptor_17 = function (index) {
    var tmp0_require_0 = index >= 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Illegal index ' + index + ', ' + this._get_serialName__17() + ' expects only non-negative indices';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var tmp0_subject = index % 2;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = this._keyDescriptor;
        break;
      case 1:
        tmp = this._valueDescriptor;
        break;
      default:var tmp1_error_0 = 'Unreached';
        throw IllegalStateException_init_$Create$(toString_1(tmp1_error_0));
    }
    return tmp;
  };
  MapLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapLikeDescriptor))
      return false;
    else {
    }
    if (!(this._get_serialName__17() === other._get_serialName__17()))
      return false;
    if (!equals_1(this._keyDescriptor, other._keyDescriptor))
      return false;
    if (!equals_1(this._valueDescriptor, other._valueDescriptor))
      return false;
    return true;
  };
  MapLikeDescriptor.prototype.hashCode = function () {
    var result = getStringHashCode(this._get_serialName__17());
    result = imul(31, result) + hashCode(this._keyDescriptor) | 0;
    result = imul(31, result) + hashCode(this._valueDescriptor) | 0;
    return result;
  };
  MapLikeDescriptor.prototype.toString = function () {
    return '' + this._get_serialName__17() + '(' + this._keyDescriptor + ', ' + this._valueDescriptor + ')';
  };
  MapLikeDescriptor.$metadata$ = {
    simpleName: 'MapLikeDescriptor',
    kind: 'class',
    interfaces: [SerialDescriptor]
  };
  function ArrayClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayClassDesc.prototype._get_serialName__17 = function () {
    return 'kotlin.Array';
  };
  ArrayClassDesc.$metadata$ = {
    simpleName: 'ArrayClassDesc',
    kind: 'class',
    interfaces: []
  };
  function PrimitiveArraySerializer(primitiveSerializer) {
    ListLikeSerializer.call(this, primitiveSerializer);
    this._descriptor_1 = new PrimitiveArrayDescriptor(primitiveSerializer._get_descriptor__77());
  }
  PrimitiveArraySerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_1;
  };
  PrimitiveArraySerializer.prototype.builderSize_14 = function (_this__0) {
    return _this__0._get_position__8();
  };
  PrimitiveArraySerializer.prototype.toResult_14 = function (_this__0) {
    return _this__0.build_17();
  };
  PrimitiveArraySerializer.prototype.checkCapacity_14 = function (_this__0, size_0) {
    return _this__0.ensureCapacity_8(size_0);
  };
  PrimitiveArraySerializer.prototype.collectionIterator = function (_this__0) {
    var tmp0_error_0 = 'This method lead to boxing and must not be used, use writeContents instead';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  };
  PrimitiveArraySerializer.prototype.collectionIterator_14 = function (_this__0) {
    return this.collectionIterator((_this__0 == null ? true : isObject(_this__0)) ? _this__0 : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.insert_8 = function (_this__0, index, element) {
    var tmp0_error_0 = 'This method lead to boxing and must not be used, use Builder.append instead';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  };
  PrimitiveArraySerializer.prototype.builder_16 = function () {
    return this.toBuilder_30(this.empty_7());
  };
  PrimitiveArraySerializer.prototype.serialize_4 = function (encoder, value) {
    var size_0 = this.collectionSize_29(value);
    var composite = encoder.beginCollection_1(this._descriptor_1, size_0);
    this.writeContent_15(composite, value, size_0);
    composite.endStructure_11(this._descriptor_1);
  };
  PrimitiveArraySerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_4(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.serialize_15 = function (encoder, value) {
    return this.serialize_4(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.deserialize_81 = function (decoder) {
    return this.merge_7(decoder, null);
  };
  PrimitiveArraySerializer.$metadata$ = {
    simpleName: 'PrimitiveArraySerializer',
    kind: 'class',
    interfaces: []
  };
  function PrimitiveArrayBuilder() {
  }
  PrimitiveArrayBuilder.prototype.ensureCapacity$default_7 = function (requiredCapacity, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      requiredCapacity = this._get_position__8() + 1 | 0;
    return $handler == null ? this.ensureCapacity_8(requiredCapacity) : $handler(requiredCapacity);
  };
  PrimitiveArrayBuilder.$metadata$ = {
    simpleName: 'PrimitiveArrayBuilder',
    kind: 'class',
    interfaces: []
  };
  function ListLikeSerializer(elementSerializer_0) {
    AbstractCollectionSerializer.call(this);
    this._elementSerializer = elementSerializer_0;
  }
  ListLikeSerializer.prototype.serialize_15 = function (encoder, value) {
    var size_0 = this.collectionSize_29(value);
    var composite = encoder.beginCollection_1(this._get_descriptor__77(), size_0);
    var iterator = this.collectionIterator_14(value);
    var inductionVariable = 0;
    if (inductionVariable < size_0)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        composite.encodeSerializableElement_1(this._get_descriptor__77(), index, this._elementSerializer, iterator.next_31());
      }
       while (inductionVariable < size_0);
    composite.endStructure_11(this._get_descriptor__77());
  };
  ListLikeSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_15(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  ListLikeSerializer.prototype.readAll_7 = function (decoder, builder, startIndex, size_0) {
    var tmp0_require_0 = size_0 >= 0;
    if (!tmp0_require_0) {
      var message_1 = 'Size must be known in advance when using READ_ALL';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var inductionVariable = 0;
    if (inductionVariable < size_0)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.readElement_24(decoder, startIndex + index | 0, builder, false);
      }
       while (inductionVariable < size_0);
  };
  ListLikeSerializer.prototype.readElement_24 = function (decoder, index, builder, checkIndex_0) {
    var tmp = this._get_descriptor__77();
    this.insert_8(builder, index, decoder.decodeSerializableElement$default_8(tmp, index, this._elementSerializer, null, 8, null));
  };
  ListLikeSerializer.$metadata$ = {
    simpleName: 'ListLikeSerializer',
    kind: 'class',
    interfaces: []
  };
  function readSize($this, decoder, builder) {
    var size_0 = decoder.decodeCollectionSize_8($this._get_descriptor__77());
    $this.checkCapacity_14(builder, size_0);
    return size_0;
  }
  function AbstractCollectionSerializer() {
  }
  AbstractCollectionSerializer.prototype.merge_7 = function (decoder, previous) {
    var tmp0_safe_receiver = previous;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.toBuilder_30(tmp0_safe_receiver);
    var builder = tmp1_elvis_lhs == null ? this.builder_16() : tmp1_elvis_lhs;
    var startIndex = this.builderSize_14(builder);
    var compositeDecoder = decoder.beginStructure_11(this._get_descriptor__77());
    if (compositeDecoder.decodeSequentially_8()) {
      this.readAll_7(compositeDecoder, builder, startIndex, readSize(this, compositeDecoder, builder));
    } else {
      $l$break: while (true) {
        var index = compositeDecoder.decodeElementIndex_8(this._get_descriptor__77());
        Companion_getInstance_51();
        if (index === -1)
          break $l$break;
        else {
        }
        var tmp = startIndex + index | 0;
        this.readElement$default_7(compositeDecoder, tmp, builder, false, 8, null);
      }
    }
    compositeDecoder.endStructure_11(this._get_descriptor__77());
    return this.toResult_14(builder);
  };
  AbstractCollectionSerializer.prototype.deserialize_81 = function (decoder) {
    return this.merge_7(decoder, null);
  };
  AbstractCollectionSerializer.prototype.readElement$default_7 = function (decoder, index, builder, checkIndex_0, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      checkIndex_0 = true;
    return $handler == null ? this.readElement_24(decoder, index, builder, checkIndex_0) : $handler(decoder, index, builder, checkIndex_0);
  };
  AbstractCollectionSerializer.$metadata$ = {
    simpleName: 'AbstractCollectionSerializer',
    kind: 'class',
    interfaces: [KSerializer]
  };
  function ArrayListSerializer(element) {
    ListLikeSerializer.call(this, element);
    this._descriptor_2 = new ArrayListClassDesc(element._get_descriptor__77());
  }
  ArrayListSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_2;
  };
  ArrayListSerializer.prototype.collectionSize_1 = function (_this__0) {
    return _this__0._get_size__48();
  };
  ArrayListSerializer.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_1((!(_this__0 == null) ? isInterface(_this__0, List) : false) ? _this__0 : THROW_CCE());
  };
  ArrayListSerializer.prototype.collectionIterator_2 = function (_this__0) {
    return _this__0.iterator_62();
  };
  ArrayListSerializer.prototype.collectionIterator_14 = function (_this__0) {
    return this.collectionIterator_2((!(_this__0 == null) ? isInterface(_this__0, List) : false) ? _this__0 : THROW_CCE());
  };
  ArrayListSerializer.prototype.builder_16 = function () {
    return ArrayList_init_$Create$();
  };
  ArrayListSerializer.prototype.builderSize_2 = function (_this__0) {
    return _this__0._get_size__48();
  };
  ArrayListSerializer.prototype.builderSize_14 = function (_this__0) {
    return this.builderSize_2(_this__0 instanceof ArrayList ? _this__0 : THROW_CCE());
  };
  ArrayListSerializer.prototype.toResult_2 = function (_this__0) {
    return _this__0;
  };
  ArrayListSerializer.prototype.toResult_14 = function (_this__0) {
    return this.toResult_2(_this__0 instanceof ArrayList ? _this__0 : THROW_CCE());
  };
  ArrayListSerializer.prototype.toBuilder_2 = function (_this__0) {
    var tmp0_elvis_lhs = _this__0 instanceof ArrayList ? _this__0 : null;
    return tmp0_elvis_lhs == null ? ArrayList_init_$Create$_1(_this__0) : tmp0_elvis_lhs;
  };
  ArrayListSerializer.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_2((!(_this__0 == null) ? isInterface(_this__0, List) : false) ? _this__0 : THROW_CCE());
  };
  ArrayListSerializer.prototype.checkCapacity_2 = function (_this__0, size_0) {
    return _this__0.ensureCapacity_8(size_0);
  };
  ArrayListSerializer.prototype.checkCapacity_14 = function (_this__0, size_0) {
    return this.checkCapacity_2(_this__0 instanceof ArrayList ? _this__0 : THROW_CCE(), size_0);
  };
  ArrayListSerializer.prototype.insert_1 = function (_this__0, index, element) {
    _this__0.add_26(index, element);
  };
  ArrayListSerializer.prototype.insert_8 = function (_this__0, index, element) {
    var tmp = _this__0 instanceof ArrayList ? _this__0 : THROW_CCE();
    return this.insert_1(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ArrayListSerializer.$metadata$ = {
    simpleName: 'ArrayListSerializer',
    kind: 'class',
    interfaces: []
  };
  function LinkedHashSetSerializer(eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this._descriptor_3 = new LinkedHashSetClassDesc(eSerializer._get_descriptor__77());
  }
  LinkedHashSetSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_3;
  };
  LinkedHashSetSerializer.prototype.collectionSize_7 = function (_this__0) {
    return _this__0._get_size__48();
  };
  LinkedHashSetSerializer.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_7((!(_this__0 == null) ? isInterface(_this__0, Set) : false) ? _this__0 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.collectionIterator_8 = function (_this__0) {
    return _this__0.iterator_62();
  };
  LinkedHashSetSerializer.prototype.collectionIterator_14 = function (_this__0) {
    return this.collectionIterator_8((!(_this__0 == null) ? isInterface(_this__0, Set) : false) ? _this__0 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.builder_16 = function () {
    return LinkedHashSet_init_$Create$();
  };
  LinkedHashSetSerializer.prototype.builderSize_4 = function (_this__0) {
    return _this__0._get_size__48();
  };
  LinkedHashSetSerializer.prototype.builderSize_14 = function (_this__0) {
    return this.builderSize_4(_this__0 instanceof LinkedHashSet ? _this__0 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.toResult_4 = function (_this__0) {
    return _this__0;
  };
  LinkedHashSetSerializer.prototype.toResult_14 = function (_this__0) {
    return this.toResult_4(_this__0 instanceof LinkedHashSet ? _this__0 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.toBuilder_8 = function (_this__0) {
    var tmp0_elvis_lhs = _this__0 instanceof LinkedHashSet ? _this__0 : null;
    return tmp0_elvis_lhs == null ? LinkedHashSet_init_$Create$_0(_this__0) : tmp0_elvis_lhs;
  };
  LinkedHashSetSerializer.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_8((!(_this__0 == null) ? isInterface(_this__0, Set) : false) ? _this__0 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.checkCapacity_4 = function (_this__0, size_0) {
  };
  LinkedHashSetSerializer.prototype.checkCapacity_14 = function (_this__0, size_0) {
    return this.checkCapacity_4(_this__0 instanceof LinkedHashSet ? _this__0 : THROW_CCE(), size_0);
  };
  LinkedHashSetSerializer.prototype.insert_3 = function (_this__0, index, element) {
    _this__0.add_32(element);
    Unit_getInstance();
  };
  LinkedHashSetSerializer.prototype.insert_8 = function (_this__0, index, element) {
    var tmp = _this__0 instanceof LinkedHashSet ? _this__0 : THROW_CCE();
    return this.insert_3(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  LinkedHashSetSerializer.$metadata$ = {
    simpleName: 'LinkedHashSetSerializer',
    kind: 'class',
    interfaces: []
  };
  function LinkedHashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this._descriptor_4 = new LinkedHashMapClassDesc(kSerializer._get_descriptor__77(), vSerializer._get_descriptor__77());
  }
  LinkedHashMapSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_4;
  };
  LinkedHashMapSerializer.prototype.collectionSize_9 = function (_this__0) {
    return _this__0._get_size__48();
  };
  LinkedHashMapSerializer.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_9((!(_this__0 == null) ? isInterface(_this__0, Map_0) : false) ? _this__0 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.collectionIterator_10 = function (_this__0) {
    return _this__0._get_entries__8().iterator_62();
  };
  LinkedHashMapSerializer.prototype.collectionIterator_14 = function (_this__0) {
    return this.collectionIterator_10((!(_this__0 == null) ? isInterface(_this__0, Map_0) : false) ? _this__0 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.builder_16 = function () {
    return LinkedHashMap_init_$Create$();
  };
  LinkedHashMapSerializer.prototype.builderSize_6 = function (_this__0) {
    return _this__0._get_size__48();
  };
  LinkedHashMapSerializer.prototype.builderSize_14 = function (_this__0) {
    return this.builderSize_6(_this__0 instanceof LinkedHashMap ? _this__0 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.toResult_6 = function (_this__0) {
    return _this__0;
  };
  LinkedHashMapSerializer.prototype.toResult_14 = function (_this__0) {
    return this.toResult_6(_this__0 instanceof LinkedHashMap ? _this__0 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.toBuilder_10 = function (_this__0) {
    var tmp0_elvis_lhs = _this__0 instanceof LinkedHashMap ? _this__0 : null;
    return tmp0_elvis_lhs == null ? LinkedHashMap_init_$Create$_2(_this__0) : tmp0_elvis_lhs;
  };
  LinkedHashMapSerializer.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_10((!(_this__0 == null) ? isInterface(_this__0, Map_0) : false) ? _this__0 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.checkCapacity_6 = function (_this__0, size_0) {
  };
  LinkedHashMapSerializer.prototype.checkCapacity_14 = function (_this__0, size_0) {
    return this.checkCapacity_6(_this__0 instanceof LinkedHashMap ? _this__0 : THROW_CCE(), size_0);
  };
  LinkedHashMapSerializer.$metadata$ = {
    simpleName: 'LinkedHashMapSerializer',
    kind: 'class',
    interfaces: []
  };
  function HashSetSerializer(eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this._descriptor_5 = new HashSetClassDesc(eSerializer._get_descriptor__77());
  }
  HashSetSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_5;
  };
  HashSetSerializer.prototype.collectionSize_7 = function (_this__0) {
    return _this__0._get_size__48();
  };
  HashSetSerializer.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_7((!(_this__0 == null) ? isInterface(_this__0, Set) : false) ? _this__0 : THROW_CCE());
  };
  HashSetSerializer.prototype.collectionIterator_8 = function (_this__0) {
    return _this__0.iterator_62();
  };
  HashSetSerializer.prototype.collectionIterator_14 = function (_this__0) {
    return this.collectionIterator_8((!(_this__0 == null) ? isInterface(_this__0, Set) : false) ? _this__0 : THROW_CCE());
  };
  HashSetSerializer.prototype.builder_16 = function () {
    return HashSet_init_$Create$();
  };
  HashSetSerializer.prototype.builderSize_8 = function (_this__0) {
    return _this__0._get_size__48();
  };
  HashSetSerializer.prototype.builderSize_14 = function (_this__0) {
    return this.builderSize_8(_this__0 instanceof HashSet ? _this__0 : THROW_CCE());
  };
  HashSetSerializer.prototype.toResult_8 = function (_this__0) {
    return _this__0;
  };
  HashSetSerializer.prototype.toResult_14 = function (_this__0) {
    return this.toResult_8(_this__0 instanceof HashSet ? _this__0 : THROW_CCE());
  };
  HashSetSerializer.prototype.toBuilder_8 = function (_this__0) {
    var tmp0_elvis_lhs = _this__0 instanceof HashSet ? _this__0 : null;
    return tmp0_elvis_lhs == null ? HashSet_init_$Create$_0(_this__0) : tmp0_elvis_lhs;
  };
  HashSetSerializer.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_8((!(_this__0 == null) ? isInterface(_this__0, Set) : false) ? _this__0 : THROW_CCE());
  };
  HashSetSerializer.prototype.checkCapacity_8 = function (_this__0, size_0) {
  };
  HashSetSerializer.prototype.checkCapacity_14 = function (_this__0, size_0) {
    return this.checkCapacity_8(_this__0 instanceof HashSet ? _this__0 : THROW_CCE(), size_0);
  };
  HashSetSerializer.prototype.insert_5 = function (_this__0, index, element) {
    _this__0.add_32(element);
    Unit_getInstance();
  };
  HashSetSerializer.prototype.insert_8 = function (_this__0, index, element) {
    var tmp = _this__0 instanceof HashSet ? _this__0 : THROW_CCE();
    return this.insert_5(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  HashSetSerializer.$metadata$ = {
    simpleName: 'HashSetSerializer',
    kind: 'class',
    interfaces: []
  };
  function HashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this._descriptor_6 = new HashMapClassDesc(kSerializer._get_descriptor__77(), vSerializer._get_descriptor__77());
  }
  HashMapSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_6;
  };
  HashMapSerializer.prototype.collectionSize_9 = function (_this__0) {
    return _this__0._get_size__48();
  };
  HashMapSerializer.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_9((!(_this__0 == null) ? isInterface(_this__0, Map_0) : false) ? _this__0 : THROW_CCE());
  };
  HashMapSerializer.prototype.collectionIterator_10 = function (_this__0) {
    return _this__0._get_entries__8().iterator_62();
  };
  HashMapSerializer.prototype.collectionIterator_14 = function (_this__0) {
    return this.collectionIterator_10((!(_this__0 == null) ? isInterface(_this__0, Map_0) : false) ? _this__0 : THROW_CCE());
  };
  HashMapSerializer.prototype.builder_16 = function () {
    return HashMap_init_$Create$();
  };
  HashMapSerializer.prototype.builderSize_10 = function (_this__0) {
    return _this__0._get_size__48();
  };
  HashMapSerializer.prototype.builderSize_14 = function (_this__0) {
    return this.builderSize_10(_this__0 instanceof HashMap ? _this__0 : THROW_CCE());
  };
  HashMapSerializer.prototype.toResult_10 = function (_this__0) {
    return _this__0;
  };
  HashMapSerializer.prototype.toResult_14 = function (_this__0) {
    return this.toResult_10(_this__0 instanceof HashMap ? _this__0 : THROW_CCE());
  };
  HashMapSerializer.prototype.toBuilder_10 = function (_this__0) {
    var tmp0_elvis_lhs = _this__0 instanceof HashMap ? _this__0 : null;
    return tmp0_elvis_lhs == null ? HashMap_init_$Create$_2(_this__0) : tmp0_elvis_lhs;
  };
  HashMapSerializer.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_10((!(_this__0 == null) ? isInterface(_this__0, Map_0) : false) ? _this__0 : THROW_CCE());
  };
  HashMapSerializer.prototype.checkCapacity_10 = function (_this__0, size_0) {
  };
  HashMapSerializer.prototype.checkCapacity_14 = function (_this__0, size_0) {
    return this.checkCapacity_10(_this__0 instanceof HashMap ? _this__0 : THROW_CCE(), size_0);
  };
  HashMapSerializer.$metadata$ = {
    simpleName: 'HashMapSerializer',
    kind: 'class',
    interfaces: []
  };
  function MapLikeSerializer(keySerializer, valueSerializer) {
    AbstractCollectionSerializer.call(this);
    this._keySerializer = keySerializer;
    this._valueSerializer = valueSerializer;
  }
  MapLikeSerializer.prototype.readAll_7 = function (decoder, builder, startIndex, size_0) {
    var tmp0_require_0 = size_0 >= 0;
    if (!tmp0_require_0) {
      var message_1 = 'Size must be known in advance when using READ_ALL';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }var progression = step(until(0, imul(size_0, 2)), 2);
    var inductionVariable = progression._first_1;
    var last_1 = progression._last;
    var step_0 = progression._step_1;
    if ((step_0 > 0 ? inductionVariable <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable : false)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        this.readElement_24(decoder, startIndex + index | 0, builder, false);
      }
       while (!(index === last_1));
  };
  MapLikeSerializer.prototype.readElement_24 = function (decoder, index, builder, checkIndex_0) {
    var tmp = this._get_descriptor__77();
    var key = decoder.decodeSerializableElement$default_8(tmp, index, this._keySerializer, null, 8, null);
    var tmp_0;
    if (checkIndex_0) {
      var tmp0_also_0 = decoder.decodeElementIndex_8(this._get_descriptor__77());
      var tmp0_require_0_2 = tmp0_also_0 === (index + 1 | 0);
      if (!tmp0_require_0_2) {
        var message_1_3 = '' + 'Value must follow key in a map, index for key: ' + index + ', returned index for value: ' + tmp0_also_0;
        throw IllegalArgumentException_init_$Create$_0(toString_1(message_1_3));
      }tmp_0 = tmp0_also_0;
    } else {
      tmp_0 = index + 1 | 0;
    }
    var vIndex = tmp_0;
    var tmp_1;
    var tmp_2;
    if (builder.containsKey_12(key)) {
      var tmp_3 = this._valueSerializer._get_descriptor__77()._get_kind__20();
      tmp_2 = !(tmp_3 instanceof PrimitiveKind);
    } else {
      tmp_2 = false;
    }
    if (tmp_2) {
      tmp_1 = decoder.decodeSerializableElement_8(this._get_descriptor__77(), vIndex, this._valueSerializer, getValue(builder, key));
    } else {
      {
        var tmp_4 = this._get_descriptor__77();
        tmp_1 = decoder.decodeSerializableElement$default_8(tmp_4, vIndex, this._valueSerializer, null, 8, null);
      }
    }
    var value = tmp_1;
    builder.put_10(key, value);
    Unit_getInstance();
  };
  MapLikeSerializer.prototype.serialize_15 = function (encoder, value) {
    var size_0 = this.collectionSize_29(value);
    var composite = encoder.beginCollection_1(this._get_descriptor__77(), size_0);
    var iterator = this.collectionIterator_14(value);
    var index = 0;
    var tmp0_iterator_1 = iterator;
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      var k_4 = element_2._get_key__52();
      var v_5 = element_2._get_value__27();
      var tmp = this._get_descriptor__77();
      var tmp0_6 = index;
      index = tmp0_6 + 1 | 0;
      composite.encodeSerializableElement_1(tmp, tmp0_6, this._keySerializer, k_4);
      var tmp_0 = this._get_descriptor__77();
      var tmp1_7 = index;
      index = tmp1_7 + 1 | 0;
      composite.encodeSerializableElement_1(tmp_0, tmp1_7, this._valueSerializer, v_5);
    }
    composite.endStructure_11(this._get_descriptor__77());
  };
  MapLikeSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_15(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  MapLikeSerializer.$metadata$ = {
    simpleName: 'MapLikeSerializer',
    kind: 'class',
    interfaces: []
  };
  function ReferenceArraySerializer(kClass, eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this._kClass_0 = kClass;
    this._descriptor_7 = new ArrayClassDesc(eSerializer._get_descriptor__77());
  }
  ReferenceArraySerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_7;
  };
  ReferenceArraySerializer.prototype.collectionSize_12 = function (_this__0) {
    return _this__0.length;
  };
  ReferenceArraySerializer.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_12((!(_this__0 == null) ? isArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.collectionIterator_13 = function (_this__0) {
    return arrayIterator(_this__0);
  };
  ReferenceArraySerializer.prototype.collectionIterator_14 = function (_this__0) {
    return this.collectionIterator_13((!(_this__0 == null) ? isArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.builder_16 = function () {
    return ArrayList_init_$Create$();
  };
  ReferenceArraySerializer.prototype.builderSize_13 = function (_this__0) {
    return _this__0._get_size__48();
  };
  ReferenceArraySerializer.prototype.builderSize_14 = function (_this__0) {
    return this.builderSize_13(_this__0 instanceof ArrayList ? _this__0 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.toResult_13 = function (_this__0) {
    return toNativeArrayImpl(_this__0, this._kClass_0);
  };
  ReferenceArraySerializer.prototype.toResult_14 = function (_this__0) {
    return this.toResult_13(_this__0 instanceof ArrayList ? _this__0 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.toBuilder_13 = function (_this__0) {
    return ArrayList_init_$Create$_1(asList(_this__0));
  };
  ReferenceArraySerializer.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_13((!(_this__0 == null) ? isArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.checkCapacity_13 = function (_this__0, size_0) {
    return _this__0.ensureCapacity_8(size_0);
  };
  ReferenceArraySerializer.prototype.checkCapacity_14 = function (_this__0, size_0) {
    return this.checkCapacity_13(_this__0 instanceof ArrayList ? _this__0 : THROW_CCE(), size_0);
  };
  ReferenceArraySerializer.prototype.insert_7 = function (_this__0, index, element) {
    _this__0.add_26(index, element);
  };
  ReferenceArraySerializer.prototype.insert_8 = function (_this__0, index, element) {
    var tmp = _this__0 instanceof ArrayList ? _this__0 : THROW_CCE();
    return this.insert_7(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ReferenceArraySerializer.$metadata$ = {
    simpleName: 'ReferenceArraySerializer',
    kind: 'class',
    interfaces: []
  };
  function InlinePrimitiveDescriptor(name, primitiveSerializer) {
    return new InlineClassDescriptor(name, new _no_name_provided__210(primitiveSerializer));
  }
  function InlineClassDescriptor(name, generatedSerializer) {
    PluginGeneratedSerialDescriptor.call(this, name, generatedSerializer, 1);
    this._isInline = true;
  }
  InlineClassDescriptor.prototype._get_isInline__17 = function () {
    return this._isInline;
  };
  InlineClassDescriptor.prototype.hashCode = function () {
    return imul(PluginGeneratedSerialDescriptor.prototype.hashCode.call(this), 31);
  };
  InlineClassDescriptor.prototype.equals = function (other) {
    var tmp$ret$0;
    l$ret$1: do {
      if (this === other) {
        tmp$ret$0 = true;
        break l$ret$1;
      }if (!(other instanceof InlineClassDescriptor)) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      if (!(this._get_serialName__17() === other._get_serialName__17())) {
        tmp$ret$0 = false;
        break l$ret$1;
      }var tmp0__anonymous__3 = other;
      if (!(tmp0__anonymous__3._isInline ? contentEquals(this._get_typeParameterDescriptors__0(), tmp0__anonymous__3._get_typeParameterDescriptors__0()) : false)) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      if (!(this._get_elementsCount__17() === other._get_elementsCount__17())) {
        tmp$ret$0 = false;
        break l$ret$1;
      }var inductionVariable = 0;
      var last_1 = this._get_elementsCount__17();
      if (inductionVariable < last_1)
        do {
          var index_2 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.getElementDescriptor_17(index_2)._get_serialName__17() === other.getElementDescriptor_17(index_2)._get_serialName__17())) {
            tmp$ret$0 = false;
            break l$ret$1;
          }if (!equals_1(this.getElementDescriptor_17(index_2)._get_kind__20(), other.getElementDescriptor_17(index_2)._get_kind__20())) {
            tmp$ret$0 = false;
            break l$ret$1;
          }}
         while (inductionVariable < last_1);
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  InlineClassDescriptor.$metadata$ = {
    simpleName: 'InlineClassDescriptor',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__210($primitiveSerializer) {
    this._$primitiveSerializer = $primitiveSerializer;
  }
  _no_name_provided__210.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [this._$primitiveSerializer];
    return tmp0_arrayOf_0;
  };
  _no_name_provided__210.prototype._get_descriptor__77 = function () {
    var tmp0_error_0 = 'unsupported';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  };
  _no_name_provided__210.prototype.serialize_129 = function (encoder, value) {
    var tmp0_error_0 = 'unsupported';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  };
  _no_name_provided__210.prototype.deserialize_81 = function (decoder) {
    var tmp0_error_0 = 'unsupported';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  };
  _no_name_provided__210.$metadata$ = {
    kind: 'class',
    interfaces: [GeneratedSerializer]
  };
  function UIntSerializer() {
    UIntSerializer_instance = this;
    this._descriptor_8 = InlinePrimitiveDescriptor('kotlin.UInt', serializer_7(IntCompanionObject_getInstance()));
  }
  UIntSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_8;
  };
  UIntSerializer.prototype.serialize_19 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.encodeInline_1(this._descriptor_8);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.encodeInt_1(_UInt___get_data__impl_(value));
      Unit_getInstance();
    }
    Unit_getInstance();
  };
  UIntSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_19(encoder, value instanceof UInt ? value._data_0 : THROW_CCE());
  };
  UIntSerializer.prototype.deserialize_15 = function (decoder) {
    var tmp0_toUInt_0 = decoder.decodeInline_8(this._descriptor_8).decodeInt_8();
    return _UInt___init__impl_(tmp0_toUInt_0);
  };
  UIntSerializer.prototype.deserialize_81 = function (decoder) {
    return new UInt(this.deserialize_15(decoder));
  };
  UIntSerializer.$metadata$ = {
    simpleName: 'UIntSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var UIntSerializer_instance;
  function UIntSerializer_getInstance() {
    if (UIntSerializer_instance == null)
      new UIntSerializer();
    return UIntSerializer_instance;
  }
  function ULongSerializer() {
    ULongSerializer_instance = this;
    this._descriptor_9 = InlinePrimitiveDescriptor('kotlin.ULong', serializer_6(Companion_getInstance_15()));
  }
  ULongSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_9;
  };
  ULongSerializer.prototype.serialize_21 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.encodeInline_1(this._descriptor_9);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.encodeLong_1(_ULong___get_data__impl_(value));
      Unit_getInstance();
    }
    Unit_getInstance();
  };
  ULongSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_21(encoder, value instanceof ULong ? value._data_1 : THROW_CCE());
  };
  ULongSerializer.prototype.deserialize_17 = function (decoder) {
    var tmp0_toULong_0 = decoder.decodeInline_8(this._descriptor_9).decodeLong_8();
    return _ULong___init__impl_(tmp0_toULong_0);
  };
  ULongSerializer.prototype.deserialize_81 = function (decoder) {
    return new ULong(this.deserialize_17(decoder));
  };
  ULongSerializer.$metadata$ = {
    simpleName: 'ULongSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var ULongSerializer_instance;
  function ULongSerializer_getInstance() {
    if (ULongSerializer_instance == null)
      new ULongSerializer();
    return ULongSerializer_instance;
  }
  function UByteSerializer() {
    UByteSerializer_instance = this;
    this._descriptor_10 = InlinePrimitiveDescriptor('kotlin.UByte', serializer_9(ByteCompanionObject_getInstance()));
  }
  UByteSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_10;
  };
  UByteSerializer.prototype.serialize_23 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.encodeInline_1(this._descriptor_10);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.encodeByte_1(_UByte___get_data__impl_(value));
      Unit_getInstance();
    }
    Unit_getInstance();
  };
  UByteSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_23(encoder, value instanceof UByte ? value._data : THROW_CCE());
  };
  UByteSerializer.prototype.deserialize_19 = function (decoder) {
    var tmp0_toUByte_0 = decoder.decodeInline_8(this._descriptor_10).decodeByte_8();
    return _UByte___init__impl_(tmp0_toUByte_0);
  };
  UByteSerializer.prototype.deserialize_81 = function (decoder) {
    return new UByte(this.deserialize_19(decoder));
  };
  UByteSerializer.$metadata$ = {
    simpleName: 'UByteSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var UByteSerializer_instance;
  function UByteSerializer_getInstance() {
    if (UByteSerializer_instance == null)
      new UByteSerializer();
    return UByteSerializer_instance;
  }
  function UShortSerializer() {
    UShortSerializer_instance = this;
    this._descriptor_11 = InlinePrimitiveDescriptor('kotlin.UShort', serializer_8(ShortCompanionObject_getInstance()));
  }
  UShortSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_11;
  };
  UShortSerializer.prototype.serialize_25 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.encodeInline_1(this._descriptor_11);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.encodeShort_1(_UShort___get_data__impl_(value));
      Unit_getInstance();
    }
    Unit_getInstance();
  };
  UShortSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_25(encoder, value instanceof UShort ? value._data_2 : THROW_CCE());
  };
  UShortSerializer.prototype.deserialize_21 = function (decoder) {
    var tmp0_toUShort_0 = decoder.decodeInline_8(this._descriptor_11).decodeShort_8();
    return _UShort___init__impl_(tmp0_toUShort_0);
  };
  UShortSerializer.prototype.deserialize_81 = function (decoder) {
    return new UShort(this.deserialize_21(decoder));
  };
  UShortSerializer.$metadata$ = {
    simpleName: 'UShortSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var UShortSerializer_instance;
  function UShortSerializer_getInstance() {
    if (UShortSerializer_instance == null)
      new UShortSerializer();
    return UShortSerializer_instance;
  }
  function jsonCachedSerialNames(_this_) {
    return cachedSerialNames(_this_);
  }
  function NullableSerializer(serializer_16) {
    this._serializer_1 = serializer_16;
    this._descriptor_12 = new SerialDescriptorForNullable(this._serializer_1._get_descriptor__77());
  }
  NullableSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_12;
  };
  NullableSerializer.prototype.serialize_27 = function (encoder, value) {
    if (!(value == null)) {
      encoder.encodeNotNullMark_1();
      encoder.encodeSerializableValue_1(this._serializer_1, value);
    } else {
      encoder.encodeNull_1();
    }
  };
  NullableSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_27(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  NullableSerializer.prototype.deserialize_81 = function (decoder) {
    return decoder.decodeNotNullMark_8() ? decoder.decodeSerializableValue_16(this._serializer_1) : decoder.decodeNull_8();
  };
  NullableSerializer.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression_0(this).equals(getKClassFromExpression_0(other)))
      return false;
    if (other instanceof NullableSerializer)
      other;
    else
      THROW_CCE();
    Unit_getInstance();
    if (!equals_1(this._serializer_1, other._serializer_1))
      return false;
    return true;
  };
  NullableSerializer.prototype.hashCode = function () {
    return hashCode(this._serializer_1);
  };
  NullableSerializer.$metadata$ = {
    simpleName: 'NullableSerializer',
    kind: 'class',
    interfaces: [KSerializer]
  };
  function SerialDescriptorForNullable(original) {
    this._original_0 = original;
    this._serialName_4 = this._original_0._get_serialName__17() + '?';
    this._serialNames_0 = cachedSerialNames(this._original_0);
  }
  SerialDescriptorForNullable.prototype.getElementAnnotations_17 = function (index) {
    return this._original_0.getElementAnnotations_17(index);
  };
  SerialDescriptorForNullable.prototype.getElementDescriptor_17 = function (index) {
    return this._original_0.getElementDescriptor_17(index);
  };
  SerialDescriptorForNullable.prototype.getElementIndex_17 = function (name) {
    return this._original_0.getElementIndex_17(name);
  };
  SerialDescriptorForNullable.prototype.getElementName_17 = function (index) {
    return this._original_0.getElementName_17(index);
  };
  SerialDescriptorForNullable.prototype._get_elementsCount__17 = function () {
    return this._original_0._get_elementsCount__17();
  };
  SerialDescriptorForNullable.prototype._get_isInline__17 = function () {
    return this._original_0._get_isInline__17();
  };
  SerialDescriptorForNullable.prototype._get_kind__20 = function () {
    return this._original_0._get_kind__20();
  };
  SerialDescriptorForNullable.prototype._get_serialName__17 = function () {
    return this._serialName_4;
  };
  SerialDescriptorForNullable.prototype._get_serialNames__3 = function () {
    return this._serialNames_0;
  };
  SerialDescriptorForNullable.prototype._get_isNullable__17 = function () {
    return true;
  };
  SerialDescriptorForNullable.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SerialDescriptorForNullable))
      return false;
    else {
    }
    if (!equals_1(this._original_0, other._original_0))
      return false;
    return true;
  };
  SerialDescriptorForNullable.prototype.toString = function () {
    return '' + this._original_0 + '?';
  };
  SerialDescriptorForNullable.prototype.hashCode = function () {
    return imul(hashCode(this._original_0), 31);
  };
  SerialDescriptorForNullable.$metadata$ = {
    simpleName: 'SerialDescriptorForNullable',
    kind: 'class',
    interfaces: [SerialDescriptor, CachedNames]
  };
  function ObjectSerializer(serialName, objectInstance) {
    this._objectInstance = objectInstance;
    var tmp = this;
    var tmp_0 = OBJECT_getInstance();
    var tmp_1 = [];
    tmp._descriptor_13 = buildSerialDescriptor$default(serialName, tmp_0, tmp_1, null, 12, null);
  }
  ObjectSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_13;
  };
  ObjectSerializer.prototype.serialize_129 = function (encoder, value) {
    encoder.beginStructure_11(this._descriptor_13).endStructure_11(this._descriptor_13);
  };
  ObjectSerializer.prototype.deserialize_81 = function (decoder) {
    decoder.beginStructure_11(this._descriptor_13).endStructure_11(this._descriptor_13);
    return this._objectInstance;
  };
  ObjectSerializer.$metadata$ = {
    simpleName: 'ObjectSerializer',
    kind: 'class',
    interfaces: [KSerializer]
  };
  var EMPTY_DESCRIPTOR_ARRAY;
  function compactArray(_this_) {
    var tmp;
    if (!(_this_ == null ? true : _this_.isEmpty_50())) {
      tmp = _this_;
    } else {
      {
        tmp = null;
      }
    }
    var tmp0_safe_receiver = tmp;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      tmp_0 = copyToArray_0(tmp0_safe_receiver);
    }
    var tmp1_elvis_lhs = tmp_0;
    return tmp1_elvis_lhs == null ? EMPTY_DESCRIPTOR_ARRAY : tmp1_elvis_lhs;
  }
  function serializerNotRegistered(_this_) {
    throw SerializationException_init_$Create$('' + "Serializer for class '" + _this_._get_simpleName__4() + "' is not found.\n" + 'Mark the class as @Serializable or provide the serializer explicitly.');
  }
  function kclass(_this_) {
    var t = _this_._get_classifier__0();
    var tmp;
    if (!(t == null) ? isInterface(t, KClass) : false) {
      tmp = t;
    } else {
      {
        var tmp0_error_0 = '' + 'Only KClass supported as classifier, got ' + t;
        throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
      }
    }
    var tmp_0 = tmp;
    return isInterface(tmp_0, KClass) ? tmp_0 : THROW_CCE();
  }
  function cachedSerialNames(_this_) {
    if (isInterface(_this_, CachedNames))
      return _this_._get_serialNames__3();
    else {
    }
    var result = HashSet_init_$Create$_1(_this_._get_elementsCount__17());
    var inductionVariable = 0;
    var last_1 = _this_._get_elementsCount__17();
    if (inductionVariable < last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp0_plusAssign_0 = _this_.getElementName_17(i);
        result.add_32(tmp0_plusAssign_0);
        Unit_getInstance();
      }
       while (inductionVariable < last_1);
    return result;
  }
  function EMPTY_DESCRIPTOR_ARRAY$init$() {
    var tmp0_arrayOf_0 = [];
    return tmp0_arrayOf_0;
  }
  function hashCodeImpl(_this_, typeParams) {
    var result = getStringHashCode(_this_._get_serialName__17());
    result = imul(31, result) + contentHashCode(typeParams) | 0;
    var elementDescriptors = _get_elementDescriptors_(_this_);
    var tmp0_fold_0_1 = 1;
    var accumulator_1_2 = tmp0_fold_0_1;
    var tmp0_iterator_2_3 = elementDescriptors.iterator_62();
    while (tmp0_iterator_2_3.hasNext_29()) {
      var element_3_4 = tmp0_iterator_2_3.next_31();
      var tmp1__anonymous__4_5 = accumulator_1_2;
      var tmp = imul(31, tmp1__anonymous__4_5);
      var tmp0_hashCode_0_5_6 = element_3_4._get_serialName__17();
      var tmp0_safe_receiver_2_7_8 = tmp0_hashCode_0_5_6;
      var tmp1_elvis_lhs_1_6_7 = tmp0_safe_receiver_2_7_8 == null ? null : hashCode(tmp0_safe_receiver_2_7_8);
      accumulator_1_2 = tmp + (tmp1_elvis_lhs_1_6_7 == null ? 0 : tmp1_elvis_lhs_1_6_7) | 0;
    }
    var namesHash = accumulator_1_2;
    var tmp0_fold_0_1_0 = 1;
    var accumulator_1_2_0 = tmp0_fold_0_1_0;
    var tmp0_iterator_2_3_0 = elementDescriptors.iterator_62();
    while (tmp0_iterator_2_3_0.hasNext_29()) {
      var element_3_4_0 = tmp0_iterator_2_3_0.next_31();
      var tmp1__anonymous__4_5_0 = accumulator_1_2_0;
      var tmp_0 = imul(31, tmp1__anonymous__4_5_0);
      var tmp0_hashCode_0_5_6_0 = element_3_4_0._get_kind__20();
      var tmp0_safe_receiver_2_7_8_0 = tmp0_hashCode_0_5_6_0;
      var tmp1_elvis_lhs_1_6_7_0 = tmp0_safe_receiver_2_7_8_0 == null ? null : hashCode(tmp0_safe_receiver_2_7_8_0);
      accumulator_1_2_0 = tmp_0 + (tmp1_elvis_lhs_1_6_7_0 == null ? 0 : tmp1_elvis_lhs_1_6_7_0) | 0;
    }
    var kindHash = accumulator_1_2_0;
    result = imul(31, result) + namesHash | 0;
    result = imul(31, result) + kindHash | 0;
    return result;
  }
  function _get_childSerializers_($this) {
    var tmp0_getValue_0 = $this._childSerializers$delegate;
    var tmp1_getValue_0 = childSerializers$factory();
    return tmp0_getValue_0._get_value__27();
  }
  function _get__hashCode__0($this) {
    var tmp0_getValue_0 = $this.__hashCode$delegate_0;
    var tmp1_getValue_0 = _hashCode$factory_0();
    return tmp0_getValue_0._get_value__27();
  }
  function buildIndices($this) {
    var indices = HashMap_init_$Create$();
    var inductionVariable = 0;
    var last_1 = $this._names.length - 1 | 0;
    if (inductionVariable <= last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp0_set_0 = $this._names[i];
        indices.put_10(tmp0_set_0, i);
        Unit_getInstance();
      }
       while (inductionVariable <= last_1);
    return indices;
  }
  function _no_name_provided__211(this$0) {
    this._this$0_56 = this$0;
  }
  _no_name_provided__211.prototype.invoke_411 = function () {
    var tmp0_safe_receiver = this._this$0_56._generatedSerializer;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.childSerializers_20();
    var tmp;
    if (tmp1_elvis_lhs == null) {
      tmp = [];
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  };
  _no_name_provided__211.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__212(this$0) {
    this._this$0_57 = this$0;
  }
  _no_name_provided__212.prototype.invoke_411 = function () {
    var tmp0_safe_receiver = this._this$0_57._generatedSerializer;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.typeParametersSerializers_20();
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(tmp1_safe_receiver.length);
      var tmp0_iterator_1_2 = arrayIterator(tmp1_safe_receiver);
      while (tmp0_iterator_1_2.hasNext_29()) {
        var item_2_3 = tmp0_iterator_1_2.next_31();
        tmp0_mapTo_0_1.add_32(item_2_3._get_descriptor__77());
        Unit_getInstance();
      }
      tmp = tmp0_mapTo_0_1;
    }
    return compactArray(tmp);
  };
  _no_name_provided__212.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__213(this$0) {
    this._this$0_58 = this$0;
  }
  _no_name_provided__213.prototype.invoke_411 = function () {
    return hashCodeImpl(this._this$0_58, this._this$0_58._get_typeParameterDescriptors__0());
  };
  _no_name_provided__213.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__214(this$0) {
    this._this$0_59 = this$0;
  }
  _no_name_provided__214.prototype.invoke_346 = function (i) {
    return this._this$0_59.getElementName_17(i) + ': ' + this._this$0_59.getElementDescriptor_17(i)._get_serialName__17();
  };
  _no_name_provided__214.prototype.invoke_420 = function (p1) {
    return this.invoke_346((!(p1 == null) ? typeof p1 === 'number' : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__214.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function PluginGeneratedSerialDescriptor(serialName, generatedSerializer, elementsCount) {
    this._serialName_5 = serialName;
    this._generatedSerializer = generatedSerializer;
    this._elementsCount_2 = elementsCount;
    this._added = -1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this._elementsCount_2;
    var tmp_2 = fillArrayVal(Array(tmp_1), null);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      tmp_2[tmp_3] = '[UNINITIALIZED]';
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp._names = tmp_2;
    var tmp_4 = this;
    var tmp0_arrayOfNulls_0 = this._elementsCount_2;
    tmp_4._propertiesAnnotations = fillArrayVal(Array(tmp0_arrayOfNulls_0), null);
    this._classAnnotations = null;
    this._elementsOptionality = booleanArray(this._elementsCount_2);
    this._indices = emptyMap();
    var tmp_5 = this;
    tmp_5._childSerializers$delegate = lazy(_no_name_provided_$factory_174(this));
    var tmp_6 = this;
    tmp_6._typeParameterDescriptors$delegate = lazy(_no_name_provided_$factory_175(this));
    var tmp_7 = this;
    tmp_7.__hashCode$delegate_0 = lazy(_no_name_provided_$factory_176(this));
  }
  PluginGeneratedSerialDescriptor.prototype._get_serialName__17 = function () {
    return this._serialName_5;
  };
  PluginGeneratedSerialDescriptor.prototype._get_elementsCount__17 = function () {
    return this._elementsCount_2;
  };
  PluginGeneratedSerialDescriptor.prototype._get_kind__20 = function () {
    return CLASS_getInstance();
  };
  PluginGeneratedSerialDescriptor.prototype._get_serialNames__3 = function () {
    return this._indices._get_keys__8();
  };
  PluginGeneratedSerialDescriptor.prototype._get_typeParameterDescriptors__0 = function () {
    var tmp0_getValue_0 = this._typeParameterDescriptors$delegate;
    var tmp1_getValue_0 = typeParameterDescriptors$factory();
    return tmp0_getValue_0._get_value__27();
  };
  PluginGeneratedSerialDescriptor.prototype.addElement_0 = function (name, isOptional) {
    var tmp0_this = this;
    tmp0_this._added = tmp0_this._added + 1 | 0;
    this._names[tmp0_this._added] = name;
    this._elementsOptionality[this._added] = isOptional;
    this._propertiesAnnotations[this._added] = null;
    if (this._added === (this._elementsCount_2 - 1 | 0)) {
      this._indices = buildIndices(this);
    }};
  PluginGeneratedSerialDescriptor.prototype.getElementDescriptor_17 = function (index) {
    return getChecked(_get_childSerializers_(this), index)._get_descriptor__77();
  };
  PluginGeneratedSerialDescriptor.prototype.getElementAnnotations_17 = function (index) {
    var tmp0_elvis_lhs = getChecked(this._propertiesAnnotations, index);
    return tmp0_elvis_lhs == null ? emptyList() : tmp0_elvis_lhs;
  };
  PluginGeneratedSerialDescriptor.prototype.getElementName_17 = function (index) {
    return getChecked(this._names, index);
  };
  PluginGeneratedSerialDescriptor.prototype.getElementIndex_17 = function (name) {
    var tmp0_elvis_lhs = this._indices.get_65(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_51();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  PluginGeneratedSerialDescriptor.prototype.equals = function (other) {
    var tmp$ret$0;
    l$ret$1: do {
      if (this === other) {
        tmp$ret$0 = true;
        break l$ret$1;
      }if (!(other instanceof PluginGeneratedSerialDescriptor)) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      if (!(this._get_serialName__17() === other._get_serialName__17())) {
        tmp$ret$0 = false;
        break l$ret$1;
      }var tmp0__anonymous__3 = other;
      if (!contentEquals(this._get_typeParameterDescriptors__0(), tmp0__anonymous__3._get_typeParameterDescriptors__0())) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      if (!(this._get_elementsCount__17() === other._get_elementsCount__17())) {
        tmp$ret$0 = false;
        break l$ret$1;
      }var inductionVariable = 0;
      var last_1 = this._get_elementsCount__17();
      if (inductionVariable < last_1)
        do {
          var index_2 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.getElementDescriptor_17(index_2)._get_serialName__17() === other.getElementDescriptor_17(index_2)._get_serialName__17())) {
            tmp$ret$0 = false;
            break l$ret$1;
          }if (!equals_1(this.getElementDescriptor_17(index_2)._get_kind__20(), other.getElementDescriptor_17(index_2)._get_kind__20())) {
            tmp$ret$0 = false;
            break l$ret$1;
          }}
         while (inductionVariable < last_1);
      tmp$ret$0 = true;
    }
     while (false);
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.hashCode = function () {
    return _get__hashCode__0(this);
  };
  PluginGeneratedSerialDescriptor.prototype.toString = function () {
    var tmp = until(0, this._elementsCount_2);
    var tmp_0 = '' + this._get_serialName__17() + '(';
    return joinToString$default_0(tmp, ', ', tmp_0, ')', 0, null, _no_name_provided_$factory_177(this), 24, null);
  };
  PluginGeneratedSerialDescriptor.$metadata$ = {
    simpleName: 'PluginGeneratedSerialDescriptor',
    kind: 'class',
    interfaces: [SerialDescriptor, CachedNames]
  };
  function childSerializers$factory() {
    return getPropertyCallableRef('childSerializers', 1, KProperty1, function (receiver) {
      return _get_childSerializers_(receiver);
    }, null);
  }
  function typeParameterDescriptors$factory() {
    return getPropertyCallableRef('typeParameterDescriptors', 1, KProperty1, function (receiver) {
      return receiver._get_typeParameterDescriptors__0();
    }, null);
  }
  function _hashCode$factory_0() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__0(receiver);
    }, null);
  }
  function _no_name_provided_$factory_174(this$0) {
    var i = new _no_name_provided__211(this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_175(this$0) {
    var i = new _no_name_provided__212(this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_176(this$0) {
    var i = new _no_name_provided__213(this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_177(this$0) {
    var i = new _no_name_provided__214(this$0);
    return function (p1) {
      return i.invoke_346(p1);
    };
  }
  var EMPTY_SERIALIZER_ARRAY;
  function SerializerFactory() {
  }
  SerializerFactory.$metadata$ = {
    simpleName: 'SerializerFactory',
    kind: 'interface',
    interfaces: []
  };
  function GeneratedSerializer() {
  }
  GeneratedSerializer.prototype.typeParametersSerializers_20 = function () {
    return EMPTY_SERIALIZER_ARRAY;
  };
  GeneratedSerializer.$metadata$ = {
    simpleName: 'GeneratedSerializer',
    kind: 'interface',
    interfaces: [KSerializer]
  };
  function EMPTY_SERIALIZER_ARRAY$init$() {
    var tmp0_arrayOf_0 = [];
    return tmp0_arrayOf_0;
  }
  function CharArraySerializer_0() {
    CharArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_3(Companion_getInstance_13()));
  }
  CharArraySerializer_0.prototype.collectionSize_14 = function (_this__0) {
    return _this__0.length;
  };
  CharArraySerializer_0.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_14((!(_this__0 == null) ? isCharArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  CharArraySerializer_0.prototype.toBuilder_15 = function (_this__0) {
    return new CharArrayBuilder(_this__0);
  };
  CharArraySerializer_0.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_15((!(_this__0 == null) ? isCharArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  CharArraySerializer_0.prototype.empty_7 = function () {
    return charArray(0);
  };
  CharArraySerializer_0.prototype.readElement_9 = function (decoder, index, builder, checkIndex_0) {
    builder.append_36(decoder.decodeCharElement_8(this._get_descriptor__77(), index));
  };
  CharArraySerializer_0.prototype.readElement_24 = function (decoder, index, builder, checkIndex_0) {
    return this.readElement_9(decoder, index, builder instanceof CharArrayBuilder ? builder : THROW_CCE(), checkIndex_0);
  };
  CharArraySerializer_0.prototype.writeContent_0 = function (encoder, content, size_0) {
    var inductionVariable = 0;
    if (inductionVariable < size_0)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.encodeCharElement_1(this._get_descriptor__77(), i, content[i]);
      }
       while (inductionVariable < size_0);
  };
  CharArraySerializer_0.prototype.writeContent_15 = function (encoder, content, size_0) {
    return this.writeContent_0(encoder, (!(content == null) ? isCharArray(content) : false) ? content : THROW_CCE(), size_0);
  };
  CharArraySerializer_0.$metadata$ = {
    simpleName: 'CharArraySerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var CharArraySerializer_instance;
  function CharArraySerializer_getInstance() {
    if (CharArraySerializer_instance == null)
      new CharArraySerializer_0();
    return CharArraySerializer_instance;
  }
  function DoubleArraySerializer_0() {
    DoubleArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_4(DoubleCompanionObject_getInstance()));
  }
  DoubleArraySerializer_0.prototype.collectionSize_16 = function (_this__0) {
    return _this__0.length;
  };
  DoubleArraySerializer_0.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_16((!(_this__0 == null) ? isDoubleArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  DoubleArraySerializer_0.prototype.toBuilder_17 = function (_this__0) {
    return new DoubleArrayBuilder(_this__0);
  };
  DoubleArraySerializer_0.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_17((!(_this__0 == null) ? isDoubleArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  DoubleArraySerializer_0.prototype.empty_7 = function () {
    return new Float64Array(0);
  };
  DoubleArraySerializer_0.prototype.readElement_11 = function (decoder, index, builder, checkIndex_0) {
    builder.append_28(decoder.decodeDoubleElement_8(this._get_descriptor__77(), index));
  };
  DoubleArraySerializer_0.prototype.readElement_24 = function (decoder, index, builder, checkIndex_0) {
    return this.readElement_11(decoder, index, builder instanceof DoubleArrayBuilder ? builder : THROW_CCE(), checkIndex_0);
  };
  DoubleArraySerializer_0.prototype.writeContent_2 = function (encoder, content, size_0) {
    var inductionVariable = 0;
    if (inductionVariable < size_0)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.encodeDoubleElement_1(this._get_descriptor__77(), i, content[i]);
      }
       while (inductionVariable < size_0);
  };
  DoubleArraySerializer_0.prototype.writeContent_15 = function (encoder, content, size_0) {
    return this.writeContent_2(encoder, (!(content == null) ? isDoubleArray(content) : false) ? content : THROW_CCE(), size_0);
  };
  DoubleArraySerializer_0.$metadata$ = {
    simpleName: 'DoubleArraySerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var DoubleArraySerializer_instance;
  function DoubleArraySerializer_getInstance() {
    if (DoubleArraySerializer_instance == null)
      new DoubleArraySerializer_0();
    return DoubleArraySerializer_instance;
  }
  function FloatArraySerializer_0() {
    FloatArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_5(FloatCompanionObject_getInstance()));
  }
  FloatArraySerializer_0.prototype.collectionSize_18 = function (_this__0) {
    return _this__0.length;
  };
  FloatArraySerializer_0.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_18((!(_this__0 == null) ? isFloatArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  FloatArraySerializer_0.prototype.toBuilder_19 = function (_this__0) {
    return new FloatArrayBuilder(_this__0);
  };
  FloatArraySerializer_0.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_19((!(_this__0 == null) ? isFloatArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  FloatArraySerializer_0.prototype.empty_7 = function () {
    return new Float32Array(0);
  };
  FloatArraySerializer_0.prototype.readElement_13 = function (decoder, index, builder, checkIndex_0) {
    builder.append_29(decoder.decodeFloatElement_8(this._get_descriptor__77(), index));
  };
  FloatArraySerializer_0.prototype.readElement_24 = function (decoder, index, builder, checkIndex_0) {
    return this.readElement_13(decoder, index, builder instanceof FloatArrayBuilder ? builder : THROW_CCE(), checkIndex_0);
  };
  FloatArraySerializer_0.prototype.writeContent_4 = function (encoder, content, size_0) {
    var inductionVariable = 0;
    if (inductionVariable < size_0)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.encodeFloatElement_1(this._get_descriptor__77(), i, content[i]);
      }
       while (inductionVariable < size_0);
  };
  FloatArraySerializer_0.prototype.writeContent_15 = function (encoder, content, size_0) {
    return this.writeContent_4(encoder, (!(content == null) ? isFloatArray(content) : false) ? content : THROW_CCE(), size_0);
  };
  FloatArraySerializer_0.$metadata$ = {
    simpleName: 'FloatArraySerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var FloatArraySerializer_instance;
  function FloatArraySerializer_getInstance() {
    if (FloatArraySerializer_instance == null)
      new FloatArraySerializer_0();
    return FloatArraySerializer_instance;
  }
  function LongArraySerializer_0() {
    LongArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_6(Companion_getInstance_15()));
  }
  LongArraySerializer_0.prototype.collectionSize_20 = function (_this__0) {
    return _this__0.length;
  };
  LongArraySerializer_0.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_20((!(_this__0 == null) ? isLongArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  LongArraySerializer_0.prototype.toBuilder_21 = function (_this__0) {
    return new LongArrayBuilder(_this__0);
  };
  LongArraySerializer_0.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_21((!(_this__0 == null) ? isLongArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  LongArraySerializer_0.prototype.empty_7 = function () {
    return longArray(0);
  };
  LongArraySerializer_0.prototype.readElement_15 = function (decoder, index, builder, checkIndex_0) {
    builder.append_35(decoder.decodeLongElement_8(this._get_descriptor__77(), index));
  };
  LongArraySerializer_0.prototype.readElement_24 = function (decoder, index, builder, checkIndex_0) {
    return this.readElement_15(decoder, index, builder instanceof LongArrayBuilder ? builder : THROW_CCE(), checkIndex_0);
  };
  LongArraySerializer_0.prototype.writeContent_6 = function (encoder, content, size_0) {
    var inductionVariable = 0;
    if (inductionVariable < size_0)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.encodeLongElement_1(this._get_descriptor__77(), i, content[i]);
      }
       while (inductionVariable < size_0);
  };
  LongArraySerializer_0.prototype.writeContent_15 = function (encoder, content, size_0) {
    return this.writeContent_6(encoder, (!(content == null) ? isLongArray(content) : false) ? content : THROW_CCE(), size_0);
  };
  LongArraySerializer_0.$metadata$ = {
    simpleName: 'LongArraySerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var LongArraySerializer_instance;
  function LongArraySerializer_getInstance() {
    if (LongArraySerializer_instance == null)
      new LongArraySerializer_0();
    return LongArraySerializer_instance;
  }
  function IntArraySerializer_0() {
    IntArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_7(IntCompanionObject_getInstance()));
  }
  IntArraySerializer_0.prototype.collectionSize_22 = function (_this__0) {
    return _this__0.length;
  };
  IntArraySerializer_0.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_22((!(_this__0 == null) ? isIntArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  IntArraySerializer_0.prototype.toBuilder_23 = function (_this__0) {
    return new IntArrayBuilder(_this__0);
  };
  IntArraySerializer_0.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_23((!(_this__0 == null) ? isIntArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  IntArraySerializer_0.prototype.empty_7 = function () {
    return new Int32Array(0);
  };
  IntArraySerializer_0.prototype.readElement_17 = function (decoder, index, builder, checkIndex_0) {
    builder.append_31(decoder.decodeIntElement_8(this._get_descriptor__77(), index));
  };
  IntArraySerializer_0.prototype.readElement_24 = function (decoder, index, builder, checkIndex_0) {
    return this.readElement_17(decoder, index, builder instanceof IntArrayBuilder ? builder : THROW_CCE(), checkIndex_0);
  };
  IntArraySerializer_0.prototype.writeContent_8 = function (encoder, content, size_0) {
    var inductionVariable = 0;
    if (inductionVariable < size_0)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.encodeIntElement_1(this._get_descriptor__77(), i, content[i]);
      }
       while (inductionVariable < size_0);
  };
  IntArraySerializer_0.prototype.writeContent_15 = function (encoder, content, size_0) {
    return this.writeContent_8(encoder, (!(content == null) ? isIntArray(content) : false) ? content : THROW_CCE(), size_0);
  };
  IntArraySerializer_0.$metadata$ = {
    simpleName: 'IntArraySerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var IntArraySerializer_instance;
  function IntArraySerializer_getInstance() {
    if (IntArraySerializer_instance == null)
      new IntArraySerializer_0();
    return IntArraySerializer_instance;
  }
  function ShortArraySerializer_0() {
    ShortArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_8(ShortCompanionObject_getInstance()));
  }
  ShortArraySerializer_0.prototype.collectionSize_24 = function (_this__0) {
    return _this__0.length;
  };
  ShortArraySerializer_0.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_24((!(_this__0 == null) ? isShortArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  ShortArraySerializer_0.prototype.toBuilder_25 = function (_this__0) {
    return new ShortArrayBuilder(_this__0);
  };
  ShortArraySerializer_0.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_25((!(_this__0 == null) ? isShortArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  ShortArraySerializer_0.prototype.empty_7 = function () {
    return new Int16Array(0);
  };
  ShortArraySerializer_0.prototype.readElement_19 = function (decoder, index, builder, checkIndex_0) {
    builder.append_32(decoder.decodeShortElement_8(this._get_descriptor__77(), index));
  };
  ShortArraySerializer_0.prototype.readElement_24 = function (decoder, index, builder, checkIndex_0) {
    return this.readElement_19(decoder, index, builder instanceof ShortArrayBuilder ? builder : THROW_CCE(), checkIndex_0);
  };
  ShortArraySerializer_0.prototype.writeContent_10 = function (encoder, content, size_0) {
    var inductionVariable = 0;
    if (inductionVariable < size_0)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.encodeShortElement_1(this._get_descriptor__77(), i, content[i]);
      }
       while (inductionVariable < size_0);
  };
  ShortArraySerializer_0.prototype.writeContent_15 = function (encoder, content, size_0) {
    return this.writeContent_10(encoder, (!(content == null) ? isShortArray(content) : false) ? content : THROW_CCE(), size_0);
  };
  ShortArraySerializer_0.$metadata$ = {
    simpleName: 'ShortArraySerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var ShortArraySerializer_instance;
  function ShortArraySerializer_getInstance() {
    if (ShortArraySerializer_instance == null)
      new ShortArraySerializer_0();
    return ShortArraySerializer_instance;
  }
  function ByteArraySerializer_0() {
    ByteArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_9(ByteCompanionObject_getInstance()));
  }
  ByteArraySerializer_0.prototype.collectionSize_26 = function (_this__0) {
    return _this__0.length;
  };
  ByteArraySerializer_0.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_26((!(_this__0 == null) ? isByteArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  ByteArraySerializer_0.prototype.toBuilder_27 = function (_this__0) {
    return new ByteArrayBuilder(_this__0);
  };
  ByteArraySerializer_0.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_27((!(_this__0 == null) ? isByteArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  ByteArraySerializer_0.prototype.empty_7 = function () {
    return new Int8Array(0);
  };
  ByteArraySerializer_0.prototype.readElement_21 = function (decoder, index, builder, checkIndex_0) {
    builder.append_33(decoder.decodeByteElement_8(this._get_descriptor__77(), index));
  };
  ByteArraySerializer_0.prototype.readElement_24 = function (decoder, index, builder, checkIndex_0) {
    return this.readElement_21(decoder, index, builder instanceof ByteArrayBuilder ? builder : THROW_CCE(), checkIndex_0);
  };
  ByteArraySerializer_0.prototype.writeContent_12 = function (encoder, content, size_0) {
    var inductionVariable = 0;
    if (inductionVariable < size_0)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.encodeByteElement_1(this._get_descriptor__77(), i, content[i]);
      }
       while (inductionVariable < size_0);
  };
  ByteArraySerializer_0.prototype.writeContent_15 = function (encoder, content, size_0) {
    return this.writeContent_12(encoder, (!(content == null) ? isByteArray(content) : false) ? content : THROW_CCE(), size_0);
  };
  ByteArraySerializer_0.$metadata$ = {
    simpleName: 'ByteArraySerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var ByteArraySerializer_instance;
  function ByteArraySerializer_getInstance() {
    if (ByteArraySerializer_instance == null)
      new ByteArraySerializer_0();
    return ByteArraySerializer_instance;
  }
  function BooleanArraySerializer_0() {
    BooleanArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_10(BooleanCompanionObject_getInstance()));
  }
  BooleanArraySerializer_0.prototype.collectionSize_28 = function (_this__0) {
    return _this__0.length;
  };
  BooleanArraySerializer_0.prototype.collectionSize_29 = function (_this__0) {
    return this.collectionSize_28((!(_this__0 == null) ? isBooleanArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  BooleanArraySerializer_0.prototype.toBuilder_29 = function (_this__0) {
    return new BooleanArrayBuilder(_this__0);
  };
  BooleanArraySerializer_0.prototype.toBuilder_30 = function (_this__0) {
    return this.toBuilder_29((!(_this__0 == null) ? isBooleanArray(_this__0) : false) ? _this__0 : THROW_CCE());
  };
  BooleanArraySerializer_0.prototype.empty_7 = function () {
    return booleanArray(0);
  };
  BooleanArraySerializer_0.prototype.readElement_23 = function (decoder, index, builder, checkIndex_0) {
    builder.append_34(decoder.decodeBooleanElement_8(this._get_descriptor__77(), index));
  };
  BooleanArraySerializer_0.prototype.readElement_24 = function (decoder, index, builder, checkIndex_0) {
    return this.readElement_23(decoder, index, builder instanceof BooleanArrayBuilder ? builder : THROW_CCE(), checkIndex_0);
  };
  BooleanArraySerializer_0.prototype.writeContent_14 = function (encoder, content, size_0) {
    var inductionVariable = 0;
    if (inductionVariable < size_0)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.encodeBooleanElement_1(this._get_descriptor__77(), i, content[i]);
      }
       while (inductionVariable < size_0);
  };
  BooleanArraySerializer_0.prototype.writeContent_15 = function (encoder, content, size_0) {
    return this.writeContent_14(encoder, (!(content == null) ? isBooleanArray(content) : false) ? content : THROW_CCE(), size_0);
  };
  BooleanArraySerializer_0.$metadata$ = {
    simpleName: 'BooleanArraySerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var BooleanArraySerializer_instance;
  function BooleanArraySerializer_getInstance() {
    if (BooleanArraySerializer_instance == null)
      new BooleanArraySerializer_0();
    return BooleanArraySerializer_instance;
  }
  function CharArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this._buffer_1 = bufferWithData;
    this._position_1 = bufferWithData.length;
    this.ensureCapacity_8(10);
  }
  CharArrayBuilder.prototype._get_position__8 = function () {
    return this._position_1;
  };
  CharArrayBuilder.prototype.ensureCapacity_8 = function (requiredCapacity) {
    if (this._buffer_1.length < requiredCapacity)
      this._buffer_1 = copyOf(this._buffer_1, coerceAtLeast(requiredCapacity, imul(this._buffer_1.length, 2)));
  };
  CharArrayBuilder.prototype.append_36 = function (c) {
    this.ensureCapacity$default_7(0, 1, null);
    var tmp = this._buffer_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this._position_1;
    tmp0_this._position_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  CharArrayBuilder.prototype.build_17 = function () {
    return copyOf(this._buffer_1, this._position_1);
  };
  CharArrayBuilder.$metadata$ = {
    simpleName: 'CharArrayBuilder',
    kind: 'class',
    interfaces: []
  };
  function DoubleArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this._buffer_2 = bufferWithData;
    this._position_2 = bufferWithData.length;
    this.ensureCapacity_8(10);
  }
  DoubleArrayBuilder.prototype._get_position__8 = function () {
    return this._position_2;
  };
  DoubleArrayBuilder.prototype.ensureCapacity_8 = function (requiredCapacity) {
    if (this._buffer_2.length < requiredCapacity)
      this._buffer_2 = copyOf_0(this._buffer_2, coerceAtLeast(requiredCapacity, imul(this._buffer_2.length, 2)));
  };
  DoubleArrayBuilder.prototype.append_28 = function (c) {
    this.ensureCapacity$default_7(0, 1, null);
    var tmp = this._buffer_2;
    var tmp0_this = this;
    var tmp1 = tmp0_this._position_2;
    tmp0_this._position_2 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  DoubleArrayBuilder.prototype.build_17 = function () {
    return copyOf_0(this._buffer_2, this._position_2);
  };
  DoubleArrayBuilder.$metadata$ = {
    simpleName: 'DoubleArrayBuilder',
    kind: 'class',
    interfaces: []
  };
  function FloatArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this._buffer_3 = bufferWithData;
    this._position_3 = bufferWithData.length;
    this.ensureCapacity_8(10);
  }
  FloatArrayBuilder.prototype._get_position__8 = function () {
    return this._position_3;
  };
  FloatArrayBuilder.prototype.ensureCapacity_8 = function (requiredCapacity) {
    if (this._buffer_3.length < requiredCapacity)
      this._buffer_3 = copyOf_1(this._buffer_3, coerceAtLeast(requiredCapacity, imul(this._buffer_3.length, 2)));
  };
  FloatArrayBuilder.prototype.append_29 = function (c) {
    this.ensureCapacity$default_7(0, 1, null);
    var tmp = this._buffer_3;
    var tmp0_this = this;
    var tmp1 = tmp0_this._position_3;
    tmp0_this._position_3 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  FloatArrayBuilder.prototype.build_17 = function () {
    return copyOf_1(this._buffer_3, this._position_3);
  };
  FloatArrayBuilder.$metadata$ = {
    simpleName: 'FloatArrayBuilder',
    kind: 'class',
    interfaces: []
  };
  function LongArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this._buffer_4 = bufferWithData;
    this._position_4 = bufferWithData.length;
    this.ensureCapacity_8(10);
  }
  LongArrayBuilder.prototype._get_position__8 = function () {
    return this._position_4;
  };
  LongArrayBuilder.prototype.ensureCapacity_8 = function (requiredCapacity) {
    if (this._buffer_4.length < requiredCapacity)
      this._buffer_4 = copyOf_2(this._buffer_4, coerceAtLeast(requiredCapacity, imul(this._buffer_4.length, 2)));
  };
  LongArrayBuilder.prototype.append_35 = function (c) {
    this.ensureCapacity$default_7(0, 1, null);
    var tmp = this._buffer_4;
    var tmp0_this = this;
    var tmp1 = tmp0_this._position_4;
    tmp0_this._position_4 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  LongArrayBuilder.prototype.build_17 = function () {
    return copyOf_2(this._buffer_4, this._position_4);
  };
  LongArrayBuilder.$metadata$ = {
    simpleName: 'LongArrayBuilder',
    kind: 'class',
    interfaces: []
  };
  function IntArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this._buffer_5 = bufferWithData;
    this._position_5 = bufferWithData.length;
    this.ensureCapacity_8(10);
  }
  IntArrayBuilder.prototype._get_position__8 = function () {
    return this._position_5;
  };
  IntArrayBuilder.prototype.ensureCapacity_8 = function (requiredCapacity) {
    if (this._buffer_5.length < requiredCapacity)
      this._buffer_5 = copyOf_3(this._buffer_5, coerceAtLeast(requiredCapacity, imul(this._buffer_5.length, 2)));
  };
  IntArrayBuilder.prototype.append_31 = function (c) {
    this.ensureCapacity$default_7(0, 1, null);
    var tmp = this._buffer_5;
    var tmp0_this = this;
    var tmp1 = tmp0_this._position_5;
    tmp0_this._position_5 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  IntArrayBuilder.prototype.build_17 = function () {
    return copyOf_3(this._buffer_5, this._position_5);
  };
  IntArrayBuilder.$metadata$ = {
    simpleName: 'IntArrayBuilder',
    kind: 'class',
    interfaces: []
  };
  function ShortArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this._buffer_6 = bufferWithData;
    this._position_6 = bufferWithData.length;
    this.ensureCapacity_8(10);
  }
  ShortArrayBuilder.prototype._get_position__8 = function () {
    return this._position_6;
  };
  ShortArrayBuilder.prototype.ensureCapacity_8 = function (requiredCapacity) {
    if (this._buffer_6.length < requiredCapacity)
      this._buffer_6 = copyOf_4(this._buffer_6, coerceAtLeast(requiredCapacity, imul(this._buffer_6.length, 2)));
  };
  ShortArrayBuilder.prototype.append_32 = function (c) {
    this.ensureCapacity$default_7(0, 1, null);
    var tmp = this._buffer_6;
    var tmp0_this = this;
    var tmp1 = tmp0_this._position_6;
    tmp0_this._position_6 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  ShortArrayBuilder.prototype.build_17 = function () {
    return copyOf_4(this._buffer_6, this._position_6);
  };
  ShortArrayBuilder.$metadata$ = {
    simpleName: 'ShortArrayBuilder',
    kind: 'class',
    interfaces: []
  };
  function ByteArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this._buffer_7 = bufferWithData;
    this._position_7 = bufferWithData.length;
    this.ensureCapacity_8(10);
  }
  ByteArrayBuilder.prototype._get_position__8 = function () {
    return this._position_7;
  };
  ByteArrayBuilder.prototype.ensureCapacity_8 = function (requiredCapacity) {
    if (this._buffer_7.length < requiredCapacity)
      this._buffer_7 = copyOf_5(this._buffer_7, coerceAtLeast(requiredCapacity, imul(this._buffer_7.length, 2)));
  };
  ByteArrayBuilder.prototype.append_33 = function (c) {
    this.ensureCapacity$default_7(0, 1, null);
    var tmp = this._buffer_7;
    var tmp0_this = this;
    var tmp1 = tmp0_this._position_7;
    tmp0_this._position_7 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  ByteArrayBuilder.prototype.build_17 = function () {
    return copyOf_5(this._buffer_7, this._position_7);
  };
  ByteArrayBuilder.$metadata$ = {
    simpleName: 'ByteArrayBuilder',
    kind: 'class',
    interfaces: []
  };
  function BooleanArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this._buffer_8 = bufferWithData;
    this._position_8 = bufferWithData.length;
    this.ensureCapacity_8(10);
  }
  BooleanArrayBuilder.prototype._get_position__8 = function () {
    return this._position_8;
  };
  BooleanArrayBuilder.prototype.ensureCapacity_8 = function (requiredCapacity) {
    if (this._buffer_8.length < requiredCapacity)
      this._buffer_8 = copyOf_6(this._buffer_8, coerceAtLeast(requiredCapacity, imul(this._buffer_8.length, 2)));
  };
  BooleanArrayBuilder.prototype.append_34 = function (c) {
    this.ensureCapacity$default_7(0, 1, null);
    var tmp = this._buffer_8;
    var tmp0_this = this;
    var tmp1 = tmp0_this._position_8;
    tmp0_this._position_8 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  BooleanArrayBuilder.prototype.build_17 = function () {
    return copyOf_6(this._buffer_8, this._position_8);
  };
  BooleanArrayBuilder.$metadata$ = {
    simpleName: 'BooleanArrayBuilder',
    kind: 'class',
    interfaces: []
  };
  var BUILTIN_SERIALIZERS;
  function StringSerializer() {
    StringSerializer_instance = this;
    this._descriptor_14 = new PrimitiveSerialDescriptor_0('kotlin.String', STRING_getInstance());
  }
  StringSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_14;
  };
  StringSerializer.prototype.serialize_38 = function (encoder, value) {
    return encoder.encodeString_1(value);
  };
  StringSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_38(encoder, (!(value == null) ? typeof value === 'string' : false) ? value : THROW_CCE());
  };
  StringSerializer.prototype.deserialize_81 = function (decoder) {
    return decoder.decodeString_8();
  };
  StringSerializer.$metadata$ = {
    simpleName: 'StringSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var StringSerializer_instance;
  function StringSerializer_getInstance() {
    if (StringSerializer_instance == null)
      new StringSerializer();
    return StringSerializer_instance;
  }
  function CharSerializer() {
    CharSerializer_instance = this;
    this._descriptor_15 = new PrimitiveSerialDescriptor_0('kotlin.Char', CHAR_getInstance());
  }
  CharSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_15;
  };
  CharSerializer.prototype.serialize_40 = function (encoder, value) {
    return encoder.encodeChar_1(value);
  };
  CharSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_40(encoder, value instanceof Char ? value : THROW_CCE());
  };
  CharSerializer.prototype.deserialize_81 = function (decoder) {
    return decoder.decodeChar_8();
  };
  CharSerializer.$metadata$ = {
    simpleName: 'CharSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var CharSerializer_instance;
  function CharSerializer_getInstance() {
    if (CharSerializer_instance == null)
      new CharSerializer();
    return CharSerializer_instance;
  }
  function DoubleSerializer() {
    DoubleSerializer_instance = this;
    this._descriptor_16 = new PrimitiveSerialDescriptor_0('kotlin.Double', DOUBLE_getInstance());
  }
  DoubleSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_16;
  };
  DoubleSerializer.prototype.serialize_42 = function (encoder, value) {
    return encoder.encodeDouble_1(value);
  };
  DoubleSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_42(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  DoubleSerializer.prototype.deserialize_81 = function (decoder) {
    return decoder.decodeDouble_8();
  };
  DoubleSerializer.$metadata$ = {
    simpleName: 'DoubleSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var DoubleSerializer_instance;
  function DoubleSerializer_getInstance() {
    if (DoubleSerializer_instance == null)
      new DoubleSerializer();
    return DoubleSerializer_instance;
  }
  function FloatSerializer() {
    FloatSerializer_instance = this;
    this._descriptor_17 = new PrimitiveSerialDescriptor_0('kotlin.Float', FLOAT_getInstance());
  }
  FloatSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_17;
  };
  FloatSerializer.prototype.serialize_44 = function (encoder, value) {
    return encoder.encodeFloat_1(value);
  };
  FloatSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_44(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  FloatSerializer.prototype.deserialize_81 = function (decoder) {
    return decoder.decodeFloat_8();
  };
  FloatSerializer.$metadata$ = {
    simpleName: 'FloatSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var FloatSerializer_instance;
  function FloatSerializer_getInstance() {
    if (FloatSerializer_instance == null)
      new FloatSerializer();
    return FloatSerializer_instance;
  }
  function LongSerializer() {
    LongSerializer_instance = this;
    this._descriptor_18 = new PrimitiveSerialDescriptor_0('kotlin.Long', LONG_getInstance());
  }
  LongSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_18;
  };
  LongSerializer.prototype.serialize_46 = function (encoder, value) {
    return encoder.encodeLong_1(value);
  };
  LongSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_46(encoder, value instanceof Long ? value : THROW_CCE());
  };
  LongSerializer.prototype.deserialize_81 = function (decoder) {
    return decoder.decodeLong_8();
  };
  LongSerializer.$metadata$ = {
    simpleName: 'LongSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var LongSerializer_instance;
  function LongSerializer_getInstance() {
    if (LongSerializer_instance == null)
      new LongSerializer();
    return LongSerializer_instance;
  }
  function IntSerializer() {
    IntSerializer_instance = this;
    this._descriptor_19 = new PrimitiveSerialDescriptor_0('kotlin.Int', INT_getInstance());
  }
  IntSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_19;
  };
  IntSerializer.prototype.serialize_48 = function (encoder, value) {
    return encoder.encodeInt_1(value);
  };
  IntSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_48(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  IntSerializer.prototype.deserialize_81 = function (decoder) {
    return decoder.decodeInt_8();
  };
  IntSerializer.$metadata$ = {
    simpleName: 'IntSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var IntSerializer_instance;
  function IntSerializer_getInstance() {
    if (IntSerializer_instance == null)
      new IntSerializer();
    return IntSerializer_instance;
  }
  function ShortSerializer() {
    ShortSerializer_instance = this;
    this._descriptor_20 = new PrimitiveSerialDescriptor_0('kotlin.Short', SHORT_getInstance());
  }
  ShortSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_20;
  };
  ShortSerializer.prototype.serialize_50 = function (encoder, value) {
    return encoder.encodeShort_1(value);
  };
  ShortSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_50(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  ShortSerializer.prototype.deserialize_81 = function (decoder) {
    return decoder.decodeShort_8();
  };
  ShortSerializer.$metadata$ = {
    simpleName: 'ShortSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var ShortSerializer_instance;
  function ShortSerializer_getInstance() {
    if (ShortSerializer_instance == null)
      new ShortSerializer();
    return ShortSerializer_instance;
  }
  function ByteSerializer() {
    ByteSerializer_instance = this;
    this._descriptor_21 = new PrimitiveSerialDescriptor_0('kotlin.Byte', BYTE_getInstance());
  }
  ByteSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_21;
  };
  ByteSerializer.prototype.serialize_52 = function (encoder, value) {
    return encoder.encodeByte_1(value);
  };
  ByteSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_52(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  ByteSerializer.prototype.deserialize_81 = function (decoder) {
    return decoder.decodeByte_8();
  };
  ByteSerializer.$metadata$ = {
    simpleName: 'ByteSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var ByteSerializer_instance;
  function ByteSerializer_getInstance() {
    if (ByteSerializer_instance == null)
      new ByteSerializer();
    return ByteSerializer_instance;
  }
  function BooleanSerializer() {
    BooleanSerializer_instance = this;
    this._descriptor_22 = new PrimitiveSerialDescriptor_0('kotlin.Boolean', BOOLEAN_getInstance());
  }
  BooleanSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_22;
  };
  BooleanSerializer.prototype.serialize_54 = function (encoder, value) {
    return encoder.encodeBoolean_1(value);
  };
  BooleanSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_54(encoder, (!(value == null) ? typeof value === 'boolean' : false) ? value : THROW_CCE());
  };
  BooleanSerializer.prototype.deserialize_81 = function (decoder) {
    return decoder.decodeBoolean_8();
  };
  BooleanSerializer.$metadata$ = {
    simpleName: 'BooleanSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var BooleanSerializer_instance;
  function BooleanSerializer_getInstance() {
    if (BooleanSerializer_instance == null)
      new BooleanSerializer();
    return BooleanSerializer_instance;
  }
  function UnitSerializer() {
    UnitSerializer_instance = this;
    this._$$delegate_0_2 = new ObjectSerializer('kotlin.Unit', Unit_getInstance());
  }
  UnitSerializer.prototype.deserialize_42 = function (decoder) {
    this._$$delegate_0_2.deserialize_81(decoder);
  };
  UnitSerializer.prototype.deserialize_81 = function (decoder) {
    this.deserialize_42(decoder);
    return Unit_getInstance();
  };
  UnitSerializer.prototype.serialize_56 = function (encoder, value) {
    this._$$delegate_0_2.serialize_129(encoder, Unit_getInstance());
  };
  UnitSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_56(encoder, value instanceof Unit ? value : THROW_CCE());
  };
  UnitSerializer.prototype._get_descriptor__77 = function () {
    return this._$$delegate_0_2._descriptor_13;
  };
  UnitSerializer.$metadata$ = {
    simpleName: 'UnitSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var UnitSerializer_instance;
  function UnitSerializer_getInstance() {
    if (UnitSerializer_instance == null)
      new UnitSerializer();
    return UnitSerializer_instance;
  }
  function error($this) {
    throw IllegalStateException_init_$Create$('Primitive descriptor does not have elements');
  }
  function PrimitiveSerialDescriptor_0(serialName, kind) {
    this._serialName_6 = serialName;
    this._kind_0 = kind;
  }
  PrimitiveSerialDescriptor_0.prototype._get_serialName__17 = function () {
    return this._serialName_6;
  };
  PrimitiveSerialDescriptor_0.prototype._get_kind__20 = function () {
    return this._kind_0;
  };
  PrimitiveSerialDescriptor_0.prototype._get_elementsCount__17 = function () {
    return 0;
  };
  PrimitiveSerialDescriptor_0.prototype.getElementName_17 = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.getElementIndex_17 = function (name) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.getElementDescriptor_17 = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.getElementAnnotations_17 = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.toString = function () {
    return '' + 'PrimitiveDescriptor(' + this._serialName_6 + ')';
  };
  PrimitiveSerialDescriptor_0.$metadata$ = {
    simpleName: 'PrimitiveSerialDescriptor',
    kind: 'class',
    interfaces: [SerialDescriptor]
  };
  function builtinSerializerOrNull(_this_) {
    var tmp = BUILTIN_SERIALIZERS.get_65(_this_);
    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : THROW_CCE();
  }
  function PrimitiveDescriptorSafe(serialName, kind) {
    checkName(serialName);
    return new PrimitiveSerialDescriptor_0(serialName, kind);
  }
  function checkName(serialName) {
    var keys = BUILTIN_SERIALIZERS._get_keys__8();
    var tmp0_iterator = keys.iterator_62();
    while (tmp0_iterator.hasNext_29()) {
      var primitive = tmp0_iterator.next_31();
      var simpleName = capitalize(ensureNotNull(primitive._get_simpleName__4()));
      var qualifiedName = '' + 'kotlin.' + simpleName;
      if (equals_0(serialName, qualifiedName, true) ? true : equals_0(serialName, simpleName, true)) {
        throw IllegalArgumentException_init_$Create$_0(trimIndent('' + '\n                The name of serial descriptor should uniquely identify associated serializer.\n                For serial name ' + serialName + ' there already exist ' + capitalize(simpleName) + 'Serializer.\n                Please refer to SerialDescriptor documentation for additional information.\n            '));
      }}
  }
  function NamedValueDecoder() {
    TaggedDecoder.call(this);
  }
  NamedValueDecoder.prototype.getTag_4 = function (_this__0, index) {
    return this.nested_3(this.elementName_3(_this__0, index));
  };
  NamedValueDecoder.prototype.nested_3 = function (nestedName) {
    var tmp0_elvis_lhs = this._get_currentTagOrNull__4();
    return this.composeName_3(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
  };
  NamedValueDecoder.prototype.elementName_3 = function (desc, index) {
    return desc.getElementName_17(index);
  };
  NamedValueDecoder.prototype.composeName_3 = function (parentName, childName) {
    var tmp;
    if (charSequenceLength(parentName) === 0) {
      tmp = childName;
    } else {
      {
        tmp = '' + parentName + '.' + childName;
      }
    }
    return tmp;
  };
  NamedValueDecoder.$metadata$ = {
    simpleName: 'NamedValueDecoder',
    kind: 'class',
    interfaces: []
  };
  function tagBlock($this, tag, block) {
    $this.pushTag_0(tag);
    var r = block();
    if (!$this._flag) {
      $this.popTag_4();
      Unit_getInstance();
    }$this._flag = false;
    return r;
  }
  function _no_name_provided__215(this$0, $deserializer, $previousValue) {
    this._this$0_60 = this$0;
    this._$deserializer = $deserializer;
    this._$previousValue = $previousValue;
  }
  _no_name_provided__215.prototype.invoke_411 = function () {
    return this._this$0_60.decodeSerializableValue_17(this._$deserializer, this._$previousValue);
  };
  _no_name_provided__215.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__216(this$0, $deserializer, $previousValue) {
    this._this$0_61 = this$0;
    this._$deserializer_0 = $deserializer;
    this._$previousValue_0 = $previousValue;
  }
  _no_name_provided__216.prototype.invoke_411 = function () {
    return this._this$0_61.decodeNotNullMark_8() ? this._this$0_61.decodeSerializableValue_17(this._$deserializer_0, this._$previousValue_0) : this._this$0_61.decodeNull_8();
  };
  _no_name_provided__216.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function TaggedDecoder() {
    var tmp = this;
    tmp._tagStack = ArrayList_init_$Create$();
    this._flag = false;
  }
  TaggedDecoder.prototype._get_serializersModule__15 = function () {
    return EmptySerializersModule;
  };
  TaggedDecoder.prototype.decodeTaggedValue_0 = function (tag) {
    throw SerializationException_init_$Create$('' + getKClassFromExpression_0(this) + " can't retrieve untyped values");
  };
  TaggedDecoder.prototype.decodeTaggedNotNullMark_2 = function (tag) {
    return true;
  };
  TaggedDecoder.prototype.decodeTaggedBoolean_2 = function (tag) {
    var tmp = this.decodeTaggedValue_0(tag);
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.decodeTaggedByte_2 = function (tag) {
    var tmp = this.decodeTaggedValue_0(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.decodeTaggedShort_2 = function (tag) {
    var tmp = this.decodeTaggedValue_0(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.decodeTaggedInt_2 = function (tag) {
    var tmp = this.decodeTaggedValue_0(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.decodeTaggedLong_2 = function (tag) {
    var tmp = this.decodeTaggedValue_0(tag);
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.decodeTaggedFloat_2 = function (tag) {
    var tmp = this.decodeTaggedValue_0(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.decodeTaggedDouble_2 = function (tag) {
    var tmp = this.decodeTaggedValue_0(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.decodeTaggedChar_2 = function (tag) {
    var tmp = this.decodeTaggedValue_0(tag);
    return tmp instanceof Char ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.decodeTaggedString_2 = function (tag) {
    var tmp = this.decodeTaggedValue_0(tag);
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.decodeTaggedInline_2 = function (tag, inlineDescriptor) {
    this.pushTag_0(tag);
    return this;
  };
  TaggedDecoder.prototype.decodeSerializableValue_17 = function (deserializer, previousValue) {
    return this.decodeSerializableValue_16(deserializer);
  };
  TaggedDecoder.prototype.decodeInline_8 = function (inlineDescriptor) {
    return this.decodeTaggedInline_2(this.popTag_4(), inlineDescriptor);
  };
  TaggedDecoder.prototype.decodeNotNullMark_8 = function () {
    var tmp0_elvis_lhs = this._get_currentTagOrNull__4();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var currentTag = tmp;
    return this.decodeTaggedNotNullMark_2(currentTag);
  };
  TaggedDecoder.prototype.decodeNull_8 = function () {
    return null;
  };
  TaggedDecoder.prototype.decodeBoolean_8 = function () {
    return this.decodeTaggedBoolean_2(this.popTag_4());
  };
  TaggedDecoder.prototype.decodeByte_8 = function () {
    return this.decodeTaggedByte_2(this.popTag_4());
  };
  TaggedDecoder.prototype.decodeShort_8 = function () {
    return this.decodeTaggedShort_2(this.popTag_4());
  };
  TaggedDecoder.prototype.decodeInt_8 = function () {
    return this.decodeTaggedInt_2(this.popTag_4());
  };
  TaggedDecoder.prototype.decodeLong_8 = function () {
    return this.decodeTaggedLong_2(this.popTag_4());
  };
  TaggedDecoder.prototype.decodeFloat_8 = function () {
    return this.decodeTaggedFloat_2(this.popTag_4());
  };
  TaggedDecoder.prototype.decodeDouble_8 = function () {
    return this.decodeTaggedDouble_2(this.popTag_4());
  };
  TaggedDecoder.prototype.decodeChar_8 = function () {
    return this.decodeTaggedChar_2(this.popTag_4());
  };
  TaggedDecoder.prototype.decodeString_8 = function () {
    return this.decodeTaggedString_2(this.popTag_4());
  };
  TaggedDecoder.prototype.beginStructure_11 = function (descriptor) {
    return this;
  };
  TaggedDecoder.prototype.endStructure_11 = function (descriptor) {
  };
  TaggedDecoder.prototype.decodeBooleanElement_8 = function (descriptor, index) {
    return this.decodeTaggedBoolean_2(this.getTag_4(descriptor, index));
  };
  TaggedDecoder.prototype.decodeByteElement_8 = function (descriptor, index) {
    return this.decodeTaggedByte_2(this.getTag_4(descriptor, index));
  };
  TaggedDecoder.prototype.decodeShortElement_8 = function (descriptor, index) {
    return this.decodeTaggedShort_2(this.getTag_4(descriptor, index));
  };
  TaggedDecoder.prototype.decodeIntElement_8 = function (descriptor, index) {
    return this.decodeTaggedInt_2(this.getTag_4(descriptor, index));
  };
  TaggedDecoder.prototype.decodeLongElement_8 = function (descriptor, index) {
    return this.decodeTaggedLong_2(this.getTag_4(descriptor, index));
  };
  TaggedDecoder.prototype.decodeFloatElement_8 = function (descriptor, index) {
    return this.decodeTaggedFloat_2(this.getTag_4(descriptor, index));
  };
  TaggedDecoder.prototype.decodeDoubleElement_8 = function (descriptor, index) {
    return this.decodeTaggedDouble_2(this.getTag_4(descriptor, index));
  };
  TaggedDecoder.prototype.decodeCharElement_8 = function (descriptor, index) {
    return this.decodeTaggedChar_2(this.getTag_4(descriptor, index));
  };
  TaggedDecoder.prototype.decodeStringElement_8 = function (descriptor, index) {
    return this.decodeTaggedString_2(this.getTag_4(descriptor, index));
  };
  TaggedDecoder.prototype.decodeSerializableElement_8 = function (descriptor, index, deserializer, previousValue) {
    var tmp = this.getTag_4(descriptor, index);
    return tagBlock(this, tmp, _no_name_provided_$factory_178(this, deserializer, previousValue));
  };
  TaggedDecoder.prototype.decodeNullableSerializableElement_8 = function (descriptor, index, deserializer, previousValue) {
    var tmp = this.getTag_4(descriptor, index);
    return tagBlock(this, tmp, _no_name_provided_$factory_179(this, deserializer, previousValue));
  };
  TaggedDecoder.prototype._get_currentTagOrNull__4 = function () {
    return lastOrNull(this._tagStack);
  };
  TaggedDecoder.prototype.pushTag_0 = function (name) {
    this._tagStack.add_32(name);
    Unit_getInstance();
  };
  TaggedDecoder.prototype.popTag_4 = function () {
    var r = this._tagStack.removeAt_2(_get_lastIndex__0(this._tagStack));
    this._flag = true;
    return r;
  };
  TaggedDecoder.$metadata$ = {
    simpleName: 'TaggedDecoder',
    kind: 'class',
    interfaces: [Decoder_1, CompositeDecoder]
  };
  function _no_name_provided_$factory_178(this$0, $deserializer, $previousValue) {
    var i = new _no_name_provided__215(this$0, $deserializer, $previousValue);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_179(this$0, $deserializer, $previousValue) {
    var i = new _no_name_provided__216(this$0, $deserializer, $previousValue);
    return function () {
      return i.invoke_411();
    };
  }
  var NULL;
  function MapEntry(key, value) {
    this._key_13 = key;
    this._value_19 = value;
  }
  MapEntry.prototype._get_key__52 = function () {
    return this._key_13;
  };
  MapEntry.prototype._get_value__27 = function () {
    return this._value_19;
  };
  MapEntry.prototype.toString = function () {
    return '' + 'MapEntry(key=' + this._key_13 + ', value=' + this._value_19 + ')';
  };
  MapEntry.prototype.hashCode = function () {
    var result = this._key_13 == null ? 0 : hashCode(this._key_13);
    result = imul(result, 31) + (this._value_19 == null ? 0 : hashCode(this._value_19)) | 0;
    return result;
  };
  MapEntry.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapEntry))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof MapEntry ? other : THROW_CCE();
    if (!equals_1(this._key_13, tmp0_other_with_cast._key_13))
      return false;
    if (!equals_1(this._value_19, tmp0_other_with_cast._value_19))
      return false;
    return true;
  };
  MapEntry.$metadata$ = {
    simpleName: 'MapEntry',
    kind: 'class',
    interfaces: [Entry]
  };
  function _no_name_provided__217($keySerializer, $valueSerializer) {
    this._$keySerializer = $keySerializer;
    this._$valueSerializer = $valueSerializer;
  }
  _no_name_provided__217.prototype.invoke_378 = function ($this$buildSerialDescriptor) {
    var tmp = this._$keySerializer._get_descriptor__77();
    $this$buildSerialDescriptor.element$default('key', tmp, null, false, 12, null);
    var tmp_0 = this._$valueSerializer._get_descriptor__77();
    $this$buildSerialDescriptor.element$default('value', tmp_0, null, false, 12, null);
  };
  _no_name_provided__217.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__217.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function MapEntrySerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    var tmp_0 = MAP_getInstance();
    var tmp_1 = [];
    tmp._descriptor_23 = buildSerialDescriptor$default('kotlin.collections.Map.Entry', tmp_0, tmp_1, _no_name_provided_$factory_180(keySerializer, valueSerializer), 4, null);
  }
  MapEntrySerializer_0.prototype._get_descriptor__77 = function () {
    return this._descriptor_23;
  };
  MapEntrySerializer_0.prototype._get_key__44 = function (_this__0) {
    return _this__0._get_key__52();
  };
  MapEntrySerializer_0.prototype._get_key__48 = function (_this__0) {
    return this._get_key__44((!(_this__0 == null) ? isInterface(_this__0, Entry) : false) ? _this__0 : THROW_CCE());
  };
  MapEntrySerializer_0.prototype._get_value__12 = function (_this__0) {
    return _this__0._get_value__27();
  };
  MapEntrySerializer_0.prototype._get_value__16 = function (_this__0) {
    return this._get_value__12((!(_this__0 == null) ? isInterface(_this__0, Entry) : false) ? _this__0 : THROW_CCE());
  };
  MapEntrySerializer_0.prototype.toResult_25 = function (key, value) {
    return new MapEntry(key, value);
  };
  MapEntrySerializer_0.$metadata$ = {
    simpleName: 'MapEntrySerializer',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__218($keySerializer, $valueSerializer) {
    this._$keySerializer_0 = $keySerializer;
    this._$valueSerializer_0 = $valueSerializer;
  }
  _no_name_provided__218.prototype.invoke_378 = function ($this$buildClassSerialDescriptor) {
    var tmp = this._$keySerializer_0._get_descriptor__77();
    $this$buildClassSerialDescriptor.element$default('first', tmp, null, false, 12, null);
    var tmp_0 = this._$valueSerializer_0._get_descriptor__77();
    $this$buildClassSerialDescriptor.element$default('second', tmp_0, null, false, 12, null);
  };
  _no_name_provided__218.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__218.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function PairSerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    var tmp_0 = [];
    tmp._descriptor_24 = buildClassSerialDescriptor$default('kotlin.Pair', tmp_0, _no_name_provided_$factory_181(keySerializer, valueSerializer), 2, null);
  }
  PairSerializer_0.prototype._get_descriptor__77 = function () {
    return this._descriptor_24;
  };
  PairSerializer_0.prototype._get_key__46 = function (_this__0) {
    return _this__0._first;
  };
  PairSerializer_0.prototype._get_key__48 = function (_this__0) {
    return this._get_key__46(_this__0 instanceof Pair ? _this__0 : THROW_CCE());
  };
  PairSerializer_0.prototype._get_value__14 = function (_this__0) {
    return _this__0._second;
  };
  PairSerializer_0.prototype._get_value__16 = function (_this__0) {
    return this._get_value__14(_this__0 instanceof Pair ? _this__0 : THROW_CCE());
  };
  PairSerializer_0.prototype.toResult_25 = function (key, value) {
    return to(key, value);
  };
  PairSerializer_0.$metadata$ = {
    simpleName: 'PairSerializer',
    kind: 'class',
    interfaces: []
  };
  function decodeSequentially_0($this, composite) {
    var a = composite.decodeSerializableElement$default_8($this._descriptor_25, 0, $this._aSerializer, null, 8, null);
    var b = composite.decodeSerializableElement$default_8($this._descriptor_25, 1, $this._bSerializer, null, 8, null);
    var c = composite.decodeSerializableElement$default_8($this._descriptor_25, 2, $this._cSerializer, null, 8, null);
    composite.endStructure_11($this._descriptor_25);
    return new Triple(a, b, c);
  }
  function decodeStructure($this, composite) {
    var a = NULL;
    var b = NULL;
    var c = NULL;
    mainLoop: while (true) {
      var index = composite.decodeElementIndex_8($this._descriptor_25);
      Companion_getInstance_51();
      if (index === -1) {
        break mainLoop;
      } else {
        if (index === 0) {
          a = composite.decodeSerializableElement$default_8($this._descriptor_25, 0, $this._aSerializer, null, 8, null);
        } else {
          if (index === 1) {
            b = composite.decodeSerializableElement$default_8($this._descriptor_25, 1, $this._bSerializer, null, 8, null);
          } else {
            if (index === 2) {
              c = composite.decodeSerializableElement$default_8($this._descriptor_25, 2, $this._cSerializer, null, 8, null);
            } else {
              throw SerializationException_init_$Create$('' + 'Unexpected index ' + index);
            }
          }
        }
      }
    }
    composite.endStructure_11($this._descriptor_25);
    if (a === NULL)
      throw SerializationException_init_$Create$("Element 'first' is missing");
    if (b === NULL)
      throw SerializationException_init_$Create$("Element 'second' is missing");
    if (c === NULL)
      throw SerializationException_init_$Create$("Element 'third' is missing");
    var tmp = (a == null ? true : isObject(a)) ? a : THROW_CCE();
    var tmp_0 = (b == null ? true : isObject(b)) ? b : THROW_CCE();
    return new Triple(tmp, tmp_0, (c == null ? true : isObject(c)) ? c : THROW_CCE());
  }
  function _no_name_provided__219(this$0) {
    this._this$0_62 = this$0;
  }
  _no_name_provided__219.prototype.invoke_378 = function ($this$buildClassSerialDescriptor) {
    var tmp = this._this$0_62._aSerializer._get_descriptor__77();
    $this$buildClassSerialDescriptor.element$default('first', tmp, null, false, 12, null);
    var tmp_0 = this._this$0_62._bSerializer._get_descriptor__77();
    $this$buildClassSerialDescriptor.element$default('second', tmp_0, null, false, 12, null);
    var tmp_1 = this._this$0_62._cSerializer._get_descriptor__77();
    $this$buildClassSerialDescriptor.element$default('third', tmp_1, null, false, 12, null);
  };
  _no_name_provided__219.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__219.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function TripleSerializer_0(aSerializer, bSerializer, cSerializer) {
    this._aSerializer = aSerializer;
    this._bSerializer = bSerializer;
    this._cSerializer = cSerializer;
    var tmp = this;
    var tmp_0 = [];
    tmp._descriptor_25 = buildClassSerialDescriptor$default('kotlin.Triple', tmp_0, _no_name_provided_$factory_182(this), 2, null);
  }
  TripleSerializer_0.prototype._get_descriptor__77 = function () {
    return this._descriptor_25;
  };
  TripleSerializer_0.prototype.serialize_60 = function (encoder, value) {
    var structuredEncoder = encoder.beginStructure_11(this._descriptor_25);
    structuredEncoder.encodeSerializableElement_1(this._descriptor_25, 0, this._aSerializer, value._first_0);
    structuredEncoder.encodeSerializableElement_1(this._descriptor_25, 1, this._bSerializer, value._second_0);
    structuredEncoder.encodeSerializableElement_1(this._descriptor_25, 2, this._cSerializer, value._third);
    structuredEncoder.endStructure_11(this._descriptor_25);
  };
  TripleSerializer_0.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_60(encoder, value instanceof Triple ? value : THROW_CCE());
  };
  TripleSerializer_0.prototype.deserialize_81 = function (decoder) {
    var composite = decoder.beginStructure_11(this._descriptor_25);
    if (composite.decodeSequentially_8()) {
      return decodeSequentially_0(this, composite);
    }return decodeStructure(this, composite);
  };
  TripleSerializer_0.$metadata$ = {
    simpleName: 'TripleSerializer',
    kind: 'class',
    interfaces: [KSerializer]
  };
  function KeyValueSerializer(keySerializer, valueSerializer) {
    this._keySerializer_0 = keySerializer;
    this._valueSerializer_0 = valueSerializer;
  }
  KeyValueSerializer.prototype.serialize_62 = function (encoder, value) {
    var structuredEncoder = encoder.beginStructure_11(this._get_descriptor__77());
    structuredEncoder.encodeSerializableElement_1(this._get_descriptor__77(), 0, this._keySerializer_0, this._get_key__48(value));
    structuredEncoder.encodeSerializableElement_1(this._get_descriptor__77(), 1, this._valueSerializer_0, this._get_value__16(value));
    structuredEncoder.endStructure_11(this._get_descriptor__77());
  };
  KeyValueSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_62(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  KeyValueSerializer.prototype.deserialize_81 = function (decoder) {
    var composite = decoder.beginStructure_11(this._get_descriptor__77());
    if (composite.decodeSequentially_8()) {
      var tmp = this._get_descriptor__77();
      var key = composite.decodeSerializableElement$default_8(tmp, 0, this._keySerializer_0, null, 8, null);
      var tmp_0 = this._get_descriptor__77();
      var value = composite.decodeSerializableElement$default_8(tmp_0, 1, this._valueSerializer_0, null, 8, null);
      return this.toResult_25(key, value);
    }var key_0 = NULL;
    var value_0 = NULL;
    mainLoop: while (true) {
      var idx = composite.decodeElementIndex_8(this._get_descriptor__77());
      Companion_getInstance_51();
      if (idx === -1) {
        break mainLoop;
      } else {
        if (idx === 0) {
          var tmp_1 = this._get_descriptor__77();
          key_0 = composite.decodeSerializableElement$default_8(tmp_1, 0, this._keySerializer_0, null, 8, null);
        } else {
          if (idx === 1) {
            var tmp_2 = this._get_descriptor__77();
            value_0 = composite.decodeSerializableElement$default_8(tmp_2, 1, this._valueSerializer_0, null, 8, null);
          } else {
            throw SerializationException_init_$Create$('' + 'Invalid index: ' + idx);
          }
        }
      }
    }
    composite.endStructure_11(this._get_descriptor__77());
    if (key_0 === NULL)
      throw SerializationException_init_$Create$("Element 'key' is missing");
    if (value_0 === NULL)
      throw SerializationException_init_$Create$("Element 'value' is missing");
    var tmp_3 = (key_0 == null ? true : isObject(key_0)) ? key_0 : THROW_CCE();
    return this.toResult_25(tmp_3, (value_0 == null ? true : isObject(value_0)) ? value_0 : THROW_CCE());
  };
  KeyValueSerializer.$metadata$ = {
    simpleName: 'KeyValueSerializer',
    kind: 'class',
    interfaces: [KSerializer]
  };
  function _no_name_provided_$factory_180($keySerializer, $valueSerializer) {
    var i = new _no_name_provided__217($keySerializer, $valueSerializer);
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_181($keySerializer, $valueSerializer) {
    var i = new _no_name_provided__218($keySerializer, $valueSerializer);
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_182(this$0) {
    var i = new _no_name_provided__219(this$0);
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  var EmptySerializersModule;
  function SerializersModule() {
  }
  SerializersModule.prototype.getContextual_2 = function (kclass_0) {
    return this.getContextual_1(kclass_0, emptyList());
  };
  SerializersModule.prototype.getContextual$default = function (kClass, typeArgumentsSerializers, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      typeArgumentsSerializers = emptyList();
    return $handler == null ? this.getContextual_1(kClass, typeArgumentsSerializers) : $handler(kClass, typeArgumentsSerializers);
  };
  SerializersModule.$metadata$ = {
    simpleName: 'SerializersModule',
    kind: 'class',
    interfaces: []
  };
  function SerialModuleImpl(class2ContextualFactory, polyBase2Serializers, polyBase2NamedSerializers, polyBase2DefaultProvider) {
    SerializersModule.call(this);
    this._class2ContextualFactory = class2ContextualFactory;
    this._polyBase2Serializers = polyBase2Serializers;
    this._polyBase2NamedSerializers = polyBase2NamedSerializers;
    this._polyBase2DefaultProvider = polyBase2DefaultProvider;
  }
  SerialModuleImpl.prototype.getPolymorphic_1 = function (baseClass, value) {
    if (!isInstanceOf(value, baseClass))
      return null;
    var tmp0_safe_receiver = this._polyBase2Serializers.get_65(baseClass);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_65(getKClassFromExpression_0(value));
    return (!(tmp == null) ? isInterface(tmp, SerializationStrategy) : false) ? tmp : null;
  };
  SerialModuleImpl.prototype.getPolymorphic_2 = function (baseClass, serializedClassName) {
    var tmp0_safe_receiver = this._polyBase2NamedSerializers.get_65(baseClass);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = ((!(tmp0_safe_receiver == null) ? isInterface(tmp0_safe_receiver, Map_0) : false) ? tmp0_safe_receiver : THROW_CCE()).get_65(serializedClassName);
    }
    var tmp_0 = tmp;
    var registered = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    if (!(registered == null))
      return registered;
    var tmp_1 = this._polyBase2DefaultProvider.get_65(baseClass);
    var tmp1_safe_receiver = (!(tmp_1 == null) ? typeof tmp_1 === 'function' : false) ? tmp_1 : null;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(serializedClassName);
  };
  SerialModuleImpl.prototype.getContextual_1 = function (kClass, typeArgumentsSerializers) {
    var tmp0_safe_receiver = this._class2ContextualFactory.get_65(kClass);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.invoke_357(typeArgumentsSerializers);
    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : null;
  };
  SerialModuleImpl.prototype.dumpTo_0 = function (collector) {
    var tmp0_forEach_0 = this._class2ContextualFactory;
    var tmp0_iterator_1 = tmp0_forEach_0._get_entries__8().iterator_62();
    while (tmp0_iterator_1.hasNext_29()) {
      var element_2 = tmp0_iterator_1.next_31();
      var kclass_4 = element_2._get_key__52();
      var serial_5 = element_2._get_value__27();
      var tmp0_subject_6 = serial_5;
      if (tmp0_subject_6 instanceof Argless) {
        var tmp = isInterface(kclass_4, KClass) ? kclass_4 : THROW_CCE();
        var tmp_0 = serial_5._serializer_2;
        collector.contextual_2(tmp, isInterface(tmp_0, KSerializer) ? tmp_0 : THROW_CCE());
      } else {
        if (tmp0_subject_6 instanceof WithTypeArguments)
          collector.contextual_1(kclass_4, serial_5._provider);
        else {
        }
      }
    }
    var tmp1_forEach_0 = this._polyBase2Serializers;
    var tmp0_iterator_1_0 = tmp1_forEach_0._get_entries__8().iterator_62();
    while (tmp0_iterator_1_0.hasNext_29()) {
      var element_2_0 = tmp0_iterator_1_0.next_31();
      var baseClass_4 = element_2_0._get_key__52();
      var classMap_5 = element_2_0._get_value__27();
      var tmp0_iterator_1_6 = classMap_5._get_entries__8().iterator_62();
      while (tmp0_iterator_1_6.hasNext_29()) {
        var element_2_7 = tmp0_iterator_1_6.next_31();
        var actualClass_4_8 = element_2_7._get_key__52();
        var serializer_5_9 = element_2_7._get_value__27();
        var tmp_1 = isInterface(baseClass_4, KClass) ? baseClass_4 : THROW_CCE();
        var tmp_2 = isInterface(actualClass_4_8, KClass) ? actualClass_4_8 : THROW_CCE();
        collector.polymorphic_0(tmp_1, tmp_2, isInterface(serializer_5_9, KSerializer) ? serializer_5_9 : THROW_CCE());
      }
    }
    var tmp2_forEach_0 = this._polyBase2DefaultProvider;
    var tmp0_iterator_1_1 = tmp2_forEach_0._get_entries__8().iterator_62();
    while (tmp0_iterator_1_1.hasNext_29()) {
      var element_2_1 = tmp0_iterator_1_1.next_31();
      var baseClass_4_0 = element_2_1._get_key__52();
      var provider_5 = element_2_1._get_value__27();
      var tmp_3 = isInterface(baseClass_4_0, KClass) ? baseClass_4_0 : THROW_CCE();
      collector.polymorphicDefault_0(tmp_3, typeof provider_5 === 'function' ? provider_5 : THROW_CCE());
    }
  };
  SerialModuleImpl.$metadata$ = {
    simpleName: 'SerialModuleImpl',
    kind: 'class',
    interfaces: []
  };
  function Argless() {
  }
  Argless.$metadata$ = {
    simpleName: 'Argless',
    kind: 'class',
    interfaces: []
  };
  function WithTypeArguments() {
  }
  WithTypeArguments.$metadata$ = {
    simpleName: 'WithTypeArguments',
    kind: 'class',
    interfaces: []
  };
  function ContextualProvider() {
  }
  ContextualProvider.$metadata$ = {
    simpleName: 'ContextualProvider',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__220($serializer_19) {
    this._$serializer = $serializer_19;
  }
  _no_name_provided__220.prototype.invoke_357 = function (it) {
    return this._$serializer;
  };
  _no_name_provided__220.prototype.invoke_420 = function (p1) {
    return this.invoke_357((!(p1 == null) ? isInterface(p1, List) : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__220.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function SerializersModuleCollector() {
  }
  SerializersModuleCollector.prototype.contextual_2 = function (kClass, serializer_16) {
    return this.contextual_1(kClass, _no_name_provided_$factory_183(serializer_16));
  };
  SerializersModuleCollector.$metadata$ = {
    simpleName: 'SerializersModuleCollector',
    kind: 'interface',
    interfaces: []
  };
  function _no_name_provided_$factory_183($serializer_19) {
    var i = new _no_name_provided__220($serializer_19);
    return function (p1) {
      return i.invoke_357(p1);
    };
  }
  function SerializableWith() {
  }
  SerializableWith.$metadata$ = {
    simpleName: 'SerializableWith',
    kind: 'class',
    interfaces: [Annotation],
    associatedObjectKey: 0
  };
  function isInstanceOf(_this_, kclass_0) {
    return kclass_0.isInstance_4(_this_);
  }
  function getChecked(_this_, index) {
    if (!(0 <= index ? index <= (_this_.length - 1 | 0) : false))
      throw IndexOutOfBoundsException_init_$Create$_0('' + 'Index ' + index + ' out of bounds ' + _get_indices_(_this_));
    return _this_[index];
  }
  function platformSpecificSerializerNotRegistered(_this_) {
    throw SerializationException_init_$Create$('' + "Serializer for class '" + _this_._get_simpleName__4() + "' is not found.\n" + 'Mark the class as @Serializable or provide the serializer explicitly.\n' + 'On Kotlin/JS explicitly declared serializer should be used for interfaces and enums without @Serializable annotation');
  }
  function compiledSerializerImpl(_this_) {
    var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(_this_, []);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_asDynamic_0 = _get_js_(_this_);
      var tmp0_safe_receiver = tmp0_asDynamic_0.Companion;
      var tmp_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.serializer();
      tmp = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function isReferenceArray(rootClass) {
    return rootClass.equals(PrimitiveClasses_getInstance()._get_arrayClass_());
  }
  function constructSerializerForGivenTypeArgs(_this_, args) {
    var tmp;
    try {
      var assocObject = findAssociatedObject(_this_, getKClass_0(SerializableWith));
      var tmp_0;
      if (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) {
        tmp_0 = (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) ? assocObject : THROW_CCE();
      } else {
        if (!(assocObject == null) ? isInterface(assocObject, SerializerFactory) : false) {
          var tmp_1 = assocObject.serializer(args.slice());
          tmp_0 = isInterface(tmp_1, KSerializer) ? tmp_1 : THROW_CCE();
        } else {
          if (_get_isInterface_(_this_)) {
            tmp_0 = new PolymorphicSerializer(_this_);
          } else {
            {
              tmp_0 = null;
            }
          }
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      {
        tmp_2 = null;
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function _get_isInterface_(_this_) {
    var tmp0_asDynamic_0 = _get_js_(_this_);
    var tmp0_safe_receiver = tmp0_asDynamic_0.$metadata$;
    return (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.kind) == 'interface';
  }
  function toNativeArrayImpl(_this_, eClass) {
    return copyToArray_0(_this_);
  }
  function Default() {
    Default_instance = this;
    Json_0.call(this, JsonConfiguration_init_$Create$(false, false, false, false, false, null, false, false, null, false, false, 2047, null), EmptySerializersModule);
  }
  Default.$metadata$ = {
    simpleName: 'Default',
    kind: 'object',
    interfaces: []
  };
  var Default_instance;
  function Default_getInstance() {
    if (Default_instance == null)
      new Default();
    return Default_instance;
  }
  function Json_0(configuration, serializersModule) {
    Default_getInstance();
    this._configuration = configuration;
    this._serializersModule = serializersModule;
    this._schemaCache = new DescriptorSchemaCache();
  }
  Json_0.prototype._get_configuration__3 = function () {
    return this._configuration;
  };
  Json_0.prototype._get_serializersModule__15 = function () {
    return this._serializersModule;
  };
  Json_0.prototype.encodeToString_1 = function (serializer_16, value) {
    var result = new JsonStringBuilder();
    try {
      var tmp = WriteMode_OBJ_getInstance();
      var tmp0_arrayOfNulls_0 = values_3().length;
      var encoder = StreamingJsonEncoder_init_$Create$(result, this, tmp, fillArrayVal(Array(tmp0_arrayOfNulls_0), null));
      encoder.encodeSerializableValue_1(serializer_16, value);
      return result.toString();
    }finally {
      result.release_10();
    }
  };
  Json_0.prototype.decodeFromString_2 = function (deserializer, string) {
    var lexer = new JsonLexer(string);
    var input = new StreamingJsonDecoder(this, WriteMode_OBJ_getInstance(), lexer);
    var result = input.decodeSerializableValue_16(deserializer);
    lexer.expectEof();
    return result;
  };
  Json_0.$metadata$ = {
    simpleName: 'Json',
    kind: 'class',
    interfaces: [StringFormat]
  };
  function Json_1(from, builderAction) {
    var builder = new JsonBuilder(from);
    builderAction(builder);
    var conf = builder.build_17();
    return new JsonImpl(conf, builder._serializersModule_0);
  }
  function Json$default(from, builderAction, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      from = Default_getInstance();
    return Json_1(from, builderAction);
  }
  function JsonBuilder(json) {
    this._encodeDefaults = json._configuration._encodeDefaults_0;
    this._ignoreUnknownKeys = json._configuration._ignoreUnknownKeys_0;
    this._isLenient = json._configuration._isLenient_0;
    this._allowStructuredMapKeys = json._configuration._allowStructuredMapKeys_0;
    this._prettyPrint = json._configuration._prettyPrint_0;
    this._prettyPrintIndent = json._configuration._prettyPrintIndent_0;
    this._coerceInputValues = json._configuration._coerceInputValues_0;
    this._useArrayPolymorphism = json._configuration._useArrayPolymorphism_0;
    this._classDiscriminator = json._configuration._classDiscriminator_0;
    this._allowSpecialFloatingPointValues = json._configuration._allowSpecialFloatingPointValues_0;
    this._useAlternativeNames = json._configuration._useAlternativeNames_0;
    this._serializersModule_0 = json._get_serializersModule__15();
  }
  JsonBuilder.prototype.build_17 = function () {
    if (this._useArrayPolymorphism) {
      var tmp0_require_0 = this._classDiscriminator === 'type';
      if (!tmp0_require_0) {
        var message_1 = 'Class discriminator should not be specified when array polymorphism is specified';
        throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
      }}if (!this._prettyPrint) {
      var tmp1_require_0 = this._prettyPrintIndent === '    ';
      if (!tmp1_require_0) {
        var message_1_0 = 'Indent should not be specified when default printing mode is used';
        throw IllegalArgumentException_init_$Create$_0(toString_1(message_1_0));
      }} else if (!(this._prettyPrintIndent === '    ')) {
      var tmp$ret$0;
      l$ret$1: do {
        var tmp2_all_0 = this._prettyPrintIndent;
        var indexedObject = tmp2_all_0;
        var inductionVariable = 0;
        var last_1 = indexedObject.length;
        while (inductionVariable < last_1) {
          var element_2 = charSequenceGet(indexedObject, inductionVariable);
          inductionVariable = inductionVariable + 1 | 0;
          if (!(((element_2.equals(new Char(32)) ? true : element_2.equals(new Char(9))) ? true : element_2.equals(new Char(13))) ? true : element_2.equals(new Char(10)))) {
            tmp$ret$0 = false;
            break l$ret$1;
          } else {
          }
        }
        tmp$ret$0 = true;
      }
       while (false);
      var allWhitespaces = tmp$ret$0;
      if (!allWhitespaces) {
        var message_1_1 = '' + 'Only whitespace, tab, newline and carriage return are allowed as pretty print symbols. Had ' + this._prettyPrintIndent;
        throw IllegalArgumentException_init_$Create$_0(toString_1(message_1_1));
      }}return new JsonConfiguration(this._encodeDefaults, this._ignoreUnknownKeys, this._isLenient, this._allowStructuredMapKeys, this._prettyPrint, this._prettyPrintIndent, this._coerceInputValues, this._useArrayPolymorphism, this._classDiscriminator, this._allowSpecialFloatingPointValues, this._useAlternativeNames);
  };
  JsonBuilder.$metadata$ = {
    simpleName: 'JsonBuilder',
    kind: 'class',
    interfaces: []
  };
  function validateConfiguration($this) {
    if (equals_1($this._get_serializersModule__15(), EmptySerializersModule))
      return Unit_getInstance();
    var collector = new PolymorphismValidator($this._get_configuration__3()._useArrayPolymorphism_0, $this._get_configuration__3()._classDiscriminator_0);
    $this._get_serializersModule__15().dumpTo_0(collector);
  }
  function JsonImpl(configuration, module_0) {
    Json_0.call(this, configuration, module_0);
    validateConfiguration(this);
  }
  JsonImpl.$metadata$ = {
    simpleName: 'JsonImpl',
    kind: 'class',
    interfaces: []
  };
  function JsonConfiguration_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      encodeDefaults = false;
    if (!(($mask0 & 2) === 0))
      ignoreUnknownKeys = false;
    if (!(($mask0 & 4) === 0))
      isLenient = false;
    if (!(($mask0 & 8) === 0))
      allowStructuredMapKeys = false;
    if (!(($mask0 & 16) === 0))
      prettyPrint = false;
    if (!(($mask0 & 32) === 0))
      prettyPrintIndent = '    ';
    if (!(($mask0 & 64) === 0))
      coerceInputValues = false;
    if (!(($mask0 & 128) === 0))
      useArrayPolymorphism = false;
    if (!(($mask0 & 256) === 0))
      classDiscriminator = 'type';
    if (!(($mask0 & 512) === 0))
      allowSpecialFloatingPointValues = false;
    if (!(($mask0 & 1024) === 0))
      useAlternativeNames = true;
    JsonConfiguration.call($this, encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames);
    return $this;
  }
  function JsonConfiguration_init_$Create$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, $mask0, $marker) {
    return JsonConfiguration_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, $mask0, $marker, Object.create(JsonConfiguration.prototype));
  }
  function JsonConfiguration(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames) {
    this._encodeDefaults_0 = encodeDefaults;
    this._ignoreUnknownKeys_0 = ignoreUnknownKeys;
    this._isLenient_0 = isLenient;
    this._allowStructuredMapKeys_0 = allowStructuredMapKeys;
    this._prettyPrint_0 = prettyPrint;
    this._prettyPrintIndent_0 = prettyPrintIndent;
    this._coerceInputValues_0 = coerceInputValues;
    this._useArrayPolymorphism_0 = useArrayPolymorphism;
    this._classDiscriminator_0 = classDiscriminator;
    this._allowSpecialFloatingPointValues_0 = allowSpecialFloatingPointValues;
    this._useAlternativeNames_0 = useAlternativeNames;
  }
  JsonConfiguration.prototype.toString = function () {
    return '' + 'JsonConfiguration(encodeDefaults=' + this._encodeDefaults_0 + ', ignoreUnknownKeys=' + this._ignoreUnknownKeys_0 + ', isLenient=' + this._isLenient_0 + ', allowStructuredMapKeys=' + this._allowStructuredMapKeys_0 + ', prettyPrint=' + this._prettyPrint_0 + ", prettyPrintIndent='" + this._prettyPrintIndent_0 + "', coerceInputValues=" + this._coerceInputValues_0 + ', useArrayPolymorphism=' + this._useArrayPolymorphism_0 + ", classDiscriminator='" + this._classDiscriminator_0 + "', allowSpecialFloatingPointValues=" + this._allowSpecialFloatingPointValues_0 + ')';
  };
  JsonConfiguration.$metadata$ = {
    simpleName: 'JsonConfiguration',
    kind: 'class',
    interfaces: []
  };
  function JsonDecoder() {
  }
  JsonDecoder.$metadata$ = {
    simpleName: 'JsonDecoder',
    kind: 'interface',
    interfaces: [Decoder_1, CompositeDecoder]
  };
  function Companion_53() {
    Companion_instance_52 = this;
  }
  Companion_53.prototype.serializer_0 = function () {
    return JsonElementSerializer_getInstance();
  };
  Companion_53.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_52;
  function Companion_getInstance_52() {
    if (Companion_instance_52 == null)
      new Companion_53();
    return Companion_instance_52;
  }
  function JsonElement() {
    Companion_getInstance_52();
  }
  JsonElement.$metadata$ = {
    simpleName: 'JsonElement',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: JsonElementSerializer_getInstance}
  };
  function Companion_54() {
    Companion_instance_53 = this;
  }
  Companion_54.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_53;
  function Companion_getInstance_53() {
    if (Companion_instance_53 == null)
      new Companion_54();
    return Companion_instance_53;
  }
  function _no_name_provided__221() {
  }
  _no_name_provided__221.prototype.invoke_359 = function (_name_for_destructuring_parameter_0_) {
    var k = _name_for_destructuring_parameter_0_._get_key__52();
    var v = _name_for_destructuring_parameter_0_._get_value__27();
    var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
    printQuoted(tmp0_apply_0_1, k);
    tmp0_apply_0_1.append_23(new Char(58));
    Unit_getInstance();
    tmp0_apply_0_1.append_5(v);
    Unit_getInstance();
    return tmp0_apply_0_1.toString();
  };
  _no_name_provided__221.prototype.invoke_420 = function (p1) {
    return this.invoke_359((!(p1 == null) ? isInterface(p1, Entry) : false) ? p1 : THROW_CCE());
  };
  _no_name_provided__221.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function JsonObject(content) {
    Companion_getInstance_53();
    JsonElement.call(this);
    this._content_9 = content;
  }
  JsonObject.prototype.containsKey_11 = function (key) {
    return this._content_9.containsKey_12(key);
  };
  JsonObject.prototype.containsKey_12 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    else {
    }
    return this.containsKey_11((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  JsonObject.prototype.get_64 = function (key) {
    return this._content_9.get_65(key);
  };
  JsonObject.prototype.get_65 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    else {
    }
    return this.get_64((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  JsonObject.prototype.isEmpty_50 = function () {
    return this._content_9.isEmpty_50();
  };
  JsonObject.prototype._get_entries__8 = function () {
    return this._content_9._get_entries__8();
  };
  JsonObject.prototype._get_keys__8 = function () {
    return this._content_9._get_keys__8();
  };
  JsonObject.prototype._get_size__48 = function () {
    return this._content_9._get_size__48();
  };
  JsonObject.prototype._get_values__14 = function () {
    return this._content_9._get_values__14();
  };
  JsonObject.prototype.equals = function (other) {
    return equals_1(this._content_9, other);
  };
  JsonObject.prototype.hashCode = function () {
    return hashCode(this._content_9);
  };
  JsonObject.prototype.toString = function () {
    var tmp = this._content_9._get_entries__8();
    return joinToString$default_0(tmp, ',', '{', '}', 0, null, _no_name_provided_$factory_184(), 24, null);
  };
  JsonObject.$metadata$ = {
    simpleName: 'JsonObject',
    kind: 'class',
    interfaces: [Map_0],
    associatedObjects: {0: JsonObjectSerializer_getInstance}
  };
  function JsonNull() {
    JsonNull_instance = this;
    JsonPrimitive.call(this);
    this._content_10 = 'null';
  }
  JsonNull.prototype._get_content__8 = function () {
    return this._content_10;
  };
  JsonNull.$metadata$ = {
    simpleName: 'JsonNull',
    kind: 'object',
    interfaces: []
  };
  var JsonNull_instance;
  function JsonNull_getInstance() {
    if (JsonNull_instance == null)
      new JsonNull();
    return JsonNull_instance;
  }
  function Companion_55() {
    Companion_instance_54 = this;
  }
  Companion_55.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_54;
  function Companion_getInstance_54() {
    if (Companion_instance_54 == null)
      new Companion_55();
    return Companion_instance_54;
  }
  function JsonPrimitive() {
    Companion_getInstance_54();
    JsonElement.call(this);
  }
  JsonPrimitive.prototype.toString = function () {
    return this._get_content__8();
  };
  JsonPrimitive.$metadata$ = {
    simpleName: 'JsonPrimitive',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: JsonPrimitiveSerializer_getInstance}
  };
  function JsonPrimitive_0(value) {
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, true);
  }
  function JsonLiteral(body, isString_0) {
    JsonPrimitive.call(this);
    this._isString = isString_0;
    this._content_11 = toString_1(body);
  }
  JsonLiteral.prototype._get_content__8 = function () {
    return this._content_11;
  };
  JsonLiteral.prototype.toString = function () {
    var tmp;
    if (this._isString) {
      var tmp0_apply_0_1 = StringBuilder_init_$Create$_0();
      printQuoted(tmp0_apply_0_1, this._content_11);
      tmp = tmp0_apply_0_1.toString();
    } else {
      tmp = this._content_11;
    }
    return tmp;
  };
  JsonLiteral.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression_0(this).equals(getKClassFromExpression_0(other)))
      return false;
    if (other instanceof JsonLiteral)
      other;
    else
      THROW_CCE();
    Unit_getInstance();
    if (!(this._isString === other._isString))
      return false;
    if (!(this._content_11 === other._content_11))
      return false;
    return true;
  };
  JsonLiteral.prototype.hashCode = function () {
    var result = this._isString | 0;
    result = imul(31, result) + getStringHashCode(this._content_11) | 0;
    return result;
  };
  JsonLiteral.$metadata$ = {
    simpleName: 'JsonLiteral',
    kind: 'class',
    interfaces: []
  };
  function Companion_56() {
    Companion_instance_55 = this;
  }
  Companion_56.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_55;
  function Companion_getInstance_55() {
    if (Companion_instance_55 == null)
      new Companion_56();
    return Companion_instance_55;
  }
  function JsonArray(content) {
    Companion_getInstance_55();
    JsonElement.call(this);
    this._content_12 = content;
  }
  JsonArray.prototype.contains_47 = function (element) {
    return this._content_12.contains_48(element);
  };
  JsonArray.prototype.contains_48 = function (element) {
    if (!(element instanceof JsonElement))
      return false;
    else {
    }
    return this.contains_47(element instanceof JsonElement ? element : THROW_CCE());
  };
  JsonArray.prototype.containsAll_36 = function (elements) {
    return this._content_12.containsAll_37(elements);
  };
  JsonArray.prototype.containsAll_37 = function (elements) {
    return this.containsAll_36(elements);
  };
  JsonArray.prototype.get_77 = function (index) {
    return this._content_12.get_77(index);
  };
  JsonArray.prototype.isEmpty_50 = function () {
    return this._content_12.isEmpty_50();
  };
  JsonArray.prototype.iterator_62 = function () {
    return this._content_12.iterator_62();
  };
  JsonArray.prototype._get_size__48 = function () {
    return this._content_12._get_size__48();
  };
  JsonArray.prototype.equals = function (other) {
    return equals_1(this._content_12, other);
  };
  JsonArray.prototype.hashCode = function () {
    return hashCode(this._content_12);
  };
  JsonArray.prototype.toString = function () {
    return joinToString$default_0(this._content_12, ',', '[', ']', 0, null, null, 56, null);
  };
  JsonArray.$metadata$ = {
    simpleName: 'JsonArray',
    kind: 'class',
    interfaces: [List],
    associatedObjects: {0: JsonArraySerializer_getInstance}
  };
  function _get_booleanOrNull_(_this_) {
    return toBooleanStrictOrNull(_this_._get_content__8());
  }
  function _get_int_(_this_) {
    return toInt(_this_._get_content__8());
  }
  function _get_long_(_this_) {
    return toLong(_this_._get_content__8());
  }
  function _get_float_(_this_) {
    var tmp0_toFloat_0 = _this_._get_content__8();
    var tmp0_unsafeCast_0_1 = toDouble(tmp0_toFloat_0);
    return tmp0_unsafeCast_0_1;
  }
  function _get_double_(_this_) {
    return toDouble(_this_._get_content__8());
  }
  function _get_contentOrNull_(_this_) {
    var tmp;
    if (_this_ instanceof JsonNull) {
      tmp = null;
    } else {
      {
        tmp = _this_._get_content__8();
      }
    }
    return tmp;
  }
  function _get_longOrNull_(_this_) {
    return toLongOrNull(_this_._get_content__8());
  }
  function _get_doubleOrNull_(_this_) {
    return toDoubleOrNull(_this_._get_content__8());
  }
  function _get_jsonPrimitive_(_this_) {
    var tmp0_elvis_lhs = _this_ instanceof JsonPrimitive ? _this_ : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      error_0(_this_, 'JsonPrimitive');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function error_0(_this_, element) {
    throw IllegalArgumentException_init_$Create$_0('' + 'Element ' + getKClassFromExpression_0(_this_) + ' is not a ' + element);
  }
  function _no_name_provided_$factory_184() {
    var i = new _no_name_provided__221();
    return function (p1) {
      return i.invoke_359(p1);
    };
  }
  function _no_name_provided__222() {
  }
  _no_name_provided__222.prototype.invoke_411 = function () {
    return JsonPrimitiveSerializer_getInstance()._descriptor_29;
  };
  _no_name_provided__222.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__223() {
  }
  _no_name_provided__223.prototype.invoke_411 = function () {
    return JsonNullSerializer_getInstance()._descriptor_30;
  };
  _no_name_provided__223.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__224() {
  }
  _no_name_provided__224.prototype.invoke_411 = function () {
    return JsonLiteralSerializer_getInstance()._descriptor_31;
  };
  _no_name_provided__224.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__225() {
  }
  _no_name_provided__225.prototype.invoke_411 = function () {
    return JsonObjectSerializer_getInstance()._descriptor_27;
  };
  _no_name_provided__225.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__226() {
  }
  _no_name_provided__226.prototype.invoke_411 = function () {
    return JsonArraySerializer_getInstance()._descriptor_28;
  };
  _no_name_provided__226.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__227() {
  }
  _no_name_provided__227.prototype.invoke_378 = function ($this$buildSerialDescriptor) {
    var tmp = defer(_no_name_provided_$factory_186());
    $this$buildSerialDescriptor.element$default('JsonPrimitive', tmp, null, false, 12, null);
    var tmp_0 = defer(_no_name_provided_$factory_187());
    $this$buildSerialDescriptor.element$default('JsonNull', tmp_0, null, false, 12, null);
    var tmp_1 = defer(_no_name_provided_$factory_188());
    $this$buildSerialDescriptor.element$default('JsonLiteral', tmp_1, null, false, 12, null);
    var tmp_2 = defer(_no_name_provided_$factory_189());
    $this$buildSerialDescriptor.element$default('JsonObject', tmp_2, null, false, 12, null);
    var tmp_3 = defer(_no_name_provided_$factory_190());
    $this$buildSerialDescriptor.element$default('JsonArray', tmp_3, null, false, 12, null);
  };
  _no_name_provided__227.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__227.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function JsonElementSerializer() {
    JsonElementSerializer_instance = this;
    var tmp = this;
    var tmp_0 = SEALED_getInstance();
    var tmp_1 = [];
    tmp._descriptor_26 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonElement', tmp_0, tmp_1, _no_name_provided_$factory_185(), 4, null);
  }
  JsonElementSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_26;
  };
  JsonElementSerializer.prototype.serialize_64 = function (encoder, value) {
    verify(encoder);
    var tmp0_subject = value;
    if (tmp0_subject instanceof JsonPrimitive)
      encoder.encodeSerializableValue_1(JsonPrimitiveSerializer_getInstance(), value);
    else {
      if (tmp0_subject instanceof JsonObject)
        encoder.encodeSerializableValue_1(JsonObjectSerializer_getInstance(), value);
      else {
        if (tmp0_subject instanceof JsonArray)
          encoder.encodeSerializableValue_1(JsonArraySerializer_getInstance(), value);
        else {
        }
      }
    }
  };
  JsonElementSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_64(encoder, value instanceof JsonElement ? value : THROW_CCE());
  };
  JsonElementSerializer.prototype.deserialize_81 = function (decoder) {
    var input = asJsonDecoder(decoder);
    return input.decodeJsonElement_4();
  };
  JsonElementSerializer.$metadata$ = {
    simpleName: 'JsonElementSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var JsonElementSerializer_instance;
  function JsonElementSerializer_getInstance() {
    if (JsonElementSerializer_instance == null)
      new JsonElementSerializer();
    return JsonElementSerializer_instance;
  }
  function JsonObjectDescriptor() {
    JsonObjectDescriptor_instance = this;
    var tmp = this;
    var tmp0_cast_0_1_1 = serializer(createKType_0(getKClass_0(HashMap), [createInvariantKTypeProjection_0(createKType_0(PrimitiveClasses_getInstance()._get_stringClass_(), [], false)), createInvariantKTypeProjection_0(createKType_0(getKClass_0(JsonElement), [], false))], false));
    tmp._$$delegate_0_3 = (isInterface(tmp0_cast_0_1_1, KSerializer) ? tmp0_cast_0_1_1 : THROW_CCE())._get_descriptor__77();
    this._serialName_7 = 'kotlinx.serialization.json.JsonObject';
  }
  JsonObjectDescriptor.prototype.getElementAnnotations_17 = function (index) {
    return this._$$delegate_0_3.getElementAnnotations_17(index);
  };
  JsonObjectDescriptor.prototype.getElementDescriptor_17 = function (index) {
    return this._$$delegate_0_3.getElementDescriptor_17(index);
  };
  JsonObjectDescriptor.prototype.getElementIndex_17 = function (name) {
    return this._$$delegate_0_3.getElementIndex_17(name);
  };
  JsonObjectDescriptor.prototype.getElementName_17 = function (index) {
    return this._$$delegate_0_3.getElementName_17(index);
  };
  JsonObjectDescriptor.prototype._get_elementsCount__17 = function () {
    return this._$$delegate_0_3._get_elementsCount__17();
  };
  JsonObjectDescriptor.prototype._get_isInline__17 = function () {
    return this._$$delegate_0_3._get_isInline__17();
  };
  JsonObjectDescriptor.prototype._get_isNullable__17 = function () {
    return this._$$delegate_0_3._get_isNullable__17();
  };
  JsonObjectDescriptor.prototype._get_kind__20 = function () {
    return this._$$delegate_0_3._get_kind__20();
  };
  JsonObjectDescriptor.prototype._get_serialName__17 = function () {
    return this._serialName_7;
  };
  JsonObjectDescriptor.$metadata$ = {
    simpleName: 'JsonObjectDescriptor',
    kind: 'object',
    interfaces: [SerialDescriptor]
  };
  var JsonObjectDescriptor_instance;
  function JsonObjectDescriptor_getInstance() {
    if (JsonObjectDescriptor_instance == null)
      new JsonObjectDescriptor();
    return JsonObjectDescriptor_instance;
  }
  function JsonObjectSerializer() {
    JsonObjectSerializer_instance = this;
    this._descriptor_27 = JsonObjectDescriptor_getInstance();
  }
  JsonObjectSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_27;
  };
  JsonObjectSerializer.prototype.serialize_66 = function (encoder, value) {
    verify(encoder);
    MapSerializer(serializer_2(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).serialize_129(encoder, value);
  };
  JsonObjectSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_66(encoder, value instanceof JsonObject ? value : THROW_CCE());
  };
  JsonObjectSerializer.prototype.deserialize_81 = function (decoder) {
    verify_0(decoder);
    return new JsonObject(MapSerializer(serializer_2(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).deserialize_81(decoder));
  };
  JsonObjectSerializer.$metadata$ = {
    simpleName: 'JsonObjectSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var JsonObjectSerializer_instance;
  function JsonObjectSerializer_getInstance() {
    if (JsonObjectSerializer_instance == null)
      new JsonObjectSerializer();
    return JsonObjectSerializer_instance;
  }
  function JsonArrayDescriptor() {
    JsonArrayDescriptor_instance = this;
    var tmp = this;
    var tmp0_cast_0_1_1 = serializer(createKType_0(getKClass_0(List), [createInvariantKTypeProjection_0(createKType_0(getKClass_0(JsonElement), [], false))], false));
    tmp._$$delegate_0_4 = (isInterface(tmp0_cast_0_1_1, KSerializer) ? tmp0_cast_0_1_1 : THROW_CCE())._get_descriptor__77();
    this._serialName_8 = 'kotlinx.serialization.json.JsonArray';
  }
  JsonArrayDescriptor.prototype.getElementAnnotations_17 = function (index) {
    return this._$$delegate_0_4.getElementAnnotations_17(index);
  };
  JsonArrayDescriptor.prototype.getElementDescriptor_17 = function (index) {
    return this._$$delegate_0_4.getElementDescriptor_17(index);
  };
  JsonArrayDescriptor.prototype.getElementIndex_17 = function (name) {
    return this._$$delegate_0_4.getElementIndex_17(name);
  };
  JsonArrayDescriptor.prototype.getElementName_17 = function (index) {
    return this._$$delegate_0_4.getElementName_17(index);
  };
  JsonArrayDescriptor.prototype._get_elementsCount__17 = function () {
    return this._$$delegate_0_4._get_elementsCount__17();
  };
  JsonArrayDescriptor.prototype._get_isInline__17 = function () {
    return this._$$delegate_0_4._get_isInline__17();
  };
  JsonArrayDescriptor.prototype._get_isNullable__17 = function () {
    return this._$$delegate_0_4._get_isNullable__17();
  };
  JsonArrayDescriptor.prototype._get_kind__20 = function () {
    return this._$$delegate_0_4._get_kind__20();
  };
  JsonArrayDescriptor.prototype._get_serialName__17 = function () {
    return this._serialName_8;
  };
  JsonArrayDescriptor.$metadata$ = {
    simpleName: 'JsonArrayDescriptor',
    kind: 'object',
    interfaces: [SerialDescriptor]
  };
  var JsonArrayDescriptor_instance;
  function JsonArrayDescriptor_getInstance() {
    if (JsonArrayDescriptor_instance == null)
      new JsonArrayDescriptor();
    return JsonArrayDescriptor_instance;
  }
  function JsonArraySerializer() {
    JsonArraySerializer_instance = this;
    this._descriptor_28 = JsonArrayDescriptor_getInstance();
  }
  JsonArraySerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_28;
  };
  JsonArraySerializer.prototype.serialize_68 = function (encoder, value) {
    verify(encoder);
    ListSerializer(JsonElementSerializer_getInstance()).serialize_129(encoder, value);
  };
  JsonArraySerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_68(encoder, value instanceof JsonArray ? value : THROW_CCE());
  };
  JsonArraySerializer.prototype.deserialize_81 = function (decoder) {
    verify_0(decoder);
    return new JsonArray(ListSerializer(JsonElementSerializer_getInstance()).deserialize_81(decoder));
  };
  JsonArraySerializer.$metadata$ = {
    simpleName: 'JsonArraySerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var JsonArraySerializer_instance;
  function JsonArraySerializer_getInstance() {
    if (JsonArraySerializer_instance == null)
      new JsonArraySerializer();
    return JsonArraySerializer_instance;
  }
  function defer(deferred) {
    return new _no_name_provided__228(deferred);
  }
  function JsonPrimitiveSerializer() {
    JsonPrimitiveSerializer_instance = this;
    var tmp = this;
    var tmp_0 = STRING_getInstance();
    var tmp_1 = [];
    tmp._descriptor_29 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonPrimitive', tmp_0, tmp_1, null, 12, null);
  }
  JsonPrimitiveSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_29;
  };
  JsonPrimitiveSerializer.prototype.serialize_70 = function (encoder, value) {
    verify(encoder);
    var tmp;
    if (value instanceof JsonNull) {
      tmp = encoder.encodeSerializableValue_1(JsonNullSerializer_getInstance(), JsonNull_getInstance());
    } else {
      {
        var tmp_0 = JsonLiteralSerializer_getInstance();
        tmp = encoder.encodeSerializableValue_1(tmp_0, value instanceof JsonLiteral ? value : THROW_CCE());
      }
    }
    return tmp;
  };
  JsonPrimitiveSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_70(encoder, value instanceof JsonPrimitive ? value : THROW_CCE());
  };
  JsonPrimitiveSerializer.prototype.deserialize_81 = function (decoder) {
    var result = asJsonDecoder(decoder).decodeJsonElement_4();
    if (!(result instanceof JsonPrimitive))
      throw JsonDecodingException_0(-1, '' + 'Unexpected JSON element, expected JsonPrimitive, had ' + getKClassFromExpression_0(result), toString_1(result));
    else {
    }
    return result;
  };
  JsonPrimitiveSerializer.$metadata$ = {
    simpleName: 'JsonPrimitiveSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var JsonPrimitiveSerializer_instance;
  function JsonPrimitiveSerializer_getInstance() {
    if (JsonPrimitiveSerializer_instance == null)
      new JsonPrimitiveSerializer();
    return JsonPrimitiveSerializer_instance;
  }
  function JsonNullSerializer() {
    JsonNullSerializer_instance = this;
    var tmp = this;
    var tmp_0 = ENUM_getInstance();
    var tmp_1 = [];
    tmp._descriptor_30 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonNull', tmp_0, tmp_1, null, 12, null);
  }
  JsonNullSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_30;
  };
  JsonNullSerializer.prototype.serialize_72 = function (encoder, value) {
    verify(encoder);
    encoder.encodeNull_1();
  };
  JsonNullSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_72(encoder, value instanceof JsonNull ? value : THROW_CCE());
  };
  JsonNullSerializer.prototype.deserialize_81 = function (decoder) {
    verify_0(decoder);
    if (decoder.decodeNotNullMark_8()) {
      throw new JsonDecodingException("Expected 'null' literal");
    }decoder.decodeNull_8();
    Unit_getInstance();
    return JsonNull_getInstance();
  };
  JsonNullSerializer.$metadata$ = {
    simpleName: 'JsonNullSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var JsonNullSerializer_instance;
  function JsonNullSerializer_getInstance() {
    if (JsonNullSerializer_instance == null)
      new JsonNullSerializer();
    return JsonNullSerializer_instance;
  }
  function JsonLiteralSerializer() {
    JsonLiteralSerializer_instance = this;
    this._descriptor_31 = PrimitiveSerialDescriptor('kotlinx.serialization.json.JsonLiteral', STRING_getInstance());
  }
  JsonLiteralSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_31;
  };
  JsonLiteralSerializer.prototype.serialize_74 = function (encoder, value) {
    verify(encoder);
    if (value._isString) {
      return encoder.encodeString_1(value._content_11);
    }var tmp0_safe_receiver = _get_longOrNull_(value);
    if (tmp0_safe_receiver == null)
      null;
    else {
      return encoder.encodeLong_1(tmp0_safe_receiver);
    }
    Unit_getInstance();
    var tmp1_safe_receiver = toULongOrNull(value._content_11);
    var tmp = tmp1_safe_receiver;
    if ((tmp == null ? null : new ULong(tmp)) == null)
      null;
    else {
      {
        var tmp0_safe_receiver_2 = encoder.encodeInline_1(serializer_13(Companion_getInstance_6())._get_descriptor__77());
        if (tmp0_safe_receiver_2 == null)
          null;
        else {
          tmp0_safe_receiver_2.encodeLong_1(_ULong___get_data__impl_(tmp1_safe_receiver));
          Unit_getInstance();
        }
        Unit_getInstance();
        return Unit_getInstance();
      }
    }
    Unit_getInstance();
    var tmp2_safe_receiver = _get_doubleOrNull_(value);
    if (tmp2_safe_receiver == null)
      null;
    else {
      return encoder.encodeDouble_1(tmp2_safe_receiver);
    }
    Unit_getInstance();
    var tmp3_safe_receiver = _get_booleanOrNull_(value);
    if (tmp3_safe_receiver == null)
      null;
    else {
      return encoder.encodeBoolean_1(tmp3_safe_receiver);
    }
    Unit_getInstance();
    encoder.encodeString_1(value._content_11);
  };
  JsonLiteralSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_74(encoder, value instanceof JsonLiteral ? value : THROW_CCE());
  };
  JsonLiteralSerializer.prototype.deserialize_81 = function (decoder) {
    var result = asJsonDecoder(decoder).decodeJsonElement_4();
    if (!(result instanceof JsonLiteral))
      throw JsonDecodingException_0(-1, '' + 'Unexpected JSON element, expected JsonLiteral, had ' + getKClassFromExpression_0(result), toString_1(result));
    else {
    }
    return result;
  };
  JsonLiteralSerializer.$metadata$ = {
    simpleName: 'JsonLiteralSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var JsonLiteralSerializer_instance;
  function JsonLiteralSerializer_getInstance() {
    if (JsonLiteralSerializer_instance == null)
      new JsonLiteralSerializer();
    return JsonLiteralSerializer_instance;
  }
  function verify(encoder) {
    asJsonEncoder(encoder);
    Unit_getInstance();
  }
  function asJsonDecoder(_this_) {
    var tmp0_elvis_lhs = isInterface(_this_, JsonDecoder) ? _this_ : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('' + 'Expected Decoder to be JsonDecoder, got ' + getKClassFromExpression_0(_this_)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function verify_0(decoder) {
    asJsonDecoder(decoder);
    Unit_getInstance();
  }
  function asJsonEncoder(_this_) {
    var tmp0_elvis_lhs = isInterface(_this_, JsonEncoder) ? _this_ : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('' + 'Expected Encoder to be JsonEncoder, got ' + getKClassFromExpression_0(_this_)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function _get_original_($this) {
    var tmp0_getValue_0 = $this._original$delegate;
    var tmp1_getValue_0 = original$factory();
    return tmp0_getValue_0._get_value__27();
  }
  function _no_name_provided__228($deferred) {
    this._$deferred = $deferred;
    this._original$delegate = lazy(this._$deferred);
  }
  _no_name_provided__228.prototype._get_serialName__17 = function () {
    return _get_original_(this)._get_serialName__17();
  };
  _no_name_provided__228.prototype._get_kind__20 = function () {
    return _get_original_(this)._get_kind__20();
  };
  _no_name_provided__228.prototype._get_elementsCount__17 = function () {
    return _get_original_(this)._get_elementsCount__17();
  };
  _no_name_provided__228.prototype.getElementName_17 = function (index) {
    return _get_original_(this).getElementName_17(index);
  };
  _no_name_provided__228.prototype.getElementIndex_17 = function (name) {
    return _get_original_(this).getElementIndex_17(name);
  };
  _no_name_provided__228.prototype.getElementAnnotations_17 = function (index) {
    return _get_original_(this).getElementAnnotations_17(index);
  };
  _no_name_provided__228.prototype.getElementDescriptor_17 = function (index) {
    return _get_original_(this).getElementDescriptor_17(index);
  };
  _no_name_provided__228.$metadata$ = {
    kind: 'class',
    interfaces: [SerialDescriptor]
  };
  function original$factory() {
    return getPropertyCallableRef('original', 1, KProperty1, function (receiver) {
      return _get_original_(receiver);
    }, null);
  }
  function _no_name_provided_$factory_185() {
    var i = new _no_name_provided__227();
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_186() {
    var i = new _no_name_provided__222();
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_187() {
    var i = new _no_name_provided__223();
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_188() {
    var i = new _no_name_provided__224();
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_189() {
    var i = new _no_name_provided__225();
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_190() {
    var i = new _no_name_provided__226();
    return function () {
      return i.invoke_411();
    };
  }
  function JsonEncoder() {
  }
  JsonEncoder.$metadata$ = {
    simpleName: 'JsonEncoder',
    kind: 'interface',
    interfaces: [Encoder, CompositeEncoder]
  };
  var JsonAlternativeNamesKey;
  function buildAlternativeNamesMap(_this_) {
    var builder = null;
    var inductionVariable = 0;
    var last_1 = _this_._get_elementsCount__17();
    if (inductionVariable < last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp0_filterIsInstance_0 = _this_.getElementAnnotations_17(i);
        var tmp0_filterIsInstanceTo_0_1 = ArrayList_init_$Create$();
        var tmp0_iterator_1_2 = tmp0_filterIsInstance_0.iterator_62();
        while (tmp0_iterator_1_2.hasNext_29()) {
          var element_2_3 = tmp0_iterator_1_2.next_31();
          if (element_2_3 instanceof JsonNames) {
            tmp0_filterIsInstanceTo_0_1.add_32(element_2_3);
            Unit_getInstance();
          } else {
          }
        }
        var tmp1_safe_receiver = singleOrNull(tmp0_filterIsInstanceTo_0_1);
        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver._names_0;
        if (tmp2_safe_receiver == null)
          null;
        else {
          var tmp0_iterator_1 = arrayIterator(tmp2_safe_receiver);
          while (tmp0_iterator_1.hasNext_29()) {
            var element_2 = tmp0_iterator_1.next_31();
            if (builder == null)
              builder = createMapForCache(_this_._get_elementsCount__17());
            buildAlternativeNamesMap$putOrThrow(ensureNotNull(builder), _this_, element_2, i);
          }
          Unit_getInstance();
        }
        Unit_getInstance();
      }
       while (inductionVariable < last_1);
    var tmp3_elvis_lhs = builder;
    return tmp3_elvis_lhs == null ? emptyMap() : tmp3_elvis_lhs;
  }
  function JsonNames() {
  }
  JsonNames.$metadata$ = {
    simpleName: 'JsonNames',
    kind: 'class',
    interfaces: [Annotation]
  };
  function buildAlternativeNamesMap$putOrThrow(_this_, $this_buildAlternativeNamesMap, name, index) {
    if ((isInterface(_this_, Map_0) ? _this_ : THROW_CCE()).containsKey_12(name)) {
      throw new JsonException('' + "The suggested name '" + name + "' for property " + $this_buildAlternativeNamesMap.getElementName_17(index) + ' is already one of the names for property ' + ('' + $this_buildAlternativeNamesMap.getElementName_17(getValue(_this_, name)) + ' in ' + $this_buildAlternativeNamesMap));
    } else {
    }
    _this_.put_10(name, index);
    Unit_getInstance();
  }
  function Composer(sb, json) {
    this._sb = sb;
    this._json = json;
    this._level_1 = 0;
    this._writingFirst = true;
  }
  Composer.prototype.indent_0 = function () {
    this._writingFirst = true;
    var tmp0_this = this;
    var tmp1 = tmp0_this._level_1;
    tmp0_this._level_1 = tmp1 + 1 | 0;
    Unit_getInstance();
  };
  Composer.prototype.unIndent_0 = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this._level_1;
    tmp0_this._level_1 = tmp1 - 1 | 0;
    Unit_getInstance();
  };
  Composer.prototype.nextItem_0 = function () {
    this._writingFirst = false;
    if (this._json._configuration._prettyPrint_0) {
      this.print_18('\n');
      var tmp0_repeat_0 = this._level_1;
      var inductionVariable = 0;
      if (inductionVariable < tmp0_repeat_0)
        do {
          var index_2 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this.print_18(this._json._configuration._prettyPrintIndent_0);
        }
         while (inductionVariable < tmp0_repeat_0);
    }};
  Composer.prototype.space_0 = function () {
    if (this._json._configuration._prettyPrint_0)
      this.print_17(new Char(32));
  };
  Composer.prototype.print_17 = function (v) {
    return this._sb.append_36(v);
  };
  Composer.prototype.print_18 = function (v) {
    return this._sb.append_37(v);
  };
  Composer.prototype.print_19 = function (v) {
    return this._sb.append_37(v.toString());
  };
  Composer.prototype.print_20 = function (v) {
    return this._sb.append_37(v.toString());
  };
  Composer.prototype.print_15 = function (v) {
    return this._sb.append_35(toLong_0(v));
  };
  Composer.prototype.print_16 = function (v) {
    return this._sb.append_35(toLong_0(v));
  };
  Composer.prototype.print_13 = function (v) {
    return this._sb.append_35(toLong_0(v));
  };
  Composer.prototype.print_14 = function (v) {
    return this._sb.append_35(v);
  };
  Composer.prototype.print_21 = function (v) {
    return this._sb.append_37(v.toString());
  };
  Composer.prototype.printQuoted_0 = function (value) {
    return this._sb.appendQuoted(value);
  };
  Composer.$metadata$ = {
    simpleName: 'Composer',
    kind: 'class',
    interfaces: []
  };
  function ComposerForUnsignedNumbers(sb, json) {
    Composer.call(this, sb, json);
  }
  ComposerForUnsignedNumbers.prototype.print_13 = function (v) {
    return Composer.prototype.print_18.call(this, UInt__toString_impl(_UInt___init__impl_(v)));
  };
  ComposerForUnsignedNumbers.prototype.print_14 = function (v) {
    return Composer.prototype.print_18.call(this, ULong__toString_impl(_ULong___init__impl_(v)));
  };
  ComposerForUnsignedNumbers.prototype.print_15 = function (v) {
    return Composer.prototype.print_18.call(this, UByte__toString_impl(_UByte___init__impl_(v)));
  };
  ComposerForUnsignedNumbers.prototype.print_16 = function (v) {
    return Composer.prototype.print_18.call(this, UShort__toString_impl(_UShort___init__impl_(v)));
  };
  ComposerForUnsignedNumbers.$metadata$ = {
    simpleName: 'ComposerForUnsignedNumbers',
    kind: 'class',
    interfaces: []
  };
  function JsonEncodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonEncodingException);
  }
  JsonEncodingException.$metadata$ = {
    simpleName: 'JsonEncodingException',
    kind: 'class',
    interfaces: []
  };
  function InvalidFloatingPointEncoded(value, output_0) {
    var tmp = '' + 'Unexpected special floating-point value ' + value + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'\n";
    return new JsonEncodingException(tmp + ('' + 'Current output: ' + minify$default(output_0, 0, 1, null)));
  }
  function InvalidKeyKindException(keyDescriptor) {
    return new JsonEncodingException('' + "Value of type '" + keyDescriptor._get_serialName__17() + "' can't be used in JSON as a key in the map. " + ('' + "It should have either primitive or enum kind, but its kind is '" + keyDescriptor._get_kind__20() + "'.\n") + "Use 'allowStructuredMapKeys = true' in 'Json {}' builder to convert such maps to [key1, value1, key2, value2,...] arrays.");
  }
  function JsonDecodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonDecodingException);
  }
  JsonDecodingException.$metadata$ = {
    simpleName: 'JsonDecodingException',
    kind: 'class',
    interfaces: []
  };
  function JsonDecodingException_0(offset, message, input) {
    return JsonDecodingException_1(offset, '' + message + '\nJSON input: ' + minify(input, offset));
  }
  function throwInvalidFloatingPointDecoded(_this_, result) {
    var tmp = '' + 'Unexpected special floating-point value ' + result + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'";
    _this_.fail$default(tmp, 0, 2, null);
  }
  function InvalidFloatingPointDecoded(value, key, output_0) {
    return JsonDecodingException_1(-1, unexpectedFpErrorMessage(value, key, output_0));
  }
  function UnknownKeyException(key, input) {
    var tmp = '' + "Encountered unknown key '" + key + "'.\n" + "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.\n";
    return JsonDecodingException_1(-1, tmp + ('' + 'Current input: ' + minify$default(input, 0, 1, null)));
  }
  function JsonException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, JsonException);
  }
  JsonException.$metadata$ = {
    simpleName: 'JsonException',
    kind: 'class',
    interfaces: []
  };
  function minify(_this_, offset) {
    if (_this_.length < 200)
      return _this_;
    if (offset === -1) {
      var start = _this_.length - 60 | 0;
      if (start <= 0)
        return _this_;
      return '.....' + _this_.substring(start);
    }var start_0 = offset - 30 | 0;
    var end = offset + 30 | 0;
    var prefix = start_0 <= 0 ? '' : '.....';
    var suffix = end >= _this_.length ? '' : '.....';
    var tmp0_substring_0 = coerceAtLeast(start_0, 0);
    var tmp1_substring_0 = coerceAtMost(end, _this_.length);
    return prefix + _this_.substring(tmp0_substring_0, tmp1_substring_0) + suffix;
  }
  function minify$default(_this_, offset, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      offset = -1;
    return minify(_this_, offset);
  }
  function JsonDecodingException_1(offset, message) {
    return new JsonDecodingException(offset >= 0 ? '' + 'Unexpected JSON token at offset ' + offset + ': ' + message : message);
  }
  function unexpectedFpErrorMessage(value, key, output_0) {
    var tmp = '' + 'Unexpected special floating-point value ' + value + ' with key ' + key + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'\n";
    return tmp + ('' + 'Current output: ' + minify$default(output_0, 0, 1, null));
  }
  function isValidValueStart($this, c) {
    var tmp0_subject = c;
    return (((tmp0_subject.equals(new Char(125)) ? true : tmp0_subject.equals(new Char(93))) ? true : tmp0_subject.equals(new Char(58))) ? true : tmp0_subject.equals(new Char(44))) ? false : true;
  }
  function unexpectedToken($this, expected) {
    var tmp0_this = $this;
    tmp0_this._currentPosition = tmp0_this._currentPosition - 1 | 0;
    Unit_getInstance();
    if (expected.equals(new Char(34)) ? $this.consumeStringLenient() === 'null' : false) {
      $this.fail("Expected string literal but 'null' literal was found.\nUse 'coerceInputValues = true' in 'Json {}` builder to coerce nulls to default values.", $this._currentPosition - 4 | 0);
    }fail($this, charToTokenClass(expected));
  }
  function fail($this, expectedToken) {
    var tmp0_subject = expectedToken;
    var expected = tmp0_subject === 1 ? "quotation mark '\"'" : tmp0_subject === 4 ? "comma ','" : tmp0_subject === 5 ? "semicolon ':'" : tmp0_subject === 6 ? "start of the object '{'" : tmp0_subject === 7 ? "end of the object '}'" : tmp0_subject === 8 ? "start of the array '['" : tmp0_subject === 9 ? "end of the array ']'" : 'valid token';
    var s = ($this._currentPosition === $this._source.length ? true : $this._currentPosition <= 0) ? 'EOF' : charSequenceGet($this._source, $this._currentPosition - 1 | 0).toString();
    $this.fail('' + 'Expected ' + expected + ", but had '" + s + "' instead", $this._currentPosition - 1 | 0);
  }
  function skipWhitespaces($this) {
    var current = $this._currentPosition;
    $l$break: while (current < $this._source.length) {
      var c = charSequenceGet($this._source, current);
      if (((c.equals(new Char(32)) ? true : c.equals(new Char(10))) ? true : c.equals(new Char(13))) ? true : c.equals(new Char(9))) {
        current = current + 1 | 0;
        Unit_getInstance();
      } else {
        break $l$break;
      }
    }
    $this._currentPosition = current;
    return current;
  }
  function consumeString($this, startPosition, current) {
    var currentPosition = current;
    var lastPosition = startPosition;
    var source = $this._source;
    var char = charSequenceGet(source, currentPosition);
    while (!char.equals(new Char(34))) {
      if (char.equals(new Char(92))) {
        currentPosition = appendEscape($this, lastPosition, currentPosition);
        lastPosition = currentPosition;
      } else {
        currentPosition = currentPosition + 1 | 0;
        if (currentPosition >= source.length) {
          $this.fail('EOF', currentPosition);
        } else {
        }
      }
      char = charSequenceGet(source, currentPosition);
    }
    var tmp;
    if (lastPosition === startPosition) {
      var tmp0_substring_0 = lastPosition;
      var tmp1_substring_0 = currentPosition;
      tmp = source.substring(tmp0_substring_0, tmp1_substring_0);
    } else {
      tmp = decodedString($this, lastPosition, currentPosition);
    }
    var string = tmp;
    $this._currentPosition = currentPosition + 1 | 0;
    return string;
  }
  function appendEscape($this, lastPosition, current) {
    $this._escapedString.append_21($this._source, lastPosition, current);
    Unit_getInstance();
    return appendEsc($this, current + 1 | 0);
  }
  function decodedString($this, lastPosition, currentPosition) {
    appendRange($this, lastPosition, currentPosition);
    var result = $this._escapedString.toString();
    $this._escapedString.setLength(0);
    return result;
  }
  function takePeeked($this) {
    var tmp0_also_0 = ensureNotNull($this._peekedString);
    $this._peekedString = null;
    return tmp0_also_0;
  }
  function appendRange($this, fromIndex, toIndex) {
    $this._escapedString.append_21($this._source, fromIndex, toIndex);
    Unit_getInstance();
  }
  function appendEsc($this, startPosition) {
    var currentPosition = startPosition;
    var tmp0 = currentPosition;
    currentPosition = tmp0 + 1 | 0;
    var currentChar = charSequenceGet($this._source, tmp0);
    if (currentChar.equals(new Char(117))) {
      return appendHex($this, $this._source, currentPosition);
    }var c = escapeToChar(currentChar.toInt_5());
    if (c.equals(new Char(0))) {
      var tmp = '' + "Invalid escaped char '" + currentChar + "'";
      $this.fail$default(tmp, 0, 2, null);
    }$this._escapedString.append_23(c);
    Unit_getInstance();
    return currentPosition;
  }
  function appendHex($this, source, startPos) {
    if ((startPos + 4 | 0) >= source.length) {
      $this.fail$default('Unexpected EOF during unicode escape', 0, 2, null);
    }$this._escapedString.append_23(numberToChar((((fromHexChar($this, source, startPos) << 12) + (fromHexChar($this, source, startPos + 1 | 0) << 8) | 0) + (fromHexChar($this, source, startPos + 2 | 0) << 4) | 0) + fromHexChar($this, source, startPos + 3 | 0) | 0));
    Unit_getInstance();
    return startPos + 4 | 0;
  }
  function fromHexChar($this, source, currentPosition) {
    var character = charSequenceGet(source, currentPosition);
    var tmp;
    if (new Char(48) <= character ? character <= new Char(57) : false) {
      tmp = character.toInt_5() - 48 | 0;
    } else if (new Char(97) <= character ? character <= new Char(102) : false) {
      tmp = (character.toInt_5() - 97 | 0) + 10 | 0;
    } else if (new Char(65) <= character ? character <= new Char(70) : false) {
      tmp = (character.toInt_5() - 65 | 0) + 10 | 0;
    } else {
      var tmp_0 = '' + "Invalid toHexChar char '" + character + "' in unicode escape";
      $this.fail$default(tmp_0, 0, 2, null);
    }
    return tmp;
  }
  function consumeBoolean($this, start) {
    var current = start;
    if (current === $this._source.length) {
      $this.fail$default('EOF', 0, 2, null);
    }var tmp0 = current;
    current = tmp0 + 1 | 0;
    var tmp1_subject = charSequenceGet($this._source, tmp0).toInt_5() | 32;
    var tmp;
    switch (tmp1_subject) {
      case 116:
        consumeBooleanLiteral($this, 'rue', current);
        tmp = true;
        break;
      case 102:
        consumeBooleanLiteral($this, 'alse', current);
        tmp = false;
        break;
      default:var tmp_0 = '' + "Expected valid boolean literal prefix, but had '" + $this.consumeStringLenient() + "'";
        $this.fail$default(tmp_0, 0, 2, null);
        break;
    }
    return tmp;
  }
  function consumeBooleanLiteral($this, literalSuffix, current) {
    if (($this._source.length - current | 0) < literalSuffix.length) {
      $this.fail$default('Unexpected end of boolean literal', 0, 2, null);
    }var inductionVariable = 0;
    var last_1 = charSequenceLength(literalSuffix) - 1 | 0;
    if (inductionVariable <= last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var expected = charSequenceGet(literalSuffix, i);
        var actual = charSequenceGet($this._source, current + i | 0);
        if (!(expected.toInt_5() === (actual.toInt_5() | 32))) {
          var tmp = '' + "Expected valid boolean literal prefix, but had '" + $this.consumeStringLenient() + "'";
          $this.fail$default(tmp, 0, 2, null);
        }}
       while (inductionVariable <= last_1);
    $this._currentPosition = current + literalSuffix.length | 0;
  }
  function JsonLexer(source) {
    this._source = source;
    this._currentPosition = 0;
    this._peekedString = null;
    this._escapedString = StringBuilder_init_$Create$_0();
  }
  JsonLexer.prototype.expectEof = function () {
    var nextToken = this.consumeNextToken_1();
    if (!(nextToken === 10)) {
      var tmp = '' + 'Expected EOF, but had ' + charSequenceGet(this._source, this._currentPosition - 1 | 0) + ' instead';
      this.fail$default(tmp, 0, 2, null);
    }};
  JsonLexer.prototype.tryConsumeComma = function () {
    var current = skipWhitespaces(this);
    if (current === this._source.length)
      return false;
    if (charSequenceGet(this._source, current).equals(new Char(44))) {
      var tmp0_this = this;
      tmp0_this._currentPosition = tmp0_this._currentPosition + 1 | 0;
      Unit_getInstance();
      return true;
    }return false;
  };
  JsonLexer.prototype.canConsumeValue = function () {
    var current = this._currentPosition;
    while (current < this._source.length) {
      var c = charSequenceGet(this._source, current);
      if (((c.equals(new Char(32)) ? true : c.equals(new Char(10))) ? true : c.equals(new Char(13))) ? true : c.equals(new Char(9))) {
        current = current + 1 | 0;
        Unit_getInstance();
        continue;
      }this._currentPosition = current;
      return isValidValueStart(this, c);
    }
    this._currentPosition = current;
    return false;
  };
  JsonLexer.prototype.consumeNextToken = function (expected) {
    var token = this.consumeNextToken_1();
    if (!(token === expected)) {
      fail(this, expected);
    }return token;
  };
  JsonLexer.prototype.consumeNextToken_0 = function (expected) {
    var source = this._source;
    while (this._currentPosition < source.length) {
      var tmp0_this = this;
      var tmp1 = tmp0_this._currentPosition;
      tmp0_this._currentPosition = tmp1 + 1 | 0;
      var c = charSequenceGet(source, tmp1);
      if (((c.equals(new Char(32)) ? true : c.equals(new Char(10))) ? true : c.equals(new Char(13))) ? true : c.equals(new Char(9)))
        continue;
      if (c.equals(expected))
        return Unit_getInstance();
      unexpectedToken(this, expected);
    }
    unexpectedToken(this, expected);
  };
  JsonLexer.prototype.peekNextToken = function () {
    var source = this._source;
    while (this._currentPosition < source.length) {
      var ch = charSequenceGet(source, this._currentPosition);
      if (((ch.equals(new Char(32)) ? true : ch.equals(new Char(10))) ? true : ch.equals(new Char(13))) ? true : ch.equals(new Char(9))) {
        var tmp0_this = this;
        tmp0_this._currentPosition = tmp0_this._currentPosition + 1 | 0;
        Unit_getInstance();
        continue;
      }return charToTokenClass(ch);
    }
    return 10;
  };
  JsonLexer.prototype.consumeNextToken_1 = function () {
    var source = this._source;
    while (this._currentPosition < source.length) {
      var tmp0_this = this;
      var tmp1 = tmp0_this._currentPosition;
      tmp0_this._currentPosition = tmp1 + 1 | 0;
      var ch = charSequenceGet(source, tmp1);
      var tc = charToTokenClass(ch);
      var tmp;
      if (tc === 3) {
        continue;
      } else {
        tmp = tc;
      }
      return tmp;
    }
    return 10;
  };
  JsonLexer.prototype.tryConsumeNotNull = function () {
    var current = skipWhitespaces(this);
    if ((this._source.length - current | 0) < 4)
      return true;
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!charSequenceGet('null', i).equals(charSequenceGet(this._source, current + i | 0)))
          return true;
      }
       while (inductionVariable <= 3);
    this._currentPosition = current + 4 | 0;
    return false;
  };
  JsonLexer.prototype.peekString = function (isLenient) {
    var token = this.peekNextToken();
    var tmp;
    if (isLenient) {
      if (!(token === 1) ? !(token === 0) : false)
        return null;
      tmp = this.consumeStringLenient();
    } else {
      if (!(token === 1))
        return null;
      tmp = this.consumeString();
    }
    var string = tmp;
    this._peekedString = string;
    return string;
  };
  JsonLexer.prototype.consumeKeyString = function () {
    this.consumeNextToken_0(new Char(34));
    var current = this._currentPosition;
    var tmp = new Char(34);
    var closingQuote = indexOf$default(this._source, tmp, current, false, 4, null);
    if (closingQuote === -1)
      fail(this, 1);
    var inductionVariable = current;
    if (inductionVariable < closingQuote)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (charSequenceGet(this._source, i).equals(new Char(92))) {
          return consumeString(this, this._currentPosition, i);
        }}
       while (inductionVariable < closingQuote);
    this._currentPosition = closingQuote + 1 | 0;
    var tmp0_substring_0 = this._source;
    return tmp0_substring_0.substring(current, closingQuote);
  };
  JsonLexer.prototype.consumeString = function () {
    if (!(this._peekedString == null)) {
      return takePeeked(this);
    }return this.consumeKeyString();
  };
  JsonLexer.prototype.consumeStringLenient = function () {
    if (!(this._peekedString == null)) {
      return takePeeked(this);
    }var current = skipWhitespaces(this);
    var token = charToTokenClass(charSequenceGet(this._source, current));
    if (token === 1) {
      return this.consumeString();
    }if (!(token === 0)) {
      var tmp = '' + 'Expected beginning of the string, but got ' + charSequenceGet(this._source, current);
      this.fail$default(tmp, 0, 2, null);
    }while (current < this._source.length ? charToTokenClass(charSequenceGet(this._source, current)) === 0 : false) {
      current = current + 1 | 0;
      Unit_getInstance();
    }
    var tmp0_substring_0 = this._source;
    var tmp1_substring_0 = this._currentPosition;
    var tmp2_substring_0 = current;
    var result = tmp0_substring_0.substring(tmp1_substring_0, tmp2_substring_0);
    this._currentPosition = current;
    return result;
  };
  JsonLexer.prototype.skipElement = function (allowLenientStrings) {
    var tokenStack = ArrayList_init_$Create$();
    var lastToken = this.peekNextToken();
    if (!(lastToken === 8) ? !(lastToken === 6) : false) {
      this.consumeStringLenient();
      Unit_getInstance();
      return Unit_getInstance();
    }while (true) {
      lastToken = this.peekNextToken();
      if (lastToken === 1) {
        if (allowLenientStrings) {
          this.consumeStringLenient();
          Unit_getInstance();
        } else {
          this.consumeKeyString();
          Unit_getInstance();
        }
        continue;
      }var tmp0_subject = lastToken;
      if (tmp0_subject === 8 ? true : tmp0_subject === 6) {
        tokenStack.add_32(lastToken);
        Unit_getInstance();
      } else if (tmp0_subject === 9) {
        if (!(last(tokenStack) === 8))
          throw JsonDecodingException_0(this._currentPosition, 'found ] instead of }', this._source);
        tokenStack.removeAt_2(tokenStack._get_size__48() - 1 | 0);
        Unit_getInstance();
      } else if (tmp0_subject === 7) {
        if (!(last(tokenStack) === 6))
          throw JsonDecodingException_0(this._currentPosition, 'found } instead of ]', this._source);
        tokenStack.removeAt_2(tokenStack._get_size__48() - 1 | 0);
        Unit_getInstance();
      }this.consumeNextToken_1();
      Unit_getInstance();
      if (tokenStack._get_size__48() === 0)
        return Unit_getInstance();
    }
  };
  JsonLexer.prototype.toString = function () {
    return '' + "JsonReader(source='" + this._source + "', currentPosition=" + this._currentPosition + ')';
  };
  JsonLexer.prototype.failOnUnknownKey = function (key) {
    var tmp0_substring_0 = this._source;
    var tmp1_substring_0 = 0;
    var tmp2_substring_0 = this._currentPosition;
    var processed = tmp0_substring_0.substring(tmp1_substring_0, tmp2_substring_0);
    var lastIndexOf_1 = lastIndexOf$default(processed, key, 0, false, 6, null);
    this.fail('' + "Encountered an unknown key '" + key + "'.\nUse 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.", lastIndexOf_1);
  };
  JsonLexer.prototype.fail = function (message, position) {
    throw JsonDecodingException_0(position, message, this._source);
  };
  JsonLexer.prototype.fail$default = function (message, position, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      position = this._currentPosition;
    return this.fail(message, position);
  };
  JsonLexer.prototype.consumeNumericLiteral = function () {
    var current = skipWhitespaces(this);
    if (current === this._source.length) {
      this.fail$default('EOF', 0, 2, null);
    }var tmp;
    if (charSequenceGet(this._source, current).equals(new Char(34))) {
      current = current + 1 | 0;
      if (current === this._source.length) {
        this.fail$default('EOF', 0, 2, null);
      } else {
      }
      tmp = true;
    } else {
      tmp = false;
    }
    var hasQuotation = tmp;
    var accumulator = new Long(0, 0);
    var isNegative_0 = false;
    var start = current;
    var hasChars = true;
    $l$break: while (hasChars) {
      var ch = charSequenceGet(this._source, current);
      if (ch.equals(new Char(45))) {
        if (!(current === start)) {
          this.fail$default("Unexpected symbol '-' in numeric literal", 0, 2, null);
        }isNegative_0 = true;
        current = current + 1 | 0;
        Unit_getInstance();
        continue $l$break;
      }var token = charToTokenClass(ch);
      if (!(token === 0))
        break $l$break;
      current = current + 1 | 0;
      Unit_getInstance();
      hasChars = !(current === this._source.length);
      var digit = ch.minus_0(new Char(48));
      if (!(0 <= digit ? digit <= 9 : false)) {
        var tmp_0 = '' + "Unexpected symbol '" + ch + "' in numeric literal";
        this.fail$default(tmp_0, 0, 2, null);
      }var tmp0_times_0 = accumulator;
      var tmp1_times_0 = 10;
      var tmp2_minus_0 = tmp0_times_0.times_30(toLong_0(tmp1_times_0));
      accumulator = tmp2_minus_0.minus_30(toLong_0(digit));
      if (accumulator.compareTo_59(new Long(0, 0)) > 0) {
        this.fail$default('Numeric value overflow', 0, 2, null);
      }}
    if (start === current ? true : isNegative_0 ? start === (current - 1 | 0) : false) {
      this.fail$default('Expected numeric literal', 0, 2, null);
    }if (hasQuotation) {
      if (!hasChars) {
        this.fail$default('EOF', 0, 2, null);
      }if (!charSequenceGet(this._source, current).equals(new Char(34))) {
        this.fail$default('Expected closing quotation mark', 0, 2, null);
      }current = current + 1 | 0;
      Unit_getInstance();
    }this._currentPosition = current;
    var tmp_1;
    if (isNegative_0) {
      tmp_1 = accumulator;
    } else {
      var tmp_2 = accumulator;
      Companion_getInstance_15();
      if (!tmp_2.equals(new Long(0, -2147483648))) {
        tmp_1 = accumulator.unaryMinus_4();
      } else {
        {
          this.fail$default('Numeric value overflow', 0, 2, null);
        }
      }
    }
    return tmp_1;
  };
  JsonLexer.prototype.consumeBoolean = function () {
    return consumeBoolean(this, skipWhitespaces(this));
  };
  JsonLexer.prototype.consumeBooleanLenient = function () {
    var current = skipWhitespaces(this);
    if (current === this._source.length) {
      this.fail$default('EOF', 0, 2, null);
    }var tmp;
    if (charSequenceGet(this._source, current).equals(new Char(34))) {
      current = current + 1 | 0;
      Unit_getInstance();
      tmp = true;
    } else {
      tmp = false;
    }
    var hasQuotation = tmp;
    var result = consumeBoolean(this, current);
    if (hasQuotation) {
      if (this._currentPosition === this._source.length) {
        this.fail$default('EOF', 0, 2, null);
      }if (!charSequenceGet(this._source, this._currentPosition).equals(new Char(34))) {
        this.fail$default('Expected closing quotation mark', 0, 2, null);
      }var tmp0_this = this;
      tmp0_this._currentPosition = tmp0_this._currentPosition + 1 | 0;
      Unit_getInstance();
    }return result;
  };
  JsonLexer.$metadata$ = {
    simpleName: 'JsonLexer',
    kind: 'class',
    interfaces: []
  };
  function charToTokenClass(c) {
    return c.toInt_5() < 126 ? CharMappings_getInstance()._CHAR_TO_TOKEN[c.toInt_5()] : 0;
  }
  function escapeToChar(c) {
    return c < 117 ? CharMappings_getInstance()._ESCAPE_2_CHAR[c] : new Char(0);
  }
  function initEscape($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 31)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2ESC($this, i, new Char(117));
      }
       while (inductionVariable <= 31);
    initC2ESC($this, 8, new Char(98));
    initC2ESC($this, 9, new Char(116));
    initC2ESC($this, 10, new Char(110));
    initC2ESC($this, 12, new Char(102));
    initC2ESC($this, 13, new Char(114));
    initC2ESC_0($this, new Char(47), new Char(47));
    initC2ESC_0($this, new Char(34), new Char(34));
    initC2ESC_0($this, new Char(92), new Char(92));
  }
  function initCharToToken($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2TC($this, i, 127);
      }
       while (inductionVariable <= 32);
    initC2TC($this, 9, 3);
    initC2TC($this, 10, 3);
    initC2TC($this, 13, 3);
    initC2TC($this, 32, 3);
    initC2TC_0($this, new Char(44), 4);
    initC2TC_0($this, new Char(58), 5);
    initC2TC_0($this, new Char(123), 6);
    initC2TC_0($this, new Char(125), 7);
    initC2TC_0($this, new Char(91), 8);
    initC2TC_0($this, new Char(93), 9);
    initC2TC_0($this, new Char(34), 1);
    initC2TC_0($this, new Char(92), 2);
  }
  function initC2ESC($this, c, esc) {
    if (!esc.equals(new Char(117)))
      $this._ESCAPE_2_CHAR[esc.toInt_5()] = numberToChar(c);
  }
  function initC2ESC_0($this, c, esc) {
    return initC2ESC($this, c.toInt_5(), esc);
  }
  function initC2TC($this, c, cl) {
    $this._CHAR_TO_TOKEN[c] = cl;
  }
  function initC2TC_0($this, c, cl) {
    return initC2TC($this, c.toInt_5(), cl);
  }
  function CharMappings() {
    CharMappings_instance = this;
    this._ESCAPE_2_CHAR = charArray(117);
    this._CHAR_TO_TOKEN = new Int8Array(126);
    initEscape(this);
    initCharToToken(this);
  }
  CharMappings.$metadata$ = {
    simpleName: 'CharMappings',
    kind: 'object',
    interfaces: []
  };
  var CharMappings_instance;
  function CharMappings_getInstance() {
    if (CharMappings_instance == null)
      new CharMappings();
    return CharMappings_instance;
  }
  function readObject($this) {
    var lastToken = $this._lexer.consumeNextToken(6);
    if ($this._lexer.peekNextToken() === 4) {
      $this._lexer.fail$default('Unexpected leading comma', 0, 2, null);
    }var result = LinkedHashMap_init_$Create$();
    while ($this._lexer.canConsumeValue()) {
      var key = $this._isLenient_1 ? $this._lexer.consumeStringLenient() : $this._lexer.consumeString();
      $this._lexer.consumeNextToken(5);
      Unit_getInstance();
      var element = $this.read_2();
      result.put_10(key, element);
      Unit_getInstance();
      lastToken = $this._lexer.consumeNextToken_1();
      if (!(lastToken === 4) ? !(lastToken === 7) : false) {
        $this._lexer.fail$default('Expected end of the object or comma', 0, 2, null);
      }}
    if (lastToken === 6) {
      $this._lexer.consumeNextToken(7);
      Unit_getInstance();
    } else if (lastToken === 4) {
      $this._lexer.fail$default('Unexpected trailing comma', 0, 2, null);
    }return new JsonObject(result);
  }
  function readArray($this) {
    var lastToken = $this._lexer.consumeNextToken_1();
    if ($this._lexer.peekNextToken() === 4) {
      $this._lexer.fail$default('Unexpected leading comma', 0, 2, null);
    }var result = ArrayList_init_$Create$();
    while ($this._lexer.canConsumeValue()) {
      var element = $this.read_2();
      result.add_32(element);
      Unit_getInstance();
      lastToken = $this._lexer.consumeNextToken_1();
      if (!(lastToken === 4)) {
        var tmp0_require_0 = $this._lexer;
        var tmp1_require_0 = lastToken === 9;
        var tmp2_require_0 = tmp0_require_0._currentPosition;
        if (!tmp1_require_0) {
          tmp0_require_0.fail('Expected end of the array or comma', tmp2_require_0);
        }}}
    if (lastToken === 8) {
      $this._lexer.consumeNextToken(9);
      Unit_getInstance();
    } else if (lastToken === 4) {
      $this._lexer.fail$default('Unexpected trailing comma', 0, 2, null);
    }return new JsonArray(result);
  }
  function readValue($this, isString_0) {
    var tmp;
    if ($this._isLenient_1 ? true : !isString_0) {
      tmp = $this._lexer.consumeStringLenient();
    } else {
      tmp = $this._lexer.consumeString();
    }
    var string = tmp;
    if (string === 'null')
      return JsonNull_getInstance();
    return new JsonLiteral(string, isString_0);
  }
  function JsonTreeReader(configuration, lexer) {
    this._lexer = lexer;
    this._isLenient_1 = configuration._isLenient_0;
  }
  JsonTreeReader.prototype.read_2 = function () {
    var tmp0_subject = this._lexer.peekNextToken();
    var tmp;
    if (tmp0_subject === 1) {
      tmp = readValue(this, true);
    } else if (tmp0_subject === 0) {
      tmp = readValue(this, false);
    } else if (tmp0_subject === 6) {
      tmp = readObject(this);
    } else if (tmp0_subject === 8) {
      tmp = readArray(this);
    } else {
      this._lexer.fail$default("Can't begin reading element, unexpected token", 0, 2, null);
    }
    return tmp;
  };
  JsonTreeReader.$metadata$ = {
    simpleName: 'JsonTreeReader',
    kind: 'class',
    interfaces: []
  };
  function decodeSerializableValuePolymorphic(_this_, deserializer) {
    var tmp;
    if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
      tmp = true;
    } else {
      {
        tmp = _this_._get_json__6()._configuration._useArrayPolymorphism_0;
      }
    }
    if (tmp) {
      return deserializer.deserialize_81(_this_);
    } else {
    }
    var tmp0_cast_0 = _this_.decodeJsonElement_4();
    var tmp1_cast_0 = deserializer._get_descriptor__77();
    if (!(tmp0_cast_0 instanceof JsonObject)) {
      throw JsonDecodingException_1(-1, '' + 'Expected ' + getKClass_0(JsonObject) + ' as the serialized body of ' + tmp1_cast_0._get_serialName__17() + ', but had ' + getKClassFromExpression_0(tmp0_cast_0));
    } else {
    }
    var jsonTree = tmp0_cast_0;
    var discriminator = _this_._get_json__6()._configuration._classDiscriminator_0;
    var tmp0_safe_receiver = jsonTree.get_64(discriminator);
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : _get_jsonPrimitive_(tmp0_safe_receiver);
    var type = tmp1_safe_receiver == null ? null : tmp1_safe_receiver._get_content__8();
    var tmp2_elvis_lhs = deserializer.findPolymorphicSerializerOrNull_8(_this_, type);
    var tmp_0;
    if (tmp2_elvis_lhs == null) {
      throwSerializerNotFound(type, jsonTree);
    } else {
      tmp_0 = tmp2_elvis_lhs;
    }
    var actualSerializer = tmp_0;
    var tmp_1 = _this_._get_json__6();
    return readPolymorphicJson(tmp_1, discriminator, jsonTree, isInterface(actualSerializer, DeserializationStrategy) ? actualSerializer : THROW_CCE());
  }
  function findActualSerializer(_this_, serializer_16, value) {
    var casted = serializer_16 instanceof AbstractPolymorphicSerializer ? serializer_16 : THROW_CCE();
    var actualSerializer = findPolymorphicSerializer(casted, _this_, isObject(value) ? value : THROW_CCE());
    validateIfSealed(casted, actualSerializer, _this_._get_json__6()._configuration._classDiscriminator_0);
    var kind = actualSerializer._get_descriptor__77()._get_kind__20();
    checkKind(kind);
    return actualSerializer;
  }
  function throwSerializerNotFound(type, jsonTree) {
    var suffix = type == null ? "missing class discriminator ('null')" : '' + "class discriminator '" + type + "'";
    throw JsonDecodingException_0(-1, '' + 'Polymorphic serializer was not found for ' + suffix, jsonTree.toString());
  }
  function validateIfSealed(serializer_16, actualSerializer, classDiscriminator) {
    if (!(serializer_16 instanceof SealedClassSerializer))
      return Unit_getInstance();
    else {
    }
    if (jsonCachedSerialNames(actualSerializer._get_descriptor__77()).contains_48(classDiscriminator)) {
      var baseName = serializer_16._get_descriptor__77()._get_serialName__17();
      var actualName = actualSerializer._get_descriptor__77()._get_serialName__17();
      var tmp0_error_0 = '' + "Sealed class '" + actualName + "' cannot be serialized as base class '" + baseName + "' because" + ('' + " it has property name that conflicts with JSON class discriminator '" + classDiscriminator + "'. ") + 'You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation or fall back to array polymorphism';
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    }}
  function checkKind(kind) {
    if (kind instanceof ENUM) {
      var tmp0_error_0 = "Enums cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead";
      throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
    } else {
    }
    if (kind instanceof PrimitiveKind) {
      var tmp1_error_0 = "Primitives cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead";
      throw IllegalStateException_init_$Create$(toString_1(tmp1_error_0));
    } else {
    }
    if (kind instanceof PolymorphicKind) {
      var tmp2_error_0 = 'Actual serializer for polymorphic cannot be polymorphic itself';
      throw IllegalStateException_init_$Create$(toString_1(tmp2_error_0));
    } else {
    }
  }
  function checkKind_0($this, descriptor, actualClass) {
    var kind = descriptor._get_kind__20();
    var tmp;
    if (kind instanceof PolymorphicKind) {
      tmp = true;
    } else {
      {
        tmp = equals_1(kind, CONTEXTUAL_getInstance());
      }
    }
    if (tmp) {
      throw IllegalArgumentException_init_$Create$_0('' + 'Serializer for ' + actualClass._get_simpleName__4() + " can't be registered as a subclass for polymorphic serialization " + ('' + 'because its kind ' + kind + ' is not concrete. To work with multiple hierarchies, register it as a base class.'));
    } else {
    }
    if ($this._useArrayPolymorphism_1)
      return Unit_getInstance();
    var tmp_0;
    var tmp_1;
    if (equals_1(kind, LIST_getInstance()) ? true : equals_1(kind, MAP_getInstance())) {
      tmp_1 = true;
    } else {
      tmp_1 = kind instanceof PrimitiveKind;
    }
    if (tmp_1) {
      tmp_0 = true;
    } else {
      {
        tmp_0 = kind instanceof ENUM;
      }
    }
    if (tmp_0) {
      throw IllegalArgumentException_init_$Create$_0('' + 'Serializer for ' + actualClass._get_simpleName__4() + ' of kind ' + kind + ' cannot be serialized polymorphically with class discriminator.');
    } else {
    }
  }
  function checkDiscriminatorCollisions($this, descriptor, actualClass) {
    var inductionVariable = 0;
    var last_1 = descriptor._get_elementsCount__17();
    if (inductionVariable < last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var name = descriptor.getElementName_17(i);
        if (name === $this._discriminator) {
          throw IllegalArgumentException_init_$Create$_0('' + 'Polymorphic serializer for ' + actualClass + " has property '" + name + "' that conflicts " + 'with JSON class discriminator. You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation ' + 'or fall back to array polymorphism');
        }}
       while (inductionVariable < last_1);
  }
  function PolymorphismValidator(useArrayPolymorphism, discriminator) {
    this._useArrayPolymorphism_1 = useArrayPolymorphism;
    this._discriminator = discriminator;
  }
  PolymorphismValidator.prototype.contextual_1 = function (kClass, provider) {
  };
  PolymorphismValidator.prototype.polymorphic_0 = function (baseClass, actualClass, actualSerializer) {
    var descriptor = actualSerializer._get_descriptor__77();
    checkKind_0(this, descriptor, actualClass);
    if (!this._useArrayPolymorphism_1) {
      checkDiscriminatorCollisions(this, descriptor, actualClass);
    }};
  PolymorphismValidator.prototype.polymorphicDefault_0 = function (baseClass, defaultSerializerProvider) {
  };
  PolymorphismValidator.$metadata$ = {
    simpleName: 'PolymorphismValidator',
    kind: 'class',
    interfaces: [SerializersModuleCollector]
  };
  function Key_6() {
  }
  Key_6.$metadata$ = {
    simpleName: 'Key',
    kind: 'class',
    interfaces: []
  };
  function DescriptorSchemaCache() {
    this._map_2 = createMapForCache(1);
  }
  DescriptorSchemaCache.prototype.set_9 = function (descriptor, key, value) {
    var tmp0_getOrPut_0 = this._map_2;
    var value_1 = tmp0_getOrPut_0.get_65(descriptor);
    var tmp;
    if (value_1 == null) {
      var answer_2 = createMapForCache(1);
      tmp0_getOrPut_0.put_10(descriptor, answer_2);
      Unit_getInstance();
      tmp = answer_2;
    } else {
      tmp = value_1;
    }
    var tmp1_set_0 = tmp;
    var tmp2_set_0 = key instanceof Key_6 ? key : THROW_CCE();
    var tmp3_set_0 = isObject(value) ? value : THROW_CCE();
    tmp1_set_0.put_10(tmp2_set_0, tmp3_set_0);
    Unit_getInstance();
  };
  DescriptorSchemaCache.prototype.getOrPut = function (descriptor, key, defaultValue) {
    var tmp0_safe_receiver = this.get_67(descriptor, key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      return tmp0_safe_receiver;
    }
    Unit_getInstance();
    var value = defaultValue();
    this.set_9(descriptor, key, value);
    return value;
  };
  DescriptorSchemaCache.prototype.get_67 = function (descriptor, key) {
    var tmp0_safe_receiver = this._map_2.get_65(descriptor);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = tmp0_safe_receiver.get_65(key instanceof Key_6 ? key : THROW_CCE());
    }
    var tmp_0 = tmp;
    return isObject(tmp_0) ? tmp_0 : null;
  };
  DescriptorSchemaCache.$metadata$ = {
    simpleName: 'DescriptorSchemaCache',
    kind: 'class',
    interfaces: []
  };
  function checkLeadingComma($this) {
    if ($this._lexer_0.peekNextToken() === 4) {
      $this._lexer_0.fail$default('Unexpected leading comma', 0, 2, null);
    }}
  function decodeMapIndex($this) {
    var hasComma = false;
    var decodingKey = !($this._currentIndex_0 % 2 === 0);
    if (decodingKey) {
      if (!($this._currentIndex_0 === -1)) {
        hasComma = $this._lexer_0.tryConsumeComma();
      }} else {
      $this._lexer_0.consumeNextToken_0(new Char(58));
    }
    var tmp;
    if ($this._lexer_0.canConsumeValue()) {
      if (decodingKey) {
        if ($this._currentIndex_0 === -1) {
          var tmp0_require_0 = $this._lexer_0;
          var tmp1_require_0 = !hasComma;
          var tmp2_require_0 = tmp0_require_0._currentPosition;
          if (!tmp1_require_0) {
            tmp0_require_0.fail('Unexpected trailing comma', tmp2_require_0);
          }} else {
          var tmp3_require_0 = $this._lexer_0;
          var tmp4_require_0 = hasComma;
          var tmp5_require_0 = tmp3_require_0._currentPosition;
          if (!tmp4_require_0) {
            tmp3_require_0.fail('Expected comma after the key-value pair', tmp5_require_0);
          }}
      }var tmp0_this = $this;
      tmp0_this._currentIndex_0 = tmp0_this._currentIndex_0 + 1 | 0;
      tmp = tmp0_this._currentIndex_0;
    } else {
      if (hasComma) {
        $this._lexer_0.fail$default("Expected '}', but had ',' instead", 0, 2, null);
      }Companion_getInstance_51();
      tmp = -1;
    }
    return tmp;
  }
  function getJsonElementIndex(_this_, $this, key) {
    var index = _this_.getElementIndex_17(key);
    Companion_getInstance_51();
    if (!(index === -3))
      return index;
    else {
    }
    if (!$this._json_0._configuration._useAlternativeNames_0)
      return index;
    var alternativeNamesMap = $this._json_0._schemaCache.getOrPut(_this_, JsonAlternativeNamesKey, _no_name_provided_$factory_191(_this_));
    var tmp0_elvis_lhs = alternativeNamesMap.get_65(key);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_51();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function coerceInputValue($this, descriptor, index) {
    var elementDescriptor = descriptor.getElementDescriptor_17(index);
    if (!elementDescriptor._get_isNullable__17() ? !$this._lexer_0.tryConsumeNotNull() : false)
      return true;
    if (equals_1(elementDescriptor._get_kind__20(), ENUM_getInstance())) {
      var tmp0_elvis_lhs = $this._lexer_0.peekString($this._configuration_0._isLenient_0);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var enumValue = tmp;
      var enumIndex = elementDescriptor.getElementIndex_17(enumValue);
      Companion_getInstance_51();
      if (enumIndex === -3) {
        $this._lexer_0.consumeString();
        Unit_getInstance();
        return true;
      } else {
      }
    }return false;
  }
  function decodeObjectIndex($this, descriptor) {
    var hasComma = $this._lexer_0.tryConsumeComma();
    while ($this._lexer_0.canConsumeValue()) {
      hasComma = false;
      var key = decodeStringKey($this);
      $this._lexer_0.consumeNextToken_0(new Char(58));
      var index = getJsonElementIndex(descriptor, $this, key);
      var tmp;
      Companion_getInstance_51();
      if (!(index === -3)) {
        var tmp_0;
        if ($this._configuration_0._coerceInputValues_0 ? coerceInputValue($this, descriptor, index) : false) {
          hasComma = $this._lexer_0.tryConsumeComma();
          tmp_0 = false;
        } else {
          return index;
        }
        tmp = tmp_0;
      } else {
        {
          tmp = true;
        }
      }
      var isUnknown = tmp;
      if (isUnknown) {
        hasComma = handleUnknown($this, key);
      }}
    if (hasComma) {
      $this._lexer_0.fail$default('Unexpected trailing comma', 0, 2, null);
    }Companion_getInstance_51();
    return -1;
  }
  function handleUnknown($this, key) {
    if ($this._configuration_0._ignoreUnknownKeys_0) {
      $this._lexer_0.skipElement($this._configuration_0._isLenient_0);
    } else {
      $this._lexer_0.failOnUnknownKey(key);
    }
    return $this._lexer_0.tryConsumeComma();
  }
  function decodeListIndex($this) {
    var hasComma = $this._lexer_0.tryConsumeComma();
    var tmp;
    if ($this._lexer_0.canConsumeValue()) {
      if (!($this._currentIndex_0 === -1) ? !hasComma : false) {
        $this._lexer_0.fail$default('Expected end of the array or comma', 0, 2, null);
      }var tmp0_this = $this;
      tmp0_this._currentIndex_0 = tmp0_this._currentIndex_0 + 1 | 0;
      tmp = tmp0_this._currentIndex_0;
    } else {
      if (hasComma) {
        $this._lexer_0.fail$default('Unexpected trailing comma', 0, 2, null);
      }Companion_getInstance_51();
      tmp = -1;
    }
    return tmp;
  }
  function decodeStringKey($this) {
    var tmp;
    if ($this._configuration_0._isLenient_0) {
      tmp = $this._lexer_0.consumeStringLenient();
    } else {
      tmp = $this._lexer_0.consumeKeyString();
    }
    return tmp;
  }
  function _no_name_provided__229($boundThis) {
    this._$boundThis = $boundThis;
  }
  _no_name_provided__229.prototype.invoke_411 = function () {
    return buildAlternativeNamesMap(this._$boundThis);
  };
  _no_name_provided__229.prototype._get_name__11 = function () {
    return 'buildAlternativeNamesMap';
  };
  _no_name_provided__229.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function StreamingJsonDecoder(json, mode, lexer) {
    AbstractDecoder.call(this);
    this._json_0 = json;
    this._mode = mode;
    this._lexer_0 = lexer;
    this._serializersModule_1 = this._json_0._get_serializersModule__15();
    this._currentIndex_0 = -1;
    this._configuration_0 = this._json_0._configuration;
  }
  StreamingJsonDecoder.prototype._get_json__6 = function () {
    return this._json_0;
  };
  StreamingJsonDecoder.prototype._get_serializersModule__15 = function () {
    return this._serializersModule_1;
  };
  StreamingJsonDecoder.prototype.decodeJsonElement_4 = function () {
    return (new JsonTreeReader(this._json_0._configuration, this._lexer_0)).read_2();
  };
  StreamingJsonDecoder.prototype.decodeSerializableValue_16 = function (deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  };
  StreamingJsonDecoder.prototype.beginStructure_11 = function (descriptor) {
    var newMode = switchMode(this._json_0, descriptor);
    this._lexer_0.consumeNextToken_0(newMode._begin);
    checkLeadingComma(this);
    var tmp0_subject = newMode;
    var tmp;
    if ((tmp0_subject.equals(WriteMode_LIST_getInstance()) ? true : tmp0_subject.equals(WriteMode_MAP_getInstance())) ? true : tmp0_subject.equals(WriteMode_POLY_OBJ_getInstance())) {
      tmp = new StreamingJsonDecoder(this._json_0, newMode, this._lexer_0);
    } else {
      var tmp_0;
      if (this._mode.equals(newMode)) {
        tmp_0 = this;
      } else {
        tmp_0 = new StreamingJsonDecoder(this._json_0, newMode, this._lexer_0);
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.endStructure_11 = function (descriptor) {
    this._lexer_0.consumeNextToken_0(this._mode._end);
  };
  StreamingJsonDecoder.prototype.decodeNotNullMark_8 = function () {
    return this._lexer_0.tryConsumeNotNull();
  };
  StreamingJsonDecoder.prototype.decodeNull_8 = function () {
    return null;
  };
  StreamingJsonDecoder.prototype.decodeElementIndex_8 = function (descriptor) {
    var tmp0_subject = this._mode;
    return tmp0_subject.equals(WriteMode_OBJ_getInstance()) ? decodeObjectIndex(this, descriptor) : tmp0_subject.equals(WriteMode_MAP_getInstance()) ? decodeMapIndex(this) : decodeListIndex(this);
  };
  StreamingJsonDecoder.prototype.decodeBoolean_8 = function () {
    var tmp;
    if (this._configuration_0._isLenient_0) {
      tmp = this._lexer_0.consumeBooleanLenient();
    } else {
      tmp = this._lexer_0.consumeBoolean();
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.decodeByte_8 = function () {
    var value = this._lexer_0.consumeNumericLiteral();
    if (!value.equals(toLong_0(value.toByte_5()))) {
      var tmp = '' + "Failed to parse byte for input '" + value + "'";
      this._lexer_0.fail$default(tmp, 0, 2, null);
    }return value.toByte_5();
  };
  StreamingJsonDecoder.prototype.decodeShort_8 = function () {
    var value = this._lexer_0.consumeNumericLiteral();
    if (!value.equals(toLong_0(value.toShort_4()))) {
      var tmp = '' + "Failed to parse short for input '" + value + "'";
      this._lexer_0.fail$default(tmp, 0, 2, null);
    }return value.toShort_4();
  };
  StreamingJsonDecoder.prototype.decodeInt_8 = function () {
    var value = this._lexer_0.consumeNumericLiteral();
    if (!value.equals(toLong_0(value.toInt_5()))) {
      var tmp = '' + "Failed to parse int for input '" + value + "'";
      this._lexer_0.fail$default(tmp, 0, 2, null);
    }return value.toInt_5();
  };
  StreamingJsonDecoder.prototype.decodeLong_8 = function () {
    return this._lexer_0.consumeNumericLiteral();
  };
  StreamingJsonDecoder.prototype.decodeFloat_8 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_parseString_0 = this._lexer_0;
      var tmp1_parseString_0 = 'float';
      var input_1 = tmp0_parseString_0.consumeStringLenient();
      try {
        var tmp0_unsafeCast_0_1_4 = toDouble(input_1);
        tmp$ret$0 = tmp0_unsafeCast_0_1_4;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = '' + "Failed to parse type '" + tmp1_parseString_0 + "' for input '" + input_1 + "'";
          tmp0_parseString_0.fail$default(tmp, 0, 2, null);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    var result = tmp$ret$0;
    var specialFp = this._json_0._configuration._allowSpecialFloatingPointValues_0;
    if (specialFp ? true : isFinite(result))
      return result;
    throwInvalidFloatingPointDecoded(this._lexer_0, result);
  };
  StreamingJsonDecoder.prototype.decodeDouble_8 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_parseString_0 = this._lexer_0;
      var tmp1_parseString_0 = 'double';
      var input_1 = tmp0_parseString_0.consumeStringLenient();
      try {
        tmp$ret$0 = toDouble(input_1);
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = '' + "Failed to parse type '" + tmp1_parseString_0 + "' for input '" + input_1 + "'";
          tmp0_parseString_0.fail$default(tmp, 0, 2, null);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    var result = tmp$ret$0;
    var specialFp = this._json_0._configuration._allowSpecialFloatingPointValues_0;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throwInvalidFloatingPointDecoded(this._lexer_0, result);
  };
  StreamingJsonDecoder.prototype.decodeChar_8 = function () {
    var string = this._lexer_0.consumeStringLenient();
    if (!(string.length === 1)) {
      var tmp = '' + "Expected single char, but got '" + string + "'";
      this._lexer_0.fail$default(tmp, 0, 2, null);
    }return charSequenceGet(string, 0);
  };
  StreamingJsonDecoder.prototype.decodeString_8 = function () {
    var tmp;
    if (this._configuration_0._isLenient_0) {
      tmp = this._lexer_0.consumeStringLenient();
    } else {
      tmp = this._lexer_0.consumeString();
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.decodeInline_8 = function (inlineDescriptor) {
    return _get_isUnsignedNumber_(inlineDescriptor) ? new JsonDecoderForUnsignedTypes(this._lexer_0, this._json_0) : AbstractDecoder.prototype.decodeInline_8.call(this, inlineDescriptor);
  };
  StreamingJsonDecoder.$metadata$ = {
    simpleName: 'StreamingJsonDecoder',
    kind: 'class',
    interfaces: [JsonDecoder]
  };
  function JsonDecoderForUnsignedTypes(lexer, json) {
    AbstractDecoder.call(this);
    this._lexer_1 = lexer;
    this._serializersModule_2 = json._get_serializersModule__15();
  }
  JsonDecoderForUnsignedTypes.prototype._get_serializersModule__15 = function () {
    return this._serializersModule_2;
  };
  JsonDecoderForUnsignedTypes.prototype.decodeElementIndex_8 = function (descriptor) {
    var tmp0_error_0 = 'unsupported';
    throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
  };
  JsonDecoderForUnsignedTypes.prototype.decodeInt_8 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_parseString_0 = this._lexer_1;
      var tmp1_parseString_0 = 'UInt';
      var input_1 = tmp0_parseString_0.consumeStringLenient();
      try {
        var tmp0_toInt_0_4 = toUInt(input_1);
        tmp$ret$0 = _UInt___get_data__impl_(tmp0_toInt_0_4);
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = '' + "Failed to parse type '" + tmp1_parseString_0 + "' for input '" + input_1 + "'";
          tmp0_parseString_0.fail$default(tmp, 0, 2, null);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  };
  JsonDecoderForUnsignedTypes.prototype.decodeLong_8 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_parseString_0 = this._lexer_1;
      var tmp1_parseString_0 = 'ULong';
      var input_1 = tmp0_parseString_0.consumeStringLenient();
      try {
        var tmp0_toLong_0_4 = toULong(input_1);
        tmp$ret$0 = _ULong___get_data__impl_(tmp0_toLong_0_4);
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = '' + "Failed to parse type '" + tmp1_parseString_0 + "' for input '" + input_1 + "'";
          tmp0_parseString_0.fail$default(tmp, 0, 2, null);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  };
  JsonDecoderForUnsignedTypes.prototype.decodeByte_8 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_parseString_0 = this._lexer_1;
      var tmp1_parseString_0 = 'UByte';
      var input_1 = tmp0_parseString_0.consumeStringLenient();
      try {
        var tmp0_toByte_0_4 = toUByte(input_1);
        tmp$ret$0 = _UByte___get_data__impl_(tmp0_toByte_0_4);
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = '' + "Failed to parse type '" + tmp1_parseString_0 + "' for input '" + input_1 + "'";
          tmp0_parseString_0.fail$default(tmp, 0, 2, null);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  };
  JsonDecoderForUnsignedTypes.prototype.decodeShort_8 = function () {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_parseString_0 = this._lexer_1;
      var tmp1_parseString_0 = 'UShort';
      var input_1 = tmp0_parseString_0.consumeStringLenient();
      try {
        var tmp0_toShort_0_4 = toUShort(input_1);
        tmp$ret$0 = _UShort___get_data__impl_(tmp0_toShort_0_4);
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = '' + "Failed to parse type '" + tmp1_parseString_0 + "' for input '" + input_1 + "'";
          tmp0_parseString_0.fail$default(tmp, 0, 2, null);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  };
  JsonDecoderForUnsignedTypes.$metadata$ = {
    simpleName: 'JsonDecoderForUnsignedTypes',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_191($boundThis) {
    var i = new _no_name_provided__229($boundThis);
    var l = function () {
      return i.invoke_411();
    };
    l.callableName = i._get_name__11();
    return l;
  }
  var unsignedNumberDescriptors;
  function StreamingJsonEncoder_init_$Init$(output_0, json, mode, modeReuseCache, $this) {
    StreamingJsonEncoder.call($this, new Composer(output_0, json), json, mode, modeReuseCache);
    return $this;
  }
  function StreamingJsonEncoder_init_$Create$(output_0, json, mode, modeReuseCache) {
    return StreamingJsonEncoder_init_$Init$(output_0, json, mode, modeReuseCache, Object.create(StreamingJsonEncoder.prototype));
  }
  function encodeTypeInfo($this, descriptor) {
    $this._composer.nextItem_0();
    $this.encodeString_1($this._configuration_1._classDiscriminator_0);
    $this._composer.print_17(new Char(58));
    $this._composer.space_0();
    $this.encodeString_1(descriptor._get_serialName__17());
  }
  function StreamingJsonEncoder(composer, json, mode, modeReuseCache) {
    AbstractEncoder.call(this);
    this._composer = composer;
    this._json_1 = json;
    this._mode_0 = mode;
    this._modeReuseCache = modeReuseCache;
    this._serializersModule_3 = this._json_1._get_serializersModule__15();
    this._configuration_1 = this._json_1._configuration;
    this._forceQuoting = false;
    this._writePolymorphic = false;
    var i = this._mode_0._get_ordinal__0();
    if (!(this._modeReuseCache == null)) {
      if (!(this._modeReuseCache[i] === null) ? true : !(this._modeReuseCache[i] === this))
        this._modeReuseCache[i] = this;
    }}
  StreamingJsonEncoder.prototype._get_json__6 = function () {
    return this._json_1;
  };
  StreamingJsonEncoder.prototype._get_serializersModule__15 = function () {
    return this._serializersModule_3;
  };
  StreamingJsonEncoder.prototype.encodeSerializableValue_1 = function (serializer_16, value) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (!(serializer_16 instanceof AbstractPolymorphicSerializer)) {
        tmp = true;
      } else {
        {
          tmp = this._get_json__6()._configuration._useArrayPolymorphism_0;
        }
      }
      if (tmp) {
        serializer_16.serialize_129(this, value);
        tmp$ret$0 = Unit_getInstance();
        break l$ret$1;
      } else {
      }
      var tmp_0 = isInterface(serializer_16, SerializationStrategy) ? serializer_16 : THROW_CCE();
      var actualSerializer_1 = findActualSerializer(this, tmp_0, isObject(value) ? value : THROW_CCE());
      this._writePolymorphic = true;
      actualSerializer_1.serialize_129(this, value);
    }
     while (false);
  };
  StreamingJsonEncoder.prototype.beginStructure_11 = function (descriptor) {
    var newMode = switchMode(this._json_1, descriptor);
    if (!newMode._begin.equals(new Char(0))) {
      this._composer.print_17(newMode._begin);
      this._composer.indent_0();
    }if (this._writePolymorphic) {
      this._writePolymorphic = false;
      encodeTypeInfo(this, descriptor);
    }if (this._mode_0.equals(newMode)) {
      return this;
    }var tmp0_safe_receiver = this._modeReuseCache;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver[newMode._get_ordinal__0()];
    return tmp1_elvis_lhs == null ? new StreamingJsonEncoder(this._composer, this._json_1, newMode, this._modeReuseCache) : tmp1_elvis_lhs;
  };
  StreamingJsonEncoder.prototype.endStructure_11 = function (descriptor) {
    if (!this._mode_0._end.equals(new Char(0))) {
      this._composer.unIndent_0();
      this._composer.nextItem_0();
      this._composer.print_17(this._mode_0._end);
    }};
  StreamingJsonEncoder.prototype.encodeElement_0 = function (descriptor, index) {
    var tmp0_subject = this._mode_0;
    if (tmp0_subject.equals(WriteMode_LIST_getInstance())) {
      if (!this._composer._writingFirst)
        this._composer.print_17(new Char(44));
      this._composer.nextItem_0();
    } else if (tmp0_subject.equals(WriteMode_MAP_getInstance())) {
      if (!this._composer._writingFirst) {
        var tmp = this;
        var tmp_0;
        if (index % 2 === 0) {
          this._composer.print_17(new Char(44));
          this._composer.nextItem_0();
          tmp_0 = true;
        } else {
          this._composer.print_17(new Char(58));
          this._composer.space_0();
          tmp_0 = false;
        }
        tmp._forceQuoting = tmp_0;
      } else {
        this._forceQuoting = true;
        this._composer.nextItem_0();
      }
    } else if (tmp0_subject.equals(WriteMode_POLY_OBJ_getInstance())) {
      if (index === 0)
        this._forceQuoting = true;
      if (index === 1) {
        this._composer.print_17(new Char(44));
        this._composer.space_0();
        this._forceQuoting = false;
      }} else {
      if (!this._composer._writingFirst)
        this._composer.print_17(new Char(44));
      this._composer.nextItem_0();
      this.encodeString_1(descriptor.getElementName_17(index));
      this._composer.print_17(new Char(58));
      this._composer.space_0();
    }
    return true;
  };
  StreamingJsonEncoder.prototype.encodeInline_1 = function (inlineDescriptor) {
    return _get_isUnsignedNumber_(inlineDescriptor) ? new StreamingJsonEncoder(new ComposerForUnsignedNumbers(this._composer._sb, this._json_1), this._json_1, this._mode_0, null) : AbstractEncoder.prototype.encodeInline_1.call(this, inlineDescriptor);
  };
  StreamingJsonEncoder.prototype.encodeNull_1 = function () {
    this._composer.print_18('null');
  };
  StreamingJsonEncoder.prototype.encodeBoolean_1 = function (value) {
    if (this._forceQuoting)
      this.encodeString_1(value.toString());
    else
      this._composer.print_21(value);
  };
  StreamingJsonEncoder.prototype.encodeByte_1 = function (value) {
    if (this._forceQuoting)
      this.encodeString_1(value.toString());
    else
      this._composer.print_15(value);
  };
  StreamingJsonEncoder.prototype.encodeShort_1 = function (value) {
    if (this._forceQuoting)
      this.encodeString_1(value.toString());
    else
      this._composer.print_16(value);
  };
  StreamingJsonEncoder.prototype.encodeInt_1 = function (value) {
    if (this._forceQuoting)
      this.encodeString_1(value.toString());
    else
      this._composer.print_13(value);
  };
  StreamingJsonEncoder.prototype.encodeLong_1 = function (value) {
    if (this._forceQuoting)
      this.encodeString_1(value.toString());
    else
      this._composer.print_14(value);
  };
  StreamingJsonEncoder.prototype.encodeFloat_1 = function (value) {
    if (this._forceQuoting)
      this.encodeString_1(value.toString());
    else
      this._composer.print_19(value);
    if (!this._configuration_1._allowSpecialFloatingPointValues_0 ? !isFinite(value) : false) {
      throw InvalidFloatingPointEncoded(value, this._composer._sb.toString());
    }};
  StreamingJsonEncoder.prototype.encodeDouble_1 = function (value) {
    if (this._forceQuoting)
      this.encodeString_1(value.toString());
    else
      this._composer.print_20(value);
    if (!this._configuration_1._allowSpecialFloatingPointValues_0 ? !isFinite_0(value) : false) {
      throw InvalidFloatingPointEncoded(value, this._composer._sb.toString());
    }};
  StreamingJsonEncoder.prototype.encodeChar_1 = function (value) {
    this.encodeString_1(value.toString());
  };
  StreamingJsonEncoder.prototype.encodeString_1 = function (value) {
    return this._composer.printQuoted_0(value);
  };
  StreamingJsonEncoder.$metadata$ = {
    simpleName: 'StreamingJsonEncoder',
    kind: 'class',
    interfaces: [JsonEncoder]
  };
  function _get_isUnsignedNumber_(_this_) {
    return _this_._get_isInline__17() ? unsignedNumberDescriptors.contains_48(_this_) : false;
  }
  var ESCAPE_STRINGS;
  function toHexChar(i) {
    var d = i & 15;
    return d < 10 ? numberToChar(d + 48 | 0) : numberToChar((d - 10 | 0) + 97 | 0);
  }
  function printQuoted(_this_, value) {
    _this_.append_23(new Char(34));
    Unit_getInstance();
    var lastPos = 0;
    var inductionVariable = 0;
    var last_1 = charSequenceLength(value) - 1 | 0;
    if (inductionVariable <= last_1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var c = charSequenceGet(value, i).toInt_5();
        if (c < ESCAPE_STRINGS.length ? !(ESCAPE_STRINGS[c] == null) : false) {
          _this_.append_21(value, lastPos, i);
          Unit_getInstance();
          _this_.append_6(ESCAPE_STRINGS[c]);
          Unit_getInstance();
          lastPos = i + 1 | 0;
        }}
       while (inductionVariable <= last_1);
    if (!(lastPos === 0)) {
      _this_.append_21(value, lastPos, value.length);
      Unit_getInstance();
    } else {
      _this_.append_6(value);
      Unit_getInstance();
    }
    _this_.append_23(new Char(34));
    Unit_getInstance();
  }
  function toBooleanStrictOrNull(_this_) {
    return equals_0(_this_, 'true', true) ? true : equals_0(_this_, 'false', true) ? false : null;
  }
  function ESCAPE_STRINGS$init$() {
    var tmp0_arrayOfNulls_0 = 93;
    var tmp1_apply_0 = fillArrayVal(Array(tmp0_arrayOfNulls_0), null);
    var inductionVariable = 0;
    if (inductionVariable <= 31)
      do {
        var c_3 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var c1_4 = toHexChar(c_3 >> 12);
        var c2_5 = toHexChar(c_3 >> 8);
        var c3_6 = toHexChar(c_3 >> 4);
        var c4_7 = toHexChar(c_3);
        tmp1_apply_0[c_3] = '' + '\\u' + c1_4 + c2_5 + c3_6 + c4_7;
      }
       while (inductionVariable <= 31);
    tmp1_apply_0[34] = '\\"';
    tmp1_apply_0[92] = '\\\\';
    tmp1_apply_0[9] = '\\t';
    tmp1_apply_0[8] = '\\b';
    tmp1_apply_0[10] = '\\n';
    tmp1_apply_0[13] = '\\r';
    tmp1_apply_0[12] = '\\f';
    return tmp1_apply_0;
  }
  function currentObject($this) {
    var tmp0_safe_receiver = $this._get_currentTagOrNull__4();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = $this.currentElement_2(tmp0_safe_receiver);
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? $this._get_value__27() : tmp1_elvis_lhs;
  }
  function unparsedPrimitive($this, primitive) {
    throw JsonDecodingException_0(-1, '' + "Failed to parse '" + primitive + "'", toString_1(currentObject($this)));
  }
  function AbstractJsonTreeDecoder(json, value) {
    NamedValueDecoder.call(this);
    this._json_2 = json;
    this._value_20 = value;
    this._configuration_2 = this._get_json__6()._configuration;
  }
  AbstractJsonTreeDecoder.prototype._get_json__6 = function () {
    return this._json_2;
  };
  AbstractJsonTreeDecoder.prototype._get_value__27 = function () {
    return this._value_20;
  };
  AbstractJsonTreeDecoder.prototype._get_serializersModule__15 = function () {
    return this._get_json__6()._get_serializersModule__15();
  };
  AbstractJsonTreeDecoder.prototype._get_configuration__3 = function () {
    return this._configuration_2;
  };
  AbstractJsonTreeDecoder.prototype.decodeJsonElement_4 = function () {
    return currentObject(this);
  };
  AbstractJsonTreeDecoder.prototype.decodeSerializableValue_16 = function (deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  };
  AbstractJsonTreeDecoder.prototype.composeName_3 = function (parentName, childName) {
    return childName;
  };
  AbstractJsonTreeDecoder.prototype.beginStructure_11 = function (descriptor) {
    var currentObject_0 = currentObject(this);
    var tmp0_subject = descriptor._get_kind__20();
    var tmp;
    var tmp_0;
    if (equals_1(tmp0_subject, LIST_getInstance())) {
      tmp_0 = true;
    } else {
      tmp_0 = tmp0_subject instanceof PolymorphicKind;
    }
    if (tmp_0) {
      var tmp_1 = this._get_json__6();
      if (!(currentObject_0 instanceof JsonArray)) {
        throw JsonDecodingException_1(-1, '' + 'Expected ' + getKClass_0(JsonArray) + ' as the serialized body of ' + descriptor._get_serialName__17() + ', but had ' + getKClassFromExpression_0(currentObject_0));
      } else {
      }
      tmp = new JsonTreeListDecoder(tmp_1, currentObject_0);
    } else {
      if (equals_1(tmp0_subject, MAP_getInstance())) {
        var tmp0_selectMapMode_0 = this._get_json__6();
        var keyDescriptor_1 = descriptor.getElementDescriptor_17(0);
        var keyKind_2 = keyDescriptor_1._get_kind__20();
        var tmp_2;
        var tmp_3;
        if (keyKind_2 instanceof PrimitiveKind) {
          tmp_3 = true;
        } else {
          {
            tmp_3 = equals_1(keyKind_2, ENUM_getInstance());
          }
        }
        if (tmp_3) {
          var tmp_4 = this._get_json__6();
          if (!(currentObject_0 instanceof JsonObject)) {
            throw JsonDecodingException_1(-1, '' + 'Expected ' + getKClass_0(JsonObject) + ' as the serialized body of ' + descriptor._get_serialName__17() + ', but had ' + getKClassFromExpression_0(currentObject_0));
          } else {
          }
          tmp_2 = new JsonTreeMapDecoder(tmp_4, currentObject_0);
        } else {
          if (tmp0_selectMapMode_0._configuration._allowStructuredMapKeys_0) {
            var tmp_5 = this._get_json__6();
            if (!(currentObject_0 instanceof JsonArray)) {
              throw JsonDecodingException_1(-1, '' + 'Expected ' + getKClass_0(JsonArray) + ' as the serialized body of ' + descriptor._get_serialName__17() + ', but had ' + getKClassFromExpression_0(currentObject_0));
            } else {
            }
            tmp_2 = new JsonTreeListDecoder(tmp_5, currentObject_0);
          } else {
            {
              throw InvalidKeyKindException(keyDescriptor_1);
            }
          }
        }
        tmp = tmp_2;
      } else {
        {
          var tmp_6 = this._get_json__6();
          if (!(currentObject_0 instanceof JsonObject)) {
            throw JsonDecodingException_1(-1, '' + 'Expected ' + getKClass_0(JsonObject) + ' as the serialized body of ' + descriptor._get_serialName__17() + ', but had ' + getKClassFromExpression_0(currentObject_0));
          } else {
          }
          var tmp_7 = currentObject_0;
          tmp = JsonTreeDecoder_init_$Create$(tmp_6, tmp_7, null, null, 12, null);
        }
      }
    }
    return tmp;
  };
  AbstractJsonTreeDecoder.prototype.endStructure_11 = function (descriptor) {
  };
  AbstractJsonTreeDecoder.prototype.decodeNotNullMark_8 = function () {
    var tmp = currentObject(this);
    return !(tmp instanceof JsonNull);
  };
  AbstractJsonTreeDecoder.prototype.getValue_7 = function (tag) {
    var currentElement = this.currentElement_2(tag);
    var tmp0_elvis_lhs = currentElement instanceof JsonPrimitive ? currentElement : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw JsonDecodingException_0(-1, '' + 'Expected JsonPrimitive at ' + tag + ', found ' + currentElement, toString_1(currentObject(this)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedNotNullMark_5 = function (tag) {
    return !(this.currentElement_2(tag) === JsonNull_getInstance());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedNotNullMark_2 = function (tag) {
    return this.decodeTaggedNotNullMark_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedBoolean_5 = function (tag) {
    var value = this.getValue_7(tag);
    if (!this._get_json__6()._configuration._isLenient_0) {
      var literal = value instanceof JsonLiteral ? value : THROW_CCE();
      if (literal._isString)
        throw JsonDecodingException_0(-1, '' + "Boolean literal for key '" + tag + "' should be unquoted.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", toString_1(currentObject(this)));
    }var tmp$ret$0;
    l$ret$1: do {
      var tmp0_primitive_0 = 'boolean';
      try {
        var tmp0_elvis_lhs_4 = _get_booleanOrNull_(value);
        var tmp;
        if (tmp0_elvis_lhs_4 == null) {
          throw IllegalArgumentException_init_$Create$();
        } else {
          tmp = tmp0_elvis_lhs_4;
        }
        var tmp0_elvis_lhs_1 = tmp;
        var tmp_0;
        if (tmp0_elvis_lhs_1 == null) {
          unparsedPrimitive(this, tmp0_primitive_0);
        } else {
          tmp_0 = tmp0_elvis_lhs_1;
        }
        tmp$ret$0 = tmp_0;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, tmp0_primitive_0);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedBoolean_2 = function (tag) {
    return this.decodeTaggedBoolean_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedByte_5 = function (tag) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_primitive_0 = this.getValue_7(tag);
      var tmp1_primitive_0 = 'byte';
      try {
        var result_4 = _get_int_(tmp0_primitive_0);
        var tmp;
        var containsLower = ByteCompanionObject_getInstance()._MIN_VALUE_3;
        if (result_4 <= ByteCompanionObject_getInstance()._MAX_VALUE_3 ? containsLower <= result_4 : false) {
          tmp = toByte(result_4);
        } else {
          {
            tmp = null;
          }
        }
        var tmp0_elvis_lhs_1 = tmp;
        var tmp_0;
        if (tmp0_elvis_lhs_1 == null) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          tmp_0 = tmp0_elvis_lhs_1;
        }
        tmp$ret$0 = tmp_0;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedByte_2 = function (tag) {
    return this.decodeTaggedByte_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedShort_5 = function (tag) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_primitive_0 = this.getValue_7(tag);
      var tmp1_primitive_0 = 'short';
      try {
        var result_4 = _get_int_(tmp0_primitive_0);
        var tmp;
        var containsLower = ShortCompanionObject_getInstance()._MIN_VALUE_4;
        if (result_4 <= ShortCompanionObject_getInstance()._MAX_VALUE_4 ? containsLower <= result_4 : false) {
          tmp = toShort(result_4);
        } else {
          {
            tmp = null;
          }
        }
        var tmp0_elvis_lhs_1 = tmp;
        var tmp_0;
        if (tmp0_elvis_lhs_1 == null) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          tmp_0 = tmp0_elvis_lhs_1;
        }
        tmp$ret$0 = tmp_0;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedShort_2 = function (tag) {
    return this.decodeTaggedShort_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedInt_5 = function (tag) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_primitive_0 = this.getValue_7(tag);
      var tmp1_primitive_0 = 'int';
      try {
        var tmp0_elvis_lhs_1 = _get_int_(tmp0_primitive_0);
        var tmp;
        if (tmp0_elvis_lhs_1 == null) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          tmp = tmp0_elvis_lhs_1;
        }
        tmp$ret$0 = tmp;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedInt_2 = function (tag) {
    return this.decodeTaggedInt_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedLong_5 = function (tag) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_primitive_0 = this.getValue_7(tag);
      var tmp1_primitive_0 = 'long';
      try {
        var tmp0_elvis_lhs_1 = _get_long_(tmp0_primitive_0);
        var tmp;
        if (tmp0_elvis_lhs_1 == null) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          tmp = tmp0_elvis_lhs_1;
        }
        tmp$ret$0 = tmp;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedLong_2 = function (tag) {
    return this.decodeTaggedLong_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedFloat_5 = function (tag) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_primitive_0 = this.getValue_7(tag);
      var tmp1_primitive_0 = 'float';
      try {
        var tmp0_elvis_lhs_1 = _get_float_(tmp0_primitive_0);
        var tmp;
        if (tmp0_elvis_lhs_1 == null) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          tmp = tmp0_elvis_lhs_1;
        }
        tmp$ret$0 = tmp;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    var result = tmp$ret$0;
    var specialFp = this._get_json__6()._configuration._allowSpecialFloatingPointValues_0;
    if (specialFp ? true : isFinite(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString_1(currentObject(this)));
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedFloat_2 = function (tag) {
    return this.decodeTaggedFloat_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedDouble_5 = function (tag) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_primitive_0 = this.getValue_7(tag);
      var tmp1_primitive_0 = 'double';
      try {
        var tmp0_elvis_lhs_1 = _get_double_(tmp0_primitive_0);
        var tmp;
        if (tmp0_elvis_lhs_1 == null) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          tmp = tmp0_elvis_lhs_1;
        }
        tmp$ret$0 = tmp;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    var result = tmp$ret$0;
    var specialFp = this._get_json__6()._configuration._allowSpecialFloatingPointValues_0;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString_1(currentObject(this)));
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedDouble_2 = function (tag) {
    return this.decodeTaggedDouble_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedChar_5 = function (tag) {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_primitive_0 = this.getValue_7(tag);
      var tmp1_primitive_0 = 'char';
      try {
        var tmp0_elvis_lhs_1 = single_2(tmp0_primitive_0._get_content__8());
        var tmp;
        if (tmp0_elvis_lhs_1 == null) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          tmp = tmp0_elvis_lhs_1;
        }
        tmp$ret$0 = tmp;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, tmp1_primitive_0);
        } else {
          {
            throw $p;
          }
        }
      }
    }
     while (false);
    return tmp$ret$0;
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedChar_2 = function (tag) {
    return this.decodeTaggedChar_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedString_5 = function (tag) {
    var value = this.getValue_7(tag);
    if (!this._get_json__6()._configuration._isLenient_0) {
      var literal = value instanceof JsonLiteral ? value : THROW_CCE();
      if (!literal._isString)
        throw JsonDecodingException_0(-1, '' + "String literal for key '" + tag + "' should be quoted.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", toString_1(currentObject(this)));
    }return value._get_content__8();
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedString_2 = function (tag) {
    return this.decodeTaggedString_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedInline_5 = function (tag, inlineDescriptor) {
    return _get_isUnsignedNumber_(inlineDescriptor) ? new JsonDecoderForUnsignedTypes(new JsonLexer(this.getValue_7(tag)._get_content__8()), this._get_json__6()) : NamedValueDecoder.prototype.decodeTaggedInline_2.call(this, tag, inlineDescriptor);
  };
  AbstractJsonTreeDecoder.prototype.decodeTaggedInline_2 = function (tag, inlineDescriptor) {
    return this.decodeTaggedInline_5((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
  };
  AbstractJsonTreeDecoder.$metadata$ = {
    simpleName: 'AbstractJsonTreeDecoder',
    kind: 'class',
    interfaces: [JsonDecoder]
  };
  function JsonTreeDecoder_init_$Init$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      polyDiscriminator = null;
    if (!(($mask0 & 8) === 0))
      polyDescriptor = null;
    JsonTreeDecoder.call($this, json, value, polyDiscriminator, polyDescriptor);
    return $this;
  }
  function JsonTreeDecoder_init_$Create$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker) {
    return JsonTreeDecoder_init_$Init$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker, Object.create(JsonTreeDecoder.prototype));
  }
  function coerceInputValue_0($this, descriptor, index, tag) {
    var elementDescriptor = descriptor.getElementDescriptor_17(index);
    var tmp;
    var tmp_0 = $this.currentElement_2(tag);
    if (tmp_0 instanceof JsonNull) {
      tmp = !elementDescriptor._get_isNullable__17();
    } else {
      {
        tmp = false;
      }
    }
    if (tmp)
      return true;
    else {
    }
    if (equals_1(elementDescriptor._get_kind__20(), ENUM_getInstance())) {
      var tmp_1 = $this.currentElement_2(tag);
      var tmp0_safe_receiver = tmp_1 instanceof JsonPrimitive ? tmp_1 : null;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : _get_contentOrNull_(tmp0_safe_receiver);
      var tmp_2;
      if (tmp1_elvis_lhs == null) {
        return false;
      } else {
        tmp_2 = tmp1_elvis_lhs;
      }
      var enumValue = tmp_2;
      var enumIndex = elementDescriptor.getElementIndex_17(enumValue);
      Companion_getInstance_51();
      if (enumIndex === -3)
        return true;
      else {
      }
    }return false;
  }
  function _no_name_provided__230($boundThis) {
    this._$boundThis_0 = $boundThis;
  }
  _no_name_provided__230.prototype.invoke_411 = function () {
    return buildAlternativeNamesMap(this._$boundThis_0);
  };
  _no_name_provided__230.prototype._get_name__11 = function () {
    return 'buildAlternativeNamesMap';
  };
  _no_name_provided__230.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function JsonTreeDecoder(json, value, polyDiscriminator, polyDescriptor) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this._value_21 = value;
    this._polyDiscriminator = polyDiscriminator;
    this._polyDescriptor = polyDescriptor;
    this._position_9 = 0;
  }
  JsonTreeDecoder.prototype._get_value__27 = function () {
    return this._value_21;
  };
  JsonTreeDecoder.prototype.decodeElementIndex_8 = function (descriptor) {
    while (this._position_9 < descriptor._get_elementsCount__17()) {
      var tmp0_this = this;
      var tmp1 = tmp0_this._position_9;
      tmp0_this._position_9 = tmp1 + 1 | 0;
      var name = this.getTag_4(descriptor, tmp1);
      var tmp;
      var tmp0_contains_0 = this._get_value__27();
      if ((isInterface(tmp0_contains_0, Map_0) ? tmp0_contains_0 : THROW_CCE()).containsKey_12(name)) {
        tmp = !this._get_configuration__3()._coerceInputValues_0 ? true : !coerceInputValue_0(this, descriptor, this._position_9 - 1 | 0, name);
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        return this._position_9 - 1 | 0;
      } else {
      }
    }
    Companion_getInstance_51();
    return -1;
  };
  JsonTreeDecoder.prototype.elementName_3 = function (desc, index) {
    var mainName = desc.getElementName_17(index);
    if (!this._get_configuration__3()._useAlternativeNames_0)
      return mainName;
    if (this._get_value__27()._get_keys__8().contains_48(mainName))
      return mainName;
    var tmp = this._get_json__6()._schemaCache;
    var alternativeNamesMap = tmp.getOrPut(desc, JsonAlternativeNamesKey, _no_name_provided_$factory_192(desc));
    var tmp0_find_0 = this._get_value__27()._get_keys__8();
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_iterator_1_1 = tmp0_find_0.iterator_62();
      while (tmp0_iterator_1_1.hasNext_29()) {
        var element_2_2 = tmp0_iterator_1_1.next_31();
        if (alternativeNamesMap.get_65(element_2_2) === index) {
          tmp$ret$0 = element_2_2;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = null;
    }
     while (false);
    var nameInObject = tmp$ret$0;
    var tmp0_elvis_lhs = nameInObject;
    return tmp0_elvis_lhs == null ? mainName : tmp0_elvis_lhs;
  };
  JsonTreeDecoder.prototype.currentElement_2 = function (tag) {
    return getValue(this._get_value__27(), tag);
  };
  JsonTreeDecoder.prototype.beginStructure_11 = function (descriptor) {
    if (descriptor === this._polyDescriptor)
      return this;
    return AbstractJsonTreeDecoder.prototype.beginStructure_11.call(this, descriptor);
  };
  JsonTreeDecoder.prototype.endStructure_11 = function (descriptor) {
    var tmp;
    if (this._get_configuration__3()._ignoreUnknownKeys_0) {
      tmp = true;
    } else {
      var tmp_0 = descriptor._get_kind__20();
      tmp = tmp_0 instanceof PolymorphicKind;
    }
    if (tmp)
      return Unit_getInstance();
    else {
    }
    var tmp_1;
    if (!this._get_configuration__3()._useAlternativeNames_0) {
      tmp_1 = jsonCachedSerialNames(descriptor);
    } else {
      var tmp_2 = jsonCachedSerialNames(descriptor);
      var tmp0_safe_receiver = this._get_json__6()._schemaCache.get_67(descriptor, JsonAlternativeNamesKey);
      var tmp0_orEmpty_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver._get_keys__8();
      var tmp0_elvis_lhs_1 = tmp0_orEmpty_0;
      tmp_1 = plus_2(tmp_2, tmp0_elvis_lhs_1 == null ? emptySet() : tmp0_elvis_lhs_1);
    }
    var names = tmp_1;
    var tmp1_iterator = this._get_value__27()._get_keys__8().iterator_62();
    while (tmp1_iterator.hasNext_29()) {
      var key = tmp1_iterator.next_31();
      if (!names.contains_48(key) ? !(key === this._polyDiscriminator) : false) {
        throw UnknownKeyException(key, this._get_value__27().toString());
      }}
  };
  JsonTreeDecoder.$metadata$ = {
    simpleName: 'JsonTreeDecoder',
    kind: 'class',
    interfaces: []
  };
  function JsonTreeListDecoder(json, value) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this._value_22 = value;
    this._size_5 = this._value_22._get_size__48();
    this._currentIndex_1 = -1;
  }
  JsonTreeListDecoder.prototype._get_value__27 = function () {
    return this._value_22;
  };
  JsonTreeListDecoder.prototype.elementName_3 = function (desc, index) {
    return index.toString();
  };
  JsonTreeListDecoder.prototype.currentElement_2 = function (tag) {
    return this._value_22.get_77(toInt(tag));
  };
  JsonTreeListDecoder.prototype.decodeElementIndex_8 = function (descriptor) {
    while (this._currentIndex_1 < (this._size_5 - 1 | 0)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this._currentIndex_1;
      tmp0_this._currentIndex_1 = tmp1 + 1 | 0;
      Unit_getInstance();
      return this._currentIndex_1;
    }
    Companion_getInstance_51();
    return -1;
  };
  JsonTreeListDecoder.$metadata$ = {
    simpleName: 'JsonTreeListDecoder',
    kind: 'class',
    interfaces: []
  };
  function JsonTreeMapDecoder(json, value) {
    JsonTreeDecoder_init_$Init$(json, value, null, null, 12, null, this);
    this._value_23 = value;
    this._keys_0 = toList_0(this._value_23._get_keys__8());
    this._size_6 = imul(this._keys_0._get_size__48(), 2);
    this._position_10 = -1;
  }
  JsonTreeMapDecoder.prototype._get_value__27 = function () {
    return this._value_23;
  };
  JsonTreeMapDecoder.prototype.elementName_3 = function (desc, index) {
    var i = index / 2 | 0;
    return this._keys_0.get_77(i);
  };
  JsonTreeMapDecoder.prototype.decodeElementIndex_8 = function (descriptor) {
    while (this._position_10 < (this._size_6 - 1 | 0)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this._position_10;
      tmp0_this._position_10 = tmp1 + 1 | 0;
      Unit_getInstance();
      return this._position_10;
    }
    Companion_getInstance_51();
    return -1;
  };
  JsonTreeMapDecoder.prototype.currentElement_2 = function (tag) {
    return this._position_10 % 2 === 0 ? JsonPrimitive_0(tag) : getValue(this._value_23, tag);
  };
  JsonTreeMapDecoder.prototype.endStructure_11 = function (descriptor) {
  };
  JsonTreeMapDecoder.$metadata$ = {
    simpleName: 'JsonTreeMapDecoder',
    kind: 'class',
    interfaces: []
  };
  function readPolymorphicJson(_this_, discriminator, element, deserializer) {
    return (new JsonTreeDecoder(_this_, element, discriminator, deserializer._get_descriptor__77())).decodeSerializableValue_16(deserializer);
  }
  function _no_name_provided_$factory_192($boundThis) {
    var i = new _no_name_provided__230($boundThis);
    var l = function () {
      return i.invoke_411();
    };
    l.callableName = i._get_name__11();
    return l;
  }
  var WriteMode_OBJ_instance;
  var WriteMode_LIST_instance;
  var WriteMode_MAP_instance;
  var WriteMode_POLY_OBJ_instance;
  function values_3() {
    return [WriteMode_OBJ_getInstance(), WriteMode_LIST_getInstance(), WriteMode_MAP_getInstance(), WriteMode_POLY_OBJ_getInstance()];
  }
  var WriteMode_entriesInitialized;
  function WriteMode_initEntries() {
    if (WriteMode_entriesInitialized)
      return Unit_getInstance();
    WriteMode_entriesInitialized = true;
    WriteMode_OBJ_instance = new WriteMode('OBJ', 0, new Char(123), new Char(125));
    WriteMode_LIST_instance = new WriteMode('LIST', 1, new Char(91), new Char(93));
    WriteMode_MAP_instance = new WriteMode('MAP', 2, new Char(123), new Char(125));
    WriteMode_POLY_OBJ_instance = new WriteMode('POLY_OBJ', 3, new Char(91), new Char(93));
  }
  function WriteMode(name, ordinal, begin, end) {
    Enum.call(this, name, ordinal);
    this._begin = begin;
    this._end = end;
  }
  WriteMode.$metadata$ = {
    simpleName: 'WriteMode',
    kind: 'class',
    interfaces: []
  };
  function switchMode(_this_, desc) {
    var tmp0_subject = desc._get_kind__20();
    var tmp;
    if (tmp0_subject instanceof PolymorphicKind) {
      tmp = WriteMode_POLY_OBJ_getInstance();
    } else {
      if (equals_1(tmp0_subject, LIST_getInstance())) {
        tmp = WriteMode_LIST_getInstance();
      } else {
        if (equals_1(tmp0_subject, MAP_getInstance())) {
          var keyDescriptor_1 = desc.getElementDescriptor_17(0);
          var keyKind_2 = keyDescriptor_1._get_kind__20();
          var tmp_0;
          var tmp_1;
          if (keyKind_2 instanceof PrimitiveKind) {
            tmp_1 = true;
          } else {
            {
              tmp_1 = equals_1(keyKind_2, ENUM_getInstance());
            }
          }
          if (tmp_1) {
            tmp_0 = WriteMode_MAP_getInstance();
          } else {
            if (_this_._configuration._allowStructuredMapKeys_0) {
              tmp_0 = WriteMode_LIST_getInstance();
            } else {
              {
                throw InvalidKeyKindException(keyDescriptor_1);
              }
            }
          }
          tmp = tmp_0;
        } else {
          {
            tmp = WriteMode_OBJ_getInstance();
          }
        }
      }
    }
    return tmp;
  }
  function WriteMode_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_OBJ_instance;
  }
  function WriteMode_LIST_getInstance() {
    WriteMode_initEntries();
    return WriteMode_LIST_instance;
  }
  function WriteMode_MAP_getInstance() {
    WriteMode_initEntries();
    return WriteMode_MAP_instance;
  }
  function WriteMode_POLY_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_POLY_OBJ_instance;
  }
  function JsonStringBuilder() {
    this._sb_0 = StringBuilder_init_$Create$(128);
  }
  JsonStringBuilder.prototype.append_35 = function (value) {
    this._sb_0.append_5(value);
    Unit_getInstance();
  };
  JsonStringBuilder.prototype.append_36 = function (ch) {
    this._sb_0.append_23(ch);
    Unit_getInstance();
  };
  JsonStringBuilder.prototype.append_37 = function (string) {
    this._sb_0.append_6(string);
    Unit_getInstance();
  };
  JsonStringBuilder.prototype.appendQuoted = function (string) {
    printQuoted(this._sb_0, string);
  };
  JsonStringBuilder.prototype.toString = function () {
    return this._sb_0.toString();
  };
  JsonStringBuilder.prototype.release_10 = function () {
  };
  JsonStringBuilder.$metadata$ = {
    simpleName: 'JsonStringBuilder',
    kind: 'class',
    interfaces: []
  };
  function createMapForCache(initialCapacity) {
    return HashMap_init_$Create$_1(initialCapacity);
  }
  function _no_name_provided__231() {
  }
  _no_name_provided__231.prototype.invoke_398 = function ($this$Json) {
    $this$Json._isLenient = false;
    $this$Json._ignoreUnknownKeys = false;
    $this$Json._allowSpecialFloatingPointValues = true;
    $this$Json._useArrayPolymorphism = false;
  };
  _no_name_provided__231.prototype.invoke_420 = function (p1) {
    this.invoke_398(p1 instanceof JsonBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__231.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__232() {
  }
  _no_name_provided__232.prototype.invoke_398 = function ($this$Json) {
    $this$Json._isLenient = false;
    $this$Json._ignoreUnknownKeys = false;
    $this$Json._allowSpecialFloatingPointValues = true;
    $this$Json._useArrayPolymorphism = false;
  };
  _no_name_provided__232.prototype.invoke_420 = function (p1) {
    this.invoke_398(p1 instanceof JsonBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__232.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function KotlinxSerializer_init_$Init$(json, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      json = Companion_getInstance_56()._DefaultJson;
    KotlinxSerializer.call($this, json);
    return $this;
  }
  function KotlinxSerializer_init_$Create$(json, $mask0, $marker) {
    return KotlinxSerializer_init_$Init$(json, $mask0, $marker, Object.create(KotlinxSerializer.prototype));
  }
  function Companion_57() {
    Companion_instance_56 = this;
    var tmp = this;
    tmp._DefaultJsonConfiguration = Json$default(null, _no_name_provided_$factory_193(), 1, null);
    var tmp_0 = this;
    tmp_0._DefaultJson = Json$default(null, _no_name_provided_$factory_194(), 1, null);
  }
  Companion_57.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_56;
  function Companion_getInstance_56() {
    if (Companion_instance_56 == null)
      new Companion_57();
    return Companion_instance_56;
  }
  function KotlinxSerializer(json) {
    Companion_getInstance_56();
    this._json_3 = json;
  }
  KotlinxSerializer.prototype.write_1 = function (data, contentType_1) {
    var tmp = this.writeContent_16(data);
    return TextContent_init_$Create$(tmp, contentType_1, null, 4, null);
  };
  KotlinxSerializer.prototype.writeContent_16 = function (data) {
    return this._json_3.encodeToString_1(buildSerializer(data, this._json_3._get_serializersModule__15()), data);
  };
  KotlinxSerializer.prototype.read_3 = function (type, body) {
    var text = readText$default(body, null, 0, 3, null);
    var deserializationStrategy = this._json_3._get_serializersModule__15().getContextual_2(type._type_0);
    var tmp2_elvis_lhs = deserializationStrategy;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      var tmp0_safe_receiver = type._kotlinType;
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        tmp_0 = serializer(tmp0_safe_receiver);
      }
      var tmp1_elvis_lhs = tmp_0;
      tmp = tmp1_elvis_lhs == null ? serializer_0(type._type_0) : tmp1_elvis_lhs;
    } else {
      tmp = tmp2_elvis_lhs;
    }
    var mapper = tmp;
    return ensureNotNull(this._json_3.decodeFromString_2(mapper, text));
  };
  KotlinxSerializer.$metadata$ = {
    simpleName: 'KotlinxSerializer',
    kind: 'class',
    interfaces: [JsonSerializer]
  };
  function buildSerializer(value, module_0) {
    var tmp0_subject = value;
    var tmp;
    if (tmp0_subject instanceof JsonElement) {
      tmp = Companion_getInstance_52().serializer_0();
    } else {
      if (isInterface(tmp0_subject, List)) {
        tmp = ListSerializer(elementSerializer(value, module_0));
      } else {
        if (isArray(tmp0_subject)) {
          var tmp1_safe_receiver = firstOrNull(value);
          var tmp_0;
          if (tmp1_safe_receiver == null) {
            tmp_0 = null;
          } else {
            tmp_0 = buildSerializer(tmp1_safe_receiver, module_0);
          }
          var tmp2_elvis_lhs = tmp_0;
          tmp = tmp2_elvis_lhs == null ? ListSerializer(serializer_2(StringCompanionObject_getInstance())) : tmp2_elvis_lhs;
        } else {
          if (isInterface(tmp0_subject, Set)) {
            tmp = SetSerializer(elementSerializer(value, module_0));
          } else {
            if (isInterface(tmp0_subject, Map_0)) {
              var keySerializer = elementSerializer(value._get_keys__8(), module_0);
              var valueSerializer = elementSerializer(value._get_values__14(), module_0);
              tmp = MapSerializer(keySerializer, valueSerializer);
            } else {
              {
                var tmp3_elvis_lhs = module_0.getContextual_2(getKClassFromExpression_0(value));
                tmp = tmp3_elvis_lhs == null ? serializer_0(getKClassFromExpression_0(value)) : tmp3_elvis_lhs;
              }
            }
          }
        }
      }
    }
    var tmp_1 = tmp;
    return isInterface(tmp_1, KSerializer) ? tmp_1 : THROW_CCE();
  }
  function elementSerializer(_this_, module_0) {
    var tmp0_map_0 = filterNotNull(_this_);
    var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
    var tmp0_iterator_1_2 = tmp0_map_0.iterator_62();
    while (tmp0_iterator_1_2.hasNext_29()) {
      var item_2_3 = tmp0_iterator_1_2.next_31();
      tmp0_mapTo_0_1.add_32(buildSerializer(item_2_3, module_0));
      Unit_getInstance();
    }
    var tmp1_distinctBy_0 = tmp0_mapTo_0_1;
    var set_1 = HashSet_init_$Create$();
    var list_2 = ArrayList_init_$Create$();
    var tmp0_iterator_3 = tmp1_distinctBy_0.iterator_62();
    while (tmp0_iterator_3.hasNext_29()) {
      var e_4 = tmp0_iterator_3.next_31();
      var key_5 = e_4._get_descriptor__77()._get_serialName__17();
      if (set_1.add_32(key_5)) {
        list_2.add_32(e_4);
        Unit_getInstance();
      }}
    var serializers = list_2;
    if (serializers._get_size__48() > 1) {
      var tmp0_mapTo_0_1_0 = ArrayList_init_$Create$_0(collectionSizeOrDefault(serializers, 10));
      var tmp0_iterator_1_2_0 = serializers.iterator_62();
      while (tmp0_iterator_1_2_0.hasNext_29()) {
        var item_2_3_0 = tmp0_iterator_1_2_0.next_31();
        tmp0_mapTo_0_1_0.add_32(item_2_3_0._get_descriptor__77()._get_serialName__17());
        Unit_getInstance();
      }
      var tmp2_error_0 = 'Serializing collections of different element types is not yet supported. ' + ('' + 'Selected serializers: ' + tmp0_mapTo_0_1_0);
      throw IllegalStateException_init_$Create$(toString_1(tmp2_error_0));
    }var tmp0_elvis_lhs = singleOrNull(serializers);
    var selected = tmp0_elvis_lhs == null ? serializer_2(StringCompanionObject_getInstance()) : tmp0_elvis_lhs;
    if (selected._get_descriptor__77()._get_isNullable__17()) {
      return selected;
    }if (isInterface(selected, KSerializer))
      selected;
    else
      THROW_CCE();
    Unit_getInstance();
    var tmp$ret$0;
    l$ret$1: do {
      var tmp;
      if (isInterface(_this_, Collection)) {
        tmp = _this_.isEmpty_50();
      } else {
        {
          tmp = false;
        }
      }
      if (tmp) {
        tmp$ret$0 = false;
        break l$ret$1;
      } else {
      }
      var tmp0_iterator_1 = _this_.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        if (element_2 == null) {
          tmp$ret$0 = true;
          break l$ret$1;
        } else {
        }
      }
      tmp$ret$0 = false;
    }
     while (false);
    if (tmp$ret$0) {
      return _get_nullable_(selected);
    } else {
    }
    return selected;
  }
  function _no_name_provided_$factory_193() {
    var i = new _no_name_provided__231();
    return function (p1) {
      i.invoke_398(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_194() {
    var i = new _no_name_provided__232();
    return function (p1) {
      i.invoke_398(p1);
      return Unit_getInstance();
    };
  }
  var initializer;
  function SerializerInitializer() {
    SerializerInitializer_instance = this;
    var tmp0_plusAssign_0 = serializersStore;
    var tmp1_plusAssign_0 = KotlinxSerializer_init_$Create$(null, 1, null);
    tmp0_plusAssign_0.add_32(tmp1_plusAssign_0);
    Unit_getInstance();
  }
  SerializerInitializer.$metadata$ = {
    simpleName: 'SerializerInitializer',
    kind: 'object',
    interfaces: []
  };
  var SerializerInitializer_instance;
  function SerializerInitializer_getInstance() {
    if (SerializerInitializer_instance == null)
      new SerializerInitializer();
    return SerializerInitializer_instance;
  }
  function System() {
    System_instance = this;
  }
  System.prototype.now_1 = function () {
    return Companion_getInstance_62().now_1();
  };
  System.$metadata$ = {
    simpleName: 'System',
    kind: 'object',
    interfaces: [Clock_0]
  };
  var System_instance;
  function System_getInstance() {
    if (System_instance == null)
      new System();
    return System_instance;
  }
  function Clock_0() {
  }
  Clock_0.$metadata$ = {
    simpleName: 'Clock',
    kind: 'interface',
    interfaces: []
  };
  function Companion_58() {
    Companion_instance_57 = this;
  }
  Companion_58.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_57;
  function Companion_getInstance_57() {
    if (Companion_instance_57 == null)
      new Companion_58();
    return Companion_instance_57;
  }
  function Companion_59() {
    Companion_instance_58 = this;
  }
  Companion_59.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_58;
  function Companion_getInstance_58() {
    if (Companion_instance_58 == null)
      new Companion_59();
    return Companion_instance_58;
  }
  function Companion_60() {
    Companion_instance_59 = this;
  }
  Companion_60.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_59;
  function Companion_getInstance_59() {
    if (Companion_instance_59 == null)
      new Companion_60();
    return Companion_instance_59;
  }
  function DayBased(days) {
    Companion_getInstance_58();
    DateBased.call(this);
    this._days = days;
    var tmp0_require_0 = this._days > 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Unit duration must be positive, but was ' + this._days + ' days.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }}
  DayBased.prototype.times_29 = function (scalar) {
    return new DayBased(safeMultiply_0(this._days, scalar));
  };
  DayBased.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      if (other instanceof DayBased) {
        tmp_0 = this._days === other._days;
      } else {
        {
          tmp_0 = false;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  DayBased.prototype.hashCode = function () {
    return this._days ^ 65536;
  };
  DayBased.prototype.toString = function () {
    return this._days % 7 === 0 ? this.formatToString_2(this._days / 7 | 0, 'WEEK') : this.formatToString_2(this._days, 'DAY');
  };
  DayBased.$metadata$ = {
    simpleName: 'DayBased',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: DayBasedDateTimeUnitSerializer_getInstance}
  };
  function MonthBased(months) {
    Companion_getInstance_59();
    DateBased.call(this);
    this._months = months;
    var tmp0_require_0 = this._months > 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Unit duration must be positive, but was ' + this._months + ' months.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }}
  MonthBased.prototype.times_29 = function (scalar) {
    return new MonthBased(safeMultiply_0(this._months, scalar));
  };
  MonthBased.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      if (other instanceof MonthBased) {
        tmp_0 = this._months === other._months;
      } else {
        {
          tmp_0 = false;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  MonthBased.prototype.hashCode = function () {
    return this._months ^ 131072;
  };
  MonthBased.prototype.toString = function () {
    return this._months % 1200 === 0 ? this.formatToString_2(this._months / 1200 | 0, 'CENTURY') : this._months % 12 === 0 ? this.formatToString_2(this._months / 12 | 0, 'YEAR') : this._months % 3 === 0 ? this.formatToString_2(this._months / 3 | 0, 'QUARTER') : this.formatToString_2(this._months, 'MONTH');
  };
  MonthBased.$metadata$ = {
    simpleName: 'MonthBased',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: MonthBasedDateTimeUnitSerializer_getInstance}
  };
  function Companion_61() {
    Companion_instance_60 = this;
  }
  Companion_61.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_60;
  function Companion_getInstance_60() {
    if (Companion_instance_60 == null)
      new Companion_61();
    return Companion_instance_60;
  }
  function TimeBased(nanoseconds) {
    Companion_getInstance_57();
    DateTimeUnit.call(this);
    this._nanoseconds = nanoseconds;
    var tmp0_require_0 = this._nanoseconds.compareTo_59(new Long(0, 0)) > 0;
    if (!tmp0_require_0) {
      var message_1 = '' + 'Unit duration must be positive, but was ' + this._nanoseconds + ' ns.';
      throw IllegalArgumentException_init_$Create$_0(toString_1(message_1));
    }if (this._nanoseconds.rem_27(new Long(817405952, 838)).equals(new Long(0, 0))) {
      this._unitName = 'HOUR';
      this._unitScale = this._nanoseconds.div_27(new Long(817405952, 838));
    } else {
      if (this._nanoseconds.rem_27(new Long(-129542144, 13)).equals(new Long(0, 0))) {
        this._unitName = 'MINUTE';
        this._unitScale = this._nanoseconds.div_27(new Long(-129542144, 13));
      } else {
        var tmp1_rem_0 = this._nanoseconds;
        var tmp2_rem_0 = 1000000000;
        if (tmp1_rem_0.rem_27(toLong_0(tmp2_rem_0)).equals(new Long(0, 0))) {
          this._unitName = 'SECOND';
          var tmp = this;
          var tmp3_div_0 = this._nanoseconds;
          var tmp4_div_0 = 1000000000;
          tmp._unitScale = tmp3_div_0.div_27(toLong_0(tmp4_div_0));
        } else {
          var tmp5_rem_0 = this._nanoseconds;
          var tmp6_rem_0 = 1000000;
          if (tmp5_rem_0.rem_27(toLong_0(tmp6_rem_0)).equals(new Long(0, 0))) {
            this._unitName = 'MILLISECOND';
            var tmp_0 = this;
            var tmp7_div_0 = this._nanoseconds;
            var tmp8_div_0 = 1000000;
            tmp_0._unitScale = tmp7_div_0.div_27(toLong_0(tmp8_div_0));
          } else {
            var tmp9_rem_0 = this._nanoseconds;
            var tmp10_rem_0 = 1000;
            if (tmp9_rem_0.rem_27(toLong_0(tmp10_rem_0)).equals(new Long(0, 0))) {
              this._unitName = 'MICROSECOND';
              var tmp_1 = this;
              var tmp11_div_0 = this._nanoseconds;
              var tmp12_div_0 = 1000;
              tmp_1._unitScale = tmp11_div_0.div_27(toLong_0(tmp12_div_0));
            } else {
              {
                this._unitName = 'NANOSECOND';
                this._unitScale = this._nanoseconds;
              }
            }
          }
        }
      }
    }
  }
  TimeBased.prototype.times_29 = function (scalar) {
    return new TimeBased(safeMultiply(this._nanoseconds, toLong_0(scalar)));
  };
  TimeBased.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      if (other instanceof TimeBased) {
        tmp_0 = this._nanoseconds.equals(other._nanoseconds);
      } else {
        {
          tmp_0 = false;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  TimeBased.prototype.hashCode = function () {
    var tmp = this._nanoseconds.toInt_5();
    IntCompanionObject_getInstance();
    return tmp ^ this._nanoseconds.shr_0(32).toInt_5();
  };
  TimeBased.prototype.toString = function () {
    return this.formatToString_3(this._unitScale, this._unitName);
  };
  TimeBased.$metadata$ = {
    simpleName: 'TimeBased',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: TimeBasedDateTimeUnitSerializer_getInstance}
  };
  function DateBased() {
    Companion_getInstance_60();
    DateTimeUnit.call(this);
  }
  DateBased.$metadata$ = {
    simpleName: 'DateBased',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: DateBasedDateTimeUnitSerializer_getInstance}
  };
  function Companion_62() {
    Companion_instance_61 = this;
    this._NANOSECOND = new TimeBased(new Long(1, 0));
    this._MICROSECOND = this._NANOSECOND.times_29(1000);
    this._MILLISECOND = this._MICROSECOND.times_29(1000);
    this._SECOND = this._MILLISECOND.times_29(1000);
    this._MINUTE = this._SECOND.times_29(60);
    this._HOUR = this._MINUTE.times_29(60);
    this._DAY = new DayBased(1);
    this._WEEK = this._DAY.times_29(7);
    this._MONTH = new MonthBased(1);
    this._QUARTER = this._MONTH.times_29(3);
    this._YEAR = this._MONTH.times_29(12);
    this._CENTURY = this._YEAR.times_29(100);
  }
  Companion_62.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_61;
  function Companion_getInstance_61() {
    if (Companion_instance_61 == null)
      new Companion_62();
    return Companion_instance_61;
  }
  function DateTimeUnit() {
    Companion_getInstance_61();
  }
  DateTimeUnit.prototype.formatToString_2 = function (value, unit) {
    return value === 1 ? unit : '' + value + '-' + unit;
  };
  DateTimeUnit.prototype.formatToString_3 = function (value, unit) {
    return value.equals(new Long(1, 0)) ? unit : '' + value + '-' + unit;
  };
  DateTimeUnit.$metadata$ = {
    simpleName: 'DateTimeUnit',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: DateTimeUnitSerializer_getInstance}
  };
  function DateTimeFormatException_init_$Init$(cause, $this) {
    IllegalArgumentException_init_$Init$_2(cause, $this);
    DateTimeFormatException.call($this);
    return $this;
  }
  function DateTimeFormatException_init_$Create$(cause) {
    var tmp = DateTimeFormatException_init_$Init$(cause, Object.create(DateTimeFormatException.prototype));
    captureStack(tmp, DateTimeFormatException_init_$Create$);
    return tmp;
  }
  function DateTimeFormatException() {
    captureStack(this, DateTimeFormatException);
  }
  DateTimeFormatException.$metadata$ = {
    simpleName: 'DateTimeFormatException',
    kind: 'class',
    interfaces: []
  };
  function DateTimeArithmeticException_init_$Init$(cause, $this) {
    RuntimeException_init_$Init$_2(cause, $this);
    DateTimeArithmeticException.call($this);
    return $this;
  }
  function DateTimeArithmeticException_init_$Create$(cause) {
    var tmp = DateTimeArithmeticException_init_$Init$(cause, Object.create(DateTimeArithmeticException.prototype));
    captureStack(tmp, DateTimeArithmeticException_init_$Create$);
    return tmp;
  }
  function DateTimeArithmeticException() {
    captureStack(this, DateTimeArithmeticException);
  }
  DateTimeArithmeticException.$metadata$ = {
    simpleName: 'DateTimeArithmeticException',
    kind: 'class',
    interfaces: []
  };
  function IllegalTimeZoneException_init_$Init$(cause, $this) {
    IllegalArgumentException_init_$Init$_2(cause, $this);
    IllegalTimeZoneException.call($this);
    return $this;
  }
  function IllegalTimeZoneException_init_$Create$(cause) {
    var tmp = IllegalTimeZoneException_init_$Init$(cause, Object.create(IllegalTimeZoneException.prototype));
    captureStack(tmp, IllegalTimeZoneException_init_$Create$);
    return tmp;
  }
  function IllegalTimeZoneException() {
    captureStack(this, IllegalTimeZoneException);
  }
  IllegalTimeZoneException.$metadata$ = {
    simpleName: 'IllegalTimeZoneException',
    kind: 'class',
    interfaces: []
  };
  function toInstant(_this_) {
    return Companion_getInstance_62().parse_1(_this_);
  }
  function DivRemResult(q, r) {
    this._q = q;
    this._r = r;
  }
  DivRemResult.prototype.component1_2 = function () {
    return this._q;
  };
  DivRemResult.prototype.component2_2 = function () {
    return this._r;
  };
  DivRemResult.$metadata$ = {
    simpleName: 'DivRemResult',
    kind: 'class',
    interfaces: []
  };
  function multiplyAndDivide(a, b, c) {
    if (a.equals(new Long(0, 0)) ? true : b.equals(new Long(0, 0)))
      return new DivRemResult(new Long(0, 0), new Long(0, 0));
    var ab = safeMultiplyOrZero(a, b);
    if (!ab.equals(new Long(0, 0)))
      return new DivRemResult(ab.div_27(c), ab.rem_27(c));
    if (b.equals(c))
      return new DivRemResult(a, new Long(0, 0));
    if (a.equals(c))
      return new DivRemResult(b, new Long(0, 0));
    var ae = a.compareTo_59(new Long(0, 0)) >= 0 ? new Long(0, 0) : new Long(-1, -1);
    var be = b.compareTo_59(new Long(0, 0)) >= 0 ? new Long(0, 0) : new Long(-1, -1);
    var al = a.and(new Long(-1, 0));
    var ah = a.shr_0(32).and(new Long(-1, 0));
    var bl = b.and(new Long(-1, 0));
    var bh = b.shr_0(32).and(new Long(-1, 0));
    var w = ae.times_30(bh).plus_59(ah.times_30(be));
    var x = ae.times_30(bl).plus_59(ah.times_30(bh)).plus_59(al.times_30(be));
    var y1 = ah.times_30(bl);
    var y2 = al.times_30(bh);
    var z = al.times_30(bl);
    var r4 = z.and(new Long(-1, 0));
    var tmp = y1.and(new Long(-1, 0));
    var tmp_0 = tmp.plus_59(y2.and(new Long(-1, 0)));
    var r3c = tmp_0.plus_59(z.shr_0(32).and(new Long(-1, 0)));
    var r3 = r3c.and(new Long(-1, 0));
    var tmp_1 = r3c.shr_0(32).and(new Long(-1, 0));
    var tmp_2 = tmp_1.plus_59(x.and(new Long(-1, 0)));
    var tmp_3 = tmp_2.plus_59(y1.shr_0(32).and(new Long(-1, 0)));
    var r2c = tmp_3.plus_59(y2.shr_0(32).and(new Long(-1, 0)));
    var r2 = r2c.and(new Long(-1, 0));
    var tmp_4 = r2c.shr_0(32).and(new Long(-1, 0));
    var tmp_5 = tmp_4.plus_59(x.shr_0(32).and(new Long(-1, 0)));
    var r1 = tmp_5.plus_59(w.and(new Long(-1, 0)));
    var abl = r3.shl_0(32).or(r4);
    var abh = r1.shl_0(32).or(r2);
    var tmp_6;
    var tmp0_indexBit_0 = abh;
    var tmp1_indexBit_0 = 63;
    if (tmp0_indexBit_0.shr_0(tmp1_indexBit_0).and(new Long(1, 0)).equals(new Long(1, 0))) {
      tmp_6 = -1;
    } else {
      {
        tmp_6 = 1;
      }
    }
    var sign = tmp_6;
    if (sign === -1) {
      var tmp2_plus_0 = abl.inv_0();
      var tmp3_plus_0 = 1;
      abl = tmp2_plus_0.plus_59(toLong_0(tmp3_plus_0));
      abh = abh.inv_0();
      if (abl.equals(new Long(0, 0))) {
        var tmp4_plus_0 = abh;
        var tmp5_plus_0 = 1;
        abh = tmp4_plus_0.plus_59(toLong_0(tmp5_plus_0));
      }}var q = new Long(0, 0);
    var r = new Long(0, 0);
    var inductionVariable = 127;
    if (0 <= inductionVariable)
      do {
        var bitNo = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp_7;
        if (bitNo < 64) {
          var tmp6_indexBit_0 = abl;
          tmp_7 = tmp6_indexBit_0.shr_0(bitNo).and(new Long(1, 0));
        } else {
          var tmp7_indexBit_0 = abh;
          var tmp8_indexBit_0 = bitNo - 64 | 0;
          tmp_7 = tmp7_indexBit_0.shr_0(tmp8_indexBit_0).and(new Long(1, 0));
        }
        var nextBit = tmp_7;
        r = r.shl_0(1).or(nextBit);
        if (r.compareTo_59(c) >= 0 ? true : r.compareTo_59(new Long(0, 0)) < 0) {
          r = r.minus_30(c);
          if (bitNo < 63)
            q = q.or((new Long(1, 0)).shl_0(bitNo));
          else
            throw ArithmeticException_init_$Create$('The result of a multiplication followed by division overflows a long');
        }}
       while (0 <= inductionVariable);
    return new DivRemResult(numberToLong(sign).times_30(q), numberToLong(sign).times_30(r));
  }
  function safeMultiplyOrZero(a, b) {
    var tmp0_subject = b;
    if (tmp0_subject.equals(new Long(-1, -1))) {
      Companion_getInstance_15();
      if (a.equals(new Long(0, -2147483648))) {
        return new Long(0, 0);
      } else {
      }
      return a.unaryMinus_4();
    } else if (tmp0_subject.equals(new Long(1, 0)))
      return a;
    var total = a.times_30(b);
    if (!total.div_27(b).equals(a)) {
      return new Long(0, 0);
    }return total;
  }
  function _no_name_provided__233() {
  }
  _no_name_provided__233.prototype.invoke_378 = function ($this$buildClassSerialDescriptor) {
    var tmp0_element_0 = 'nanoseconds';
    var tmp1_element_0 = emptyList();
    var tmp2_element_0 = false;
    var tmp0_cast_0_1_2 = serializer(createKType_0(getKClass_0(Long), [], false));
    var descriptor_1 = (isInterface(tmp0_cast_0_1_2, KSerializer) ? tmp0_cast_0_1_2 : THROW_CCE())._get_descriptor__77();
    $this$buildClassSerialDescriptor.element(tmp0_element_0, descriptor_1, tmp1_element_0, tmp2_element_0);
  };
  _no_name_provided__233.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__233.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function TimeBasedDateTimeUnitSerializer() {
    TimeBasedDateTimeUnitSerializer_instance = this;
    var tmp = this;
    var tmp_0 = [];
    tmp._descriptor_32 = buildClassSerialDescriptor$default('TimeBased', tmp_0, _no_name_provided_$factory_195(), 2, null);
  }
  TimeBasedDateTimeUnitSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_32;
  };
  TimeBasedDateTimeUnitSerializer.prototype.serialize_76 = function (encoder, value) {
    var tmp0_encodeStructure_0 = this._descriptor_32;
    var composite_1 = encoder.beginStructure_11(tmp0_encodeStructure_0);
    var ex_2 = null;
    try {
      composite_1.encodeLongElement_1(TimeBasedDateTimeUnitSerializer_getInstance()._descriptor_32, 0, value._nanoseconds);
    } catch ($p) {
      if ($p instanceof Error) {
        ex_2 = $p;
        throw $p;
      } else {
        {
          throw $p;
        }
      }
    }
    finally {
      if (ex_2 == null)
        composite_1.endStructure_11(tmp0_encodeStructure_0);
    }
  };
  TimeBasedDateTimeUnitSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_76(encoder, value instanceof TimeBased ? value : THROW_CCE());
  };
  TimeBasedDateTimeUnitSerializer.prototype.deserialize_81 = function (decoder) {
    var seen = false;
    var nanoseconds = new Long(0, 0);
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_decodeStructure_0 = this._descriptor_32;
      var composite_1 = decoder.beginStructure_11(tmp0_decodeStructure_0);
      var ex_2 = null;
      try {
        var tmp;
        if (composite_1.decodeSequentially_8()) {
          nanoseconds = composite_1.decodeLongElement_8(TimeBasedDateTimeUnitSerializer_getInstance()._descriptor_32, 0);
          seen = true;
          tmp = Unit_getInstance();
        } else {
          loop: while (true) {
            var elementIndex_5 = composite_1.decodeElementIndex_8(TimeBasedDateTimeUnitSerializer_getInstance()._descriptor_32);
            if (elementIndex_5 === 0) {
              nanoseconds = composite_1.decodeLongElement_8(TimeBasedDateTimeUnitSerializer_getInstance()._descriptor_32, 0);
              seen = true;
            } else {
              Companion_getInstance_51();
              if (elementIndex_5 === -1)
                break loop;
              else {
                throw UnknownFieldException_init_$Create$(elementIndex_5);
              }
            }
          }
          tmp = Unit_getInstance();
        }
        tmp$ret$0 = tmp;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof Error) {
          ex_2 = $p;
          throw $p;
        } else {
          {
            throw $p;
          }
        }
      }
      finally {
        if (ex_2 == null)
          composite_1.endStructure_11(tmp0_decodeStructure_0);
      }
    }
     while (false);
    if (!seen)
      throw MissingFieldException_init_$Create$('nanoseconds');
    return new TimeBased(nanoseconds);
  };
  TimeBasedDateTimeUnitSerializer.$metadata$ = {
    simpleName: 'TimeBasedDateTimeUnitSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var TimeBasedDateTimeUnitSerializer_instance;
  function TimeBasedDateTimeUnitSerializer_getInstance() {
    if (TimeBasedDateTimeUnitSerializer_instance == null)
      new TimeBasedDateTimeUnitSerializer();
    return TimeBasedDateTimeUnitSerializer_instance;
  }
  function _no_name_provided__234() {
  }
  _no_name_provided__234.prototype.invoke_378 = function ($this$buildClassSerialDescriptor) {
    var tmp0_element_0 = 'days';
    var tmp1_element_0 = emptyList();
    var tmp2_element_0 = false;
    var tmp0_cast_0_1_2 = serializer(createKType_0(PrimitiveClasses_getInstance()._get_intClass_(), [], false));
    var descriptor_1 = (isInterface(tmp0_cast_0_1_2, KSerializer) ? tmp0_cast_0_1_2 : THROW_CCE())._get_descriptor__77();
    $this$buildClassSerialDescriptor.element(tmp0_element_0, descriptor_1, tmp1_element_0, tmp2_element_0);
  };
  _no_name_provided__234.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__234.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function DayBasedDateTimeUnitSerializer() {
    DayBasedDateTimeUnitSerializer_instance = this;
    var tmp = this;
    var tmp_0 = [];
    tmp._descriptor_33 = buildClassSerialDescriptor$default('DayBased', tmp_0, _no_name_provided_$factory_196(), 2, null);
  }
  DayBasedDateTimeUnitSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_33;
  };
  DayBasedDateTimeUnitSerializer.prototype.serialize_78 = function (encoder, value) {
    var tmp0_encodeStructure_0 = this._descriptor_33;
    var composite_1 = encoder.beginStructure_11(tmp0_encodeStructure_0);
    var ex_2 = null;
    try {
      composite_1.encodeIntElement_1(DayBasedDateTimeUnitSerializer_getInstance()._descriptor_33, 0, value._days);
    } catch ($p) {
      if ($p instanceof Error) {
        ex_2 = $p;
        throw $p;
      } else {
        {
          throw $p;
        }
      }
    }
    finally {
      if (ex_2 == null)
        composite_1.endStructure_11(tmp0_encodeStructure_0);
    }
  };
  DayBasedDateTimeUnitSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_78(encoder, value instanceof DayBased ? value : THROW_CCE());
  };
  DayBasedDateTimeUnitSerializer.prototype.deserialize_81 = function (decoder) {
    var seen = false;
    var days = 0;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_decodeStructure_0 = this._descriptor_33;
      var composite_1 = decoder.beginStructure_11(tmp0_decodeStructure_0);
      var ex_2 = null;
      try {
        var tmp;
        if (composite_1.decodeSequentially_8()) {
          days = composite_1.decodeIntElement_8(DayBasedDateTimeUnitSerializer_getInstance()._descriptor_33, 0);
          seen = true;
          tmp = Unit_getInstance();
        } else {
          loop: while (true) {
            var elementIndex_5 = composite_1.decodeElementIndex_8(DayBasedDateTimeUnitSerializer_getInstance()._descriptor_33);
            if (elementIndex_5 === 0) {
              days = composite_1.decodeIntElement_8(DayBasedDateTimeUnitSerializer_getInstance()._descriptor_33, 0);
              seen = true;
            } else {
              Companion_getInstance_51();
              if (elementIndex_5 === -1)
                break loop;
              else {
                throw UnknownFieldException_init_$Create$(elementIndex_5);
              }
            }
          }
          tmp = Unit_getInstance();
        }
        tmp$ret$0 = tmp;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof Error) {
          ex_2 = $p;
          throw $p;
        } else {
          {
            throw $p;
          }
        }
      }
      finally {
        if (ex_2 == null)
          composite_1.endStructure_11(tmp0_decodeStructure_0);
      }
    }
     while (false);
    if (!seen)
      throw MissingFieldException_init_$Create$('days');
    return new DayBased(days);
  };
  DayBasedDateTimeUnitSerializer.$metadata$ = {
    simpleName: 'DayBasedDateTimeUnitSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var DayBasedDateTimeUnitSerializer_instance;
  function DayBasedDateTimeUnitSerializer_getInstance() {
    if (DayBasedDateTimeUnitSerializer_instance == null)
      new DayBasedDateTimeUnitSerializer();
    return DayBasedDateTimeUnitSerializer_instance;
  }
  function _no_name_provided__235() {
  }
  _no_name_provided__235.prototype.invoke_378 = function ($this$buildClassSerialDescriptor) {
    var tmp0_element_0 = 'months';
    var tmp1_element_0 = emptyList();
    var tmp2_element_0 = false;
    var tmp0_cast_0_1_2 = serializer(createKType_0(PrimitiveClasses_getInstance()._get_intClass_(), [], false));
    var descriptor_1 = (isInterface(tmp0_cast_0_1_2, KSerializer) ? tmp0_cast_0_1_2 : THROW_CCE())._get_descriptor__77();
    $this$buildClassSerialDescriptor.element(tmp0_element_0, descriptor_1, tmp1_element_0, tmp2_element_0);
  };
  _no_name_provided__235.prototype.invoke_420 = function (p1) {
    this.invoke_378(p1 instanceof ClassSerialDescriptorBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__235.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function MonthBasedDateTimeUnitSerializer() {
    MonthBasedDateTimeUnitSerializer_instance = this;
    var tmp = this;
    var tmp_0 = [];
    tmp._descriptor_34 = buildClassSerialDescriptor$default('MonthBased', tmp_0, _no_name_provided_$factory_197(), 2, null);
  }
  MonthBasedDateTimeUnitSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_34;
  };
  MonthBasedDateTimeUnitSerializer.prototype.serialize_80 = function (encoder, value) {
    var tmp0_encodeStructure_0 = this._descriptor_34;
    var composite_1 = encoder.beginStructure_11(tmp0_encodeStructure_0);
    var ex_2 = null;
    try {
      composite_1.encodeIntElement_1(MonthBasedDateTimeUnitSerializer_getInstance()._descriptor_34, 0, value._months);
    } catch ($p) {
      if ($p instanceof Error) {
        ex_2 = $p;
        throw $p;
      } else {
        {
          throw $p;
        }
      }
    }
    finally {
      if (ex_2 == null)
        composite_1.endStructure_11(tmp0_encodeStructure_0);
    }
  };
  MonthBasedDateTimeUnitSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_80(encoder, value instanceof MonthBased ? value : THROW_CCE());
  };
  MonthBasedDateTimeUnitSerializer.prototype.deserialize_81 = function (decoder) {
    var seen = false;
    var months = 0;
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_decodeStructure_0 = this._descriptor_34;
      var composite_1 = decoder.beginStructure_11(tmp0_decodeStructure_0);
      var ex_2 = null;
      try {
        var tmp;
        if (composite_1.decodeSequentially_8()) {
          months = composite_1.decodeIntElement_8(MonthBasedDateTimeUnitSerializer_getInstance()._descriptor_34, 0);
          seen = true;
          tmp = Unit_getInstance();
        } else {
          loop: while (true) {
            var elementIndex_5 = composite_1.decodeElementIndex_8(MonthBasedDateTimeUnitSerializer_getInstance()._descriptor_34);
            if (elementIndex_5 === 0) {
              months = composite_1.decodeIntElement_8(MonthBasedDateTimeUnitSerializer_getInstance()._descriptor_34, 0);
              seen = true;
            } else {
              Companion_getInstance_51();
              if (elementIndex_5 === -1)
                break loop;
              else {
                throw UnknownFieldException_init_$Create$(elementIndex_5);
              }
            }
          }
          tmp = Unit_getInstance();
        }
        tmp$ret$0 = tmp;
        break l$ret$1;
      } catch ($p) {
        if ($p instanceof Error) {
          ex_2 = $p;
          throw $p;
        } else {
          {
            throw $p;
          }
        }
      }
      finally {
        if (ex_2 == null)
          composite_1.endStructure_11(tmp0_decodeStructure_0);
      }
    }
     while (false);
    if (!seen)
      throw MissingFieldException_init_$Create$('months');
    return new MonthBased(months);
  };
  MonthBasedDateTimeUnitSerializer.$metadata$ = {
    simpleName: 'MonthBasedDateTimeUnitSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var MonthBasedDateTimeUnitSerializer_instance;
  function MonthBasedDateTimeUnitSerializer_getInstance() {
    if (MonthBasedDateTimeUnitSerializer_instance == null)
      new MonthBasedDateTimeUnitSerializer();
    return MonthBasedDateTimeUnitSerializer_instance;
  }
  function DateBasedDateTimeUnitSerializer() {
    DateBasedDateTimeUnitSerializer_instance = this;
    AbstractPolymorphicSerializer.call(this);
    var tmp = this;
    var tmp_0 = getKClass_0(DateBased);
    var tmp0_arrayOf_0 = [getKClass_0(DayBased), getKClass_0(MonthBased)];
    var tmp_1 = tmp0_arrayOf_0;
    var tmp1_arrayOf_0 = [DayBasedDateTimeUnitSerializer_getInstance(), MonthBasedDateTimeUnitSerializer_getInstance()];
    tmp._impl = new SealedClassSerializer('kotlinx.datetime.DateTimeUnit.DateBased', tmp_0, tmp_1, tmp1_arrayOf_0);
  }
  DateBasedDateTimeUnitSerializer.prototype.findPolymorphicSerializerOrNull_8 = function (decoder, klassName) {
    return this._impl.findPolymorphicSerializerOrNull_8(decoder, klassName);
  };
  DateBasedDateTimeUnitSerializer.prototype.findPolymorphicSerializerOrNull_6 = function (encoder, value) {
    return this._impl.findPolymorphicSerializerOrNull_10(encoder, value);
  };
  DateBasedDateTimeUnitSerializer.prototype.findPolymorphicSerializerOrNull_10 = function (encoder, value) {
    return this.findPolymorphicSerializerOrNull_6(encoder, value instanceof DateBased ? value : THROW_CCE());
  };
  DateBasedDateTimeUnitSerializer.prototype._get_baseClass__3 = function () {
    return getKClass_0(DateBased);
  };
  DateBasedDateTimeUnitSerializer.prototype._get_descriptor__77 = function () {
    return this._impl._descriptor_0;
  };
  DateBasedDateTimeUnitSerializer.$metadata$ = {
    simpleName: 'DateBasedDateTimeUnitSerializer',
    kind: 'object',
    interfaces: []
  };
  var DateBasedDateTimeUnitSerializer_instance;
  function DateBasedDateTimeUnitSerializer_getInstance() {
    if (DateBasedDateTimeUnitSerializer_instance == null)
      new DateBasedDateTimeUnitSerializer();
    return DateBasedDateTimeUnitSerializer_instance;
  }
  function DateTimeUnitSerializer() {
    DateTimeUnitSerializer_instance = this;
    AbstractPolymorphicSerializer.call(this);
    var tmp = this;
    var tmp_0 = getKClass_0(DateTimeUnit);
    var tmp0_arrayOf_0 = [getKClass_0(DayBased), getKClass_0(MonthBased), getKClass_0(TimeBased)];
    var tmp_1 = tmp0_arrayOf_0;
    var tmp1_arrayOf_0 = [DayBasedDateTimeUnitSerializer_getInstance(), MonthBasedDateTimeUnitSerializer_getInstance(), TimeBasedDateTimeUnitSerializer_getInstance()];
    tmp._impl_0 = new SealedClassSerializer('kotlinx.datetime.DateTimeUnit', tmp_0, tmp_1, tmp1_arrayOf_0);
  }
  DateTimeUnitSerializer.prototype.findPolymorphicSerializerOrNull_8 = function (decoder, klassName) {
    return this._impl_0.findPolymorphicSerializerOrNull_8(decoder, klassName);
  };
  DateTimeUnitSerializer.prototype.findPolymorphicSerializerOrNull_9 = function (encoder, value) {
    return this._impl_0.findPolymorphicSerializerOrNull_10(encoder, value);
  };
  DateTimeUnitSerializer.prototype.findPolymorphicSerializerOrNull_10 = function (encoder, value) {
    return this.findPolymorphicSerializerOrNull_9(encoder, value instanceof DateTimeUnit ? value : THROW_CCE());
  };
  DateTimeUnitSerializer.prototype._get_baseClass__3 = function () {
    return getKClass_0(DateTimeUnit);
  };
  DateTimeUnitSerializer.prototype._get_descriptor__77 = function () {
    return this._impl_0._descriptor_0;
  };
  DateTimeUnitSerializer.$metadata$ = {
    simpleName: 'DateTimeUnitSerializer',
    kind: 'object',
    interfaces: []
  };
  var DateTimeUnitSerializer_instance;
  function DateTimeUnitSerializer_getInstance() {
    if (DateTimeUnitSerializer_instance == null)
      new DateTimeUnitSerializer();
    return DateTimeUnitSerializer_instance;
  }
  function _no_name_provided_$factory_195() {
    var i = new _no_name_provided__233();
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_196() {
    var i = new _no_name_provided__234();
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_197() {
    var i = new _no_name_provided__235();
    return function (p1) {
      i.invoke_378(p1);
      return Unit_getInstance();
    };
  }
  function InstantIso8601Serializer() {
    InstantIso8601Serializer_instance = this;
    this._descriptor_35 = PrimitiveSerialDescriptor('Instant', STRING_getInstance());
  }
  InstantIso8601Serializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_35;
  };
  InstantIso8601Serializer.prototype.deserialize_81 = function (decoder) {
    return Companion_getInstance_62().parse_1(decoder.decodeString_8());
  };
  InstantIso8601Serializer.prototype.serialize_84 = function (encoder, value) {
    encoder.encodeString_1(value.toString());
  };
  InstantIso8601Serializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_84(encoder, value instanceof Instant_0 ? value : THROW_CCE());
  };
  InstantIso8601Serializer.$metadata$ = {
    simpleName: 'InstantIso8601Serializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var InstantIso8601Serializer_instance;
  function InstantIso8601Serializer_getInstance() {
    if (InstantIso8601Serializer_instance == null)
      new InstantIso8601Serializer();
    return InstantIso8601Serializer_instance;
  }
  function TimeZoneSerializer() {
    TimeZoneSerializer_instance = this;
    this._descriptor_36 = PrimitiveSerialDescriptor('TimeZone', STRING_getInstance());
  }
  TimeZoneSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_36;
  };
  TimeZoneSerializer.prototype.deserialize_81 = function (decoder) {
    return Companion_getInstance_63().of_0(decoder.decodeString_8());
  };
  TimeZoneSerializer.prototype.serialize_86 = function (encoder, value) {
    encoder.encodeString_1(value._get_id__14());
  };
  TimeZoneSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_86(encoder, value instanceof TimeZone ? value : THROW_CCE());
  };
  TimeZoneSerializer.$metadata$ = {
    simpleName: 'TimeZoneSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var TimeZoneSerializer_instance;
  function TimeZoneSerializer_getInstance() {
    if (TimeZoneSerializer_instance == null)
      new TimeZoneSerializer();
    return TimeZoneSerializer_instance;
  }
  function ZoneOffsetSerializer() {
    ZoneOffsetSerializer_instance = this;
    this._descriptor_37 = PrimitiveSerialDescriptor('ZoneOffset', STRING_getInstance());
  }
  ZoneOffsetSerializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_37;
  };
  ZoneOffsetSerializer.prototype.deserialize_81 = function (decoder) {
    var zone = Companion_getInstance_63().of_0(decoder.decodeString_8());
    if (zone instanceof ZoneOffset_0) {
      return zone;
    } else {
      {
        throw SerializationException_init_$Create$('' + "Timezone identifier '" + zone + "' does not correspond to a fixed-offset timezone");
      }
    }
  };
  ZoneOffsetSerializer.prototype.serialize_88 = function (encoder, value) {
    encoder.encodeString_1(value._get_id__14());
  };
  ZoneOffsetSerializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_88(encoder, value instanceof ZoneOffset_0 ? value : THROW_CCE());
  };
  ZoneOffsetSerializer.$metadata$ = {
    simpleName: 'ZoneOffsetSerializer',
    kind: 'object',
    interfaces: [KSerializer]
  };
  var ZoneOffsetSerializer_instance;
  function ZoneOffsetSerializer_getInstance() {
    if (ZoneOffsetSerializer_instance == null)
      new ZoneOffsetSerializer();
    return ZoneOffsetSerializer_instance;
  }
  function fixOffsetRepresentation($this, isoString) {
    var tmp = new Char(84);
    var time = indexOf$default(isoString, tmp, 0, true, 2, null);
    if (time === -1)
      return isoString;
    var tmp$ret$0;
    l$ret$1: do {
      var inductionVariable = charSequenceLength(isoString) - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var index_2 = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp0__anonymous__3 = charSequenceGet(isoString, index_2);
          if (tmp0__anonymous__3.equals(new Char(43)) ? true : tmp0__anonymous__3.equals(new Char(45))) {
            tmp$ret$0 = index_2;
            break l$ret$1;
          } else {
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$0 = -1;
    }
     while (false);
    var offset = tmp$ret$0;
    if (offset < time)
      return isoString;
    var tmp_0 = new Char(58);
    var separator = indexOf$default(isoString, tmp_0, offset, false, 4, null);
    return !(separator === -1) ? isoString : '' + isoString + ':00';
  }
  function Companion_63() {
    Companion_instance_62 = this;
    this._DISTANT_PAST = new Instant_0(Instant_2.ofEpochSecond(new Long(-931914497, -750), 999999999));
    this._DISTANT_FUTURE = new Instant_0(Instant_2.ofEpochSecond(new Long(1151527680, 720), 0));
    this._MIN = new Instant_0(Instant_2.MIN);
    this._MAX = new Instant_0(Instant_2.MAX);
  }
  Companion_63.prototype.now_1 = function () {
    return new Instant_0(Clock_2.systemUTC().instant());
  };
  Companion_63.prototype.parse_1 = function (isoString) {
    var tmp;
    try {
      tmp = new Instant_0(OffsetDateTime_1.parse(fixOffsetRepresentation(this, isoString)).toInstant());
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        if (isJodaDateTimeParseException($p))
          throw DateTimeFormatException_init_$Create$($p);
        throw $p;
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  Companion_63.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_62;
  function Companion_getInstance_62() {
    if (Companion_instance_62 == null)
      new Companion_63();
    return Companion_instance_62;
  }
  function Instant_0(value) {
    Companion_getInstance_62();
    this._value_24 = value;
  }
  Instant_0.prototype._get_epochSeconds_ = function () {
    return numberToLong(this._value_24.epochSecond());
  };
  Instant_0.prototype.plusFix = function (seconds, nanos) {
    var newSeconds = numberToDouble(this._value_24.epochSecond()) + seconds;
    var newNanos = numberToDouble(this._value_24.nano()) + nanos;
    return Instant_2.ofEpochSecond(newSeconds, newNanos);
  };
  Instant_0.prototype.compareTo_29 = function (other) {
    return numberToInt(this._value_24.compareTo(other._value_24));
  };
  Instant_0.prototype.compareTo_30 = function (other) {
    return this.compareTo_29(other instanceof Instant_0 ? other : THROW_CCE());
  };
  Instant_0.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      if (other instanceof Instant_0) {
        tmp_0 = equals_1(this._value_24, other._value_24);
      } else {
        {
          tmp_0 = false;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  Instant_0.prototype.hashCode = function () {
    return numberToInt(this._value_24.hashCode());
  };
  Instant_0.prototype.toString = function () {
    return this._value_24.toString();
  };
  Instant_0.$metadata$ = {
    simpleName: 'Instant',
    kind: 'class',
    interfaces: [Comparable],
    associatedObjects: {0: InstantIso8601Serializer_getInstance}
  };
  function plus_4(_this_, value, unit, timeZone) {
    var tmp;
    try {
      var thisZdt = atZone(_this_, timeZone);
      var tmp0_subject = unit;
      var tmp_0;
      if (tmp0_subject instanceof TimeBased) {
        tmp_0 = checkZone(plus_5(_this_, toLong_0(value), unit)._value_24, timeZone);
      } else {
        if (tmp0_subject instanceof DayBased) {
          var tmp_1 = thisZdt.plusDays(value * unit._days);
          tmp_0 = (tmp_1 instanceof ZonedDateTime_1 ? tmp_1 : THROW_CCE()).toInstant();
        } else {
          if (tmp0_subject instanceof MonthBased) {
            tmp_0 = thisZdt.plusMonths(value * unit._months).toInstant();
          } else {
            {
              noWhenBranchMatchedException();
            }
          }
        }
      }
      var tmp0_let_0 = tmp_0;
      tmp = new Instant_0(tmp0_let_0);
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Error) {
        if (isJodaDateTimeException($p))
          throw DateTimeArithmeticException_init_$Create$($p);
        throw $p;
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function atZone(_this_, zone) {
    return _this_._value_24.atZone(zone._zoneId);
  }
  function checkZone(_this_, zone) {
    _this_.atZone(zone._zoneId);
    Unit_getInstance();
    return _this_;
  }
  function plus_5(_this_, value, unit) {
    var tmp;
    try {
      var tmp0_let_0 = multiplyAndDivide(value, unit._nanoseconds, new Long(1000000000, 0));
      var d_2 = tmp0_let_0.component1_2();
      var r_3 = tmp0_let_0.component2_2();
      tmp = new Instant_0(_this_.plusFix(d_2.toDouble_4(), r_3.toInt_5()));
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        if (!isJodaDateTimeException($p)) {
          throw $p;
        }tmp_0 = value.compareTo_59(new Long(0, 0)) > 0 ? Companion_getInstance_62()._MAX : Companion_getInstance_62()._MIN;
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function isJodaDateTimeException(_this_) {
    return _this_.name == 'DateTimeException';
  }
  function isJodaDateTimeParseException(_this_) {
    return _this_.name == 'DateTimeParseException';
  }
  function Companion_64() {
    Companion_instance_63 = this;
    var tmp = this;
    var tmp0_let_0 = ZoneOffset_2.UTC;
    tmp._UTC = new TimeZone(tmp0_let_0);
  }
  Companion_64.prototype.currentSystemDefault = function () {
    var tmp0_let_0 = ZoneId_1.systemDefault();
    return new TimeZone(tmp0_let_0);
  };
  Companion_64.prototype.of_0 = function (zoneId) {
    var tmp;
    try {
      var zone = ZoneId_1.of(zoneId);
      var tmp_0;
      if (zone instanceof ZoneOffset_2) {
        tmp_0 = new ZoneOffset_0(zone);
      } else {
        {
          tmp_0 = new TimeZone(zone);
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_1;
      if ($p instanceof Error) {
        if (isJodaDateTimeException($p))
          throw IllegalTimeZoneException_init_$Create$($p);
        throw $p;
      } else {
        {
          throw $p;
        }
      }
      tmp = tmp_1;
    }
    return tmp;
  };
  Companion_64.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_63;
  function Companion_getInstance_63() {
    if (Companion_instance_63 == null)
      new Companion_64();
    return Companion_instance_63;
  }
  function TimeZone(zoneId) {
    Companion_getInstance_63();
    this._zoneId = zoneId;
  }
  TimeZone.prototype._get_id__14 = function () {
    return this._zoneId.id();
  };
  TimeZone.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      if (other instanceof TimeZone) {
        tmp_0 = equals_1(this._zoneId, other._zoneId);
      } else {
        {
          tmp_0 = false;
        }
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  TimeZone.prototype.hashCode = function () {
    return numberToInt(this._zoneId.hashCode());
  };
  TimeZone.prototype.toString = function () {
    return this._zoneId.toString();
  };
  TimeZone.$metadata$ = {
    simpleName: 'TimeZone',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: TimeZoneSerializer_getInstance}
  };
  function Companion_65() {
    Companion_instance_64 = this;
  }
  Companion_65.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_64;
  function Companion_getInstance_64() {
    if (Companion_instance_64 == null)
      new Companion_65();
    return Companion_instance_64;
  }
  function ZoneOffset_0(zoneOffset) {
    Companion_getInstance_64();
    TimeZone.call(this, zoneOffset);
  }
  ZoneOffset_0.$metadata$ = {
    simpleName: 'ZoneOffset',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: ZoneOffsetSerializer_getInstance}
  };
  function safeMultiply(a, b) {
    var tmp0_subject = b;
    if (tmp0_subject.equals(new Long(-1, -1))) {
      Companion_getInstance_15();
      if (a.equals(new Long(0, -2147483648))) {
        throw ArithmeticException_init_$Create$('' + 'Multiplication overflows a long: ' + a + ' * ' + b);
      } else {
      }
      return a.unaryMinus_4();
    } else if (tmp0_subject.equals(new Long(0, 0)))
      return new Long(0, 0);
    else if (tmp0_subject.equals(new Long(1, 0)))
      return a;
    var total = a.times_30(b);
    if (!total.div_27(b).equals(a)) {
      throw ArithmeticException_init_$Create$('' + 'Multiplication overflows a long: ' + a + ' * ' + b);
    }return total;
  }
  function safeMultiply_0(a, b) {
    var tmp0_times_0 = toLong_0(a);
    var result = tmp0_times_0.times_30(toLong_0(b));
    if (result.compareTo_59(toLong_0(IntCompanionObject_getInstance()._MAX_VALUE_5)) > 0 ? true : result.compareTo_59(toLong_0(IntCompanionObject_getInstance()._MIN_VALUE_5)) < 0)
      throw ArithmeticException_init_$Create$('' + 'Multiplication overflows Int range: ' + a + ' * ' + b + '.');
    return result.toInt_5();
  }
  function _get_githubClient_($this) {
    var tmp0_getValue_0 = $this._githubClient$delegate;
    var tmp1_getValue_0 = githubClient$factory();
    return tmp0_getValue_0._get_value__27();
  }
  function _get_fetchMilestoneByName_($this) {
    var tmp = $this._fetchMilestoneByName;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('fetchMilestoneByName');
    }
  }
  function _get_fetchLastClosedMilestone_($this) {
    var tmp = $this._fetchLastClosedMilestone;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('fetchLastClosedMilestone');
    }
  }
  function _get_pRsForMilestone_($this) {
    var tmp0_getValue_0 = $this._pRsForMilestone$delegate;
    var tmp1_getValue_0 = pRsForMilestone$factory();
    return tmp0_getValue_0._get_value__27();
  }
  function _get_buildChangelog_($this) {
    var tmp0_getValue_0 = $this._buildChangelog$delegate;
    var tmp1_getValue_0 = buildChangelog$factory();
    return tmp0_getValue_0._get_value__27();
  }
  function fetchMilestone($this, $cont) {
    var tmp = new $fetchMilestoneCOROUTINE$1($this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function _no_name_provided__236(this$0) {
    this._this$0_63 = this$0;
  }
  _no_name_provided__236.prototype.invoke_411 = function () {
    return new GithubClient(this._this$0_63._inputs._token_0, this._this$0_63._inputs._owner_3, this._this$0_63._inputs._repo_1);
  };
  _no_name_provided__236.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__237(this$0) {
    this._this$0_64 = this$0;
  }
  _no_name_provided__237.prototype.invoke_411 = function () {
    return new GetPRsForMilestone(_get_githubClient_(this._this$0_64));
  };
  _no_name_provided__237.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__238(this$0) {
    this._this$0_65 = this$0;
  }
  _no_name_provided__238.prototype.invoke_411 = function () {
    return new BuildChangelog(this._this$0_65._inputs);
  };
  _no_name_provided__238.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function $buildCOROUTINE$0(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__42 = _this_;
  }
  $buildCOROUTINE$0.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 18;
            this._state_0 = 1;
            suspendResult = fetchMilestone(this.__this__42, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._milestoneInfo0 = suspendResult;
            print('' + '\u2139\uFE0F Milestone found with name ' + this._milestoneInfo0._title_2 + ', closed on ' + this._milestoneInfo0._closedAt_1);
            setOutput_1('milestone', this._milestoneInfo0._title_2);
            this._state_0 = 2;
            continue $sm;
          case 2:
            var tmp_0 = this;
            tmp_0._tmp0_group_02 = '' + '\u2139\uFE0F Fetching PRs for milestone ' + this._milestoneInfo0._title_2;
            startGroup_1(this._tmp0_group_02);
            this._state_0 = 3;
            continue $sm;
          case 3:
            this._state_0 = 4;
            continue $sm;
          case 4:
            this._exceptionState = 17;
            this._state_0 = 5;
            var tmp_1 = _get_pRsForMilestone_(this.__this__42);
            var tmp0_elvis_lhs_3 = this._milestoneInfo0._closedAt_1;
            var tmp1_elvis_lhs_2 = tmp0_elvis_lhs_3 == null ? this._milestoneInfo0._updated_at : tmp0_elvis_lhs_3;
            suspendResult = tmp_1.invoke_421(this._milestoneInfo0._number_1, this._milestoneInfo0._closedPRs, tmp1_elvis_lhs_2 == null ? System_getInstance().now_1() : tmp1_elvis_lhs_2, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 5:
            this._tmp$ret$04 = suspendResult;
            this._exceptionState = 18;
            this._state_0 = 6;
            var tmp_2 = this;
            continue $sm;
          case 6:
            this._tmp5_0 = this._tmp$ret$04;
            endGroup_1();
            this._tmp$ret$41 = this._tmp5_0;
            this._state_0 = 8;
            continue $sm;
          case 7:
            endGroup_1();
            if (false) {}
            this._state_0 = 8;
            continue $sm;
          case 8:
            this._pullRequestList6 = this._tmp$ret$41;
            println('' + '\u2139\uFE0F Retrieved ' + this._pullRequestList6._get_size__48() + ' merged PRs');
            this._state_0 = 9;
            continue $sm;
          case 9:
            var tmp_3 = this;
            tmp_3._tmp1_group_08 = '\u2139\uFE0F Building changelog';
            startGroup_1(this._tmp1_group_08);
            this._state_0 = 10;
            continue $sm;
          case 10:
            this._state_0 = 11;
            continue $sm;
          case 11:
            this._exceptionState = 16;
            this._state_0 = 12;
            suspendResult = _get_buildChangelog_(this.__this__42).invoke_406(this._pullRequestList6, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 12:
            this._tmp$ret$610 = suspendResult;
            this._exceptionState = 18;
            this._state_0 = 13;
            var tmp_4 = this;
            continue $sm;
          case 13:
            var tmp_5 = this._tmp$ret$610;
            endGroup_1();
            this._tmp$ret$107 = tmp_5;
            this._state_0 = 15;
            continue $sm;
          case 14:
            endGroup_1();
            if (false) {}
            this._state_0 = 15;
            continue $sm;
          case 15:
            return this._tmp$ret$107;
          case 16:
            this._exceptionState = 18;
            var t = this._exception_0;
            endGroup_1();
            throw t;
          case 17:
            this._exceptionState = 18;
            var t_0 = this._exception_0;
            endGroup_1();
            throw t_0;
          case 18:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 18) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $buildCOROUTINE$0.$metadata$ = {
    simpleName: '$buildCOROUTINE$0',
    kind: 'class',
    interfaces: []
  };
  function $fetchMilestoneCOROUTINE$1(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__43 = _this_;
  }
  $fetchMilestoneCOROUTINE$1.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 18;
            var tmp_0 = this;
            tmp_0._tmp0_isNullOrBlank_01 = this.__this__43._inputs._milestone_0;
            if (this._tmp0_isNullOrBlank_01 == null ? true : isBlank(this._tmp0_isNullOrBlank_01)) {
              this._state_0 = 9;
              continue $sm;
            } else {
              {
                this._state_0 = 1;
                continue $sm;
              }
            }

            break;
          case 1:
            var tmp_1 = this;
            tmp_1._tmp2_group_04 = '' + '\u2139\uFE0F Resolving milestone with name ' + this.__this__43._inputs._milestone_0;
            startGroup_1(this._tmp2_group_04);
            this._state_0 = 2;
            continue $sm;
          case 2:
            this._state_0 = 3;
            continue $sm;
          case 3:
            this._exceptionState = 8;
            this.__this__43._fetchMilestoneByName = new FetchMilestoneByName(_get_githubClient_(this.__this__43));
            this._state_0 = 4;
            suspendResult = _get_fetchMilestoneByName_(this.__this__43).invoke_414(this.__this__43._inputs._milestone_0, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 4:
            this._tmp$ret$66 = suspendResult;
            this._exceptionState = 18;
            this._state_0 = 5;
            var tmp_2 = this;
            continue $sm;
          case 5:
            this._tmp7 = this._tmp$ret$66;
            endGroup_1();
            this._tmp$ret$103 = this._tmp7;
            this._state_0 = 7;
            continue $sm;
          case 6:
            endGroup_1();
            if (false) {}
            this._state_0 = 7;
            continue $sm;
          case 7:
            this._WHEN_RESULT0_3 = this._tmp$ret$103;
            this._state_0 = 16;
            continue $sm;
          case 8:
            this._exceptionState = 18;
            this._t8 = this._exception_0;
            endGroup_1();
            throw this._t8;
          case 9:
            var tmp_3 = this;
            tmp_3._tmp1_group_09 = '\u2139\uFE0F No milestone supplied, resolving from closed list';
            startGroup_1(this._tmp1_group_09);
            this._state_0 = 10;
            continue $sm;
          case 10:
            this._state_0 = 11;
            continue $sm;
          case 11:
            this._exceptionState = 17;
            this.__this__43._fetchLastClosedMilestone = new FetchLastClosedMilestone(_get_githubClient_(this.__this__43));
            this._state_0 = 12;
            suspendResult = _get_fetchLastClosedMilestone_(this.__this__43).invoke_411(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 12:
            this._tmp$ret$011 = suspendResult;
            this._exceptionState = 18;
            this._state_0 = 13;
            var tmp_4 = this;
            continue $sm;
          case 13:
            var tmp_5 = this._tmp$ret$011;
            endGroup_1();
            this._tmp$ret$42 = tmp_5;
            this._state_0 = 15;
            continue $sm;
          case 14:
            endGroup_1();
            if (false) {}
            this._state_0 = 15;
            continue $sm;
          case 15:
            this._WHEN_RESULT0_3 = this._tmp$ret$42;
            this._state_0 = 16;
            continue $sm;
          case 16:
            return this._WHEN_RESULT0_3;
          case 17:
            this._exceptionState = 18;
            var t = this._exception_0;
            endGroup_1();
            throw t;
          case 18:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 18) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $fetchMilestoneCOROUTINE$1.$metadata$ = {
    simpleName: '$fetchMilestoneCOROUTINE$1',
    kind: 'class',
    interfaces: []
  };
  function ReleaseNoteBuilder(inputs) {
    this._inputs = inputs;
    var tmp = this;
    tmp._githubClient$delegate = lazy(_no_name_provided_$factory_198(this));
    var tmp_0 = this;
    tmp_0._pRsForMilestone$delegate = lazy(_no_name_provided_$factory_199(this));
    var tmp_1 = this;
    tmp_1._buildChangelog$delegate = lazy(_no_name_provided_$factory_200(this));
  }
  ReleaseNoteBuilder.prototype.build_17 = function ($cont) {
    var tmp = new $buildCOROUTINE$0(this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  ReleaseNoteBuilder.$metadata$ = {
    simpleName: 'ReleaseNoteBuilder',
    kind: 'class',
    interfaces: []
  };
  function githubClient$factory() {
    return getPropertyCallableRef('githubClient', 1, KProperty1, function (receiver) {
      return _get_githubClient_(receiver);
    }, null);
  }
  function pRsForMilestone$factory() {
    return getPropertyCallableRef('pRsForMilestone', 1, KProperty1, function (receiver) {
      return _get_pRsForMilestone_(receiver);
    }, null);
  }
  function buildChangelog$factory() {
    return getPropertyCallableRef('buildChangelog', 1, KProperty1, function (receiver) {
      return _get_buildChangelog_(receiver);
    }, null);
  }
  function _no_name_provided_$factory_198(this$0) {
    var i = new _no_name_provided__236(this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_199(this$0) {
    var i = new _no_name_provided__237(this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_200(this$0) {
    var i = new _no_name_provided__238(this$0);
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided__239() {
  }
  _no_name_provided__239.prototype.invoke_398 = function ($this$Json) {
    $this$Json._ignoreUnknownKeys = true;
    $this$Json._coerceInputValues = false;
    $this$Json._isLenient = true;
  };
  _no_name_provided__239.prototype.invoke_420 = function (p1) {
    this.invoke_398(p1 instanceof JsonBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__239.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__240(resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__240.prototype.invoke_385 = function (it, $cont) {
    var tmp = this.create_43(it, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__240.prototype.invoke_420 = function (p1, $cont) {
    this.invoke_385(p1 instanceof HttpResponse ? p1 : THROW_CCE(), $cont);
    return Unit_getInstance();
  };
  _no_name_provided__240.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        if (tmp === 0) {
          this._exceptionState = 1;
          var tmp0_subject = this._it_8._get_status__16();
          if (tmp0_subject.equals(Companion_getInstance_35()._BadRequest)) {
            var tmp0_error_0 = 'Bad request';
            throw IllegalStateException_init_$Create$(toString_1(tmp0_error_0));
          } else if (tmp0_subject.equals(Companion_getInstance_35()._Unauthorized)) {
            var tmp1_error_0 = 'Unauthorized utils.actions.error';
            throw IllegalStateException_init_$Create$(toString_1(tmp1_error_0));
          }if (!isSuccess(this._it_8._get_status__16())) {
            var tmp2_error_0 = '' + 'Bad status: ' + this._it_8._get_status__16();
            throw IllegalStateException_init_$Create$(toString_1(tmp2_error_0));
          }return Unit_getInstance();
        } else if (tmp === 1) {
          throw this._exception_0;
        }} catch ($p) {
        throw $p;
      }
     while (true);
  };
  _no_name_provided__240.prototype.create_43 = function (it, completion) {
    var i = new _no_name_provided__240(completion);
    i._it_8 = it;
    return i;
  };
  _no_name_provided__240.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function _no_name_provided__241() {
  }
  _no_name_provided__241.prototype.invoke_387 = function ($this$install) {
    var tmp = $this$install;
    tmp._serializer = new KotlinxSerializer(Json$default(null, _no_name_provided_$factory_207(), 1, null));
  };
  _no_name_provided__241.prototype.invoke_420 = function (p1) {
    this.invoke_387(p1 instanceof Config_3 ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__241.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__242() {
  }
  _no_name_provided__242.prototype.invoke_389 = function ($this$install) {
    $this$install._logger = _get_DEFAULT_(Companion_getInstance_49());
    $this$install._level = LogLevel_INFO_getInstance();
  };
  _no_name_provided__242.prototype.invoke_420 = function (p1) {
    this.invoke_389(p1 instanceof Config_2 ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__242.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__243() {
  }
  _no_name_provided__243.prototype.invoke_391 = function ($this$HttpResponseValidator) {
    $this$HttpResponseValidator.validateResponse(_no_name_provided_$factory_208(null));
  };
  _no_name_provided__243.prototype.invoke_420 = function (p1) {
    this.invoke_391(p1 instanceof Config ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__243.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__244() {
  }
  _no_name_provided__244.prototype.invoke_393 = function ($this$HttpClient) {
    var tmp = Feature_getInstance_5();
    $this$HttpClient.install(tmp, _no_name_provided_$factory_204());
    var tmp_0 = Companion_getInstance_50();
    $this$HttpClient.install(tmp_0, _no_name_provided_$factory_205());
    HttpResponseValidator($this$HttpClient, _no_name_provided_$factory_206());
  };
  _no_name_provided__244.prototype.invoke_420 = function (p1) {
    this.invoke_393(p1 instanceof HttpClientConfig ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__244.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _get_client_($this) {
    var tmp0_getValue_0 = $this._client$delegate_0;
    var tmp1_getValue_0 = client$factory_0();
    return tmp0_getValue_0._get_value__27();
  }
  function apiUrl(_this_, $this, path_0) {
    header(_this_, HttpHeaders_getInstance()._Authorization, '' + 'token ' + $this._token);
    header(_this_, HttpHeaders_getInstance()._Accept, 'application/vnd.github.v3+json');
    header(_this_, HttpHeaders_getInstance()._CacheControl, 'no-cache');
    _this_.url_0(_no_name_provided_$factory_202(path_0));
  }
  function _no_name_provided__245() {
  }
  _no_name_provided__245.prototype.invoke_411 = function () {
    return HttpClient_1(_no_name_provided_$factory_203());
  };
  _no_name_provided__245.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__246($path) {
    this._$path = $path;
  }
  _no_name_provided__246.prototype.invoke_396 = function ($this$url, it) {
    takeFrom($this$url, 'https://api.github.com');
    Unit_getInstance();
    $this$url._encodedPath = this._$path;
  };
  _no_name_provided__246.prototype.invoke_418 = function (p1, p2) {
    var tmp = p1 instanceof URLBuilder ? p1 : THROW_CCE();
    this.invoke_396(tmp, p2 instanceof URLBuilder ? p2 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__246.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function $milestonesCOROUTINE$2(_this_, request, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__44 = _this_;
    this._request_2 = request;
  }
  $milestonesCOROUTINE$2.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 8;
            var tmp_0 = this;
            tmp_0._tmp0_get_00 = _get_client_(this.__this__44);
            var tmp_1 = this;
            tmp_1._tmp1_get_01 = 'http';
            var tmp_2 = this;
            tmp_2._tmp2_get_02 = 'localhost';
            var tmp_3 = this;
            tmp_3._tmp3_get_03 = 0;
            var tmp_4 = this;
            tmp_4._tmp4_get_04 = '/';
            var tmp_5 = this;
            tmp_5._tmp5_get_05 = EmptyContent_getInstance();
            var tmp_6 = this;
            var tmp0_apply_0_3 = new HttpRequestBuilder();
            url$default(tmp0_apply_0_3, this._tmp1_get_01, this._tmp2_get_02, this._tmp3_get_03, this._tmp4_get_04, null, 16, null);
            tmp0_apply_0_3._method_0 = Companion_getInstance_33()._Get;
            tmp0_apply_0_3._body_0 = this._tmp5_get_05;
            apiUrl(tmp0_apply_0_3, this.__this__44, '' + '/repos/' + this.__this__44._owner_1 + '/' + this.__this__44._repo + '/milestones');
            parameter(tmp0_apply_0_3, 'state', this._request_2._state_6);
            parameter(tmp0_apply_0_3, 'direction', this._request_2._direction);
            parameter(tmp0_apply_0_3, 'sort', this._request_2._sort);
            parameter(tmp0_apply_0_3, 'per_page', this._request_2._per_page);
            parameter(tmp0_apply_0_3, 'page', this._request_2._page);
            Unit_getInstance();
            tmp_6._tmp2_request_0_26 = tmp0_apply_0_3;
            var tmp_7 = this;
            tmp_7._tmp1_receive_0_47 = new HttpStatement(this._tmp2_request_0_26, this._tmp0_get_00);
            this._tmp0_subject_1_58 = getKClass_0(List);
            if (this._tmp0_subject_1_58.equals(getKClass_0(HttpStatement))) {
              var tmp_8 = this;
              var tmp_9 = this._tmp1_receive_0_47;
              tmp_8._WHEN_RESULT9 = isInterface(tmp_9, List) ? tmp_9 : THROW_CCE();
              this._state_0 = 7;
              continue $sm;
            } else {
              if (this._tmp0_subject_1_58.equals(getKClass_0(HttpResponse))) {
                this._state_0 = 6;
                suspendResult = this._tmp1_receive_0_47.execute_15(this);
                if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                  return suspendResult;
                }continue $sm;
              } else {
                this._state_0 = 1;
                suspendResult = this._tmp1_receive_0_47.executeUnsafe(this);
                if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                  return suspendResult;
                }continue $sm;
              }
              Unit_getInstance();
            }

            break;
          case 1:
            this._response_2_610 = suspendResult;
            this._state_0 = 2;
            continue $sm;
          case 2:
            this._exceptionState = 5;
            this._state_0 = 3;
            var tmp_10 = this._response_2_610._get_call__6();
            var tmp_11;
            try {
              tmp_11 = new TypeInfo(getKClass_0(List), JsType_getInstance(), createKType_0(getKClass_0(List), [createInvariantKTypeProjection_0(createKType_0(getKClass_0(Milestone), [], false))], false));
            } catch ($p) {
              var tmp_12;
              {
                var tmp_13 = getKClass_0(List);
                var tmp_14 = JsType_getInstance();
                tmp_12 = TypeInfo_init_$Create$(tmp_13, tmp_14, null, 4, null);
              }
              tmp_11 = tmp_12;
            }

            suspendResult = tmp_10.receive_1(tmp_11, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            var tmp_15 = this;
            var tmp_16 = suspendResult;
            tmp_15._tmp$ret$011_0 = isInterface(tmp_16, List) ? tmp_16 : THROW_CCE();
            this._exceptionState = 8;
            this._state_0 = 4;
            continue $sm;
          case 4:
            var tmp_17 = this._tmp$ret$011_0;
            complete(this._response_2_610);
            this._WHEN_RESULT9 = tmp_17;
            this._state_0 = 7;
            continue $sm;
          case 5:
            this._exceptionState = 8;
            var t = this._exception_0;
            complete(this._response_2_610);
            throw t;
          case 6:
            var tmp_18 = this;
            var tmp_19 = suspendResult;
            tmp_18._WHEN_RESULT9 = isInterface(tmp_19, List) ? tmp_19 : THROW_CCE();
            this._state_0 = 7;
            continue $sm;
          case 7:
            return this._WHEN_RESULT9;
          case 8:
            throw this._exception_0;
        }
      } catch ($p_0) {
        if (this._exceptionState === 8) {
          throw $p_0;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p_0;
        }
      }
     while (true);
  };
  $milestonesCOROUTINE$2.$metadata$ = {
    simpleName: '$milestonesCOROUTINE$2',
    kind: 'class',
    interfaces: []
  };
  function $pullRequestsCOROUTINE$3(_this_, request, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__45 = _this_;
    this._request_3 = request;
  }
  $pullRequestsCOROUTINE$3.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 8;
            var tmp_0 = this;
            tmp_0._tmp0_get_00_0 = _get_client_(this.__this__45);
            var tmp_1 = this;
            tmp_1._tmp1_get_01_0 = 'http';
            var tmp_2 = this;
            tmp_2._tmp2_get_02_0 = 'localhost';
            var tmp_3 = this;
            tmp_3._tmp3_get_03_0 = 0;
            var tmp_4 = this;
            tmp_4._tmp4_get_04_0 = '/';
            var tmp_5 = this;
            tmp_5._tmp5_get_05_0 = EmptyContent_getInstance();
            var tmp_6 = this;
            var tmp0_apply_0_3 = new HttpRequestBuilder();
            url$default(tmp0_apply_0_3, this._tmp1_get_01_0, this._tmp2_get_02_0, this._tmp3_get_03_0, this._tmp4_get_04_0, null, 16, null);
            tmp0_apply_0_3._method_0 = Companion_getInstance_33()._Get;
            tmp0_apply_0_3._body_0 = this._tmp5_get_05_0;
            apiUrl(tmp0_apply_0_3, this.__this__45, '' + '/repos/' + this.__this__45._owner_1 + '/' + this.__this__45._repo + '/pulls');
            parameter(tmp0_apply_0_3, 'state', this._request_3._state_6);
            parameter(tmp0_apply_0_3, 'direction', this._request_3._direction);
            parameter(tmp0_apply_0_3, 'sort', this._request_3._sort);
            parameter(tmp0_apply_0_3, 'per_page', this._request_3._per_page);
            parameter(tmp0_apply_0_3, 'page', this._request_3._page);
            Unit_getInstance();
            tmp_6._tmp2_request_0_26_0 = tmp0_apply_0_3;
            var tmp_7 = this;
            tmp_7._tmp1_receive_0_47_0 = new HttpStatement(this._tmp2_request_0_26_0, this._tmp0_get_00_0);
            this._tmp0_subject_1_58_0 = getKClass_0(List);
            if (this._tmp0_subject_1_58_0.equals(getKClass_0(HttpStatement))) {
              var tmp_8 = this;
              var tmp_9 = this._tmp1_receive_0_47_0;
              tmp_8._WHEN_RESULT9_0 = isInterface(tmp_9, List) ? tmp_9 : THROW_CCE();
              this._state_0 = 7;
              continue $sm;
            } else {
              if (this._tmp0_subject_1_58_0.equals(getKClass_0(HttpResponse))) {
                this._state_0 = 6;
                suspendResult = this._tmp1_receive_0_47_0.execute_15(this);
                if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                  return suspendResult;
                }continue $sm;
              } else {
                this._state_0 = 1;
                suspendResult = this._tmp1_receive_0_47_0.executeUnsafe(this);
                if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
                  return suspendResult;
                }continue $sm;
              }
              Unit_getInstance();
            }

            break;
          case 1:
            this._response_2_610_0 = suspendResult;
            this._state_0 = 2;
            continue $sm;
          case 2:
            this._exceptionState = 5;
            this._state_0 = 3;
            var tmp_10 = this._response_2_610_0._get_call__6();
            var tmp_11;
            try {
              tmp_11 = new TypeInfo(getKClass_0(List), JsType_getInstance(), createKType_0(getKClass_0(List), [createInvariantKTypeProjection_0(createKType_0(getKClass_0(PullRequest), [], false))], false));
            } catch ($p) {
              var tmp_12;
              {
                var tmp_13 = getKClass_0(List);
                var tmp_14 = JsType_getInstance();
                tmp_12 = TypeInfo_init_$Create$(tmp_13, tmp_14, null, 4, null);
              }
              tmp_11 = tmp_12;
            }

            suspendResult = tmp_10.receive_1(tmp_11, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 3:
            var tmp_15 = this;
            var tmp_16 = suspendResult;
            tmp_15._tmp$ret$011_1 = isInterface(tmp_16, List) ? tmp_16 : THROW_CCE();
            this._exceptionState = 8;
            this._state_0 = 4;
            continue $sm;
          case 4:
            var tmp_17 = this._tmp$ret$011_1;
            complete(this._response_2_610_0);
            this._WHEN_RESULT9_0 = tmp_17;
            this._state_0 = 7;
            continue $sm;
          case 5:
            this._exceptionState = 8;
            var t = this._exception_0;
            complete(this._response_2_610_0);
            throw t;
          case 6:
            var tmp_18 = this;
            var tmp_19 = suspendResult;
            tmp_18._WHEN_RESULT9_0 = isInterface(tmp_19, List) ? tmp_19 : THROW_CCE();
            this._state_0 = 7;
            continue $sm;
          case 7:
            return this._WHEN_RESULT9_0;
          case 8:
            throw this._exception_0;
        }
      } catch ($p_0) {
        if (this._exceptionState === 8) {
          throw $p_0;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p_0;
        }
      }
     while (true);
  };
  $pullRequestsCOROUTINE$3.$metadata$ = {
    simpleName: '$pullRequestsCOROUTINE$3',
    kind: 'class',
    interfaces: []
  };
  function GithubClient(token, owner, repo) {
    this._token = token;
    this._owner_1 = owner;
    this._repo = repo;
    var tmp = this;
    tmp._client$delegate_0 = lazy(_no_name_provided_$factory_201());
  }
  GithubClient.prototype.milestones = function (request, $cont) {
    var tmp = new $milestonesCOROUTINE$2(this, request, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  GithubClient.prototype.pullRequests = function (request, $cont) {
    var tmp = new $pullRequestsCOROUTINE$3(this, request, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  GithubClient.$metadata$ = {
    simpleName: 'GithubClient',
    kind: 'class',
    interfaces: []
  };
  function client$factory_0() {
    return getPropertyCallableRef('client', 1, KProperty1, function (receiver) {
      return _get_client_(receiver);
    }, null);
  }
  function _no_name_provided_$factory_201() {
    var i = new _no_name_provided__245();
    return function () {
      return i.invoke_411();
    };
  }
  function _no_name_provided_$factory_202($path) {
    var i = new _no_name_provided__246($path);
    return function (p1, p2) {
      i.invoke_396(p1, p2);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_203() {
    var i = new _no_name_provided__244();
    return function (p1) {
      i.invoke_393(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_204() {
    var i = new _no_name_provided__241();
    return function (p1) {
      i.invoke_387(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_205() {
    var i = new _no_name_provided__242();
    return function (p1) {
      i.invoke_389(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_206() {
    var i = new _no_name_provided__243();
    return function (p1) {
      i.invoke_391(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_207() {
    var i = new _no_name_provided__239();
    return function (p1) {
      i.invoke_398(p1);
      return Unit_getInstance();
    };
  }
  function _no_name_provided_$factory_208(resultContinuation) {
    var i = new _no_name_provided__240(resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_385(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function MilestoneRequest_init_$Init$(state, direction, sort, per_page, page, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      state = 'all';
    if (!(($mask0 & 2) === 0))
      direction = 'desc';
    if (!(($mask0 & 4) === 0))
      sort = 'completeness';
    if (!(($mask0 & 8) === 0)) {
      Companion_getInstance_65();
      per_page = 50;
    }if (!(($mask0 & 16) === 0))
      page = 1;
    MilestoneRequest.call($this, state, direction, sort, per_page, page);
    return $this;
  }
  function MilestoneRequest_init_$Create$(state, direction, sort, per_page, page, $mask0, $marker) {
    return MilestoneRequest_init_$Init$(state, direction, sort, per_page, page, $mask0, $marker, Object.create(MilestoneRequest.prototype));
  }
  function Companion_66() {
    Companion_instance_65 = this;
    this._DEFAULT_PAGE_SIZE = 50;
  }
  Companion_66.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_65;
  function Companion_getInstance_65() {
    if (Companion_instance_65 == null)
      new Companion_66();
    return Companion_instance_65;
  }
  function MilestoneRequest(state, direction, sort, per_page, page) {
    Companion_getInstance_65();
    this._state_6 = state;
    this._direction = direction;
    this._sort = sort;
    this._per_page = per_page;
    this._page = page;
  }
  MilestoneRequest.prototype.toString = function () {
    return '' + 'MilestoneRequest(state=' + this._state_6 + ', direction=' + this._direction + ', sort=' + this._sort + ', per_page=' + this._per_page + ', page=' + this._page + ')';
  };
  MilestoneRequest.prototype.hashCode = function () {
    var result = getStringHashCode(this._state_6);
    result = imul(result, 31) + getStringHashCode(this._direction) | 0;
    result = imul(result, 31) + getStringHashCode(this._sort) | 0;
    result = imul(result, 31) + this._per_page | 0;
    result = imul(result, 31) + this._page | 0;
    return result;
  };
  MilestoneRequest.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MilestoneRequest))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof MilestoneRequest ? other : THROW_CCE();
    if (!(this._state_6 === tmp0_other_with_cast._state_6))
      return false;
    if (!(this._direction === tmp0_other_with_cast._direction))
      return false;
    if (!(this._sort === tmp0_other_with_cast._sort))
      return false;
    if (!(this._per_page === tmp0_other_with_cast._per_page))
      return false;
    if (!(this._page === tmp0_other_with_cast._page))
      return false;
    return true;
  };
  MilestoneRequest.$metadata$ = {
    simpleName: 'MilestoneRequest',
    kind: 'class',
    interfaces: []
  };
  function $serializer() {
    $serializer_instance = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.GithubUser', this, 18);
    tmp0_serialDesc.addElement_0('avatar_url', false);
    tmp0_serialDesc.addElement_0('events_url', false);
    tmp0_serialDesc.addElement_0('followers_url', false);
    tmp0_serialDesc.addElement_0('following_url', false);
    tmp0_serialDesc.addElement_0('gists_url', false);
    tmp0_serialDesc.addElement_0('gravatar_id', false);
    tmp0_serialDesc.addElement_0('html_url', false);
    tmp0_serialDesc.addElement_0('id', false);
    tmp0_serialDesc.addElement_0('login', false);
    tmp0_serialDesc.addElement_0('node_id', false);
    tmp0_serialDesc.addElement_0('organizations_url', false);
    tmp0_serialDesc.addElement_0('received_events_url', false);
    tmp0_serialDesc.addElement_0('repos_url', false);
    tmp0_serialDesc.addElement_0('site_admin', false);
    tmp0_serialDesc.addElement_0('starred_url', false);
    tmp0_serialDesc.addElement_0('subscriptions_url', false);
    tmp0_serialDesc.addElement_0('type', false);
    tmp0_serialDesc.addElement_0('url', false);
    this._descriptor_38 = tmp0_serialDesc;
  }
  $serializer.prototype._get_descriptor__77 = function () {
    return this._descriptor_38;
  };
  $serializer.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), BooleanSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance()];
    return tmp0_arrayOf_0;
  };
  $serializer.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_38;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_local6 = null;
    var tmp11_local7 = 0;
    var tmp12_local8 = null;
    var tmp13_local9 = null;
    var tmp14_local10 = null;
    var tmp15_local11 = null;
    var tmp16_local12 = null;
    var tmp17_local13 = false;
    var tmp18_local14 = null;
    var tmp19_local15 = null;
    var tmp20_local16 = null;
    var tmp21_local17 = null;
    var tmp22_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp22_input.decodeSequentially_8()) {
      tmp4_local0 = tmp22_input.decodeStringElement_8(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp22_input.decodeStringElement_8(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp22_input.decodeStringElement_8(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp22_input.decodeStringElement_8(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp22_input.decodeStringElement_8(tmp0_desc, 4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp22_input.decodeStringElement_8(tmp0_desc, 5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp10_local6 = tmp22_input.decodeStringElement_8(tmp0_desc, 6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
      tmp11_local7 = tmp22_input.decodeIntElement_8(tmp0_desc, 7);
      tmp3_bitMask0 = tmp3_bitMask0 | 128;
      tmp12_local8 = tmp22_input.decodeStringElement_8(tmp0_desc, 8);
      tmp3_bitMask0 = tmp3_bitMask0 | 256;
      tmp13_local9 = tmp22_input.decodeStringElement_8(tmp0_desc, 9);
      tmp3_bitMask0 = tmp3_bitMask0 | 512;
      tmp14_local10 = tmp22_input.decodeStringElement_8(tmp0_desc, 10);
      tmp3_bitMask0 = tmp3_bitMask0 | 1024;
      tmp15_local11 = tmp22_input.decodeStringElement_8(tmp0_desc, 11);
      tmp3_bitMask0 = tmp3_bitMask0 | 2048;
      tmp16_local12 = tmp22_input.decodeStringElement_8(tmp0_desc, 12);
      tmp3_bitMask0 = tmp3_bitMask0 | 4096;
      tmp17_local13 = tmp22_input.decodeBooleanElement_8(tmp0_desc, 13);
      tmp3_bitMask0 = tmp3_bitMask0 | 8192;
      tmp18_local14 = tmp22_input.decodeStringElement_8(tmp0_desc, 14);
      tmp3_bitMask0 = tmp3_bitMask0 | 16384;
      tmp19_local15 = tmp22_input.decodeStringElement_8(tmp0_desc, 15);
      tmp3_bitMask0 = tmp3_bitMask0 | 32768;
      tmp20_local16 = tmp22_input.decodeStringElement_8(tmp0_desc, 16);
      tmp3_bitMask0 = tmp3_bitMask0 | 65536;
      tmp21_local17 = tmp22_input.decodeStringElement_8(tmp0_desc, 17);
      tmp3_bitMask0 = tmp3_bitMask0 | 131072;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp22_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp22_input.decodeStringElement_8(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp22_input.decodeStringElement_8(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp22_input.decodeStringElement_8(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp22_input.decodeStringElement_8(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp22_input.decodeStringElement_8(tmp0_desc, 4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp22_input.decodeStringElement_8(tmp0_desc, 5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp10_local6 = tmp22_input.decodeStringElement_8(tmp0_desc, 6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          case 7:
            tmp11_local7 = tmp22_input.decodeIntElement_8(tmp0_desc, 7);
            tmp3_bitMask0 = tmp3_bitMask0 | 128;
            break;
          case 8:
            tmp12_local8 = tmp22_input.decodeStringElement_8(tmp0_desc, 8);
            tmp3_bitMask0 = tmp3_bitMask0 | 256;
            break;
          case 9:
            tmp13_local9 = tmp22_input.decodeStringElement_8(tmp0_desc, 9);
            tmp3_bitMask0 = tmp3_bitMask0 | 512;
            break;
          case 10:
            tmp14_local10 = tmp22_input.decodeStringElement_8(tmp0_desc, 10);
            tmp3_bitMask0 = tmp3_bitMask0 | 1024;
            break;
          case 11:
            tmp15_local11 = tmp22_input.decodeStringElement_8(tmp0_desc, 11);
            tmp3_bitMask0 = tmp3_bitMask0 | 2048;
            break;
          case 12:
            tmp16_local12 = tmp22_input.decodeStringElement_8(tmp0_desc, 12);
            tmp3_bitMask0 = tmp3_bitMask0 | 4096;
            break;
          case 13:
            tmp17_local13 = tmp22_input.decodeBooleanElement_8(tmp0_desc, 13);
            tmp3_bitMask0 = tmp3_bitMask0 | 8192;
            break;
          case 14:
            tmp18_local14 = tmp22_input.decodeStringElement_8(tmp0_desc, 14);
            tmp3_bitMask0 = tmp3_bitMask0 | 16384;
            break;
          case 15:
            tmp19_local15 = tmp22_input.decodeStringElement_8(tmp0_desc, 15);
            tmp3_bitMask0 = tmp3_bitMask0 | 32768;
            break;
          case 16:
            tmp20_local16 = tmp22_input.decodeStringElement_8(tmp0_desc, 16);
            tmp3_bitMask0 = tmp3_bitMask0 | 65536;
            break;
          case 17:
            tmp21_local17 = tmp22_input.decodeStringElement_8(tmp0_desc, 17);
            tmp3_bitMask0 = tmp3_bitMask0 | 131072;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp22_input.endStructure_11(tmp0_desc);
    return GithubUser_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, tmp13_local9, tmp14_local10, tmp15_local11, tmp16_local12, tmp17_local13, tmp18_local14, tmp19_local15, tmp20_local16, tmp21_local17, null);
  };
  $serializer.prototype.serialize_90 = function (encoder, value) {
    var tmp0_desc = this._descriptor_38;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeStringElement_1(tmp0_desc, 0, value._avatar_url);
    tmp1_output.encodeStringElement_1(tmp0_desc, 1, value._events_url);
    tmp1_output.encodeStringElement_1(tmp0_desc, 2, value._followers_url);
    tmp1_output.encodeStringElement_1(tmp0_desc, 3, value._following_url);
    tmp1_output.encodeStringElement_1(tmp0_desc, 4, value._gists_url);
    tmp1_output.encodeStringElement_1(tmp0_desc, 5, value._gravatar_id);
    tmp1_output.encodeStringElement_1(tmp0_desc, 6, value._html_url);
    tmp1_output.encodeIntElement_1(tmp0_desc, 7, value._id);
    tmp1_output.encodeStringElement_1(tmp0_desc, 8, value._login);
    tmp1_output.encodeStringElement_1(tmp0_desc, 9, value._node_id);
    tmp1_output.encodeStringElement_1(tmp0_desc, 10, value._organizations_url);
    tmp1_output.encodeStringElement_1(tmp0_desc, 11, value._received_events_url);
    tmp1_output.encodeStringElement_1(tmp0_desc, 12, value._repos_url);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 13, value._site_admin);
    tmp1_output.encodeStringElement_1(tmp0_desc, 14, value._starred_url);
    tmp1_output.encodeStringElement_1(tmp0_desc, 15, value._subscriptions_url);
    tmp1_output.encodeStringElement_1(tmp0_desc, 16, value._type_1);
    tmp1_output.encodeStringElement_1(tmp0_desc, 17, value._url_2);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_90(encoder, value instanceof GithubUser ? value : THROW_CCE());
  };
  $serializer.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance;
  function $serializer_getInstance() {
    if ($serializer_instance == null)
      new $serializer();
    return $serializer_instance;
  }
  function GithubUser_init_$Init$(seen1, avatar_url, events_url, followers_url, following_url, gists_url, gravatar_id, html_url, id, login, node_id, organizations_url, received_events_url, repos_url, site_admin, starred_url, subscriptions_url, type, url_0, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('avatar_url');
    else
      $this._avatar_url = avatar_url;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('events_url');
    else
      $this._events_url = events_url;
    if (0 === (seen1 & 4))
      throw MissingFieldException_init_$Create$('followers_url');
    else
      $this._followers_url = followers_url;
    if (0 === (seen1 & 8))
      throw MissingFieldException_init_$Create$('following_url');
    else
      $this._following_url = following_url;
    if (0 === (seen1 & 16))
      throw MissingFieldException_init_$Create$('gists_url');
    else
      $this._gists_url = gists_url;
    if (0 === (seen1 & 32))
      throw MissingFieldException_init_$Create$('gravatar_id');
    else
      $this._gravatar_id = gravatar_id;
    if (0 === (seen1 & 64))
      throw MissingFieldException_init_$Create$('html_url');
    else
      $this._html_url = html_url;
    if (0 === (seen1 & 128))
      throw MissingFieldException_init_$Create$('id');
    else
      $this._id = id;
    if (0 === (seen1 & 256))
      throw MissingFieldException_init_$Create$('login');
    else
      $this._login = login;
    if (0 === (seen1 & 512))
      throw MissingFieldException_init_$Create$('node_id');
    else
      $this._node_id = node_id;
    if (0 === (seen1 & 1024))
      throw MissingFieldException_init_$Create$('organizations_url');
    else
      $this._organizations_url = organizations_url;
    if (0 === (seen1 & 2048))
      throw MissingFieldException_init_$Create$('received_events_url');
    else
      $this._received_events_url = received_events_url;
    if (0 === (seen1 & 4096))
      throw MissingFieldException_init_$Create$('repos_url');
    else
      $this._repos_url = repos_url;
    if (0 === (seen1 & 8192))
      throw MissingFieldException_init_$Create$('site_admin');
    else
      $this._site_admin = site_admin;
    if (0 === (seen1 & 16384))
      throw MissingFieldException_init_$Create$('starred_url');
    else
      $this._starred_url = starred_url;
    if (0 === (seen1 & 32768))
      throw MissingFieldException_init_$Create$('subscriptions_url');
    else
      $this._subscriptions_url = subscriptions_url;
    if (0 === (seen1 & 65536))
      throw MissingFieldException_init_$Create$('type');
    else
      $this._type_1 = type;
    if (0 === (seen1 & 131072))
      throw MissingFieldException_init_$Create$('url');
    else
      $this._url_2 = url_0;
    return $this;
  }
  function GithubUser_init_$Create$(seen1, avatar_url, events_url, followers_url, following_url, gists_url, gravatar_id, html_url, id, login, node_id, organizations_url, received_events_url, repos_url, site_admin, starred_url, subscriptions_url, type, url_0, serializationConstructorMarker) {
    return GithubUser_init_$Init$(seen1, avatar_url, events_url, followers_url, following_url, gists_url, gravatar_id, html_url, id, login, node_id, organizations_url, received_events_url, repos_url, site_admin, starred_url, subscriptions_url, type, url_0, serializationConstructorMarker, Object.create(GithubUser.prototype));
  }
  function GithubUser() {
  }
  GithubUser.prototype.toString = function () {
    return '' + 'GithubUser(avatar_url=' + this._avatar_url + ', events_url=' + this._events_url + ', followers_url=' + this._followers_url + ', following_url=' + this._following_url + ', gists_url=' + this._gists_url + ', gravatar_id=' + this._gravatar_id + ', html_url=' + this._html_url + ', id=' + this._id + ', login=' + this._login + ', node_id=' + this._node_id + ', organizations_url=' + this._organizations_url + ', received_events_url=' + this._received_events_url + ', repos_url=' + this._repos_url + ', site_admin=' + this._site_admin + ', starred_url=' + this._starred_url + ', subscriptions_url=' + this._subscriptions_url + ', type=' + this._type_1 + ', url=' + this._url_2 + ')';
  };
  GithubUser.prototype.hashCode = function () {
    var result = getStringHashCode(this._avatar_url);
    result = imul(result, 31) + getStringHashCode(this._events_url) | 0;
    result = imul(result, 31) + getStringHashCode(this._followers_url) | 0;
    result = imul(result, 31) + getStringHashCode(this._following_url) | 0;
    result = imul(result, 31) + getStringHashCode(this._gists_url) | 0;
    result = imul(result, 31) + getStringHashCode(this._gravatar_id) | 0;
    result = imul(result, 31) + getStringHashCode(this._html_url) | 0;
    result = imul(result, 31) + this._id | 0;
    result = imul(result, 31) + getStringHashCode(this._login) | 0;
    result = imul(result, 31) + getStringHashCode(this._node_id) | 0;
    result = imul(result, 31) + getStringHashCode(this._organizations_url) | 0;
    result = imul(result, 31) + getStringHashCode(this._received_events_url) | 0;
    result = imul(result, 31) + getStringHashCode(this._repos_url) | 0;
    result = imul(result, 31) + (this._site_admin | 0) | 0;
    result = imul(result, 31) + getStringHashCode(this._starred_url) | 0;
    result = imul(result, 31) + getStringHashCode(this._subscriptions_url) | 0;
    result = imul(result, 31) + getStringHashCode(this._type_1) | 0;
    result = imul(result, 31) + getStringHashCode(this._url_2) | 0;
    return result;
  };
  GithubUser.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof GithubUser))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof GithubUser ? other : THROW_CCE();
    if (!(this._avatar_url === tmp0_other_with_cast._avatar_url))
      return false;
    if (!(this._events_url === tmp0_other_with_cast._events_url))
      return false;
    if (!(this._followers_url === tmp0_other_with_cast._followers_url))
      return false;
    if (!(this._following_url === tmp0_other_with_cast._following_url))
      return false;
    if (!(this._gists_url === tmp0_other_with_cast._gists_url))
      return false;
    if (!(this._gravatar_id === tmp0_other_with_cast._gravatar_id))
      return false;
    if (!(this._html_url === tmp0_other_with_cast._html_url))
      return false;
    if (!(this._id === tmp0_other_with_cast._id))
      return false;
    if (!(this._login === tmp0_other_with_cast._login))
      return false;
    if (!(this._node_id === tmp0_other_with_cast._node_id))
      return false;
    if (!(this._organizations_url === tmp0_other_with_cast._organizations_url))
      return false;
    if (!(this._received_events_url === tmp0_other_with_cast._received_events_url))
      return false;
    if (!(this._repos_url === tmp0_other_with_cast._repos_url))
      return false;
    if (!(this._site_admin === tmp0_other_with_cast._site_admin))
      return false;
    if (!(this._starred_url === tmp0_other_with_cast._starred_url))
      return false;
    if (!(this._subscriptions_url === tmp0_other_with_cast._subscriptions_url))
      return false;
    if (!(this._type_1 === tmp0_other_with_cast._type_1))
      return false;
    if (!(this._url_2 === tmp0_other_with_cast._url_2))
      return false;
    return true;
  };
  GithubUser.$metadata$ = {
    simpleName: 'GithubUser',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance}
  };
  function $serializer_0() {
    $serializer_instance_0 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.Milestone', this, 16);
    tmp0_serialDesc.addElement_0('closed_at', false);
    tmp0_serialDesc.addElement_0('closed_issues', false);
    tmp0_serialDesc.addElement_0('created_at', false);
    tmp0_serialDesc.addElement_0('creator', false);
    tmp0_serialDesc.addElement_0('description', false);
    tmp0_serialDesc.addElement_0('due_on', false);
    tmp0_serialDesc.addElement_0('html_url', false);
    tmp0_serialDesc.addElement_0('id', false);
    tmp0_serialDesc.addElement_0('labels_url', false);
    tmp0_serialDesc.addElement_0('node_id', false);
    tmp0_serialDesc.addElement_0('number', false);
    tmp0_serialDesc.addElement_0('open_issues', false);
    tmp0_serialDesc.addElement_0('state', false);
    tmp0_serialDesc.addElement_0('title', false);
    tmp0_serialDesc.addElement_0('updated_at', false);
    tmp0_serialDesc.addElement_0('url', false);
    this._descriptor_39 = tmp0_serialDesc;
  }
  $serializer_0.prototype._get_descriptor__77 = function () {
    return this._descriptor_39;
  };
  $serializer_0.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance()), IntSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer($serializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), IntSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), IntSerializer_getInstance(), IntSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_0.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_39;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = 0;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_local6 = null;
    var tmp11_local7 = 0;
    var tmp12_local8 = null;
    var tmp13_local9 = null;
    var tmp14_local10 = 0;
    var tmp15_local11 = 0;
    var tmp16_local12 = null;
    var tmp17_local13 = null;
    var tmp18_local14 = null;
    var tmp19_local15 = null;
    var tmp20_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp20_input.decodeSequentially_8()) {
      tmp4_local0 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp20_input.decodeIntElement_8(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 3, $serializer_getInstance(), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp10_local6 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
      tmp11_local7 = tmp20_input.decodeIntElement_8(tmp0_desc, 7);
      tmp3_bitMask0 = tmp3_bitMask0 | 128;
      tmp12_local8 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 8, StringSerializer_getInstance(), tmp12_local8);
      tmp3_bitMask0 = tmp3_bitMask0 | 256;
      tmp13_local9 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 9, StringSerializer_getInstance(), tmp13_local9);
      tmp3_bitMask0 = tmp3_bitMask0 | 512;
      tmp14_local10 = tmp20_input.decodeIntElement_8(tmp0_desc, 10);
      tmp3_bitMask0 = tmp3_bitMask0 | 1024;
      tmp15_local11 = tmp20_input.decodeIntElement_8(tmp0_desc, 11);
      tmp3_bitMask0 = tmp3_bitMask0 | 2048;
      tmp16_local12 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 12, StringSerializer_getInstance(), tmp16_local12);
      tmp3_bitMask0 = tmp3_bitMask0 | 4096;
      tmp17_local13 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 13, StringSerializer_getInstance(), tmp17_local13);
      tmp3_bitMask0 = tmp3_bitMask0 | 8192;
      tmp18_local14 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 14, StringSerializer_getInstance(), tmp18_local14);
      tmp3_bitMask0 = tmp3_bitMask0 | 16384;
      tmp19_local15 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 15, StringSerializer_getInstance(), tmp19_local15);
      tmp3_bitMask0 = tmp3_bitMask0 | 32768;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp20_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp20_input.decodeIntElement_8(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 3, $serializer_getInstance(), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp10_local6 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          case 7:
            tmp11_local7 = tmp20_input.decodeIntElement_8(tmp0_desc, 7);
            tmp3_bitMask0 = tmp3_bitMask0 | 128;
            break;
          case 8:
            tmp12_local8 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 8, StringSerializer_getInstance(), tmp12_local8);
            tmp3_bitMask0 = tmp3_bitMask0 | 256;
            break;
          case 9:
            tmp13_local9 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 9, StringSerializer_getInstance(), tmp13_local9);
            tmp3_bitMask0 = tmp3_bitMask0 | 512;
            break;
          case 10:
            tmp14_local10 = tmp20_input.decodeIntElement_8(tmp0_desc, 10);
            tmp3_bitMask0 = tmp3_bitMask0 | 1024;
            break;
          case 11:
            tmp15_local11 = tmp20_input.decodeIntElement_8(tmp0_desc, 11);
            tmp3_bitMask0 = tmp3_bitMask0 | 2048;
            break;
          case 12:
            tmp16_local12 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 12, StringSerializer_getInstance(), tmp16_local12);
            tmp3_bitMask0 = tmp3_bitMask0 | 4096;
            break;
          case 13:
            tmp17_local13 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 13, StringSerializer_getInstance(), tmp17_local13);
            tmp3_bitMask0 = tmp3_bitMask0 | 8192;
            break;
          case 14:
            tmp18_local14 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 14, StringSerializer_getInstance(), tmp18_local14);
            tmp3_bitMask0 = tmp3_bitMask0 | 16384;
            break;
          case 15:
            tmp19_local15 = tmp20_input.decodeNullableSerializableElement_8(tmp0_desc, 15, StringSerializer_getInstance(), tmp19_local15);
            tmp3_bitMask0 = tmp3_bitMask0 | 32768;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp20_input.endStructure_11(tmp0_desc);
    return Milestone_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, tmp13_local9, tmp14_local10, tmp15_local11, tmp16_local12, tmp17_local13, tmp18_local14, tmp19_local15, null);
  };
  $serializer_0.prototype.serialize_92 = function (encoder, value) {
    var tmp0_desc = this._descriptor_39;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._closedAt);
    tmp1_output.encodeIntElement_1(tmp0_desc, 1, value._closedIssues);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 2, StringSerializer_getInstance(), value._createdAt);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 3, $serializer_getInstance(), value._creator);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 4, StringSerializer_getInstance(), value._description_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 5, StringSerializer_getInstance(), value._dueOn);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 6, StringSerializer_getInstance(), value._htmlUrl);
    tmp1_output.encodeIntElement_1(tmp0_desc, 7, value._id_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 8, StringSerializer_getInstance(), value._labelsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 9, StringSerializer_getInstance(), value._nodeId);
    tmp1_output.encodeIntElement_1(tmp0_desc, 10, value._number);
    tmp1_output.encodeIntElement_1(tmp0_desc, 11, value._openIssues);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 12, StringSerializer_getInstance(), value._state_7);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 13, StringSerializer_getInstance(), value._title);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 14, StringSerializer_getInstance(), value._updatedAt);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 15, StringSerializer_getInstance(), value._url_3);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_0.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_92(encoder, value instanceof Milestone ? value : THROW_CCE());
  };
  $serializer_0.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_0;
  function $serializer_getInstance_0() {
    if ($serializer_instance_0 == null)
      new $serializer_0();
    return $serializer_instance_0;
  }
  function Milestone_init_$Init$(seen1, closedAt, closedIssues, createdAt, creator, description, dueOn, htmlUrl, id, labelsUrl, nodeId, number, openIssues, state, title, updatedAt, url_0, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('closed_at');
    else
      $this._closedAt = closedAt;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('closed_issues');
    else
      $this._closedIssues = closedIssues;
    if (0 === (seen1 & 4))
      throw MissingFieldException_init_$Create$('created_at');
    else
      $this._createdAt = createdAt;
    if (0 === (seen1 & 8))
      throw MissingFieldException_init_$Create$('creator');
    else
      $this._creator = creator;
    if (0 === (seen1 & 16))
      throw MissingFieldException_init_$Create$('description');
    else
      $this._description_0 = description;
    if (0 === (seen1 & 32))
      throw MissingFieldException_init_$Create$('due_on');
    else
      $this._dueOn = dueOn;
    if (0 === (seen1 & 64))
      throw MissingFieldException_init_$Create$('html_url');
    else
      $this._htmlUrl = htmlUrl;
    if (0 === (seen1 & 128))
      throw MissingFieldException_init_$Create$('id');
    else
      $this._id_0 = id;
    if (0 === (seen1 & 256))
      throw MissingFieldException_init_$Create$('labels_url');
    else
      $this._labelsUrl = labelsUrl;
    if (0 === (seen1 & 512))
      throw MissingFieldException_init_$Create$('node_id');
    else
      $this._nodeId = nodeId;
    if (0 === (seen1 & 1024))
      throw MissingFieldException_init_$Create$('number');
    else
      $this._number = number;
    if (0 === (seen1 & 2048))
      throw MissingFieldException_init_$Create$('open_issues');
    else
      $this._openIssues = openIssues;
    if (0 === (seen1 & 4096))
      throw MissingFieldException_init_$Create$('state');
    else
      $this._state_7 = state;
    if (0 === (seen1 & 8192))
      throw MissingFieldException_init_$Create$('title');
    else
      $this._title = title;
    if (0 === (seen1 & 16384))
      throw MissingFieldException_init_$Create$('updated_at');
    else
      $this._updatedAt = updatedAt;
    if (0 === (seen1 & 32768))
      throw MissingFieldException_init_$Create$('url');
    else
      $this._url_3 = url_0;
    return $this;
  }
  function Milestone_init_$Create$(seen1, closedAt, closedIssues, createdAt, creator, description, dueOn, htmlUrl, id, labelsUrl, nodeId, number, openIssues, state, title, updatedAt, url_0, serializationConstructorMarker) {
    return Milestone_init_$Init$(seen1, closedAt, closedIssues, createdAt, creator, description, dueOn, htmlUrl, id, labelsUrl, nodeId, number, openIssues, state, title, updatedAt, url_0, serializationConstructorMarker, Object.create(Milestone.prototype));
  }
  function Milestone() {
  }
  Milestone.prototype.toString = function () {
    return '' + 'Milestone(closedAt=' + this._closedAt + ', closedIssues=' + this._closedIssues + ', createdAt=' + this._createdAt + ', creator=' + this._creator + ', description=' + this._description_0 + ', dueOn=' + this._dueOn + ', htmlUrl=' + this._htmlUrl + ', id=' + this._id_0 + ', labelsUrl=' + this._labelsUrl + ', nodeId=' + this._nodeId + ', number=' + this._number + ', openIssues=' + this._openIssues + ', state=' + this._state_7 + ', title=' + this._title + ', updatedAt=' + this._updatedAt + ', url=' + this._url_3 + ')';
  };
  Milestone.prototype.hashCode = function () {
    var result = this._closedAt == null ? 0 : getStringHashCode(this._closedAt);
    result = imul(result, 31) + this._closedIssues | 0;
    result = imul(result, 31) + (this._createdAt == null ? 0 : getStringHashCode(this._createdAt)) | 0;
    result = imul(result, 31) + (this._creator == null ? 0 : this._creator.hashCode()) | 0;
    result = imul(result, 31) + (this._description_0 == null ? 0 : getStringHashCode(this._description_0)) | 0;
    result = imul(result, 31) + (this._dueOn == null ? 0 : getStringHashCode(this._dueOn)) | 0;
    result = imul(result, 31) + (this._htmlUrl == null ? 0 : getStringHashCode(this._htmlUrl)) | 0;
    result = imul(result, 31) + this._id_0 | 0;
    result = imul(result, 31) + (this._labelsUrl == null ? 0 : getStringHashCode(this._labelsUrl)) | 0;
    result = imul(result, 31) + (this._nodeId == null ? 0 : getStringHashCode(this._nodeId)) | 0;
    result = imul(result, 31) + this._number | 0;
    result = imul(result, 31) + this._openIssues | 0;
    result = imul(result, 31) + (this._state_7 == null ? 0 : getStringHashCode(this._state_7)) | 0;
    result = imul(result, 31) + (this._title == null ? 0 : getStringHashCode(this._title)) | 0;
    result = imul(result, 31) + (this._updatedAt == null ? 0 : getStringHashCode(this._updatedAt)) | 0;
    result = imul(result, 31) + (this._url_3 == null ? 0 : getStringHashCode(this._url_3)) | 0;
    return result;
  };
  Milestone.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Milestone))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Milestone ? other : THROW_CCE();
    if (!(this._closedAt == tmp0_other_with_cast._closedAt))
      return false;
    if (!(this._closedIssues === tmp0_other_with_cast._closedIssues))
      return false;
    if (!(this._createdAt == tmp0_other_with_cast._createdAt))
      return false;
    if (!equals_1(this._creator, tmp0_other_with_cast._creator))
      return false;
    if (!(this._description_0 == tmp0_other_with_cast._description_0))
      return false;
    if (!(this._dueOn == tmp0_other_with_cast._dueOn))
      return false;
    if (!(this._htmlUrl == tmp0_other_with_cast._htmlUrl))
      return false;
    if (!(this._id_0 === tmp0_other_with_cast._id_0))
      return false;
    if (!(this._labelsUrl == tmp0_other_with_cast._labelsUrl))
      return false;
    if (!(this._nodeId == tmp0_other_with_cast._nodeId))
      return false;
    if (!(this._number === tmp0_other_with_cast._number))
      return false;
    if (!(this._openIssues === tmp0_other_with_cast._openIssues))
      return false;
    if (!(this._state_7 == tmp0_other_with_cast._state_7))
      return false;
    if (!(this._title == tmp0_other_with_cast._title))
      return false;
    if (!(this._updatedAt == tmp0_other_with_cast._updatedAt))
      return false;
    if (!(this._url_3 == tmp0_other_with_cast._url_3))
      return false;
    return true;
  };
  Milestone.$metadata$ = {
    simpleName: 'Milestone',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_0}
  };
  function $serializer_1() {
    $serializer_instance_1 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.AutoMerge.EnabledBy', this, 18);
    tmp0_serialDesc.addElement_0('avatar_url', false);
    tmp0_serialDesc.addElement_0('events_url', false);
    tmp0_serialDesc.addElement_0('followers_url', false);
    tmp0_serialDesc.addElement_0('following_url', false);
    tmp0_serialDesc.addElement_0('gists_url', false);
    tmp0_serialDesc.addElement_0('gravatar_id', false);
    tmp0_serialDesc.addElement_0('html_url', false);
    tmp0_serialDesc.addElement_0('id', false);
    tmp0_serialDesc.addElement_0('login', false);
    tmp0_serialDesc.addElement_0('node_id', false);
    tmp0_serialDesc.addElement_0('organizations_url', false);
    tmp0_serialDesc.addElement_0('received_events_url', false);
    tmp0_serialDesc.addElement_0('repos_url', false);
    tmp0_serialDesc.addElement_0('site_admin', false);
    tmp0_serialDesc.addElement_0('starred_url', false);
    tmp0_serialDesc.addElement_0('subscriptions_url', false);
    tmp0_serialDesc.addElement_0('type', false);
    tmp0_serialDesc.addElement_0('url', false);
    this._descriptor_40 = tmp0_serialDesc;
  }
  $serializer_1.prototype._get_descriptor__77 = function () {
    return this._descriptor_40;
  };
  $serializer_1.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), StringSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), BooleanSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_1.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_40;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_local6 = null;
    var tmp11_local7 = null;
    var tmp12_local8 = null;
    var tmp13_local9 = null;
    var tmp14_local10 = null;
    var tmp15_local11 = null;
    var tmp16_local12 = null;
    var tmp17_local13 = false;
    var tmp18_local14 = null;
    var tmp19_local15 = null;
    var tmp20_local16 = null;
    var tmp21_local17 = null;
    var tmp22_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp22_input.decodeSequentially_8()) {
      tmp4_local0 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp10_local6 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
      tmp11_local7 = tmp22_input.decodeStringElement_8(tmp0_desc, 7);
      tmp3_bitMask0 = tmp3_bitMask0 | 128;
      tmp12_local8 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 8, StringSerializer_getInstance(), tmp12_local8);
      tmp3_bitMask0 = tmp3_bitMask0 | 256;
      tmp13_local9 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 9, StringSerializer_getInstance(), tmp13_local9);
      tmp3_bitMask0 = tmp3_bitMask0 | 512;
      tmp14_local10 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 10, StringSerializer_getInstance(), tmp14_local10);
      tmp3_bitMask0 = tmp3_bitMask0 | 1024;
      tmp15_local11 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 11, StringSerializer_getInstance(), tmp15_local11);
      tmp3_bitMask0 = tmp3_bitMask0 | 2048;
      tmp16_local12 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 12, StringSerializer_getInstance(), tmp16_local12);
      tmp3_bitMask0 = tmp3_bitMask0 | 4096;
      tmp17_local13 = tmp22_input.decodeBooleanElement_8(tmp0_desc, 13);
      tmp3_bitMask0 = tmp3_bitMask0 | 8192;
      tmp18_local14 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 14, StringSerializer_getInstance(), tmp18_local14);
      tmp3_bitMask0 = tmp3_bitMask0 | 16384;
      tmp19_local15 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 15, StringSerializer_getInstance(), tmp19_local15);
      tmp3_bitMask0 = tmp3_bitMask0 | 32768;
      tmp20_local16 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 16, StringSerializer_getInstance(), tmp20_local16);
      tmp3_bitMask0 = tmp3_bitMask0 | 65536;
      tmp21_local17 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 17, StringSerializer_getInstance(), tmp21_local17);
      tmp3_bitMask0 = tmp3_bitMask0 | 131072;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp22_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp10_local6 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          case 7:
            tmp11_local7 = tmp22_input.decodeStringElement_8(tmp0_desc, 7);
            tmp3_bitMask0 = tmp3_bitMask0 | 128;
            break;
          case 8:
            tmp12_local8 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 8, StringSerializer_getInstance(), tmp12_local8);
            tmp3_bitMask0 = tmp3_bitMask0 | 256;
            break;
          case 9:
            tmp13_local9 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 9, StringSerializer_getInstance(), tmp13_local9);
            tmp3_bitMask0 = tmp3_bitMask0 | 512;
            break;
          case 10:
            tmp14_local10 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 10, StringSerializer_getInstance(), tmp14_local10);
            tmp3_bitMask0 = tmp3_bitMask0 | 1024;
            break;
          case 11:
            tmp15_local11 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 11, StringSerializer_getInstance(), tmp15_local11);
            tmp3_bitMask0 = tmp3_bitMask0 | 2048;
            break;
          case 12:
            tmp16_local12 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 12, StringSerializer_getInstance(), tmp16_local12);
            tmp3_bitMask0 = tmp3_bitMask0 | 4096;
            break;
          case 13:
            tmp17_local13 = tmp22_input.decodeBooleanElement_8(tmp0_desc, 13);
            tmp3_bitMask0 = tmp3_bitMask0 | 8192;
            break;
          case 14:
            tmp18_local14 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 14, StringSerializer_getInstance(), tmp18_local14);
            tmp3_bitMask0 = tmp3_bitMask0 | 16384;
            break;
          case 15:
            tmp19_local15 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 15, StringSerializer_getInstance(), tmp19_local15);
            tmp3_bitMask0 = tmp3_bitMask0 | 32768;
            break;
          case 16:
            tmp20_local16 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 16, StringSerializer_getInstance(), tmp20_local16);
            tmp3_bitMask0 = tmp3_bitMask0 | 65536;
            break;
          case 17:
            tmp21_local17 = tmp22_input.decodeNullableSerializableElement_8(tmp0_desc, 17, StringSerializer_getInstance(), tmp21_local17);
            tmp3_bitMask0 = tmp3_bitMask0 | 131072;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp22_input.endStructure_11(tmp0_desc);
    return EnabledBy_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, tmp13_local9, tmp14_local10, tmp15_local11, tmp16_local12, tmp17_local13, tmp18_local14, tmp19_local15, tmp20_local16, tmp21_local17, null);
  };
  $serializer_1.prototype.serialize_94 = function (encoder, value) {
    var tmp0_desc = this._descriptor_40;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._avatarUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 1, StringSerializer_getInstance(), value._eventsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 2, StringSerializer_getInstance(), value._followersUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 3, StringSerializer_getInstance(), value._followingUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 4, StringSerializer_getInstance(), value._gistsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 5, StringSerializer_getInstance(), value._gravatarId);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 6, StringSerializer_getInstance(), value._htmlUrl_0);
    tmp1_output.encodeStringElement_1(tmp0_desc, 7, value._id_1);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 8, StringSerializer_getInstance(), value._login_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 9, StringSerializer_getInstance(), value._nodeId_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 10, StringSerializer_getInstance(), value._organizationsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 11, StringSerializer_getInstance(), value._receivedEventsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 12, StringSerializer_getInstance(), value._reposUrl);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 13, value._siteAdmin);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 14, StringSerializer_getInstance(), value._starredUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 15, StringSerializer_getInstance(), value._subscriptionsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 16, StringSerializer_getInstance(), value._type_2);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 17, StringSerializer_getInstance(), value._url_4);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_1.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_94(encoder, value instanceof EnabledBy ? value : THROW_CCE());
  };
  $serializer_1.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_1;
  function $serializer_getInstance_1() {
    if ($serializer_instance_1 == null)
      new $serializer_1();
    return $serializer_instance_1;
  }
  function EnabledBy_init_$Init$(seen1, avatarUrl, eventsUrl, followersUrl, followingUrl, gistsUrl, gravatarId, htmlUrl, id, login, nodeId, organizationsUrl, receivedEventsUrl, reposUrl, siteAdmin, starredUrl, subscriptionsUrl, type, url_0, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('avatar_url');
    else
      $this._avatarUrl = avatarUrl;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('events_url');
    else
      $this._eventsUrl = eventsUrl;
    if (0 === (seen1 & 4))
      throw MissingFieldException_init_$Create$('followers_url');
    else
      $this._followersUrl = followersUrl;
    if (0 === (seen1 & 8))
      throw MissingFieldException_init_$Create$('following_url');
    else
      $this._followingUrl = followingUrl;
    if (0 === (seen1 & 16))
      throw MissingFieldException_init_$Create$('gists_url');
    else
      $this._gistsUrl = gistsUrl;
    if (0 === (seen1 & 32))
      throw MissingFieldException_init_$Create$('gravatar_id');
    else
      $this._gravatarId = gravatarId;
    if (0 === (seen1 & 64))
      throw MissingFieldException_init_$Create$('html_url');
    else
      $this._htmlUrl_0 = htmlUrl;
    if (0 === (seen1 & 128))
      throw MissingFieldException_init_$Create$('id');
    else
      $this._id_1 = id;
    if (0 === (seen1 & 256))
      throw MissingFieldException_init_$Create$('login');
    else
      $this._login_0 = login;
    if (0 === (seen1 & 512))
      throw MissingFieldException_init_$Create$('node_id');
    else
      $this._nodeId_0 = nodeId;
    if (0 === (seen1 & 1024))
      throw MissingFieldException_init_$Create$('organizations_url');
    else
      $this._organizationsUrl = organizationsUrl;
    if (0 === (seen1 & 2048))
      throw MissingFieldException_init_$Create$('received_events_url');
    else
      $this._receivedEventsUrl = receivedEventsUrl;
    if (0 === (seen1 & 4096))
      throw MissingFieldException_init_$Create$('repos_url');
    else
      $this._reposUrl = reposUrl;
    if (0 === (seen1 & 8192))
      throw MissingFieldException_init_$Create$('site_admin');
    else
      $this._siteAdmin = siteAdmin;
    if (0 === (seen1 & 16384))
      throw MissingFieldException_init_$Create$('starred_url');
    else
      $this._starredUrl = starredUrl;
    if (0 === (seen1 & 32768))
      throw MissingFieldException_init_$Create$('subscriptions_url');
    else
      $this._subscriptionsUrl = subscriptionsUrl;
    if (0 === (seen1 & 65536))
      throw MissingFieldException_init_$Create$('type');
    else
      $this._type_2 = type;
    if (0 === (seen1 & 131072))
      throw MissingFieldException_init_$Create$('url');
    else
      $this._url_4 = url_0;
    return $this;
  }
  function EnabledBy_init_$Create$(seen1, avatarUrl, eventsUrl, followersUrl, followingUrl, gistsUrl, gravatarId, htmlUrl, id, login, nodeId, organizationsUrl, receivedEventsUrl, reposUrl, siteAdmin, starredUrl, subscriptionsUrl, type, url_0, serializationConstructorMarker) {
    return EnabledBy_init_$Init$(seen1, avatarUrl, eventsUrl, followersUrl, followingUrl, gistsUrl, gravatarId, htmlUrl, id, login, nodeId, organizationsUrl, receivedEventsUrl, reposUrl, siteAdmin, starredUrl, subscriptionsUrl, type, url_0, serializationConstructorMarker, Object.create(EnabledBy.prototype));
  }
  function EnabledBy() {
  }
  EnabledBy.prototype.toString = function () {
    return '' + 'EnabledBy(avatarUrl=' + this._avatarUrl + ', eventsUrl=' + this._eventsUrl + ', followersUrl=' + this._followersUrl + ', followingUrl=' + this._followingUrl + ', gistsUrl=' + this._gistsUrl + ', gravatarId=' + this._gravatarId + ', htmlUrl=' + this._htmlUrl_0 + ', id=' + this._id_1 + ', login=' + this._login_0 + ', nodeId=' + this._nodeId_0 + ', organizationsUrl=' + this._organizationsUrl + ', receivedEventsUrl=' + this._receivedEventsUrl + ', reposUrl=' + this._reposUrl + ', siteAdmin=' + this._siteAdmin + ', starredUrl=' + this._starredUrl + ', subscriptionsUrl=' + this._subscriptionsUrl + ', type=' + this._type_2 + ', url=' + this._url_4 + ')';
  };
  EnabledBy.prototype.hashCode = function () {
    var result = this._avatarUrl == null ? 0 : getStringHashCode(this._avatarUrl);
    result = imul(result, 31) + (this._eventsUrl == null ? 0 : getStringHashCode(this._eventsUrl)) | 0;
    result = imul(result, 31) + (this._followersUrl == null ? 0 : getStringHashCode(this._followersUrl)) | 0;
    result = imul(result, 31) + (this._followingUrl == null ? 0 : getStringHashCode(this._followingUrl)) | 0;
    result = imul(result, 31) + (this._gistsUrl == null ? 0 : getStringHashCode(this._gistsUrl)) | 0;
    result = imul(result, 31) + (this._gravatarId == null ? 0 : getStringHashCode(this._gravatarId)) | 0;
    result = imul(result, 31) + (this._htmlUrl_0 == null ? 0 : getStringHashCode(this._htmlUrl_0)) | 0;
    result = imul(result, 31) + getStringHashCode(this._id_1) | 0;
    result = imul(result, 31) + (this._login_0 == null ? 0 : getStringHashCode(this._login_0)) | 0;
    result = imul(result, 31) + (this._nodeId_0 == null ? 0 : getStringHashCode(this._nodeId_0)) | 0;
    result = imul(result, 31) + (this._organizationsUrl == null ? 0 : getStringHashCode(this._organizationsUrl)) | 0;
    result = imul(result, 31) + (this._receivedEventsUrl == null ? 0 : getStringHashCode(this._receivedEventsUrl)) | 0;
    result = imul(result, 31) + (this._reposUrl == null ? 0 : getStringHashCode(this._reposUrl)) | 0;
    result = imul(result, 31) + (this._siteAdmin | 0) | 0;
    result = imul(result, 31) + (this._starredUrl == null ? 0 : getStringHashCode(this._starredUrl)) | 0;
    result = imul(result, 31) + (this._subscriptionsUrl == null ? 0 : getStringHashCode(this._subscriptionsUrl)) | 0;
    result = imul(result, 31) + (this._type_2 == null ? 0 : getStringHashCode(this._type_2)) | 0;
    result = imul(result, 31) + (this._url_4 == null ? 0 : getStringHashCode(this._url_4)) | 0;
    return result;
  };
  EnabledBy.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof EnabledBy))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof EnabledBy ? other : THROW_CCE();
    if (!(this._avatarUrl == tmp0_other_with_cast._avatarUrl))
      return false;
    if (!(this._eventsUrl == tmp0_other_with_cast._eventsUrl))
      return false;
    if (!(this._followersUrl == tmp0_other_with_cast._followersUrl))
      return false;
    if (!(this._followingUrl == tmp0_other_with_cast._followingUrl))
      return false;
    if (!(this._gistsUrl == tmp0_other_with_cast._gistsUrl))
      return false;
    if (!(this._gravatarId == tmp0_other_with_cast._gravatarId))
      return false;
    if (!(this._htmlUrl_0 == tmp0_other_with_cast._htmlUrl_0))
      return false;
    if (!(this._id_1 === tmp0_other_with_cast._id_1))
      return false;
    if (!(this._login_0 == tmp0_other_with_cast._login_0))
      return false;
    if (!(this._nodeId_0 == tmp0_other_with_cast._nodeId_0))
      return false;
    if (!(this._organizationsUrl == tmp0_other_with_cast._organizationsUrl))
      return false;
    if (!(this._receivedEventsUrl == tmp0_other_with_cast._receivedEventsUrl))
      return false;
    if (!(this._reposUrl == tmp0_other_with_cast._reposUrl))
      return false;
    if (!(this._siteAdmin === tmp0_other_with_cast._siteAdmin))
      return false;
    if (!(this._starredUrl == tmp0_other_with_cast._starredUrl))
      return false;
    if (!(this._subscriptionsUrl == tmp0_other_with_cast._subscriptionsUrl))
      return false;
    if (!(this._type_2 == tmp0_other_with_cast._type_2))
      return false;
    if (!(this._url_4 == tmp0_other_with_cast._url_4))
      return false;
    return true;
  };
  EnabledBy.$metadata$ = {
    simpleName: 'EnabledBy',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_1}
  };
  function $serializer_2() {
    $serializer_instance_2 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.AutoMerge', this, 4);
    tmp0_serialDesc.addElement_0('commit_message', false);
    tmp0_serialDesc.addElement_0('commit_title', false);
    tmp0_serialDesc.addElement_0('enabled_by', false);
    tmp0_serialDesc.addElement_0('merge_method', false);
    this._descriptor_41 = tmp0_serialDesc;
  }
  $serializer_2.prototype._get_descriptor__77 = function () {
    return this._descriptor_41;
  };
  $serializer_2.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer($serializer_getInstance_1()), new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_2.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_41;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp8_input.decodeSequentially_8()) {
      tmp4_local0 = tmp8_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp8_input.decodeNullableSerializableElement_8(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp8_input.decodeNullableSerializableElement_8(tmp0_desc, 2, $serializer_getInstance_1(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp8_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp8_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp8_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp8_input.decodeNullableSerializableElement_8(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp8_input.decodeNullableSerializableElement_8(tmp0_desc, 2, $serializer_getInstance_1(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp8_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp8_input.endStructure_11(tmp0_desc);
    return AutoMerge_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
  };
  $serializer_2.prototype.serialize_96 = function (encoder, value) {
    var tmp0_desc = this._descriptor_41;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._commitMessage);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 1, StringSerializer_getInstance(), value._commitTitle);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 2, $serializer_getInstance_1(), value._enabledBy);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 3, StringSerializer_getInstance(), value._mergeMethod);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_2.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_96(encoder, value instanceof AutoMerge ? value : THROW_CCE());
  };
  $serializer_2.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_2;
  function $serializer_getInstance_2() {
    if ($serializer_instance_2 == null)
      new $serializer_2();
    return $serializer_instance_2;
  }
  function AutoMerge_init_$Init$(seen1, commitMessage, commitTitle, enabledBy, mergeMethod, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('commit_message');
    else
      $this._commitMessage = commitMessage;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('commit_title');
    else
      $this._commitTitle = commitTitle;
    if (0 === (seen1 & 4))
      throw MissingFieldException_init_$Create$('enabled_by');
    else
      $this._enabledBy = enabledBy;
    if (0 === (seen1 & 8))
      throw MissingFieldException_init_$Create$('merge_method');
    else
      $this._mergeMethod = mergeMethod;
    return $this;
  }
  function AutoMerge_init_$Create$(seen1, commitMessage, commitTitle, enabledBy, mergeMethod, serializationConstructorMarker) {
    return AutoMerge_init_$Init$(seen1, commitMessage, commitTitle, enabledBy, mergeMethod, serializationConstructorMarker, Object.create(AutoMerge.prototype));
  }
  function $serializer_3() {
    $serializer_instance_3 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Branch.Repo', this, 73);
    tmp0_serialDesc.addElement_0('archive_url', false);
    tmp0_serialDesc.addElement_0('archived', false);
    tmp0_serialDesc.addElement_0('assignees_url', false);
    tmp0_serialDesc.addElement_0('blobs_url', false);
    tmp0_serialDesc.addElement_0('branches_url', false);
    tmp0_serialDesc.addElement_0('clone_url', false);
    tmp0_serialDesc.addElement_0('collaborators_url', false);
    tmp0_serialDesc.addElement_0('comments_url', false);
    tmp0_serialDesc.addElement_0('commits_url', false);
    tmp0_serialDesc.addElement_0('compare_url', false);
    tmp0_serialDesc.addElement_0('contents_url', false);
    tmp0_serialDesc.addElement_0('contributors_url', false);
    tmp0_serialDesc.addElement_0('created_at', false);
    tmp0_serialDesc.addElement_0('default_branch', false);
    tmp0_serialDesc.addElement_0('deployments_url', false);
    tmp0_serialDesc.addElement_0('description', false);
    tmp0_serialDesc.addElement_0('disabled', false);
    tmp0_serialDesc.addElement_0('downloads_url', false);
    tmp0_serialDesc.addElement_0('events_url', false);
    tmp0_serialDesc.addElement_0('fork', false);
    tmp0_serialDesc.addElement_0('forks', false);
    tmp0_serialDesc.addElement_0('forks_count', false);
    tmp0_serialDesc.addElement_0('forks_url', false);
    tmp0_serialDesc.addElement_0('full_name', false);
    tmp0_serialDesc.addElement_0('git_commits_url', false);
    tmp0_serialDesc.addElement_0('git_refs_url', false);
    tmp0_serialDesc.addElement_0('git_tags_url', false);
    tmp0_serialDesc.addElement_0('git_url', false);
    tmp0_serialDesc.addElement_0('has_downloads', false);
    tmp0_serialDesc.addElement_0('has_issues', false);
    tmp0_serialDesc.addElement_0('has_pages', false);
    tmp0_serialDesc.addElement_0('has_projects', false);
    tmp0_serialDesc.addElement_0('has_wiki', false);
    tmp0_serialDesc.addElement_0('homepage', false);
    tmp0_serialDesc.addElement_0('hooks_url', false);
    tmp0_serialDesc.addElement_0('html_url', false);
    tmp0_serialDesc.addElement_0('id', false);
    tmp0_serialDesc.addElement_0('issue_comment_url', false);
    tmp0_serialDesc.addElement_0('issue_events_url', false);
    tmp0_serialDesc.addElement_0('issues_url', false);
    tmp0_serialDesc.addElement_0('keys_url', false);
    tmp0_serialDesc.addElement_0('labels_url', false);
    tmp0_serialDesc.addElement_0('language', false);
    tmp0_serialDesc.addElement_0('languages_url', false);
    tmp0_serialDesc.addElement_0('license', false);
    tmp0_serialDesc.addElement_0('merges_url', false);
    tmp0_serialDesc.addElement_0('milestones_url', false);
    tmp0_serialDesc.addElement_0('mirror_url', false);
    tmp0_serialDesc.addElement_0('name', false);
    tmp0_serialDesc.addElement_0('node_id', false);
    tmp0_serialDesc.addElement_0('notifications_url', false);
    tmp0_serialDesc.addElement_0('open_issues', false);
    tmp0_serialDesc.addElement_0('open_issues_count', false);
    tmp0_serialDesc.addElement_0('owner', false);
    tmp0_serialDesc.addElement_0('private', false);
    tmp0_serialDesc.addElement_0('pulls_url', false);
    tmp0_serialDesc.addElement_0('pushed_at', false);
    tmp0_serialDesc.addElement_0('releases_url', false);
    tmp0_serialDesc.addElement_0('size', false);
    tmp0_serialDesc.addElement_0('ssh_url', false);
    tmp0_serialDesc.addElement_0('stargazers_count', false);
    tmp0_serialDesc.addElement_0('stargazers_url', false);
    tmp0_serialDesc.addElement_0('statuses_url', false);
    tmp0_serialDesc.addElement_0('subscribers_url', false);
    tmp0_serialDesc.addElement_0('subscription_url', false);
    tmp0_serialDesc.addElement_0('svn_url', false);
    tmp0_serialDesc.addElement_0('tags_url', false);
    tmp0_serialDesc.addElement_0('teams_url', false);
    tmp0_serialDesc.addElement_0('trees_url', false);
    tmp0_serialDesc.addElement_0('updated_at', false);
    tmp0_serialDesc.addElement_0('url', false);
    tmp0_serialDesc.addElement_0('watchers', false);
    tmp0_serialDesc.addElement_0('watchers_count', false);
    this._descriptor_42 = tmp0_serialDesc;
  }
  $serializer_3.prototype._get_descriptor__77 = function () {
    return this._descriptor_42;
  };
  $serializer_3.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance()), BooleanSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), BooleanSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), BooleanSerializer_getInstance(), IntSerializer_getInstance(), IntSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), BooleanSerializer_getInstance(), BooleanSerializer_getInstance(), BooleanSerializer_getInstance(), BooleanSerializer_getInstance(), BooleanSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), StringSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), IntSerializer_getInstance(), IntSerializer_getInstance(), new NullableSerializer($serializer_getInstance()), BooleanSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), LongSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), IntSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), IntSerializer_getInstance(), IntSerializer_getInstance()];
    return tmp0_arrayOf_0;
  };
  $serializer_3.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_42;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_bitMask1 = 0;
    var tmp5_bitMask2 = 0;
    var tmp6_local0 = null;
    var tmp7_local1 = false;
    var tmp8_local2 = null;
    var tmp9_local3 = null;
    var tmp10_local4 = null;
    var tmp11_local5 = null;
    var tmp12_local6 = null;
    var tmp13_local7 = null;
    var tmp14_local8 = null;
    var tmp15_local9 = null;
    var tmp16_local10 = null;
    var tmp17_local11 = null;
    var tmp18_local12 = null;
    var tmp19_local13 = null;
    var tmp20_local14 = null;
    var tmp21_local15 = null;
    var tmp22_local16 = false;
    var tmp23_local17 = null;
    var tmp24_local18 = null;
    var tmp25_local19 = false;
    var tmp26_local20 = 0;
    var tmp27_local21 = 0;
    var tmp28_local22 = null;
    var tmp29_local23 = null;
    var tmp30_local24 = null;
    var tmp31_local25 = null;
    var tmp32_local26 = null;
    var tmp33_local27 = null;
    var tmp34_local28 = false;
    var tmp35_local29 = false;
    var tmp36_local30 = false;
    var tmp37_local31 = false;
    var tmp38_local32 = false;
    var tmp39_local33 = null;
    var tmp40_local34 = null;
    var tmp41_local35 = null;
    var tmp42_local36 = null;
    var tmp43_local37 = null;
    var tmp44_local38 = null;
    var tmp45_local39 = null;
    var tmp46_local40 = null;
    var tmp47_local41 = null;
    var tmp48_local42 = null;
    var tmp49_local43 = null;
    var tmp50_local44 = null;
    var tmp51_local45 = null;
    var tmp52_local46 = null;
    var tmp53_local47 = null;
    var tmp54_local48 = null;
    var tmp55_local49 = null;
    var tmp56_local50 = null;
    var tmp57_local51 = 0;
    var tmp58_local52 = 0;
    var tmp59_local53 = null;
    var tmp60_local54 = false;
    var tmp61_local55 = null;
    var tmp62_local56 = null;
    var tmp63_local57 = null;
    var tmp64_local58 = new Long(0, 0);
    var tmp65_local59 = null;
    var tmp66_local60 = 0;
    var tmp67_local61 = null;
    var tmp68_local62 = null;
    var tmp69_local63 = null;
    var tmp70_local64 = null;
    var tmp71_local65 = null;
    var tmp72_local66 = null;
    var tmp73_local67 = null;
    var tmp74_local68 = null;
    var tmp75_local69 = null;
    var tmp76_local70 = null;
    var tmp77_local71 = 0;
    var tmp78_local72 = 0;
    var tmp79_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp79_input.decodeSequentially_8()) {
      tmp6_local0 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp6_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp7_local1 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp8_local2 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 2, StringSerializer_getInstance(), tmp8_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp9_local3 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp9_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp10_local4 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 4, StringSerializer_getInstance(), tmp10_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp11_local5 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 5, StringSerializer_getInstance(), tmp11_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp12_local6 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp12_local6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
      tmp13_local7 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 7, StringSerializer_getInstance(), tmp13_local7);
      tmp3_bitMask0 = tmp3_bitMask0 | 128;
      tmp14_local8 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 8, StringSerializer_getInstance(), tmp14_local8);
      tmp3_bitMask0 = tmp3_bitMask0 | 256;
      tmp15_local9 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 9, StringSerializer_getInstance(), tmp15_local9);
      tmp3_bitMask0 = tmp3_bitMask0 | 512;
      tmp16_local10 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 10, StringSerializer_getInstance(), tmp16_local10);
      tmp3_bitMask0 = tmp3_bitMask0 | 1024;
      tmp17_local11 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 11, StringSerializer_getInstance(), tmp17_local11);
      tmp3_bitMask0 = tmp3_bitMask0 | 2048;
      tmp18_local12 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 12, StringSerializer_getInstance(), tmp18_local12);
      tmp3_bitMask0 = tmp3_bitMask0 | 4096;
      tmp19_local13 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 13, StringSerializer_getInstance(), tmp19_local13);
      tmp3_bitMask0 = tmp3_bitMask0 | 8192;
      tmp20_local14 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 14, StringSerializer_getInstance(), tmp20_local14);
      tmp3_bitMask0 = tmp3_bitMask0 | 16384;
      tmp21_local15 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 15, StringSerializer_getInstance(), tmp21_local15);
      tmp3_bitMask0 = tmp3_bitMask0 | 32768;
      tmp22_local16 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 16);
      tmp3_bitMask0 = tmp3_bitMask0 | 65536;
      tmp23_local17 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 17, StringSerializer_getInstance(), tmp23_local17);
      tmp3_bitMask0 = tmp3_bitMask0 | 131072;
      tmp24_local18 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 18, StringSerializer_getInstance(), tmp24_local18);
      tmp3_bitMask0 = tmp3_bitMask0 | 262144;
      tmp25_local19 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 19);
      tmp3_bitMask0 = tmp3_bitMask0 | 524288;
      tmp26_local20 = tmp79_input.decodeIntElement_8(tmp0_desc, 20);
      tmp3_bitMask0 = tmp3_bitMask0 | 1048576;
      tmp27_local21 = tmp79_input.decodeIntElement_8(tmp0_desc, 21);
      tmp3_bitMask0 = tmp3_bitMask0 | 2097152;
      tmp28_local22 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 22, StringSerializer_getInstance(), tmp28_local22);
      tmp3_bitMask0 = tmp3_bitMask0 | 4194304;
      tmp29_local23 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 23, StringSerializer_getInstance(), tmp29_local23);
      tmp3_bitMask0 = tmp3_bitMask0 | 8388608;
      tmp30_local24 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 24, StringSerializer_getInstance(), tmp30_local24);
      tmp3_bitMask0 = tmp3_bitMask0 | 16777216;
      tmp31_local25 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 25, StringSerializer_getInstance(), tmp31_local25);
      tmp3_bitMask0 = tmp3_bitMask0 | 33554432;
      tmp32_local26 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 26, StringSerializer_getInstance(), tmp32_local26);
      tmp3_bitMask0 = tmp3_bitMask0 | 67108864;
      tmp33_local27 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 27, StringSerializer_getInstance(), tmp33_local27);
      tmp3_bitMask0 = tmp3_bitMask0 | 134217728;
      tmp34_local28 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 28);
      tmp3_bitMask0 = tmp3_bitMask0 | 268435456;
      tmp35_local29 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 29);
      tmp3_bitMask0 = tmp3_bitMask0 | 536870912;
      tmp36_local30 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 30);
      tmp3_bitMask0 = tmp3_bitMask0 | 1073741824;
      tmp37_local31 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 31);
      tmp3_bitMask0 = tmp3_bitMask0 | -2147483648;
      tmp38_local32 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 32);
      tmp4_bitMask1 = tmp4_bitMask1 | 1;
      tmp39_local33 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 33, StringSerializer_getInstance(), tmp39_local33);
      tmp4_bitMask1 = tmp4_bitMask1 | 2;
      tmp40_local34 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 34, StringSerializer_getInstance(), tmp40_local34);
      tmp4_bitMask1 = tmp4_bitMask1 | 4;
      tmp41_local35 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 35, StringSerializer_getInstance(), tmp41_local35);
      tmp4_bitMask1 = tmp4_bitMask1 | 8;
      tmp42_local36 = tmp79_input.decodeStringElement_8(tmp0_desc, 36);
      tmp4_bitMask1 = tmp4_bitMask1 | 16;
      tmp43_local37 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 37, StringSerializer_getInstance(), tmp43_local37);
      tmp4_bitMask1 = tmp4_bitMask1 | 32;
      tmp44_local38 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 38, StringSerializer_getInstance(), tmp44_local38);
      tmp4_bitMask1 = tmp4_bitMask1 | 64;
      tmp45_local39 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 39, StringSerializer_getInstance(), tmp45_local39);
      tmp4_bitMask1 = tmp4_bitMask1 | 128;
      tmp46_local40 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 40, StringSerializer_getInstance(), tmp46_local40);
      tmp4_bitMask1 = tmp4_bitMask1 | 256;
      tmp47_local41 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 41, StringSerializer_getInstance(), tmp47_local41);
      tmp4_bitMask1 = tmp4_bitMask1 | 512;
      tmp48_local42 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 42, StringSerializer_getInstance(), tmp48_local42);
      tmp4_bitMask1 = tmp4_bitMask1 | 1024;
      tmp49_local43 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 43, StringSerializer_getInstance(), tmp49_local43);
      tmp4_bitMask1 = tmp4_bitMask1 | 2048;
      tmp50_local44 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 44, StringSerializer_getInstance(), tmp50_local44);
      tmp4_bitMask1 = tmp4_bitMask1 | 4096;
      tmp51_local45 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 45, StringSerializer_getInstance(), tmp51_local45);
      tmp4_bitMask1 = tmp4_bitMask1 | 8192;
      tmp52_local46 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 46, StringSerializer_getInstance(), tmp52_local46);
      tmp4_bitMask1 = tmp4_bitMask1 | 16384;
      tmp53_local47 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 47, StringSerializer_getInstance(), tmp53_local47);
      tmp4_bitMask1 = tmp4_bitMask1 | 32768;
      tmp54_local48 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 48, StringSerializer_getInstance(), tmp54_local48);
      tmp4_bitMask1 = tmp4_bitMask1 | 65536;
      tmp55_local49 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 49, StringSerializer_getInstance(), tmp55_local49);
      tmp4_bitMask1 = tmp4_bitMask1 | 131072;
      tmp56_local50 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 50, StringSerializer_getInstance(), tmp56_local50);
      tmp4_bitMask1 = tmp4_bitMask1 | 262144;
      tmp57_local51 = tmp79_input.decodeIntElement_8(tmp0_desc, 51);
      tmp4_bitMask1 = tmp4_bitMask1 | 524288;
      tmp58_local52 = tmp79_input.decodeIntElement_8(tmp0_desc, 52);
      tmp4_bitMask1 = tmp4_bitMask1 | 1048576;
      tmp59_local53 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 53, $serializer_getInstance(), tmp59_local53);
      tmp4_bitMask1 = tmp4_bitMask1 | 2097152;
      tmp60_local54 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 54);
      tmp4_bitMask1 = tmp4_bitMask1 | 4194304;
      tmp61_local55 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 55, StringSerializer_getInstance(), tmp61_local55);
      tmp4_bitMask1 = tmp4_bitMask1 | 8388608;
      tmp62_local56 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 56, StringSerializer_getInstance(), tmp62_local56);
      tmp4_bitMask1 = tmp4_bitMask1 | 16777216;
      tmp63_local57 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 57, StringSerializer_getInstance(), tmp63_local57);
      tmp4_bitMask1 = tmp4_bitMask1 | 33554432;
      tmp64_local58 = tmp79_input.decodeLongElement_8(tmp0_desc, 58);
      tmp4_bitMask1 = tmp4_bitMask1 | 67108864;
      tmp65_local59 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 59, StringSerializer_getInstance(), tmp65_local59);
      tmp4_bitMask1 = tmp4_bitMask1 | 134217728;
      tmp66_local60 = tmp79_input.decodeIntElement_8(tmp0_desc, 60);
      tmp4_bitMask1 = tmp4_bitMask1 | 268435456;
      tmp67_local61 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 61, StringSerializer_getInstance(), tmp67_local61);
      tmp4_bitMask1 = tmp4_bitMask1 | 536870912;
      tmp68_local62 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 62, StringSerializer_getInstance(), tmp68_local62);
      tmp4_bitMask1 = tmp4_bitMask1 | 1073741824;
      tmp69_local63 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 63, StringSerializer_getInstance(), tmp69_local63);
      tmp4_bitMask1 = tmp4_bitMask1 | -2147483648;
      tmp70_local64 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 64, StringSerializer_getInstance(), tmp70_local64);
      tmp5_bitMask2 = tmp5_bitMask2 | 1;
      tmp71_local65 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 65, StringSerializer_getInstance(), tmp71_local65);
      tmp5_bitMask2 = tmp5_bitMask2 | 2;
      tmp72_local66 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 66, StringSerializer_getInstance(), tmp72_local66);
      tmp5_bitMask2 = tmp5_bitMask2 | 4;
      tmp73_local67 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 67, StringSerializer_getInstance(), tmp73_local67);
      tmp5_bitMask2 = tmp5_bitMask2 | 8;
      tmp74_local68 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 68, StringSerializer_getInstance(), tmp74_local68);
      tmp5_bitMask2 = tmp5_bitMask2 | 16;
      tmp75_local69 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 69, StringSerializer_getInstance(), tmp75_local69);
      tmp5_bitMask2 = tmp5_bitMask2 | 32;
      tmp76_local70 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 70, StringSerializer_getInstance(), tmp76_local70);
      tmp5_bitMask2 = tmp5_bitMask2 | 64;
      tmp77_local71 = tmp79_input.decodeIntElement_8(tmp0_desc, 71);
      tmp5_bitMask2 = tmp5_bitMask2 | 128;
      tmp78_local72 = tmp79_input.decodeIntElement_8(tmp0_desc, 72);
      tmp5_bitMask2 = tmp5_bitMask2 | 256;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp79_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp6_local0 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp6_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp7_local1 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp8_local2 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 2, StringSerializer_getInstance(), tmp8_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp9_local3 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp9_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp10_local4 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 4, StringSerializer_getInstance(), tmp10_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp11_local5 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 5, StringSerializer_getInstance(), tmp11_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp12_local6 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp12_local6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          case 7:
            tmp13_local7 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 7, StringSerializer_getInstance(), tmp13_local7);
            tmp3_bitMask0 = tmp3_bitMask0 | 128;
            break;
          case 8:
            tmp14_local8 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 8, StringSerializer_getInstance(), tmp14_local8);
            tmp3_bitMask0 = tmp3_bitMask0 | 256;
            break;
          case 9:
            tmp15_local9 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 9, StringSerializer_getInstance(), tmp15_local9);
            tmp3_bitMask0 = tmp3_bitMask0 | 512;
            break;
          case 10:
            tmp16_local10 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 10, StringSerializer_getInstance(), tmp16_local10);
            tmp3_bitMask0 = tmp3_bitMask0 | 1024;
            break;
          case 11:
            tmp17_local11 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 11, StringSerializer_getInstance(), tmp17_local11);
            tmp3_bitMask0 = tmp3_bitMask0 | 2048;
            break;
          case 12:
            tmp18_local12 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 12, StringSerializer_getInstance(), tmp18_local12);
            tmp3_bitMask0 = tmp3_bitMask0 | 4096;
            break;
          case 13:
            tmp19_local13 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 13, StringSerializer_getInstance(), tmp19_local13);
            tmp3_bitMask0 = tmp3_bitMask0 | 8192;
            break;
          case 14:
            tmp20_local14 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 14, StringSerializer_getInstance(), tmp20_local14);
            tmp3_bitMask0 = tmp3_bitMask0 | 16384;
            break;
          case 15:
            tmp21_local15 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 15, StringSerializer_getInstance(), tmp21_local15);
            tmp3_bitMask0 = tmp3_bitMask0 | 32768;
            break;
          case 16:
            tmp22_local16 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 16);
            tmp3_bitMask0 = tmp3_bitMask0 | 65536;
            break;
          case 17:
            tmp23_local17 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 17, StringSerializer_getInstance(), tmp23_local17);
            tmp3_bitMask0 = tmp3_bitMask0 | 131072;
            break;
          case 18:
            tmp24_local18 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 18, StringSerializer_getInstance(), tmp24_local18);
            tmp3_bitMask0 = tmp3_bitMask0 | 262144;
            break;
          case 19:
            tmp25_local19 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 19);
            tmp3_bitMask0 = tmp3_bitMask0 | 524288;
            break;
          case 20:
            tmp26_local20 = tmp79_input.decodeIntElement_8(tmp0_desc, 20);
            tmp3_bitMask0 = tmp3_bitMask0 | 1048576;
            break;
          case 21:
            tmp27_local21 = tmp79_input.decodeIntElement_8(tmp0_desc, 21);
            tmp3_bitMask0 = tmp3_bitMask0 | 2097152;
            break;
          case 22:
            tmp28_local22 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 22, StringSerializer_getInstance(), tmp28_local22);
            tmp3_bitMask0 = tmp3_bitMask0 | 4194304;
            break;
          case 23:
            tmp29_local23 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 23, StringSerializer_getInstance(), tmp29_local23);
            tmp3_bitMask0 = tmp3_bitMask0 | 8388608;
            break;
          case 24:
            tmp30_local24 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 24, StringSerializer_getInstance(), tmp30_local24);
            tmp3_bitMask0 = tmp3_bitMask0 | 16777216;
            break;
          case 25:
            tmp31_local25 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 25, StringSerializer_getInstance(), tmp31_local25);
            tmp3_bitMask0 = tmp3_bitMask0 | 33554432;
            break;
          case 26:
            tmp32_local26 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 26, StringSerializer_getInstance(), tmp32_local26);
            tmp3_bitMask0 = tmp3_bitMask0 | 67108864;
            break;
          case 27:
            tmp33_local27 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 27, StringSerializer_getInstance(), tmp33_local27);
            tmp3_bitMask0 = tmp3_bitMask0 | 134217728;
            break;
          case 28:
            tmp34_local28 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 28);
            tmp3_bitMask0 = tmp3_bitMask0 | 268435456;
            break;
          case 29:
            tmp35_local29 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 29);
            tmp3_bitMask0 = tmp3_bitMask0 | 536870912;
            break;
          case 30:
            tmp36_local30 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 30);
            tmp3_bitMask0 = tmp3_bitMask0 | 1073741824;
            break;
          case 31:
            tmp37_local31 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 31);
            tmp3_bitMask0 = tmp3_bitMask0 | -2147483648;
            break;
          case 32:
            tmp38_local32 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 32);
            tmp4_bitMask1 = tmp4_bitMask1 | 1;
            break;
          case 33:
            tmp39_local33 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 33, StringSerializer_getInstance(), tmp39_local33);
            tmp4_bitMask1 = tmp4_bitMask1 | 2;
            break;
          case 34:
            tmp40_local34 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 34, StringSerializer_getInstance(), tmp40_local34);
            tmp4_bitMask1 = tmp4_bitMask1 | 4;
            break;
          case 35:
            tmp41_local35 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 35, StringSerializer_getInstance(), tmp41_local35);
            tmp4_bitMask1 = tmp4_bitMask1 | 8;
            break;
          case 36:
            tmp42_local36 = tmp79_input.decodeStringElement_8(tmp0_desc, 36);
            tmp4_bitMask1 = tmp4_bitMask1 | 16;
            break;
          case 37:
            tmp43_local37 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 37, StringSerializer_getInstance(), tmp43_local37);
            tmp4_bitMask1 = tmp4_bitMask1 | 32;
            break;
          case 38:
            tmp44_local38 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 38, StringSerializer_getInstance(), tmp44_local38);
            tmp4_bitMask1 = tmp4_bitMask1 | 64;
            break;
          case 39:
            tmp45_local39 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 39, StringSerializer_getInstance(), tmp45_local39);
            tmp4_bitMask1 = tmp4_bitMask1 | 128;
            break;
          case 40:
            tmp46_local40 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 40, StringSerializer_getInstance(), tmp46_local40);
            tmp4_bitMask1 = tmp4_bitMask1 | 256;
            break;
          case 41:
            tmp47_local41 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 41, StringSerializer_getInstance(), tmp47_local41);
            tmp4_bitMask1 = tmp4_bitMask1 | 512;
            break;
          case 42:
            tmp48_local42 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 42, StringSerializer_getInstance(), tmp48_local42);
            tmp4_bitMask1 = tmp4_bitMask1 | 1024;
            break;
          case 43:
            tmp49_local43 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 43, StringSerializer_getInstance(), tmp49_local43);
            tmp4_bitMask1 = tmp4_bitMask1 | 2048;
            break;
          case 44:
            tmp50_local44 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 44, StringSerializer_getInstance(), tmp50_local44);
            tmp4_bitMask1 = tmp4_bitMask1 | 4096;
            break;
          case 45:
            tmp51_local45 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 45, StringSerializer_getInstance(), tmp51_local45);
            tmp4_bitMask1 = tmp4_bitMask1 | 8192;
            break;
          case 46:
            tmp52_local46 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 46, StringSerializer_getInstance(), tmp52_local46);
            tmp4_bitMask1 = tmp4_bitMask1 | 16384;
            break;
          case 47:
            tmp53_local47 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 47, StringSerializer_getInstance(), tmp53_local47);
            tmp4_bitMask1 = tmp4_bitMask1 | 32768;
            break;
          case 48:
            tmp54_local48 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 48, StringSerializer_getInstance(), tmp54_local48);
            tmp4_bitMask1 = tmp4_bitMask1 | 65536;
            break;
          case 49:
            tmp55_local49 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 49, StringSerializer_getInstance(), tmp55_local49);
            tmp4_bitMask1 = tmp4_bitMask1 | 131072;
            break;
          case 50:
            tmp56_local50 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 50, StringSerializer_getInstance(), tmp56_local50);
            tmp4_bitMask1 = tmp4_bitMask1 | 262144;
            break;
          case 51:
            tmp57_local51 = tmp79_input.decodeIntElement_8(tmp0_desc, 51);
            tmp4_bitMask1 = tmp4_bitMask1 | 524288;
            break;
          case 52:
            tmp58_local52 = tmp79_input.decodeIntElement_8(tmp0_desc, 52);
            tmp4_bitMask1 = tmp4_bitMask1 | 1048576;
            break;
          case 53:
            tmp59_local53 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 53, $serializer_getInstance(), tmp59_local53);
            tmp4_bitMask1 = tmp4_bitMask1 | 2097152;
            break;
          case 54:
            tmp60_local54 = tmp79_input.decodeBooleanElement_8(tmp0_desc, 54);
            tmp4_bitMask1 = tmp4_bitMask1 | 4194304;
            break;
          case 55:
            tmp61_local55 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 55, StringSerializer_getInstance(), tmp61_local55);
            tmp4_bitMask1 = tmp4_bitMask1 | 8388608;
            break;
          case 56:
            tmp62_local56 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 56, StringSerializer_getInstance(), tmp62_local56);
            tmp4_bitMask1 = tmp4_bitMask1 | 16777216;
            break;
          case 57:
            tmp63_local57 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 57, StringSerializer_getInstance(), tmp63_local57);
            tmp4_bitMask1 = tmp4_bitMask1 | 33554432;
            break;
          case 58:
            tmp64_local58 = tmp79_input.decodeLongElement_8(tmp0_desc, 58);
            tmp4_bitMask1 = tmp4_bitMask1 | 67108864;
            break;
          case 59:
            tmp65_local59 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 59, StringSerializer_getInstance(), tmp65_local59);
            tmp4_bitMask1 = tmp4_bitMask1 | 134217728;
            break;
          case 60:
            tmp66_local60 = tmp79_input.decodeIntElement_8(tmp0_desc, 60);
            tmp4_bitMask1 = tmp4_bitMask1 | 268435456;
            break;
          case 61:
            tmp67_local61 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 61, StringSerializer_getInstance(), tmp67_local61);
            tmp4_bitMask1 = tmp4_bitMask1 | 536870912;
            break;
          case 62:
            tmp68_local62 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 62, StringSerializer_getInstance(), tmp68_local62);
            tmp4_bitMask1 = tmp4_bitMask1 | 1073741824;
            break;
          case 63:
            tmp69_local63 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 63, StringSerializer_getInstance(), tmp69_local63);
            tmp4_bitMask1 = tmp4_bitMask1 | -2147483648;
            break;
          case 64:
            tmp70_local64 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 64, StringSerializer_getInstance(), tmp70_local64);
            tmp5_bitMask2 = tmp5_bitMask2 | 1;
            break;
          case 65:
            tmp71_local65 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 65, StringSerializer_getInstance(), tmp71_local65);
            tmp5_bitMask2 = tmp5_bitMask2 | 2;
            break;
          case 66:
            tmp72_local66 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 66, StringSerializer_getInstance(), tmp72_local66);
            tmp5_bitMask2 = tmp5_bitMask2 | 4;
            break;
          case 67:
            tmp73_local67 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 67, StringSerializer_getInstance(), tmp73_local67);
            tmp5_bitMask2 = tmp5_bitMask2 | 8;
            break;
          case 68:
            tmp74_local68 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 68, StringSerializer_getInstance(), tmp74_local68);
            tmp5_bitMask2 = tmp5_bitMask2 | 16;
            break;
          case 69:
            tmp75_local69 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 69, StringSerializer_getInstance(), tmp75_local69);
            tmp5_bitMask2 = tmp5_bitMask2 | 32;
            break;
          case 70:
            tmp76_local70 = tmp79_input.decodeNullableSerializableElement_8(tmp0_desc, 70, StringSerializer_getInstance(), tmp76_local70);
            tmp5_bitMask2 = tmp5_bitMask2 | 64;
            break;
          case 71:
            tmp77_local71 = tmp79_input.decodeIntElement_8(tmp0_desc, 71);
            tmp5_bitMask2 = tmp5_bitMask2 | 128;
            break;
          case 72:
            tmp78_local72 = tmp79_input.decodeIntElement_8(tmp0_desc, 72);
            tmp5_bitMask2 = tmp5_bitMask2 | 256;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp79_input.endStructure_11(tmp0_desc);
    return Repo_init_$Create$(tmp3_bitMask0, tmp4_bitMask1, tmp5_bitMask2, tmp6_local0, tmp7_local1, tmp8_local2, tmp9_local3, tmp10_local4, tmp11_local5, tmp12_local6, tmp13_local7, tmp14_local8, tmp15_local9, tmp16_local10, tmp17_local11, tmp18_local12, tmp19_local13, tmp20_local14, tmp21_local15, tmp22_local16, tmp23_local17, tmp24_local18, tmp25_local19, tmp26_local20, tmp27_local21, tmp28_local22, tmp29_local23, tmp30_local24, tmp31_local25, tmp32_local26, tmp33_local27, tmp34_local28, tmp35_local29, tmp36_local30, tmp37_local31, tmp38_local32, tmp39_local33, tmp40_local34, tmp41_local35, tmp42_local36, tmp43_local37, tmp44_local38, tmp45_local39, tmp46_local40, tmp47_local41, tmp48_local42, tmp49_local43, tmp50_local44, tmp51_local45, tmp52_local46, tmp53_local47, tmp54_local48, tmp55_local49, tmp56_local50, tmp57_local51, tmp58_local52, tmp59_local53, tmp60_local54, tmp61_local55, tmp62_local56, tmp63_local57, tmp64_local58, tmp65_local59, tmp66_local60, tmp67_local61, tmp68_local62, tmp69_local63, tmp70_local64, tmp71_local65, tmp72_local66, tmp73_local67, tmp74_local68, tmp75_local69, tmp76_local70, tmp77_local71, tmp78_local72, null);
  };
  $serializer_3.prototype.serialize_98 = function (encoder, value) {
    var tmp0_desc = this._descriptor_42;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._archiveUrl);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 1, value._archived);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 2, StringSerializer_getInstance(), value._assigneesUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 3, StringSerializer_getInstance(), value._blobsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 4, StringSerializer_getInstance(), value._branchesUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 5, StringSerializer_getInstance(), value._cloneUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 6, StringSerializer_getInstance(), value._collaboratorsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 7, StringSerializer_getInstance(), value._commentsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 8, StringSerializer_getInstance(), value._commitsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 9, StringSerializer_getInstance(), value._compareUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 10, StringSerializer_getInstance(), value._contentsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 11, StringSerializer_getInstance(), value._contributorsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 12, StringSerializer_getInstance(), value._createdAt_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 13, StringSerializer_getInstance(), value._defaultBranch);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 14, StringSerializer_getInstance(), value._deploymentsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 15, StringSerializer_getInstance(), value._description_1);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 16, value._disabled);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 17, StringSerializer_getInstance(), value._downloadsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 18, StringSerializer_getInstance(), value._eventsUrl_0);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 19, value._fork);
    tmp1_output.encodeIntElement_1(tmp0_desc, 20, value._forks);
    tmp1_output.encodeIntElement_1(tmp0_desc, 21, value._forksCount);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 22, StringSerializer_getInstance(), value._forksUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 23, StringSerializer_getInstance(), value._fullName);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 24, StringSerializer_getInstance(), value._gitCommitsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 25, StringSerializer_getInstance(), value._gitRefsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 26, StringSerializer_getInstance(), value._gitTagsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 27, StringSerializer_getInstance(), value._gitUrl);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 28, value._hasDownloads);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 29, value._hasIssues);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 30, value._hasPages);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 31, value._hasProjects);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 32, value._hasWiki);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 33, StringSerializer_getInstance(), value._homepage);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 34, StringSerializer_getInstance(), value._hooksUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 35, StringSerializer_getInstance(), value._htmlUrl_1);
    tmp1_output.encodeStringElement_1(tmp0_desc, 36, value._id_2);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 37, StringSerializer_getInstance(), value._issueCommentUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 38, StringSerializer_getInstance(), value._issueEventsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 39, StringSerializer_getInstance(), value._issuesUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 40, StringSerializer_getInstance(), value._keysUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 41, StringSerializer_getInstance(), value._labelsUrl_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 42, StringSerializer_getInstance(), value._language);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 43, StringSerializer_getInstance(), value._languagesUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 44, StringSerializer_getInstance(), value._license);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 45, StringSerializer_getInstance(), value._mergesUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 46, StringSerializer_getInstance(), value._milestonesUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 47, StringSerializer_getInstance(), value._mirrorUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 48, StringSerializer_getInstance(), value._name_8);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 49, StringSerializer_getInstance(), value._nodeId_1);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 50, StringSerializer_getInstance(), value._notificationsUrl);
    tmp1_output.encodeIntElement_1(tmp0_desc, 51, value._openIssues_0);
    tmp1_output.encodeIntElement_1(tmp0_desc, 52, value._openIssuesCount);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 53, $serializer_getInstance(), value._owner_2);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 54, value._private);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 55, StringSerializer_getInstance(), value._pullsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 56, StringSerializer_getInstance(), value._pushedAt);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 57, StringSerializer_getInstance(), value._releasesUrl);
    tmp1_output.encodeLongElement_1(tmp0_desc, 58, value._size_7);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 59, StringSerializer_getInstance(), value._sshUrl);
    tmp1_output.encodeIntElement_1(tmp0_desc, 60, value._stargazersCount);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 61, StringSerializer_getInstance(), value._stargazersUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 62, StringSerializer_getInstance(), value._statusesUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 63, StringSerializer_getInstance(), value._subscribersUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 64, StringSerializer_getInstance(), value._subscriptionUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 65, StringSerializer_getInstance(), value._svnUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 66, StringSerializer_getInstance(), value._tagsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 67, StringSerializer_getInstance(), value._teamsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 68, StringSerializer_getInstance(), value._treesUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 69, StringSerializer_getInstance(), value._updatedAt_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 70, StringSerializer_getInstance(), value._url_5);
    tmp1_output.encodeIntElement_1(tmp0_desc, 71, value._watchers);
    tmp1_output.encodeIntElement_1(tmp0_desc, 72, value._watchersCount);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_3.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_98(encoder, value instanceof Repo ? value : THROW_CCE());
  };
  $serializer_3.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_3;
  function $serializer_getInstance_3() {
    if ($serializer_instance_3 == null)
      new $serializer_3();
    return $serializer_instance_3;
  }
  function Repo_init_$Init$(seen1, seen2, seen3, archiveUrl, archived, assigneesUrl, blobsUrl, branchesUrl, cloneUrl, collaboratorsUrl, commentsUrl, commitsUrl, compareUrl, contentsUrl, contributorsUrl, createdAt, defaultBranch, deploymentsUrl, description, disabled, downloadsUrl, eventsUrl, fork, forks, forksCount, forksUrl, fullName, gitCommitsUrl, gitRefsUrl, gitTagsUrl, gitUrl, hasDownloads, hasIssues, hasPages, hasProjects, hasWiki, homepage, hooksUrl, htmlUrl, id, issueCommentUrl, issueEventsUrl, issuesUrl, keysUrl, labelsUrl, language, languagesUrl, license, mergesUrl, milestonesUrl, mirrorUrl, name, nodeId, notificationsUrl, openIssues, openIssuesCount, owner, private_0, pullsUrl, pushedAt, releasesUrl, size_0, sshUrl, stargazersCount, stargazersUrl, statusesUrl, subscribersUrl, subscriptionUrl, svnUrl, tagsUrl, teamsUrl, treesUrl, updatedAt, url_0, watchers, watchersCount, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('archive_url');
    else
      $this._archiveUrl = archiveUrl;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('archived');
    else
      $this._archived = archived;
    if (0 === (seen1 & 4))
      throw MissingFieldException_init_$Create$('assignees_url');
    else
      $this._assigneesUrl = assigneesUrl;
    if (0 === (seen1 & 8))
      throw MissingFieldException_init_$Create$('blobs_url');
    else
      $this._blobsUrl = blobsUrl;
    if (0 === (seen1 & 16))
      throw MissingFieldException_init_$Create$('branches_url');
    else
      $this._branchesUrl = branchesUrl;
    if (0 === (seen1 & 32))
      throw MissingFieldException_init_$Create$('clone_url');
    else
      $this._cloneUrl = cloneUrl;
    if (0 === (seen1 & 64))
      throw MissingFieldException_init_$Create$('collaborators_url');
    else
      $this._collaboratorsUrl = collaboratorsUrl;
    if (0 === (seen1 & 128))
      throw MissingFieldException_init_$Create$('comments_url');
    else
      $this._commentsUrl = commentsUrl;
    if (0 === (seen1 & 256))
      throw MissingFieldException_init_$Create$('commits_url');
    else
      $this._commitsUrl = commitsUrl;
    if (0 === (seen1 & 512))
      throw MissingFieldException_init_$Create$('compare_url');
    else
      $this._compareUrl = compareUrl;
    if (0 === (seen1 & 1024))
      throw MissingFieldException_init_$Create$('contents_url');
    else
      $this._contentsUrl = contentsUrl;
    if (0 === (seen1 & 2048))
      throw MissingFieldException_init_$Create$('contributors_url');
    else
      $this._contributorsUrl = contributorsUrl;
    if (0 === (seen1 & 4096))
      throw MissingFieldException_init_$Create$('created_at');
    else
      $this._createdAt_0 = createdAt;
    if (0 === (seen1 & 8192))
      throw MissingFieldException_init_$Create$('default_branch');
    else
      $this._defaultBranch = defaultBranch;
    if (0 === (seen1 & 16384))
      throw MissingFieldException_init_$Create$('deployments_url');
    else
      $this._deploymentsUrl = deploymentsUrl;
    if (0 === (seen1 & 32768))
      throw MissingFieldException_init_$Create$('description');
    else
      $this._description_1 = description;
    if (0 === (seen1 & 65536))
      throw MissingFieldException_init_$Create$('disabled');
    else
      $this._disabled = disabled;
    if (0 === (seen1 & 131072))
      throw MissingFieldException_init_$Create$('downloads_url');
    else
      $this._downloadsUrl = downloadsUrl;
    if (0 === (seen1 & 262144))
      throw MissingFieldException_init_$Create$('events_url');
    else
      $this._eventsUrl_0 = eventsUrl;
    if (0 === (seen1 & 524288))
      throw MissingFieldException_init_$Create$('fork');
    else
      $this._fork = fork;
    if (0 === (seen1 & 1048576))
      throw MissingFieldException_init_$Create$('forks');
    else
      $this._forks = forks;
    if (0 === (seen1 & 2097152))
      throw MissingFieldException_init_$Create$('forks_count');
    else
      $this._forksCount = forksCount;
    if (0 === (seen1 & 4194304))
      throw MissingFieldException_init_$Create$('forks_url');
    else
      $this._forksUrl = forksUrl;
    if (0 === (seen1 & 8388608))
      throw MissingFieldException_init_$Create$('full_name');
    else
      $this._fullName = fullName;
    if (0 === (seen1 & 16777216))
      throw MissingFieldException_init_$Create$('git_commits_url');
    else
      $this._gitCommitsUrl = gitCommitsUrl;
    if (0 === (seen1 & 33554432))
      throw MissingFieldException_init_$Create$('git_refs_url');
    else
      $this._gitRefsUrl = gitRefsUrl;
    if (0 === (seen1 & 67108864))
      throw MissingFieldException_init_$Create$('git_tags_url');
    else
      $this._gitTagsUrl = gitTagsUrl;
    if (0 === (seen1 & 134217728))
      throw MissingFieldException_init_$Create$('git_url');
    else
      $this._gitUrl = gitUrl;
    if (0 === (seen1 & 268435456))
      throw MissingFieldException_init_$Create$('has_downloads');
    else
      $this._hasDownloads = hasDownloads;
    if (0 === (seen1 & 536870912))
      throw MissingFieldException_init_$Create$('has_issues');
    else
      $this._hasIssues = hasIssues;
    if (0 === (seen1 & 1073741824))
      throw MissingFieldException_init_$Create$('has_pages');
    else
      $this._hasPages = hasPages;
    if (0 === (seen1 & -2147483648))
      throw MissingFieldException_init_$Create$('has_projects');
    else
      $this._hasProjects = hasProjects;
    if (0 === (seen2 & 1))
      throw MissingFieldException_init_$Create$('has_wiki');
    else
      $this._hasWiki = hasWiki;
    if (0 === (seen2 & 2))
      throw MissingFieldException_init_$Create$('homepage');
    else
      $this._homepage = homepage;
    if (0 === (seen2 & 4))
      throw MissingFieldException_init_$Create$('hooks_url');
    else
      $this._hooksUrl = hooksUrl;
    if (0 === (seen2 & 8))
      throw MissingFieldException_init_$Create$('html_url');
    else
      $this._htmlUrl_1 = htmlUrl;
    if (0 === (seen2 & 16))
      throw MissingFieldException_init_$Create$('id');
    else
      $this._id_2 = id;
    if (0 === (seen2 & 32))
      throw MissingFieldException_init_$Create$('issue_comment_url');
    else
      $this._issueCommentUrl = issueCommentUrl;
    if (0 === (seen2 & 64))
      throw MissingFieldException_init_$Create$('issue_events_url');
    else
      $this._issueEventsUrl = issueEventsUrl;
    if (0 === (seen2 & 128))
      throw MissingFieldException_init_$Create$('issues_url');
    else
      $this._issuesUrl = issuesUrl;
    if (0 === (seen2 & 256))
      throw MissingFieldException_init_$Create$('keys_url');
    else
      $this._keysUrl = keysUrl;
    if (0 === (seen2 & 512))
      throw MissingFieldException_init_$Create$('labels_url');
    else
      $this._labelsUrl_0 = labelsUrl;
    if (0 === (seen2 & 1024))
      throw MissingFieldException_init_$Create$('language');
    else
      $this._language = language;
    if (0 === (seen2 & 2048))
      throw MissingFieldException_init_$Create$('languages_url');
    else
      $this._languagesUrl = languagesUrl;
    if (0 === (seen2 & 4096))
      throw MissingFieldException_init_$Create$('license');
    else
      $this._license = license;
    if (0 === (seen2 & 8192))
      throw MissingFieldException_init_$Create$('merges_url');
    else
      $this._mergesUrl = mergesUrl;
    if (0 === (seen2 & 16384))
      throw MissingFieldException_init_$Create$('milestones_url');
    else
      $this._milestonesUrl = milestonesUrl;
    if (0 === (seen2 & 32768))
      throw MissingFieldException_init_$Create$('mirror_url');
    else
      $this._mirrorUrl = mirrorUrl;
    if (0 === (seen2 & 65536))
      throw MissingFieldException_init_$Create$('name');
    else
      $this._name_8 = name;
    if (0 === (seen2 & 131072))
      throw MissingFieldException_init_$Create$('node_id');
    else
      $this._nodeId_1 = nodeId;
    if (0 === (seen2 & 262144))
      throw MissingFieldException_init_$Create$('notifications_url');
    else
      $this._notificationsUrl = notificationsUrl;
    if (0 === (seen2 & 524288))
      throw MissingFieldException_init_$Create$('open_issues');
    else
      $this._openIssues_0 = openIssues;
    if (0 === (seen2 & 1048576))
      throw MissingFieldException_init_$Create$('open_issues_count');
    else
      $this._openIssuesCount = openIssuesCount;
    if (0 === (seen2 & 2097152))
      throw MissingFieldException_init_$Create$('owner');
    else
      $this._owner_2 = owner;
    if (0 === (seen2 & 4194304))
      throw MissingFieldException_init_$Create$('private');
    else
      $this._private = private_0;
    if (0 === (seen2 & 8388608))
      throw MissingFieldException_init_$Create$('pulls_url');
    else
      $this._pullsUrl = pullsUrl;
    if (0 === (seen2 & 16777216))
      throw MissingFieldException_init_$Create$('pushed_at');
    else
      $this._pushedAt = pushedAt;
    if (0 === (seen2 & 33554432))
      throw MissingFieldException_init_$Create$('releases_url');
    else
      $this._releasesUrl = releasesUrl;
    if (0 === (seen2 & 67108864))
      throw MissingFieldException_init_$Create$('size');
    else
      $this._size_7 = size_0;
    if (0 === (seen2 & 134217728))
      throw MissingFieldException_init_$Create$('ssh_url');
    else
      $this._sshUrl = sshUrl;
    if (0 === (seen2 & 268435456))
      throw MissingFieldException_init_$Create$('stargazers_count');
    else
      $this._stargazersCount = stargazersCount;
    if (0 === (seen2 & 536870912))
      throw MissingFieldException_init_$Create$('stargazers_url');
    else
      $this._stargazersUrl = stargazersUrl;
    if (0 === (seen2 & 1073741824))
      throw MissingFieldException_init_$Create$('statuses_url');
    else
      $this._statusesUrl = statusesUrl;
    if (0 === (seen2 & -2147483648))
      throw MissingFieldException_init_$Create$('subscribers_url');
    else
      $this._subscribersUrl = subscribersUrl;
    if (0 === (seen3 & 1))
      throw MissingFieldException_init_$Create$('subscription_url');
    else
      $this._subscriptionUrl = subscriptionUrl;
    if (0 === (seen3 & 2))
      throw MissingFieldException_init_$Create$('svn_url');
    else
      $this._svnUrl = svnUrl;
    if (0 === (seen3 & 4))
      throw MissingFieldException_init_$Create$('tags_url');
    else
      $this._tagsUrl = tagsUrl;
    if (0 === (seen3 & 8))
      throw MissingFieldException_init_$Create$('teams_url');
    else
      $this._teamsUrl = teamsUrl;
    if (0 === (seen3 & 16))
      throw MissingFieldException_init_$Create$('trees_url');
    else
      $this._treesUrl = treesUrl;
    if (0 === (seen3 & 32))
      throw MissingFieldException_init_$Create$('updated_at');
    else
      $this._updatedAt_0 = updatedAt;
    if (0 === (seen3 & 64))
      throw MissingFieldException_init_$Create$('url');
    else
      $this._url_5 = url_0;
    if (0 === (seen3 & 128))
      throw MissingFieldException_init_$Create$('watchers');
    else
      $this._watchers = watchers;
    if (0 === (seen3 & 256))
      throw MissingFieldException_init_$Create$('watchers_count');
    else
      $this._watchersCount = watchersCount;
    return $this;
  }
  function Repo_init_$Create$(seen1, seen2, seen3, archiveUrl, archived, assigneesUrl, blobsUrl, branchesUrl, cloneUrl, collaboratorsUrl, commentsUrl, commitsUrl, compareUrl, contentsUrl, contributorsUrl, createdAt, defaultBranch, deploymentsUrl, description, disabled, downloadsUrl, eventsUrl, fork, forks, forksCount, forksUrl, fullName, gitCommitsUrl, gitRefsUrl, gitTagsUrl, gitUrl, hasDownloads, hasIssues, hasPages, hasProjects, hasWiki, homepage, hooksUrl, htmlUrl, id, issueCommentUrl, issueEventsUrl, issuesUrl, keysUrl, labelsUrl, language, languagesUrl, license, mergesUrl, milestonesUrl, mirrorUrl, name, nodeId, notificationsUrl, openIssues, openIssuesCount, owner, private_0, pullsUrl, pushedAt, releasesUrl, size_0, sshUrl, stargazersCount, stargazersUrl, statusesUrl, subscribersUrl, subscriptionUrl, svnUrl, tagsUrl, teamsUrl, treesUrl, updatedAt, url_0, watchers, watchersCount, serializationConstructorMarker) {
    return Repo_init_$Init$(seen1, seen2, seen3, archiveUrl, archived, assigneesUrl, blobsUrl, branchesUrl, cloneUrl, collaboratorsUrl, commentsUrl, commitsUrl, compareUrl, contentsUrl, contributorsUrl, createdAt, defaultBranch, deploymentsUrl, description, disabled, downloadsUrl, eventsUrl, fork, forks, forksCount, forksUrl, fullName, gitCommitsUrl, gitRefsUrl, gitTagsUrl, gitUrl, hasDownloads, hasIssues, hasPages, hasProjects, hasWiki, homepage, hooksUrl, htmlUrl, id, issueCommentUrl, issueEventsUrl, issuesUrl, keysUrl, labelsUrl, language, languagesUrl, license, mergesUrl, milestonesUrl, mirrorUrl, name, nodeId, notificationsUrl, openIssues, openIssuesCount, owner, private_0, pullsUrl, pushedAt, releasesUrl, size_0, sshUrl, stargazersCount, stargazersUrl, statusesUrl, subscribersUrl, subscriptionUrl, svnUrl, tagsUrl, teamsUrl, treesUrl, updatedAt, url_0, watchers, watchersCount, serializationConstructorMarker, Object.create(Repo.prototype));
  }
  function Repo() {
  }
  Repo.prototype.toString = function () {
    return '' + 'Repo(archiveUrl=' + this._archiveUrl + ', archived=' + this._archived + ', assigneesUrl=' + this._assigneesUrl + ', blobsUrl=' + this._blobsUrl + ', branchesUrl=' + this._branchesUrl + ', cloneUrl=' + this._cloneUrl + ', collaboratorsUrl=' + this._collaboratorsUrl + ', commentsUrl=' + this._commentsUrl + ', commitsUrl=' + this._commitsUrl + ', compareUrl=' + this._compareUrl + ', contentsUrl=' + this._contentsUrl + ', contributorsUrl=' + this._contributorsUrl + ', createdAt=' + this._createdAt_0 + ', defaultBranch=' + this._defaultBranch + ', deploymentsUrl=' + this._deploymentsUrl + ', description=' + this._description_1 + ', disabled=' + this._disabled + ', downloadsUrl=' + this._downloadsUrl + ', eventsUrl=' + this._eventsUrl_0 + ', fork=' + this._fork + ', forks=' + this._forks + ', forksCount=' + this._forksCount + ', forksUrl=' + this._forksUrl + ', fullName=' + this._fullName + ', gitCommitsUrl=' + this._gitCommitsUrl + ', gitRefsUrl=' + this._gitRefsUrl + ', gitTagsUrl=' + this._gitTagsUrl + ', gitUrl=' + this._gitUrl + ', hasDownloads=' + this._hasDownloads + ', hasIssues=' + this._hasIssues + ', hasPages=' + this._hasPages + ', hasProjects=' + this._hasProjects + ', hasWiki=' + this._hasWiki + ', homepage=' + this._homepage + ', hooksUrl=' + this._hooksUrl + ', htmlUrl=' + this._htmlUrl_1 + ', id=' + this._id_2 + ', issueCommentUrl=' + this._issueCommentUrl + ', issueEventsUrl=' + this._issueEventsUrl + ', issuesUrl=' + this._issuesUrl + ', keysUrl=' + this._keysUrl + ', labelsUrl=' + this._labelsUrl_0 + ', language=' + this._language + ', languagesUrl=' + this._languagesUrl + ', license=' + this._license + ', mergesUrl=' + this._mergesUrl + ', milestonesUrl=' + this._milestonesUrl + ', mirrorUrl=' + this._mirrorUrl + ', name=' + this._name_8 + ', nodeId=' + this._nodeId_1 + ', notificationsUrl=' + this._notificationsUrl + ', openIssues=' + this._openIssues_0 + ', openIssuesCount=' + this._openIssuesCount + ', owner=' + this._owner_2 + ', private=' + this._private + ', pullsUrl=' + this._pullsUrl + ', pushedAt=' + this._pushedAt + ', releasesUrl=' + this._releasesUrl + ', size=' + this._size_7 + ', sshUrl=' + this._sshUrl + ', stargazersCount=' + this._stargazersCount + ', stargazersUrl=' + this._stargazersUrl + ', statusesUrl=' + this._statusesUrl + ', subscribersUrl=' + this._subscribersUrl + ', subscriptionUrl=' + this._subscriptionUrl + ', svnUrl=' + this._svnUrl + ', tagsUrl=' + this._tagsUrl + ', teamsUrl=' + this._teamsUrl + ', treesUrl=' + this._treesUrl + ', updatedAt=' + this._updatedAt_0 + ', url=' + this._url_5 + ', watchers=' + this._watchers + ', watchersCount=' + this._watchersCount + ')';
  };
  Repo.prototype.hashCode = function () {
    var result = this._archiveUrl == null ? 0 : getStringHashCode(this._archiveUrl);
    result = imul(result, 31) + (this._archived | 0) | 0;
    result = imul(result, 31) + (this._assigneesUrl == null ? 0 : getStringHashCode(this._assigneesUrl)) | 0;
    result = imul(result, 31) + (this._blobsUrl == null ? 0 : getStringHashCode(this._blobsUrl)) | 0;
    result = imul(result, 31) + (this._branchesUrl == null ? 0 : getStringHashCode(this._branchesUrl)) | 0;
    result = imul(result, 31) + (this._cloneUrl == null ? 0 : getStringHashCode(this._cloneUrl)) | 0;
    result = imul(result, 31) + (this._collaboratorsUrl == null ? 0 : getStringHashCode(this._collaboratorsUrl)) | 0;
    result = imul(result, 31) + (this._commentsUrl == null ? 0 : getStringHashCode(this._commentsUrl)) | 0;
    result = imul(result, 31) + (this._commitsUrl == null ? 0 : getStringHashCode(this._commitsUrl)) | 0;
    result = imul(result, 31) + (this._compareUrl == null ? 0 : getStringHashCode(this._compareUrl)) | 0;
    result = imul(result, 31) + (this._contentsUrl == null ? 0 : getStringHashCode(this._contentsUrl)) | 0;
    result = imul(result, 31) + (this._contributorsUrl == null ? 0 : getStringHashCode(this._contributorsUrl)) | 0;
    result = imul(result, 31) + (this._createdAt_0 == null ? 0 : getStringHashCode(this._createdAt_0)) | 0;
    result = imul(result, 31) + (this._defaultBranch == null ? 0 : getStringHashCode(this._defaultBranch)) | 0;
    result = imul(result, 31) + (this._deploymentsUrl == null ? 0 : getStringHashCode(this._deploymentsUrl)) | 0;
    result = imul(result, 31) + (this._description_1 == null ? 0 : getStringHashCode(this._description_1)) | 0;
    result = imul(result, 31) + (this._disabled | 0) | 0;
    result = imul(result, 31) + (this._downloadsUrl == null ? 0 : getStringHashCode(this._downloadsUrl)) | 0;
    result = imul(result, 31) + (this._eventsUrl_0 == null ? 0 : getStringHashCode(this._eventsUrl_0)) | 0;
    result = imul(result, 31) + (this._fork | 0) | 0;
    result = imul(result, 31) + this._forks | 0;
    result = imul(result, 31) + this._forksCount | 0;
    result = imul(result, 31) + (this._forksUrl == null ? 0 : getStringHashCode(this._forksUrl)) | 0;
    result = imul(result, 31) + (this._fullName == null ? 0 : getStringHashCode(this._fullName)) | 0;
    result = imul(result, 31) + (this._gitCommitsUrl == null ? 0 : getStringHashCode(this._gitCommitsUrl)) | 0;
    result = imul(result, 31) + (this._gitRefsUrl == null ? 0 : getStringHashCode(this._gitRefsUrl)) | 0;
    result = imul(result, 31) + (this._gitTagsUrl == null ? 0 : getStringHashCode(this._gitTagsUrl)) | 0;
    result = imul(result, 31) + (this._gitUrl == null ? 0 : getStringHashCode(this._gitUrl)) | 0;
    result = imul(result, 31) + (this._hasDownloads | 0) | 0;
    result = imul(result, 31) + (this._hasIssues | 0) | 0;
    result = imul(result, 31) + (this._hasPages | 0) | 0;
    result = imul(result, 31) + (this._hasProjects | 0) | 0;
    result = imul(result, 31) + (this._hasWiki | 0) | 0;
    result = imul(result, 31) + (this._homepage == null ? 0 : getStringHashCode(this._homepage)) | 0;
    result = imul(result, 31) + (this._hooksUrl == null ? 0 : getStringHashCode(this._hooksUrl)) | 0;
    result = imul(result, 31) + (this._htmlUrl_1 == null ? 0 : getStringHashCode(this._htmlUrl_1)) | 0;
    result = imul(result, 31) + getStringHashCode(this._id_2) | 0;
    result = imul(result, 31) + (this._issueCommentUrl == null ? 0 : getStringHashCode(this._issueCommentUrl)) | 0;
    result = imul(result, 31) + (this._issueEventsUrl == null ? 0 : getStringHashCode(this._issueEventsUrl)) | 0;
    result = imul(result, 31) + (this._issuesUrl == null ? 0 : getStringHashCode(this._issuesUrl)) | 0;
    result = imul(result, 31) + (this._keysUrl == null ? 0 : getStringHashCode(this._keysUrl)) | 0;
    result = imul(result, 31) + (this._labelsUrl_0 == null ? 0 : getStringHashCode(this._labelsUrl_0)) | 0;
    result = imul(result, 31) + (this._language == null ? 0 : getStringHashCode(this._language)) | 0;
    result = imul(result, 31) + (this._languagesUrl == null ? 0 : getStringHashCode(this._languagesUrl)) | 0;
    result = imul(result, 31) + (this._license == null ? 0 : getStringHashCode(this._license)) | 0;
    result = imul(result, 31) + (this._mergesUrl == null ? 0 : getStringHashCode(this._mergesUrl)) | 0;
    result = imul(result, 31) + (this._milestonesUrl == null ? 0 : getStringHashCode(this._milestonesUrl)) | 0;
    result = imul(result, 31) + (this._mirrorUrl == null ? 0 : getStringHashCode(this._mirrorUrl)) | 0;
    result = imul(result, 31) + (this._name_8 == null ? 0 : getStringHashCode(this._name_8)) | 0;
    result = imul(result, 31) + (this._nodeId_1 == null ? 0 : getStringHashCode(this._nodeId_1)) | 0;
    result = imul(result, 31) + (this._notificationsUrl == null ? 0 : getStringHashCode(this._notificationsUrl)) | 0;
    result = imul(result, 31) + this._openIssues_0 | 0;
    result = imul(result, 31) + this._openIssuesCount | 0;
    result = imul(result, 31) + (this._owner_2 == null ? 0 : this._owner_2.hashCode()) | 0;
    result = imul(result, 31) + (this._private | 0) | 0;
    result = imul(result, 31) + (this._pullsUrl == null ? 0 : getStringHashCode(this._pullsUrl)) | 0;
    result = imul(result, 31) + (this._pushedAt == null ? 0 : getStringHashCode(this._pushedAt)) | 0;
    result = imul(result, 31) + (this._releasesUrl == null ? 0 : getStringHashCode(this._releasesUrl)) | 0;
    result = imul(result, 31) + this._size_7.hashCode() | 0;
    result = imul(result, 31) + (this._sshUrl == null ? 0 : getStringHashCode(this._sshUrl)) | 0;
    result = imul(result, 31) + this._stargazersCount | 0;
    result = imul(result, 31) + (this._stargazersUrl == null ? 0 : getStringHashCode(this._stargazersUrl)) | 0;
    result = imul(result, 31) + (this._statusesUrl == null ? 0 : getStringHashCode(this._statusesUrl)) | 0;
    result = imul(result, 31) + (this._subscribersUrl == null ? 0 : getStringHashCode(this._subscribersUrl)) | 0;
    result = imul(result, 31) + (this._subscriptionUrl == null ? 0 : getStringHashCode(this._subscriptionUrl)) | 0;
    result = imul(result, 31) + (this._svnUrl == null ? 0 : getStringHashCode(this._svnUrl)) | 0;
    result = imul(result, 31) + (this._tagsUrl == null ? 0 : getStringHashCode(this._tagsUrl)) | 0;
    result = imul(result, 31) + (this._teamsUrl == null ? 0 : getStringHashCode(this._teamsUrl)) | 0;
    result = imul(result, 31) + (this._treesUrl == null ? 0 : getStringHashCode(this._treesUrl)) | 0;
    result = imul(result, 31) + (this._updatedAt_0 == null ? 0 : getStringHashCode(this._updatedAt_0)) | 0;
    result = imul(result, 31) + (this._url_5 == null ? 0 : getStringHashCode(this._url_5)) | 0;
    result = imul(result, 31) + this._watchers | 0;
    result = imul(result, 31) + this._watchersCount | 0;
    return result;
  };
  Repo.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Repo))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Repo ? other : THROW_CCE();
    if (!(this._archiveUrl == tmp0_other_with_cast._archiveUrl))
      return false;
    if (!(this._archived === tmp0_other_with_cast._archived))
      return false;
    if (!(this._assigneesUrl == tmp0_other_with_cast._assigneesUrl))
      return false;
    if (!(this._blobsUrl == tmp0_other_with_cast._blobsUrl))
      return false;
    if (!(this._branchesUrl == tmp0_other_with_cast._branchesUrl))
      return false;
    if (!(this._cloneUrl == tmp0_other_with_cast._cloneUrl))
      return false;
    if (!(this._collaboratorsUrl == tmp0_other_with_cast._collaboratorsUrl))
      return false;
    if (!(this._commentsUrl == tmp0_other_with_cast._commentsUrl))
      return false;
    if (!(this._commitsUrl == tmp0_other_with_cast._commitsUrl))
      return false;
    if (!(this._compareUrl == tmp0_other_with_cast._compareUrl))
      return false;
    if (!(this._contentsUrl == tmp0_other_with_cast._contentsUrl))
      return false;
    if (!(this._contributorsUrl == tmp0_other_with_cast._contributorsUrl))
      return false;
    if (!(this._createdAt_0 == tmp0_other_with_cast._createdAt_0))
      return false;
    if (!(this._defaultBranch == tmp0_other_with_cast._defaultBranch))
      return false;
    if (!(this._deploymentsUrl == tmp0_other_with_cast._deploymentsUrl))
      return false;
    if (!(this._description_1 == tmp0_other_with_cast._description_1))
      return false;
    if (!(this._disabled === tmp0_other_with_cast._disabled))
      return false;
    if (!(this._downloadsUrl == tmp0_other_with_cast._downloadsUrl))
      return false;
    if (!(this._eventsUrl_0 == tmp0_other_with_cast._eventsUrl_0))
      return false;
    if (!(this._fork === tmp0_other_with_cast._fork))
      return false;
    if (!(this._forks === tmp0_other_with_cast._forks))
      return false;
    if (!(this._forksCount === tmp0_other_with_cast._forksCount))
      return false;
    if (!(this._forksUrl == tmp0_other_with_cast._forksUrl))
      return false;
    if (!(this._fullName == tmp0_other_with_cast._fullName))
      return false;
    if (!(this._gitCommitsUrl == tmp0_other_with_cast._gitCommitsUrl))
      return false;
    if (!(this._gitRefsUrl == tmp0_other_with_cast._gitRefsUrl))
      return false;
    if (!(this._gitTagsUrl == tmp0_other_with_cast._gitTagsUrl))
      return false;
    if (!(this._gitUrl == tmp0_other_with_cast._gitUrl))
      return false;
    if (!(this._hasDownloads === tmp0_other_with_cast._hasDownloads))
      return false;
    if (!(this._hasIssues === tmp0_other_with_cast._hasIssues))
      return false;
    if (!(this._hasPages === tmp0_other_with_cast._hasPages))
      return false;
    if (!(this._hasProjects === tmp0_other_with_cast._hasProjects))
      return false;
    if (!(this._hasWiki === tmp0_other_with_cast._hasWiki))
      return false;
    if (!(this._homepage == tmp0_other_with_cast._homepage))
      return false;
    if (!(this._hooksUrl == tmp0_other_with_cast._hooksUrl))
      return false;
    if (!(this._htmlUrl_1 == tmp0_other_with_cast._htmlUrl_1))
      return false;
    if (!(this._id_2 === tmp0_other_with_cast._id_2))
      return false;
    if (!(this._issueCommentUrl == tmp0_other_with_cast._issueCommentUrl))
      return false;
    if (!(this._issueEventsUrl == tmp0_other_with_cast._issueEventsUrl))
      return false;
    if (!(this._issuesUrl == tmp0_other_with_cast._issuesUrl))
      return false;
    if (!(this._keysUrl == tmp0_other_with_cast._keysUrl))
      return false;
    if (!(this._labelsUrl_0 == tmp0_other_with_cast._labelsUrl_0))
      return false;
    if (!(this._language == tmp0_other_with_cast._language))
      return false;
    if (!(this._languagesUrl == tmp0_other_with_cast._languagesUrl))
      return false;
    if (!(this._license == tmp0_other_with_cast._license))
      return false;
    if (!(this._mergesUrl == tmp0_other_with_cast._mergesUrl))
      return false;
    if (!(this._milestonesUrl == tmp0_other_with_cast._milestonesUrl))
      return false;
    if (!(this._mirrorUrl == tmp0_other_with_cast._mirrorUrl))
      return false;
    if (!(this._name_8 == tmp0_other_with_cast._name_8))
      return false;
    if (!(this._nodeId_1 == tmp0_other_with_cast._nodeId_1))
      return false;
    if (!(this._notificationsUrl == tmp0_other_with_cast._notificationsUrl))
      return false;
    if (!(this._openIssues_0 === tmp0_other_with_cast._openIssues_0))
      return false;
    if (!(this._openIssuesCount === tmp0_other_with_cast._openIssuesCount))
      return false;
    if (!equals_1(this._owner_2, tmp0_other_with_cast._owner_2))
      return false;
    if (!(this._private === tmp0_other_with_cast._private))
      return false;
    if (!(this._pullsUrl == tmp0_other_with_cast._pullsUrl))
      return false;
    if (!(this._pushedAt == tmp0_other_with_cast._pushedAt))
      return false;
    if (!(this._releasesUrl == tmp0_other_with_cast._releasesUrl))
      return false;
    if (!this._size_7.equals(tmp0_other_with_cast._size_7))
      return false;
    if (!(this._sshUrl == tmp0_other_with_cast._sshUrl))
      return false;
    if (!(this._stargazersCount === tmp0_other_with_cast._stargazersCount))
      return false;
    if (!(this._stargazersUrl == tmp0_other_with_cast._stargazersUrl))
      return false;
    if (!(this._statusesUrl == tmp0_other_with_cast._statusesUrl))
      return false;
    if (!(this._subscribersUrl == tmp0_other_with_cast._subscribersUrl))
      return false;
    if (!(this._subscriptionUrl == tmp0_other_with_cast._subscriptionUrl))
      return false;
    if (!(this._svnUrl == tmp0_other_with_cast._svnUrl))
      return false;
    if (!(this._tagsUrl == tmp0_other_with_cast._tagsUrl))
      return false;
    if (!(this._teamsUrl == tmp0_other_with_cast._teamsUrl))
      return false;
    if (!(this._treesUrl == tmp0_other_with_cast._treesUrl))
      return false;
    if (!(this._updatedAt_0 == tmp0_other_with_cast._updatedAt_0))
      return false;
    if (!(this._url_5 == tmp0_other_with_cast._url_5))
      return false;
    if (!(this._watchers === tmp0_other_with_cast._watchers))
      return false;
    if (!(this._watchersCount === tmp0_other_with_cast._watchersCount))
      return false;
    return true;
  };
  Repo.$metadata$ = {
    simpleName: 'Repo',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_3}
  };
  function $serializer_4() {
    $serializer_instance_4 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Branch', this, 5);
    tmp0_serialDesc.addElement_0('label', false);
    tmp0_serialDesc.addElement_0('ref', false);
    tmp0_serialDesc.addElement_0('repo', false);
    tmp0_serialDesc.addElement_0('sha', false);
    tmp0_serialDesc.addElement_0('user', false);
    this._descriptor_43 = tmp0_serialDesc;
  }
  $serializer_4.prototype._get_descriptor__77 = function () {
    return this._descriptor_43;
  };
  $serializer_4.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer($serializer_getInstance_3()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer($serializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_4.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_43;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp9_input.decodeSequentially_8()) {
      tmp4_local0 = tmp9_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp9_input.decodeNullableSerializableElement_8(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp9_input.decodeNullableSerializableElement_8(tmp0_desc, 2, $serializer_getInstance_3(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp9_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp9_input.decodeNullableSerializableElement_8(tmp0_desc, 4, $serializer_getInstance(), tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp9_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp9_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp9_input.decodeNullableSerializableElement_8(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp9_input.decodeNullableSerializableElement_8(tmp0_desc, 2, $serializer_getInstance_3(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp9_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp9_input.decodeNullableSerializableElement_8(tmp0_desc, 4, $serializer_getInstance(), tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp9_input.endStructure_11(tmp0_desc);
    return Branch_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
  };
  $serializer_4.prototype.serialize_100 = function (encoder, value) {
    var tmp0_desc = this._descriptor_43;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._label);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 1, StringSerializer_getInstance(), value._ref_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 2, $serializer_getInstance_3(), value._repo_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 3, StringSerializer_getInstance(), value._sha);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 4, $serializer_getInstance(), value._user_1);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_4.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_100(encoder, value instanceof Branch ? value : THROW_CCE());
  };
  $serializer_4.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_4;
  function $serializer_getInstance_4() {
    if ($serializer_instance_4 == null)
      new $serializer_4();
    return $serializer_instance_4;
  }
  function Branch_init_$Init$(seen1, label, ref, repo, sha, user, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('label');
    else
      $this._label = label;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('ref');
    else
      $this._ref_0 = ref;
    if (0 === (seen1 & 4))
      throw MissingFieldException_init_$Create$('repo');
    else
      $this._repo_0 = repo;
    if (0 === (seen1 & 8))
      throw MissingFieldException_init_$Create$('sha');
    else
      $this._sha = sha;
    if (0 === (seen1 & 16))
      throw MissingFieldException_init_$Create$('user');
    else
      $this._user_1 = user;
    return $this;
  }
  function Branch_init_$Create$(seen1, label, ref, repo, sha, user, serializationConstructorMarker) {
    return Branch_init_$Init$(seen1, label, ref, repo, sha, user, serializationConstructorMarker, Object.create(Branch.prototype));
  }
  function $serializer_5() {
    $serializer_instance_5 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Label', this, 7);
    tmp0_serialDesc.addElement_0('color', false);
    tmp0_serialDesc.addElement_0('default', false);
    tmp0_serialDesc.addElement_0('description', false);
    tmp0_serialDesc.addElement_0('id', false);
    tmp0_serialDesc.addElement_0('name', false);
    tmp0_serialDesc.addElement_0('node_id', false);
    tmp0_serialDesc.addElement_0('url', false);
    this._descriptor_44 = tmp0_serialDesc;
  }
  $serializer_5.prototype._get_descriptor__77 = function () {
    return this._descriptor_44;
  };
  $serializer_5.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance()), BooleanSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), StringSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_5.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_44;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = false;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_local6 = null;
    var tmp11_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp11_input.decodeSequentially_8()) {
      tmp4_local0 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp11_input.decodeBooleanElement_8(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp11_input.decodeStringElement_8(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp10_local6 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp11_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp11_input.decodeBooleanElement_8(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp11_input.decodeStringElement_8(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp10_local6 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp11_input.endStructure_11(tmp0_desc);
    return Label_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
  };
  $serializer_5.prototype.serialize_102 = function (encoder, value) {
    var tmp0_desc = this._descriptor_44;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._color);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 1, value._default);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 2, StringSerializer_getInstance(), value._description_2);
    tmp1_output.encodeStringElement_1(tmp0_desc, 3, value._id_3);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 4, StringSerializer_getInstance(), value._name_9);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 5, StringSerializer_getInstance(), value._nodeId_2);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 6, StringSerializer_getInstance(), value._url_6);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_5.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_102(encoder, value instanceof Label ? value : THROW_CCE());
  };
  $serializer_5.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_5;
  function $serializer_getInstance_5() {
    if ($serializer_instance_5 == null)
      new $serializer_5();
    return $serializer_instance_5;
  }
  function Label_init_$Init$(seen1, color, default_0, description, id, name, nodeId, url_0, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('color');
    else
      $this._color = color;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('default');
    else
      $this._default = default_0;
    if (0 === (seen1 & 4))
      throw MissingFieldException_init_$Create$('description');
    else
      $this._description_2 = description;
    if (0 === (seen1 & 8))
      throw MissingFieldException_init_$Create$('id');
    else
      $this._id_3 = id;
    if (0 === (seen1 & 16))
      throw MissingFieldException_init_$Create$('name');
    else
      $this._name_9 = name;
    if (0 === (seen1 & 32))
      throw MissingFieldException_init_$Create$('node_id');
    else
      $this._nodeId_2 = nodeId;
    if (0 === (seen1 & 64))
      throw MissingFieldException_init_$Create$('url');
    else
      $this._url_6 = url_0;
    return $this;
  }
  function Label_init_$Create$(seen1, color, default_0, description, id, name, nodeId, url_0, serializationConstructorMarker) {
    return Label_init_$Init$(seen1, color, default_0, description, id, name, nodeId, url_0, serializationConstructorMarker, Object.create(Label.prototype));
  }
  function $serializer_6() {
    $serializer_instance_6 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Links.Comments', this, 1);
    tmp0_serialDesc.addElement_0('href', false);
    this._descriptor_45 = tmp0_serialDesc;
  }
  $serializer_6.prototype._get_descriptor__77 = function () {
    return this._descriptor_45;
  };
  $serializer_6.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_6.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_45;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp5_input.decodeSequentially_8()) {
      tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.endStructure_11(tmp0_desc);
    return Comments_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_6.prototype.serialize_104 = function (encoder, value) {
    var tmp0_desc = this._descriptor_45;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._href);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_6.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_104(encoder, value instanceof Comments ? value : THROW_CCE());
  };
  $serializer_6.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_6;
  function $serializer_getInstance_6() {
    if ($serializer_instance_6 == null)
      new $serializer_6();
    return $serializer_instance_6;
  }
  function Comments_init_$Init$(seen1, href, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('href');
    else
      $this._href = href;
    return $this;
  }
  function Comments_init_$Create$(seen1, href, serializationConstructorMarker) {
    return Comments_init_$Init$(seen1, href, serializationConstructorMarker, Object.create(Comments.prototype));
  }
  function $serializer_7() {
    $serializer_instance_7 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Links.Commits', this, 1);
    tmp0_serialDesc.addElement_0('href', false);
    this._descriptor_46 = tmp0_serialDesc;
  }
  $serializer_7.prototype._get_descriptor__77 = function () {
    return this._descriptor_46;
  };
  $serializer_7.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_7.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_46;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp5_input.decodeSequentially_8()) {
      tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.endStructure_11(tmp0_desc);
    return Commits_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_7.prototype.serialize_106 = function (encoder, value) {
    var tmp0_desc = this._descriptor_46;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._href_0);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_7.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_106(encoder, value instanceof Commits ? value : THROW_CCE());
  };
  $serializer_7.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_7;
  function $serializer_getInstance_7() {
    if ($serializer_instance_7 == null)
      new $serializer_7();
    return $serializer_instance_7;
  }
  function Commits_init_$Init$(seen1, href, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('href');
    else
      $this._href_0 = href;
    return $this;
  }
  function Commits_init_$Create$(seen1, href, serializationConstructorMarker) {
    return Commits_init_$Init$(seen1, href, serializationConstructorMarker, Object.create(Commits.prototype));
  }
  function $serializer_8() {
    $serializer_instance_8 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Links.Html', this, 1);
    tmp0_serialDesc.addElement_0('href', false);
    this._descriptor_47 = tmp0_serialDesc;
  }
  $serializer_8.prototype._get_descriptor__77 = function () {
    return this._descriptor_47;
  };
  $serializer_8.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_8.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_47;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp5_input.decodeSequentially_8()) {
      tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.endStructure_11(tmp0_desc);
    return Html_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_8.prototype.serialize_108 = function (encoder, value) {
    var tmp0_desc = this._descriptor_47;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._href_1);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_8.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_108(encoder, value instanceof Html ? value : THROW_CCE());
  };
  $serializer_8.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_8;
  function $serializer_getInstance_8() {
    if ($serializer_instance_8 == null)
      new $serializer_8();
    return $serializer_instance_8;
  }
  function Html_init_$Init$(seen1, href, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('href');
    else
      $this._href_1 = href;
    return $this;
  }
  function Html_init_$Create$(seen1, href, serializationConstructorMarker) {
    return Html_init_$Init$(seen1, href, serializationConstructorMarker, Object.create(Html.prototype));
  }
  function $serializer_9() {
    $serializer_instance_9 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Links.Issue', this, 1);
    tmp0_serialDesc.addElement_0('href', false);
    this._descriptor_48 = tmp0_serialDesc;
  }
  $serializer_9.prototype._get_descriptor__77 = function () {
    return this._descriptor_48;
  };
  $serializer_9.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_9.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_48;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp5_input.decodeSequentially_8()) {
      tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.endStructure_11(tmp0_desc);
    return Issue_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_9.prototype.serialize_110 = function (encoder, value) {
    var tmp0_desc = this._descriptor_48;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._href_2);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_9.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_110(encoder, value instanceof Issue ? value : THROW_CCE());
  };
  $serializer_9.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_9;
  function $serializer_getInstance_9() {
    if ($serializer_instance_9 == null)
      new $serializer_9();
    return $serializer_instance_9;
  }
  function Issue_init_$Init$(seen1, href, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('href');
    else
      $this._href_2 = href;
    return $this;
  }
  function Issue_init_$Create$(seen1, href, serializationConstructorMarker) {
    return Issue_init_$Init$(seen1, href, serializationConstructorMarker, Object.create(Issue.prototype));
  }
  function $serializer_10() {
    $serializer_instance_10 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Links.ReviewComment', this, 1);
    tmp0_serialDesc.addElement_0('href', false);
    this._descriptor_49 = tmp0_serialDesc;
  }
  $serializer_10.prototype._get_descriptor__77 = function () {
    return this._descriptor_49;
  };
  $serializer_10.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_10.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_49;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp5_input.decodeSequentially_8()) {
      tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.endStructure_11(tmp0_desc);
    return ReviewComment_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_10.prototype.serialize_112 = function (encoder, value) {
    var tmp0_desc = this._descriptor_49;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._href_3);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_10.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_112(encoder, value instanceof ReviewComment ? value : THROW_CCE());
  };
  $serializer_10.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_10;
  function $serializer_getInstance_10() {
    if ($serializer_instance_10 == null)
      new $serializer_10();
    return $serializer_instance_10;
  }
  function ReviewComment_init_$Init$(seen1, href, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('href');
    else
      $this._href_3 = href;
    return $this;
  }
  function ReviewComment_init_$Create$(seen1, href, serializationConstructorMarker) {
    return ReviewComment_init_$Init$(seen1, href, serializationConstructorMarker, Object.create(ReviewComment.prototype));
  }
  function $serializer_11() {
    $serializer_instance_11 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Links.ReviewComments', this, 1);
    tmp0_serialDesc.addElement_0('href', false);
    this._descriptor_50 = tmp0_serialDesc;
  }
  $serializer_11.prototype._get_descriptor__77 = function () {
    return this._descriptor_50;
  };
  $serializer_11.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_11.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_50;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp5_input.decodeSequentially_8()) {
      tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.endStructure_11(tmp0_desc);
    return ReviewComments_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_11.prototype.serialize_114 = function (encoder, value) {
    var tmp0_desc = this._descriptor_50;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._href_4);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_11.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_114(encoder, value instanceof ReviewComments ? value : THROW_CCE());
  };
  $serializer_11.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_11;
  function $serializer_getInstance_11() {
    if ($serializer_instance_11 == null)
      new $serializer_11();
    return $serializer_instance_11;
  }
  function ReviewComments_init_$Init$(seen1, href, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('href');
    else
      $this._href_4 = href;
    return $this;
  }
  function ReviewComments_init_$Create$(seen1, href, serializationConstructorMarker) {
    return ReviewComments_init_$Init$(seen1, href, serializationConstructorMarker, Object.create(ReviewComments.prototype));
  }
  function $serializer_12() {
    $serializer_instance_12 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Links.Self', this, 1);
    tmp0_serialDesc.addElement_0('href', false);
    this._descriptor_51 = tmp0_serialDesc;
  }
  $serializer_12.prototype._get_descriptor__77 = function () {
    return this._descriptor_51;
  };
  $serializer_12.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_12.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_51;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp5_input.decodeSequentially_8()) {
      tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.endStructure_11(tmp0_desc);
    return Self_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_12.prototype.serialize_116 = function (encoder, value) {
    var tmp0_desc = this._descriptor_51;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._href_5);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_12.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_116(encoder, value instanceof Self ? value : THROW_CCE());
  };
  $serializer_12.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_12;
  function $serializer_getInstance_12() {
    if ($serializer_instance_12 == null)
      new $serializer_12();
    return $serializer_instance_12;
  }
  function Self_init_$Init$(seen1, href, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('href');
    else
      $this._href_5 = href;
    return $this;
  }
  function Self_init_$Create$(seen1, href, serializationConstructorMarker) {
    return Self_init_$Init$(seen1, href, serializationConstructorMarker, Object.create(Self.prototype));
  }
  function $serializer_13() {
    $serializer_instance_13 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Links.Statuses', this, 1);
    tmp0_serialDesc.addElement_0('href', false);
    this._descriptor_52 = tmp0_serialDesc;
  }
  $serializer_13.prototype._get_descriptor__77 = function () {
    return this._descriptor_52;
  };
  $serializer_13.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_13.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_52;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp5_input.decodeSequentially_8()) {
      tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.endStructure_11(tmp0_desc);
    return Statuses_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_13.prototype.serialize_118 = function (encoder, value) {
    var tmp0_desc = this._descriptor_52;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._href_6);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_13.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_118(encoder, value instanceof Statuses ? value : THROW_CCE());
  };
  $serializer_13.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_13;
  function $serializer_getInstance_13() {
    if ($serializer_instance_13 == null)
      new $serializer_13();
    return $serializer_instance_13;
  }
  function Statuses_init_$Init$(seen1, href, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('href');
    else
      $this._href_6 = href;
    return $this;
  }
  function Statuses_init_$Create$(seen1, href, serializationConstructorMarker) {
    return Statuses_init_$Init$(seen1, href, serializationConstructorMarker, Object.create(Statuses.prototype));
  }
  function Comments() {
  }
  Comments.prototype.toString = function () {
    return '' + 'Comments(href=' + this._href + ')';
  };
  Comments.prototype.hashCode = function () {
    return this._href == null ? 0 : getStringHashCode(this._href);
  };
  Comments.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Comments))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Comments ? other : THROW_CCE();
    if (!(this._href == tmp0_other_with_cast._href))
      return false;
    return true;
  };
  Comments.$metadata$ = {
    simpleName: 'Comments',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_6}
  };
  function Commits() {
  }
  Commits.prototype.toString = function () {
    return '' + 'Commits(href=' + this._href_0 + ')';
  };
  Commits.prototype.hashCode = function () {
    return this._href_0 == null ? 0 : getStringHashCode(this._href_0);
  };
  Commits.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Commits))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Commits ? other : THROW_CCE();
    if (!(this._href_0 == tmp0_other_with_cast._href_0))
      return false;
    return true;
  };
  Commits.$metadata$ = {
    simpleName: 'Commits',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_7}
  };
  function Html() {
  }
  Html.prototype.toString = function () {
    return '' + 'Html(href=' + this._href_1 + ')';
  };
  Html.prototype.hashCode = function () {
    return this._href_1 == null ? 0 : getStringHashCode(this._href_1);
  };
  Html.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Html))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Html ? other : THROW_CCE();
    if (!(this._href_1 == tmp0_other_with_cast._href_1))
      return false;
    return true;
  };
  Html.$metadata$ = {
    simpleName: 'Html',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_8}
  };
  function Issue() {
  }
  Issue.prototype.toString = function () {
    return '' + 'Issue(href=' + this._href_2 + ')';
  };
  Issue.prototype.hashCode = function () {
    return this._href_2 == null ? 0 : getStringHashCode(this._href_2);
  };
  Issue.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Issue))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Issue ? other : THROW_CCE();
    if (!(this._href_2 == tmp0_other_with_cast._href_2))
      return false;
    return true;
  };
  Issue.$metadata$ = {
    simpleName: 'Issue',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_9}
  };
  function ReviewComment() {
  }
  ReviewComment.prototype.toString = function () {
    return '' + 'ReviewComment(href=' + this._href_3 + ')';
  };
  ReviewComment.prototype.hashCode = function () {
    return this._href_3 == null ? 0 : getStringHashCode(this._href_3);
  };
  ReviewComment.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ReviewComment))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof ReviewComment ? other : THROW_CCE();
    if (!(this._href_3 == tmp0_other_with_cast._href_3))
      return false;
    return true;
  };
  ReviewComment.$metadata$ = {
    simpleName: 'ReviewComment',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_10}
  };
  function ReviewComments() {
  }
  ReviewComments.prototype.toString = function () {
    return '' + 'ReviewComments(href=' + this._href_4 + ')';
  };
  ReviewComments.prototype.hashCode = function () {
    return this._href_4 == null ? 0 : getStringHashCode(this._href_4);
  };
  ReviewComments.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ReviewComments))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof ReviewComments ? other : THROW_CCE();
    if (!(this._href_4 == tmp0_other_with_cast._href_4))
      return false;
    return true;
  };
  ReviewComments.$metadata$ = {
    simpleName: 'ReviewComments',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_11}
  };
  function Self() {
  }
  Self.prototype.toString = function () {
    return '' + 'Self(href=' + this._href_5 + ')';
  };
  Self.prototype.hashCode = function () {
    return this._href_5 == null ? 0 : getStringHashCode(this._href_5);
  };
  Self.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Self))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Self ? other : THROW_CCE();
    if (!(this._href_5 == tmp0_other_with_cast._href_5))
      return false;
    return true;
  };
  Self.$metadata$ = {
    simpleName: 'Self',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_12}
  };
  function Statuses() {
  }
  Statuses.prototype.toString = function () {
    return '' + 'Statuses(href=' + this._href_6 + ')';
  };
  Statuses.prototype.hashCode = function () {
    return this._href_6 == null ? 0 : getStringHashCode(this._href_6);
  };
  Statuses.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Statuses))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Statuses ? other : THROW_CCE();
    if (!(this._href_6 == tmp0_other_with_cast._href_6))
      return false;
    return true;
  };
  Statuses.$metadata$ = {
    simpleName: 'Statuses',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_13}
  };
  function $serializer_14() {
    $serializer_instance_14 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest.Links', this, 8);
    tmp0_serialDesc.addElement_0('comments', false);
    tmp0_serialDesc.addElement_0('commits', false);
    tmp0_serialDesc.addElement_0('html', false);
    tmp0_serialDesc.addElement_0('issue', false);
    tmp0_serialDesc.addElement_0('review_comment', false);
    tmp0_serialDesc.addElement_0('review_comments', false);
    tmp0_serialDesc.addElement_0('self', false);
    tmp0_serialDesc.addElement_0('statuses', false);
    this._descriptor_53 = tmp0_serialDesc;
  }
  $serializer_14.prototype._get_descriptor__77 = function () {
    return this._descriptor_53;
  };
  $serializer_14.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer($serializer_getInstance_6()), new NullableSerializer($serializer_getInstance_7()), new NullableSerializer($serializer_getInstance_8()), new NullableSerializer($serializer_getInstance_9()), new NullableSerializer($serializer_getInstance_10()), new NullableSerializer($serializer_getInstance_11()), new NullableSerializer($serializer_getInstance_12()), new NullableSerializer($serializer_getInstance_13())];
    return tmp0_arrayOf_0;
  };
  $serializer_14.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_53;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_local6 = null;
    var tmp11_local7 = null;
    var tmp12_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp12_input.decodeSequentially_8()) {
      tmp4_local0 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 0, $serializer_getInstance_6(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 1, $serializer_getInstance_7(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 2, $serializer_getInstance_8(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 3, $serializer_getInstance_9(), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 4, $serializer_getInstance_10(), tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 5, $serializer_getInstance_11(), tmp9_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp10_local6 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 6, $serializer_getInstance_12(), tmp10_local6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
      tmp11_local7 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 7, $serializer_getInstance_13(), tmp11_local7);
      tmp3_bitMask0 = tmp3_bitMask0 | 128;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp12_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 0, $serializer_getInstance_6(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 1, $serializer_getInstance_7(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 2, $serializer_getInstance_8(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 3, $serializer_getInstance_9(), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 4, $serializer_getInstance_10(), tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 5, $serializer_getInstance_11(), tmp9_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp10_local6 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 6, $serializer_getInstance_12(), tmp10_local6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          case 7:
            tmp11_local7 = tmp12_input.decodeNullableSerializableElement_8(tmp0_desc, 7, $serializer_getInstance_13(), tmp11_local7);
            tmp3_bitMask0 = tmp3_bitMask0 | 128;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp12_input.endStructure_11(tmp0_desc);
    return Links_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, null);
  };
  $serializer_14.prototype.serialize_120 = function (encoder, value) {
    var tmp0_desc = this._descriptor_53;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, $serializer_getInstance_6(), value._comments);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 1, $serializer_getInstance_7(), value._commits);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 2, $serializer_getInstance_8(), value._html);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 3, $serializer_getInstance_9(), value._issue);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 4, $serializer_getInstance_10(), value._reviewComment);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 5, $serializer_getInstance_11(), value._reviewComments);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 6, $serializer_getInstance_12(), value._self);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 7, $serializer_getInstance_13(), value._statuses);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_14.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_120(encoder, value instanceof Links ? value : THROW_CCE());
  };
  $serializer_14.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_14;
  function $serializer_getInstance_14() {
    if ($serializer_instance_14 == null)
      new $serializer_14();
    return $serializer_instance_14;
  }
  function Links_init_$Init$(seen1, comments, commits, html, issue, reviewComment, reviewComments, self_0, statuses, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('comments');
    else
      $this._comments = comments;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('commits');
    else
      $this._commits = commits;
    if (0 === (seen1 & 4))
      throw MissingFieldException_init_$Create$('html');
    else
      $this._html = html;
    if (0 === (seen1 & 8))
      throw MissingFieldException_init_$Create$('issue');
    else
      $this._issue = issue;
    if (0 === (seen1 & 16))
      throw MissingFieldException_init_$Create$('review_comment');
    else
      $this._reviewComment = reviewComment;
    if (0 === (seen1 & 32))
      throw MissingFieldException_init_$Create$('review_comments');
    else
      $this._reviewComments = reviewComments;
    if (0 === (seen1 & 64))
      throw MissingFieldException_init_$Create$('self');
    else
      $this._self = self_0;
    if (0 === (seen1 & 128))
      throw MissingFieldException_init_$Create$('statuses');
    else
      $this._statuses = statuses;
    return $this;
  }
  function Links_init_$Create$(seen1, comments, commits, html, issue, reviewComment, reviewComments, self_0, statuses, serializationConstructorMarker) {
    return Links_init_$Init$(seen1, comments, commits, html, issue, reviewComment, reviewComments, self_0, statuses, serializationConstructorMarker, Object.create(Links.prototype));
  }
  function AutoMerge() {
  }
  AutoMerge.prototype.toString = function () {
    return '' + 'AutoMerge(commitMessage=' + this._commitMessage + ', commitTitle=' + this._commitTitle + ', enabledBy=' + this._enabledBy + ', mergeMethod=' + this._mergeMethod + ')';
  };
  AutoMerge.prototype.hashCode = function () {
    var result = this._commitMessage == null ? 0 : getStringHashCode(this._commitMessage);
    result = imul(result, 31) + (this._commitTitle == null ? 0 : getStringHashCode(this._commitTitle)) | 0;
    result = imul(result, 31) + (this._enabledBy == null ? 0 : this._enabledBy.hashCode()) | 0;
    result = imul(result, 31) + (this._mergeMethod == null ? 0 : getStringHashCode(this._mergeMethod)) | 0;
    return result;
  };
  AutoMerge.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof AutoMerge))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof AutoMerge ? other : THROW_CCE();
    if (!(this._commitMessage == tmp0_other_with_cast._commitMessage))
      return false;
    if (!(this._commitTitle == tmp0_other_with_cast._commitTitle))
      return false;
    if (!equals_1(this._enabledBy, tmp0_other_with_cast._enabledBy))
      return false;
    if (!(this._mergeMethod == tmp0_other_with_cast._mergeMethod))
      return false;
    return true;
  };
  AutoMerge.$metadata$ = {
    simpleName: 'AutoMerge',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_2}
  };
  function Branch() {
  }
  Branch.prototype.toString = function () {
    return '' + 'Branch(label=' + this._label + ', ref=' + this._ref_0 + ', repo=' + this._repo_0 + ', sha=' + this._sha + ', user=' + this._user_1 + ')';
  };
  Branch.prototype.hashCode = function () {
    var result = this._label == null ? 0 : getStringHashCode(this._label);
    result = imul(result, 31) + (this._ref_0 == null ? 0 : getStringHashCode(this._ref_0)) | 0;
    result = imul(result, 31) + (this._repo_0 == null ? 0 : this._repo_0.hashCode()) | 0;
    result = imul(result, 31) + (this._sha == null ? 0 : getStringHashCode(this._sha)) | 0;
    result = imul(result, 31) + (this._user_1 == null ? 0 : this._user_1.hashCode()) | 0;
    return result;
  };
  Branch.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Branch))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Branch ? other : THROW_CCE();
    if (!(this._label == tmp0_other_with_cast._label))
      return false;
    if (!(this._ref_0 == tmp0_other_with_cast._ref_0))
      return false;
    if (!equals_1(this._repo_0, tmp0_other_with_cast._repo_0))
      return false;
    if (!(this._sha == tmp0_other_with_cast._sha))
      return false;
    if (!equals_1(this._user_1, tmp0_other_with_cast._user_1))
      return false;
    return true;
  };
  Branch.$metadata$ = {
    simpleName: 'Branch',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_4}
  };
  function Label() {
  }
  Label.prototype.toString = function () {
    return '' + 'Label(color=' + this._color + ', default=' + this._default + ', description=' + this._description_2 + ', id=' + this._id_3 + ', name=' + this._name_9 + ', nodeId=' + this._nodeId_2 + ', url=' + this._url_6 + ')';
  };
  Label.prototype.hashCode = function () {
    var result = this._color == null ? 0 : getStringHashCode(this._color);
    result = imul(result, 31) + (this._default | 0) | 0;
    result = imul(result, 31) + (this._description_2 == null ? 0 : getStringHashCode(this._description_2)) | 0;
    result = imul(result, 31) + getStringHashCode(this._id_3) | 0;
    result = imul(result, 31) + (this._name_9 == null ? 0 : getStringHashCode(this._name_9)) | 0;
    result = imul(result, 31) + (this._nodeId_2 == null ? 0 : getStringHashCode(this._nodeId_2)) | 0;
    result = imul(result, 31) + (this._url_6 == null ? 0 : getStringHashCode(this._url_6)) | 0;
    return result;
  };
  Label.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Label))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Label ? other : THROW_CCE();
    if (!(this._color == tmp0_other_with_cast._color))
      return false;
    if (!(this._default === tmp0_other_with_cast._default))
      return false;
    if (!(this._description_2 == tmp0_other_with_cast._description_2))
      return false;
    if (!(this._id_3 === tmp0_other_with_cast._id_3))
      return false;
    if (!(this._name_9 == tmp0_other_with_cast._name_9))
      return false;
    if (!(this._nodeId_2 == tmp0_other_with_cast._nodeId_2))
      return false;
    if (!(this._url_6 == tmp0_other_with_cast._url_6))
      return false;
    return true;
  };
  Label.$metadata$ = {
    simpleName: 'Label',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_5}
  };
  function Links() {
  }
  Links.prototype.toString = function () {
    return '' + 'Links(comments=' + this._comments + ', commits=' + this._commits + ', html=' + this._html + ', issue=' + this._issue + ', reviewComment=' + this._reviewComment + ', reviewComments=' + this._reviewComments + ', self=' + this._self + ', statuses=' + this._statuses + ')';
  };
  Links.prototype.hashCode = function () {
    var result = this._comments == null ? 0 : this._comments.hashCode();
    result = imul(result, 31) + (this._commits == null ? 0 : this._commits.hashCode()) | 0;
    result = imul(result, 31) + (this._html == null ? 0 : this._html.hashCode()) | 0;
    result = imul(result, 31) + (this._issue == null ? 0 : this._issue.hashCode()) | 0;
    result = imul(result, 31) + (this._reviewComment == null ? 0 : this._reviewComment.hashCode()) | 0;
    result = imul(result, 31) + (this._reviewComments == null ? 0 : this._reviewComments.hashCode()) | 0;
    result = imul(result, 31) + (this._self == null ? 0 : this._self.hashCode()) | 0;
    result = imul(result, 31) + (this._statuses == null ? 0 : this._statuses.hashCode()) | 0;
    return result;
  };
  Links.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Links))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Links ? other : THROW_CCE();
    if (!equals_1(this._comments, tmp0_other_with_cast._comments))
      return false;
    if (!equals_1(this._commits, tmp0_other_with_cast._commits))
      return false;
    if (!equals_1(this._html, tmp0_other_with_cast._html))
      return false;
    if (!equals_1(this._issue, tmp0_other_with_cast._issue))
      return false;
    if (!equals_1(this._reviewComment, tmp0_other_with_cast._reviewComment))
      return false;
    if (!equals_1(this._reviewComments, tmp0_other_with_cast._reviewComments))
      return false;
    if (!equals_1(this._self, tmp0_other_with_cast._self))
      return false;
    if (!equals_1(this._statuses, tmp0_other_with_cast._statuses))
      return false;
    return true;
  };
  Links.$metadata$ = {
    simpleName: 'Links',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_14}
  };
  function $serializer_15() {
    $serializer_instance_15 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('data.response.PullRequest', this, 36);
    tmp0_serialDesc.addElement_0('active_lock_reason', false);
    tmp0_serialDesc.addElement_0('assignee', false);
    tmp0_serialDesc.addElement_0('assignees', false);
    tmp0_serialDesc.addElement_0('author_association', false);
    tmp0_serialDesc.addElement_0('auto_merge', false);
    tmp0_serialDesc.addElement_0('base', false);
    tmp0_serialDesc.addElement_0('body', false);
    tmp0_serialDesc.addElement_0('closed_at', false);
    tmp0_serialDesc.addElement_0('comments_url', false);
    tmp0_serialDesc.addElement_0('commits_url', false);
    tmp0_serialDesc.addElement_0('created_at', false);
    tmp0_serialDesc.addElement_0('diff_url', false);
    tmp0_serialDesc.addElement_0('draft', false);
    tmp0_serialDesc.addElement_0('head', false);
    tmp0_serialDesc.addElement_0('html_url', false);
    tmp0_serialDesc.addElement_0('id', false);
    tmp0_serialDesc.addElement_0('issue_url', false);
    tmp0_serialDesc.addElement_0('labels', false);
    tmp0_serialDesc.addElement_0('_links', false);
    tmp0_serialDesc.addElement_0('locked', false);
    tmp0_serialDesc.addElement_0('merge_commit_sha', false);
    tmp0_serialDesc.addElement_0('merged_at', false);
    tmp0_serialDesc.addElement_0('milestone', false);
    tmp0_serialDesc.addElement_0('node_id', false);
    tmp0_serialDesc.addElement_0('number', false);
    tmp0_serialDesc.addElement_0('patch_url', false);
    tmp0_serialDesc.addElement_0('requested_reviewers', false);
    tmp0_serialDesc.addElement_0('requested_teams', false);
    tmp0_serialDesc.addElement_0('review_comment_url', false);
    tmp0_serialDesc.addElement_0('review_comments_url', false);
    tmp0_serialDesc.addElement_0('state', false);
    tmp0_serialDesc.addElement_0('statuses_url', false);
    tmp0_serialDesc.addElement_0('title', false);
    tmp0_serialDesc.addElement_0('updated_at', false);
    tmp0_serialDesc.addElement_0('url', false);
    tmp0_serialDesc.addElement_0('user', false);
    this._descriptor_54 = tmp0_serialDesc;
  }
  $serializer_15.prototype._get_descriptor__77 = function () {
    return this._descriptor_54;
  };
  $serializer_15.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer($serializer_getInstance()), new NullableSerializer(new ArrayListSerializer(new NullableSerializer($serializer_getInstance()))), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer($serializer_getInstance_2()), new NullableSerializer($serializer_getInstance_4()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), BooleanSerializer_getInstance(), new NullableSerializer($serializer_getInstance_4()), new NullableSerializer(StringSerializer_getInstance()), StringSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(new ArrayListSerializer(new NullableSerializer($serializer_getInstance_5()))), new NullableSerializer($serializer_getInstance_14()), BooleanSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer($serializer_getInstance_0()), new NullableSerializer(StringSerializer_getInstance()), IntSerializer_getInstance(), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(new ArrayListSerializer(new NullableSerializer($serializer_getInstance()))), new NullableSerializer(new ArrayListSerializer(new NullableSerializer($serializer_getInstance()))), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer($serializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_15.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_54;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_bitMask1 = 0;
    var tmp5_local0 = null;
    var tmp6_local1 = null;
    var tmp7_local2 = null;
    var tmp8_local3 = null;
    var tmp9_local4 = null;
    var tmp10_local5 = null;
    var tmp11_local6 = null;
    var tmp12_local7 = null;
    var tmp13_local8 = null;
    var tmp14_local9 = null;
    var tmp15_local10 = null;
    var tmp16_local11 = null;
    var tmp17_local12 = false;
    var tmp18_local13 = null;
    var tmp19_local14 = null;
    var tmp20_local15 = null;
    var tmp21_local16 = null;
    var tmp22_local17 = null;
    var tmp23_local18 = null;
    var tmp24_local19 = false;
    var tmp25_local20 = null;
    var tmp26_local21 = null;
    var tmp27_local22 = null;
    var tmp28_local23 = null;
    var tmp29_local24 = 0;
    var tmp30_local25 = null;
    var tmp31_local26 = null;
    var tmp32_local27 = null;
    var tmp33_local28 = null;
    var tmp34_local29 = null;
    var tmp35_local30 = null;
    var tmp36_local31 = null;
    var tmp37_local32 = null;
    var tmp38_local33 = null;
    var tmp39_local34 = null;
    var tmp40_local35 = null;
    var tmp41_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp41_input.decodeSequentially_8()) {
      tmp5_local0 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp5_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp6_local1 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 1, $serializer_getInstance(), tmp6_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp7_local2 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 2, new ArrayListSerializer(new NullableSerializer($serializer_getInstance())), tmp7_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp8_local3 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp8_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp9_local4 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 4, $serializer_getInstance_2(), tmp9_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp10_local5 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 5, $serializer_getInstance_4(), tmp10_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp11_local6 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp11_local6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
      tmp12_local7 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 7, StringSerializer_getInstance(), tmp12_local7);
      tmp3_bitMask0 = tmp3_bitMask0 | 128;
      tmp13_local8 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 8, StringSerializer_getInstance(), tmp13_local8);
      tmp3_bitMask0 = tmp3_bitMask0 | 256;
      tmp14_local9 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 9, StringSerializer_getInstance(), tmp14_local9);
      tmp3_bitMask0 = tmp3_bitMask0 | 512;
      tmp15_local10 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 10, StringSerializer_getInstance(), tmp15_local10);
      tmp3_bitMask0 = tmp3_bitMask0 | 1024;
      tmp16_local11 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 11, StringSerializer_getInstance(), tmp16_local11);
      tmp3_bitMask0 = tmp3_bitMask0 | 2048;
      tmp17_local12 = tmp41_input.decodeBooleanElement_8(tmp0_desc, 12);
      tmp3_bitMask0 = tmp3_bitMask0 | 4096;
      tmp18_local13 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 13, $serializer_getInstance_4(), tmp18_local13);
      tmp3_bitMask0 = tmp3_bitMask0 | 8192;
      tmp19_local14 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 14, StringSerializer_getInstance(), tmp19_local14);
      tmp3_bitMask0 = tmp3_bitMask0 | 16384;
      tmp20_local15 = tmp41_input.decodeStringElement_8(tmp0_desc, 15);
      tmp3_bitMask0 = tmp3_bitMask0 | 32768;
      tmp21_local16 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 16, StringSerializer_getInstance(), tmp21_local16);
      tmp3_bitMask0 = tmp3_bitMask0 | 65536;
      tmp22_local17 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 17, new ArrayListSerializer(new NullableSerializer($serializer_getInstance_5())), tmp22_local17);
      tmp3_bitMask0 = tmp3_bitMask0 | 131072;
      tmp23_local18 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 18, $serializer_getInstance_14(), tmp23_local18);
      tmp3_bitMask0 = tmp3_bitMask0 | 262144;
      tmp24_local19 = tmp41_input.decodeBooleanElement_8(tmp0_desc, 19);
      tmp3_bitMask0 = tmp3_bitMask0 | 524288;
      tmp25_local20 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 20, StringSerializer_getInstance(), tmp25_local20);
      tmp3_bitMask0 = tmp3_bitMask0 | 1048576;
      tmp26_local21 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 21, StringSerializer_getInstance(), tmp26_local21);
      tmp3_bitMask0 = tmp3_bitMask0 | 2097152;
      tmp27_local22 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 22, $serializer_getInstance_0(), tmp27_local22);
      tmp3_bitMask0 = tmp3_bitMask0 | 4194304;
      tmp28_local23 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 23, StringSerializer_getInstance(), tmp28_local23);
      tmp3_bitMask0 = tmp3_bitMask0 | 8388608;
      tmp29_local24 = tmp41_input.decodeIntElement_8(tmp0_desc, 24);
      tmp3_bitMask0 = tmp3_bitMask0 | 16777216;
      tmp30_local25 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 25, StringSerializer_getInstance(), tmp30_local25);
      tmp3_bitMask0 = tmp3_bitMask0 | 33554432;
      tmp31_local26 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 26, new ArrayListSerializer(new NullableSerializer($serializer_getInstance())), tmp31_local26);
      tmp3_bitMask0 = tmp3_bitMask0 | 67108864;
      tmp32_local27 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 27, new ArrayListSerializer(new NullableSerializer($serializer_getInstance())), tmp32_local27);
      tmp3_bitMask0 = tmp3_bitMask0 | 134217728;
      tmp33_local28 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 28, StringSerializer_getInstance(), tmp33_local28);
      tmp3_bitMask0 = tmp3_bitMask0 | 268435456;
      tmp34_local29 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 29, StringSerializer_getInstance(), tmp34_local29);
      tmp3_bitMask0 = tmp3_bitMask0 | 536870912;
      tmp35_local30 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 30, StringSerializer_getInstance(), tmp35_local30);
      tmp3_bitMask0 = tmp3_bitMask0 | 1073741824;
      tmp36_local31 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 31, StringSerializer_getInstance(), tmp36_local31);
      tmp3_bitMask0 = tmp3_bitMask0 | -2147483648;
      tmp37_local32 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 32, StringSerializer_getInstance(), tmp37_local32);
      tmp4_bitMask1 = tmp4_bitMask1 | 1;
      tmp38_local33 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 33, StringSerializer_getInstance(), tmp38_local33);
      tmp4_bitMask1 = tmp4_bitMask1 | 2;
      tmp39_local34 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 34, StringSerializer_getInstance(), tmp39_local34);
      tmp4_bitMask1 = tmp4_bitMask1 | 4;
      tmp40_local35 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 35, $serializer_getInstance(), tmp40_local35);
      tmp4_bitMask1 = tmp4_bitMask1 | 8;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp41_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp5_local0 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 0, StringSerializer_getInstance(), tmp5_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp6_local1 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 1, $serializer_getInstance(), tmp6_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp7_local2 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 2, new ArrayListSerializer(new NullableSerializer($serializer_getInstance())), tmp7_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp8_local3 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp8_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp9_local4 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 4, $serializer_getInstance_2(), tmp9_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp10_local5 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 5, $serializer_getInstance_4(), tmp10_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp11_local6 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp11_local6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          case 7:
            tmp12_local7 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 7, StringSerializer_getInstance(), tmp12_local7);
            tmp3_bitMask0 = tmp3_bitMask0 | 128;
            break;
          case 8:
            tmp13_local8 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 8, StringSerializer_getInstance(), tmp13_local8);
            tmp3_bitMask0 = tmp3_bitMask0 | 256;
            break;
          case 9:
            tmp14_local9 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 9, StringSerializer_getInstance(), tmp14_local9);
            tmp3_bitMask0 = tmp3_bitMask0 | 512;
            break;
          case 10:
            tmp15_local10 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 10, StringSerializer_getInstance(), tmp15_local10);
            tmp3_bitMask0 = tmp3_bitMask0 | 1024;
            break;
          case 11:
            tmp16_local11 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 11, StringSerializer_getInstance(), tmp16_local11);
            tmp3_bitMask0 = tmp3_bitMask0 | 2048;
            break;
          case 12:
            tmp17_local12 = tmp41_input.decodeBooleanElement_8(tmp0_desc, 12);
            tmp3_bitMask0 = tmp3_bitMask0 | 4096;
            break;
          case 13:
            tmp18_local13 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 13, $serializer_getInstance_4(), tmp18_local13);
            tmp3_bitMask0 = tmp3_bitMask0 | 8192;
            break;
          case 14:
            tmp19_local14 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 14, StringSerializer_getInstance(), tmp19_local14);
            tmp3_bitMask0 = tmp3_bitMask0 | 16384;
            break;
          case 15:
            tmp20_local15 = tmp41_input.decodeStringElement_8(tmp0_desc, 15);
            tmp3_bitMask0 = tmp3_bitMask0 | 32768;
            break;
          case 16:
            tmp21_local16 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 16, StringSerializer_getInstance(), tmp21_local16);
            tmp3_bitMask0 = tmp3_bitMask0 | 65536;
            break;
          case 17:
            tmp22_local17 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 17, new ArrayListSerializer(new NullableSerializer($serializer_getInstance_5())), tmp22_local17);
            tmp3_bitMask0 = tmp3_bitMask0 | 131072;
            break;
          case 18:
            tmp23_local18 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 18, $serializer_getInstance_14(), tmp23_local18);
            tmp3_bitMask0 = tmp3_bitMask0 | 262144;
            break;
          case 19:
            tmp24_local19 = tmp41_input.decodeBooleanElement_8(tmp0_desc, 19);
            tmp3_bitMask0 = tmp3_bitMask0 | 524288;
            break;
          case 20:
            tmp25_local20 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 20, StringSerializer_getInstance(), tmp25_local20);
            tmp3_bitMask0 = tmp3_bitMask0 | 1048576;
            break;
          case 21:
            tmp26_local21 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 21, StringSerializer_getInstance(), tmp26_local21);
            tmp3_bitMask0 = tmp3_bitMask0 | 2097152;
            break;
          case 22:
            tmp27_local22 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 22, $serializer_getInstance_0(), tmp27_local22);
            tmp3_bitMask0 = tmp3_bitMask0 | 4194304;
            break;
          case 23:
            tmp28_local23 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 23, StringSerializer_getInstance(), tmp28_local23);
            tmp3_bitMask0 = tmp3_bitMask0 | 8388608;
            break;
          case 24:
            tmp29_local24 = tmp41_input.decodeIntElement_8(tmp0_desc, 24);
            tmp3_bitMask0 = tmp3_bitMask0 | 16777216;
            break;
          case 25:
            tmp30_local25 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 25, StringSerializer_getInstance(), tmp30_local25);
            tmp3_bitMask0 = tmp3_bitMask0 | 33554432;
            break;
          case 26:
            tmp31_local26 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 26, new ArrayListSerializer(new NullableSerializer($serializer_getInstance())), tmp31_local26);
            tmp3_bitMask0 = tmp3_bitMask0 | 67108864;
            break;
          case 27:
            tmp32_local27 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 27, new ArrayListSerializer(new NullableSerializer($serializer_getInstance())), tmp32_local27);
            tmp3_bitMask0 = tmp3_bitMask0 | 134217728;
            break;
          case 28:
            tmp33_local28 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 28, StringSerializer_getInstance(), tmp33_local28);
            tmp3_bitMask0 = tmp3_bitMask0 | 268435456;
            break;
          case 29:
            tmp34_local29 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 29, StringSerializer_getInstance(), tmp34_local29);
            tmp3_bitMask0 = tmp3_bitMask0 | 536870912;
            break;
          case 30:
            tmp35_local30 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 30, StringSerializer_getInstance(), tmp35_local30);
            tmp3_bitMask0 = tmp3_bitMask0 | 1073741824;
            break;
          case 31:
            tmp36_local31 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 31, StringSerializer_getInstance(), tmp36_local31);
            tmp3_bitMask0 = tmp3_bitMask0 | -2147483648;
            break;
          case 32:
            tmp37_local32 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 32, StringSerializer_getInstance(), tmp37_local32);
            tmp4_bitMask1 = tmp4_bitMask1 | 1;
            break;
          case 33:
            tmp38_local33 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 33, StringSerializer_getInstance(), tmp38_local33);
            tmp4_bitMask1 = tmp4_bitMask1 | 2;
            break;
          case 34:
            tmp39_local34 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 34, StringSerializer_getInstance(), tmp39_local34);
            tmp4_bitMask1 = tmp4_bitMask1 | 4;
            break;
          case 35:
            tmp40_local35 = tmp41_input.decodeNullableSerializableElement_8(tmp0_desc, 35, $serializer_getInstance(), tmp40_local35);
            tmp4_bitMask1 = tmp4_bitMask1 | 8;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp41_input.endStructure_11(tmp0_desc);
    return PullRequest_init_$Create$(tmp3_bitMask0, tmp4_bitMask1, tmp5_local0, tmp6_local1, tmp7_local2, tmp8_local3, tmp9_local4, tmp10_local5, tmp11_local6, tmp12_local7, tmp13_local8, tmp14_local9, tmp15_local10, tmp16_local11, tmp17_local12, tmp18_local13, tmp19_local14, tmp20_local15, tmp21_local16, tmp22_local17, tmp23_local18, tmp24_local19, tmp25_local20, tmp26_local21, tmp27_local22, tmp28_local23, tmp29_local24, tmp30_local25, tmp31_local26, tmp32_local27, tmp33_local28, tmp34_local29, tmp35_local30, tmp36_local31, tmp37_local32, tmp38_local33, tmp39_local34, tmp40_local35, null);
  };
  $serializer_15.prototype.serialize_122 = function (encoder, value) {
    var tmp0_desc = this._descriptor_54;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, StringSerializer_getInstance(), value._activeLockReason);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 1, $serializer_getInstance(), value._assignee);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 2, new ArrayListSerializer(new NullableSerializer($serializer_getInstance())), value._assignees);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 3, StringSerializer_getInstance(), value._authorAssociation);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 4, $serializer_getInstance_2(), value._autoMerge);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 5, $serializer_getInstance_4(), value._base);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 6, StringSerializer_getInstance(), value._body_4);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 7, StringSerializer_getInstance(), value._closedAt_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 8, StringSerializer_getInstance(), value._commentsUrl_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 9, StringSerializer_getInstance(), value._commitsUrl_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 10, StringSerializer_getInstance(), value._createdAt_1);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 11, StringSerializer_getInstance(), value._diffUrl);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 12, value._draft);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 13, $serializer_getInstance_4(), value._head_4);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 14, StringSerializer_getInstance(), value._htmlUrl_2);
    tmp1_output.encodeStringElement_1(tmp0_desc, 15, value._id_4);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 16, StringSerializer_getInstance(), value._issueUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 17, new ArrayListSerializer(new NullableSerializer($serializer_getInstance_5())), value._labels);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 18, $serializer_getInstance_14(), value._links);
    tmp1_output.encodeBooleanElement_1(tmp0_desc, 19, value._locked_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 20, StringSerializer_getInstance(), value._mergeCommitSha);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 21, StringSerializer_getInstance(), value._mergedAt);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 22, $serializer_getInstance_0(), value._milestone);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 23, StringSerializer_getInstance(), value._nodeId_3);
    tmp1_output.encodeIntElement_1(tmp0_desc, 24, value._number_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 25, StringSerializer_getInstance(), value._patchUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 26, new ArrayListSerializer(new NullableSerializer($serializer_getInstance())), value._requestedReviewers);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 27, new ArrayListSerializer(new NullableSerializer($serializer_getInstance())), value._requestedTeams);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 28, StringSerializer_getInstance(), value._reviewCommentUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 29, StringSerializer_getInstance(), value._reviewCommentsUrl);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 30, StringSerializer_getInstance(), value._state_8);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 31, StringSerializer_getInstance(), value._statusesUrl_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 32, StringSerializer_getInstance(), value._title_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 33, StringSerializer_getInstance(), value._updatedAt_1);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 34, StringSerializer_getInstance(), value._url_7);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 35, $serializer_getInstance(), value._user_2);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_15.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_122(encoder, value instanceof PullRequest ? value : THROW_CCE());
  };
  $serializer_15.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_15;
  function $serializer_getInstance_15() {
    if ($serializer_instance_15 == null)
      new $serializer_15();
    return $serializer_instance_15;
  }
  function PullRequest_init_$Init$(seen1, seen2, activeLockReason, assignee, assignees, authorAssociation, autoMerge, base, body, closedAt, commentsUrl, commitsUrl, createdAt, diffUrl, draft, head, htmlUrl, id, issueUrl, labels, links, locked_0, mergeCommitSha, mergedAt, milestone, nodeId, number, patchUrl, requestedReviewers, requestedTeams, reviewCommentUrl, reviewCommentsUrl, state, statusesUrl, title, updatedAt, url_0, user, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('active_lock_reason');
    else
      $this._activeLockReason = activeLockReason;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('assignee');
    else
      $this._assignee = assignee;
    if (0 === (seen1 & 4))
      throw MissingFieldException_init_$Create$('assignees');
    else
      $this._assignees = assignees;
    if (0 === (seen1 & 8))
      throw MissingFieldException_init_$Create$('author_association');
    else
      $this._authorAssociation = authorAssociation;
    if (0 === (seen1 & 16))
      throw MissingFieldException_init_$Create$('auto_merge');
    else
      $this._autoMerge = autoMerge;
    if (0 === (seen1 & 32))
      throw MissingFieldException_init_$Create$('base');
    else
      $this._base = base;
    if (0 === (seen1 & 64))
      throw MissingFieldException_init_$Create$('body');
    else
      $this._body_4 = body;
    if (0 === (seen1 & 128))
      throw MissingFieldException_init_$Create$('closed_at');
    else
      $this._closedAt_0 = closedAt;
    if (0 === (seen1 & 256))
      throw MissingFieldException_init_$Create$('comments_url');
    else
      $this._commentsUrl_0 = commentsUrl;
    if (0 === (seen1 & 512))
      throw MissingFieldException_init_$Create$('commits_url');
    else
      $this._commitsUrl_0 = commitsUrl;
    if (0 === (seen1 & 1024))
      throw MissingFieldException_init_$Create$('created_at');
    else
      $this._createdAt_1 = createdAt;
    if (0 === (seen1 & 2048))
      throw MissingFieldException_init_$Create$('diff_url');
    else
      $this._diffUrl = diffUrl;
    if (0 === (seen1 & 4096))
      throw MissingFieldException_init_$Create$('draft');
    else
      $this._draft = draft;
    if (0 === (seen1 & 8192))
      throw MissingFieldException_init_$Create$('head');
    else
      $this._head_4 = head;
    if (0 === (seen1 & 16384))
      throw MissingFieldException_init_$Create$('html_url');
    else
      $this._htmlUrl_2 = htmlUrl;
    if (0 === (seen1 & 32768))
      throw MissingFieldException_init_$Create$('id');
    else
      $this._id_4 = id;
    if (0 === (seen1 & 65536))
      throw MissingFieldException_init_$Create$('issue_url');
    else
      $this._issueUrl = issueUrl;
    if (0 === (seen1 & 131072))
      throw MissingFieldException_init_$Create$('labels');
    else
      $this._labels = labels;
    if (0 === (seen1 & 262144))
      throw MissingFieldException_init_$Create$('_links');
    else
      $this._links = links;
    if (0 === (seen1 & 524288))
      throw MissingFieldException_init_$Create$('locked');
    else
      $this._locked_0 = locked_0;
    if (0 === (seen1 & 1048576))
      throw MissingFieldException_init_$Create$('merge_commit_sha');
    else
      $this._mergeCommitSha = mergeCommitSha;
    if (0 === (seen1 & 2097152))
      throw MissingFieldException_init_$Create$('merged_at');
    else
      $this._mergedAt = mergedAt;
    if (0 === (seen1 & 4194304))
      throw MissingFieldException_init_$Create$('milestone');
    else
      $this._milestone = milestone;
    if (0 === (seen1 & 8388608))
      throw MissingFieldException_init_$Create$('node_id');
    else
      $this._nodeId_3 = nodeId;
    if (0 === (seen1 & 16777216))
      throw MissingFieldException_init_$Create$('number');
    else
      $this._number_0 = number;
    if (0 === (seen1 & 33554432))
      throw MissingFieldException_init_$Create$('patch_url');
    else
      $this._patchUrl = patchUrl;
    if (0 === (seen1 & 67108864))
      throw MissingFieldException_init_$Create$('requested_reviewers');
    else
      $this._requestedReviewers = requestedReviewers;
    if (0 === (seen1 & 134217728))
      throw MissingFieldException_init_$Create$('requested_teams');
    else
      $this._requestedTeams = requestedTeams;
    if (0 === (seen1 & 268435456))
      throw MissingFieldException_init_$Create$('review_comment_url');
    else
      $this._reviewCommentUrl = reviewCommentUrl;
    if (0 === (seen1 & 536870912))
      throw MissingFieldException_init_$Create$('review_comments_url');
    else
      $this._reviewCommentsUrl = reviewCommentsUrl;
    if (0 === (seen1 & 1073741824))
      throw MissingFieldException_init_$Create$('state');
    else
      $this._state_8 = state;
    if (0 === (seen1 & -2147483648))
      throw MissingFieldException_init_$Create$('statuses_url');
    else
      $this._statusesUrl_0 = statusesUrl;
    if (0 === (seen2 & 1))
      throw MissingFieldException_init_$Create$('title');
    else
      $this._title_0 = title;
    if (0 === (seen2 & 2))
      throw MissingFieldException_init_$Create$('updated_at');
    else
      $this._updatedAt_1 = updatedAt;
    if (0 === (seen2 & 4))
      throw MissingFieldException_init_$Create$('url');
    else
      $this._url_7 = url_0;
    if (0 === (seen2 & 8))
      throw MissingFieldException_init_$Create$('user');
    else
      $this._user_2 = user;
    return $this;
  }
  function PullRequest_init_$Create$(seen1, seen2, activeLockReason, assignee, assignees, authorAssociation, autoMerge, base, body, closedAt, commentsUrl, commitsUrl, createdAt, diffUrl, draft, head, htmlUrl, id, issueUrl, labels, links, locked_0, mergeCommitSha, mergedAt, milestone, nodeId, number, patchUrl, requestedReviewers, requestedTeams, reviewCommentUrl, reviewCommentsUrl, state, statusesUrl, title, updatedAt, url_0, user, serializationConstructorMarker) {
    return PullRequest_init_$Init$(seen1, seen2, activeLockReason, assignee, assignees, authorAssociation, autoMerge, base, body, closedAt, commentsUrl, commitsUrl, createdAt, diffUrl, draft, head, htmlUrl, id, issueUrl, labels, links, locked_0, mergeCommitSha, mergedAt, milestone, nodeId, number, patchUrl, requestedReviewers, requestedTeams, reviewCommentUrl, reviewCommentsUrl, state, statusesUrl, title, updatedAt, url_0, user, serializationConstructorMarker, Object.create(PullRequest.prototype));
  }
  function PullRequest() {
  }
  PullRequest.prototype.toString = function () {
    return '' + 'PullRequest(activeLockReason=' + this._activeLockReason + ', assignee=' + this._assignee + ', assignees=' + this._assignees + ', authorAssociation=' + this._authorAssociation + ', autoMerge=' + this._autoMerge + ', base=' + this._base + ', body=' + this._body_4 + ', closedAt=' + this._closedAt_0 + ', commentsUrl=' + this._commentsUrl_0 + ', commitsUrl=' + this._commitsUrl_0 + ', createdAt=' + this._createdAt_1 + ', diffUrl=' + this._diffUrl + ', draft=' + this._draft + ', head=' + this._head_4 + ', htmlUrl=' + this._htmlUrl_2 + ', id=' + this._id_4 + ', issueUrl=' + this._issueUrl + ', labels=' + this._labels + ', links=' + this._links + ', locked=' + this._locked_0 + ', mergeCommitSha=' + this._mergeCommitSha + ', mergedAt=' + this._mergedAt + ', milestone=' + this._milestone + ', nodeId=' + this._nodeId_3 + ', number=' + this._number_0 + ', patchUrl=' + this._patchUrl + ', requestedReviewers=' + this._requestedReviewers + ', requestedTeams=' + this._requestedTeams + ', reviewCommentUrl=' + this._reviewCommentUrl + ', reviewCommentsUrl=' + this._reviewCommentsUrl + ', state=' + this._state_8 + ', statusesUrl=' + this._statusesUrl_0 + ', title=' + this._title_0 + ', updatedAt=' + this._updatedAt_1 + ', url=' + this._url_7 + ', user=' + this._user_2 + ')';
  };
  PullRequest.prototype.hashCode = function () {
    var result = this._activeLockReason == null ? 0 : getStringHashCode(this._activeLockReason);
    result = imul(result, 31) + (this._assignee == null ? 0 : this._assignee.hashCode()) | 0;
    result = imul(result, 31) + (this._assignees == null ? 0 : hashCode(this._assignees)) | 0;
    result = imul(result, 31) + (this._authorAssociation == null ? 0 : getStringHashCode(this._authorAssociation)) | 0;
    result = imul(result, 31) + (this._autoMerge == null ? 0 : this._autoMerge.hashCode()) | 0;
    result = imul(result, 31) + (this._base == null ? 0 : this._base.hashCode()) | 0;
    result = imul(result, 31) + (this._body_4 == null ? 0 : getStringHashCode(this._body_4)) | 0;
    result = imul(result, 31) + (this._closedAt_0 == null ? 0 : getStringHashCode(this._closedAt_0)) | 0;
    result = imul(result, 31) + (this._commentsUrl_0 == null ? 0 : getStringHashCode(this._commentsUrl_0)) | 0;
    result = imul(result, 31) + (this._commitsUrl_0 == null ? 0 : getStringHashCode(this._commitsUrl_0)) | 0;
    result = imul(result, 31) + (this._createdAt_1 == null ? 0 : getStringHashCode(this._createdAt_1)) | 0;
    result = imul(result, 31) + (this._diffUrl == null ? 0 : getStringHashCode(this._diffUrl)) | 0;
    result = imul(result, 31) + (this._draft | 0) | 0;
    result = imul(result, 31) + (this._head_4 == null ? 0 : this._head_4.hashCode()) | 0;
    result = imul(result, 31) + (this._htmlUrl_2 == null ? 0 : getStringHashCode(this._htmlUrl_2)) | 0;
    result = imul(result, 31) + getStringHashCode(this._id_4) | 0;
    result = imul(result, 31) + (this._issueUrl == null ? 0 : getStringHashCode(this._issueUrl)) | 0;
    result = imul(result, 31) + (this._labels == null ? 0 : hashCode(this._labels)) | 0;
    result = imul(result, 31) + (this._links == null ? 0 : this._links.hashCode()) | 0;
    result = imul(result, 31) + (this._locked_0 | 0) | 0;
    result = imul(result, 31) + (this._mergeCommitSha == null ? 0 : getStringHashCode(this._mergeCommitSha)) | 0;
    result = imul(result, 31) + (this._mergedAt == null ? 0 : getStringHashCode(this._mergedAt)) | 0;
    result = imul(result, 31) + (this._milestone == null ? 0 : this._milestone.hashCode()) | 0;
    result = imul(result, 31) + (this._nodeId_3 == null ? 0 : getStringHashCode(this._nodeId_3)) | 0;
    result = imul(result, 31) + this._number_0 | 0;
    result = imul(result, 31) + (this._patchUrl == null ? 0 : getStringHashCode(this._patchUrl)) | 0;
    result = imul(result, 31) + (this._requestedReviewers == null ? 0 : hashCode(this._requestedReviewers)) | 0;
    result = imul(result, 31) + (this._requestedTeams == null ? 0 : hashCode(this._requestedTeams)) | 0;
    result = imul(result, 31) + (this._reviewCommentUrl == null ? 0 : getStringHashCode(this._reviewCommentUrl)) | 0;
    result = imul(result, 31) + (this._reviewCommentsUrl == null ? 0 : getStringHashCode(this._reviewCommentsUrl)) | 0;
    result = imul(result, 31) + (this._state_8 == null ? 0 : getStringHashCode(this._state_8)) | 0;
    result = imul(result, 31) + (this._statusesUrl_0 == null ? 0 : getStringHashCode(this._statusesUrl_0)) | 0;
    result = imul(result, 31) + (this._title_0 == null ? 0 : getStringHashCode(this._title_0)) | 0;
    result = imul(result, 31) + (this._updatedAt_1 == null ? 0 : getStringHashCode(this._updatedAt_1)) | 0;
    result = imul(result, 31) + (this._url_7 == null ? 0 : getStringHashCode(this._url_7)) | 0;
    result = imul(result, 31) + (this._user_2 == null ? 0 : this._user_2.hashCode()) | 0;
    return result;
  };
  PullRequest.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PullRequest))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof PullRequest ? other : THROW_CCE();
    if (!(this._activeLockReason == tmp0_other_with_cast._activeLockReason))
      return false;
    if (!equals_1(this._assignee, tmp0_other_with_cast._assignee))
      return false;
    if (!equals_1(this._assignees, tmp0_other_with_cast._assignees))
      return false;
    if (!(this._authorAssociation == tmp0_other_with_cast._authorAssociation))
      return false;
    if (!equals_1(this._autoMerge, tmp0_other_with_cast._autoMerge))
      return false;
    if (!equals_1(this._base, tmp0_other_with_cast._base))
      return false;
    if (!(this._body_4 == tmp0_other_with_cast._body_4))
      return false;
    if (!(this._closedAt_0 == tmp0_other_with_cast._closedAt_0))
      return false;
    if (!(this._commentsUrl_0 == tmp0_other_with_cast._commentsUrl_0))
      return false;
    if (!(this._commitsUrl_0 == tmp0_other_with_cast._commitsUrl_0))
      return false;
    if (!(this._createdAt_1 == tmp0_other_with_cast._createdAt_1))
      return false;
    if (!(this._diffUrl == tmp0_other_with_cast._diffUrl))
      return false;
    if (!(this._draft === tmp0_other_with_cast._draft))
      return false;
    if (!equals_1(this._head_4, tmp0_other_with_cast._head_4))
      return false;
    if (!(this._htmlUrl_2 == tmp0_other_with_cast._htmlUrl_2))
      return false;
    if (!(this._id_4 === tmp0_other_with_cast._id_4))
      return false;
    if (!(this._issueUrl == tmp0_other_with_cast._issueUrl))
      return false;
    if (!equals_1(this._labels, tmp0_other_with_cast._labels))
      return false;
    if (!equals_1(this._links, tmp0_other_with_cast._links))
      return false;
    if (!(this._locked_0 === tmp0_other_with_cast._locked_0))
      return false;
    if (!(this._mergeCommitSha == tmp0_other_with_cast._mergeCommitSha))
      return false;
    if (!(this._mergedAt == tmp0_other_with_cast._mergedAt))
      return false;
    if (!equals_1(this._milestone, tmp0_other_with_cast._milestone))
      return false;
    if (!(this._nodeId_3 == tmp0_other_with_cast._nodeId_3))
      return false;
    if (!(this._number_0 === tmp0_other_with_cast._number_0))
      return false;
    if (!(this._patchUrl == tmp0_other_with_cast._patchUrl))
      return false;
    if (!equals_1(this._requestedReviewers, tmp0_other_with_cast._requestedReviewers))
      return false;
    if (!equals_1(this._requestedTeams, tmp0_other_with_cast._requestedTeams))
      return false;
    if (!(this._reviewCommentUrl == tmp0_other_with_cast._reviewCommentUrl))
      return false;
    if (!(this._reviewCommentsUrl == tmp0_other_with_cast._reviewCommentsUrl))
      return false;
    if (!(this._state_8 == tmp0_other_with_cast._state_8))
      return false;
    if (!(this._statusesUrl_0 == tmp0_other_with_cast._statusesUrl_0))
      return false;
    if (!(this._title_0 == tmp0_other_with_cast._title_0))
      return false;
    if (!(this._updatedAt_1 == tmp0_other_with_cast._updatedAt_1))
      return false;
    if (!(this._url_7 == tmp0_other_with_cast._url_7))
      return false;
    if (!equals_1(this._user_2, tmp0_other_with_cast._user_2))
      return false;
    return true;
  };
  PullRequest.$metadata$ = {
    simpleName: 'PullRequest',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_15}
  };
  function Companion_67() {
    Companion_instance_66 = this;
  }
  Companion_67.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_66;
  function Companion_getInstance_66() {
    if (Companion_instance_66 == null)
      new Companion_67();
    return Companion_instance_66;
  }
  function $serializer_16() {
    $serializer_instance_16 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('models.Configuration.Category', this, 2);
    tmp0_serialDesc.addElement_0('labels', false);
    tmp0_serialDesc.addElement_0('title', false);
    this._descriptor_55 = tmp0_serialDesc;
  }
  $serializer_16.prototype._get_descriptor__77 = function () {
    return this._descriptor_55;
  };
  $serializer_16.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new ArrayListSerializer(StringSerializer_getInstance()), StringSerializer_getInstance()];
    return tmp0_arrayOf_0;
  };
  $serializer_16.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_55;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp6_input.decodeSequentially_8()) {
      tmp4_local0 = tmp6_input.decodeSerializableElement_8(tmp0_desc, 0, new ArrayListSerializer(StringSerializer_getInstance()), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.decodeStringElement_8(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.decodeSerializableElement_8(tmp0_desc, 0, new ArrayListSerializer(StringSerializer_getInstance()), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.decodeStringElement_8(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.endStructure_11(tmp0_desc);
    return Category_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer_16.prototype.serialize_124 = function (encoder, value) {
    var tmp0_desc = this._descriptor_55;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeSerializableElement_1(tmp0_desc, 0, new ArrayListSerializer(StringSerializer_getInstance()), value._labels_0);
    tmp1_output.encodeStringElement_1(tmp0_desc, 1, value._title_1);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_16.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_124(encoder, value instanceof Category ? value : THROW_CCE());
  };
  $serializer_16.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_16;
  function $serializer_getInstance_16() {
    if ($serializer_instance_16 == null)
      new $serializer_16();
    return $serializer_instance_16;
  }
  function Category_init_$Init$(seen1, labels, title, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('labels');
    else
      $this._labels_0 = labels;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('title');
    else
      $this._title_1 = title;
    return $this;
  }
  function Category_init_$Create$(seen1, labels, title, serializationConstructorMarker) {
    return Category_init_$Init$(seen1, labels, title, serializationConstructorMarker, Object.create(Category.prototype));
  }
  function $serializer_17() {
    $serializer_instance_17 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('models.Configuration.Transformer', this, 2);
    tmp0_serialDesc.addElement_0('pattern', false);
    tmp0_serialDesc.addElement_0('target', false);
    this._descriptor_56 = tmp0_serialDesc;
  }
  $serializer_17.prototype._get_descriptor__77 = function () {
    return this._descriptor_56;
  };
  $serializer_17.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [StringSerializer_getInstance(), StringSerializer_getInstance()];
    return tmp0_arrayOf_0;
  };
  $serializer_17.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_56;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp6_input.decodeSequentially_8()) {
      tmp4_local0 = tmp6_input.decodeStringElement_8(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.decodeStringElement_8(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.decodeStringElement_8(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.decodeStringElement_8(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.endStructure_11(tmp0_desc);
    return Transformer_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer_17.prototype.serialize_126 = function (encoder, value) {
    var tmp0_desc = this._descriptor_56;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeStringElement_1(tmp0_desc, 0, value._pattern_0);
    tmp1_output.encodeStringElement_1(tmp0_desc, 1, value._target_0);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_17.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_126(encoder, value instanceof Transformer ? value : THROW_CCE());
  };
  $serializer_17.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_17;
  function $serializer_getInstance_17() {
    if ($serializer_instance_17 == null)
      new $serializer_17();
    return $serializer_instance_17;
  }
  function Transformer_init_$Init$(seen1, pattern, target, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('pattern');
    else
      $this._pattern_0 = pattern;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('target');
    else
      $this._target_0 = target;
    return $this;
  }
  function Transformer_init_$Create$(seen1, pattern, target, serializationConstructorMarker) {
    return Transformer_init_$Init$(seen1, pattern, target, serializationConstructorMarker, Object.create(Transformer.prototype));
  }
  function Category(labels, title) {
    Companion_getInstance_66();
    this._labels_0 = labels;
    this._title_1 = title;
  }
  Category.prototype.toString = function () {
    return '' + 'Category(labels=' + this._labels_0 + ', title=' + this._title_1 + ')';
  };
  Category.prototype.hashCode = function () {
    var result = hashCode(this._labels_0);
    result = imul(result, 31) + getStringHashCode(this._title_1) | 0;
    return result;
  };
  Category.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Category))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Category ? other : THROW_CCE();
    if (!equals_1(this._labels_0, tmp0_other_with_cast._labels_0))
      return false;
    if (!(this._title_1 === tmp0_other_with_cast._title_1))
      return false;
    return true;
  };
  Category.$metadata$ = {
    simpleName: 'Category',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_16}
  };
  function Transformer() {
  }
  Transformer.prototype.toString = function () {
    return '' + 'Transformer(pattern=' + this._pattern_0 + ', target=' + this._target_0 + ')';
  };
  Transformer.prototype.hashCode = function () {
    var result = getStringHashCode(this._pattern_0);
    result = imul(result, 31) + getStringHashCode(this._target_0) | 0;
    return result;
  };
  Transformer.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Transformer))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Transformer ? other : THROW_CCE();
    if (!(this._pattern_0 === tmp0_other_with_cast._pattern_0))
      return false;
    if (!(this._target_0 === tmp0_other_with_cast._target_0))
      return false;
    return true;
  };
  Transformer.$metadata$ = {
    simpleName: 'Transformer',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_17}
  };
  function Companion_68() {
    Companion_instance_67 = this;
    var tmp = this;
    var tmp0_labels = listOf_0('feature');
    var tmp_0 = new Category(tmp0_labels, '## \uD83D\uDE80 Features');
    var tmp1_labels = listOf_0('fix');
    var tmp_1 = new Category(tmp1_labels, '## \uD83D\uDC1B Fixes');
    var tmp2_labels = listOf_0('test');
    tmp._DEFAULT_CONFIG = new Configuration(listOf([tmp_0, tmp_1, new Category(tmp2_labels, '## \uD83E\uDDEA Tests')]), '- no changes', listOf_0('ignore'), '- ${{TITLE}}    - PR: #${{NUMBER}}', 'DESC', emptyList(), '${{CHANGELOG}}<details><summary>Uncategorized<\/summary>${{UNCATEGORIZED}}<\/details>');
  }
  Companion_68.$metadata$ = {
    simpleName: 'Companion',
    kind: 'object',
    interfaces: []
  };
  var Companion_instance_67;
  function Companion_getInstance_67() {
    if (Companion_instance_67 == null)
      new Companion_68();
    return Companion_instance_67;
  }
  function $serializer_18() {
    $serializer_instance_18 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('models.Configuration', this, 7);
    tmp0_serialDesc.addElement_0('categories', false);
    tmp0_serialDesc.addElement_0('empty_template', false);
    tmp0_serialDesc.addElement_0('ignore_labels', false);
    tmp0_serialDesc.addElement_0('pr_template', false);
    tmp0_serialDesc.addElement_0('sort', false);
    tmp0_serialDesc.addElement_0('transformers', false);
    tmp0_serialDesc.addElement_0('template', false);
    this._descriptor_57 = tmp0_serialDesc;
  }
  $serializer_18.prototype._get_descriptor__77 = function () {
    return this._descriptor_57;
  };
  $serializer_18.prototype.childSerializers_20 = function () {
    var tmp0_arrayOf_0 = [new NullableSerializer(new ArrayListSerializer($serializer_getInstance_16())), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(new ArrayListSerializer(StringSerializer_getInstance())), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(StringSerializer_getInstance()), new NullableSerializer(new ArrayListSerializer($serializer_getInstance_17())), new NullableSerializer(StringSerializer_getInstance())];
    return tmp0_arrayOf_0;
  };
  $serializer_18.prototype.deserialize_81 = function (decoder) {
    var tmp0_desc = this._descriptor_57;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_local6 = null;
    var tmp11_input = decoder.beginStructure_11(tmp0_desc);
    if (tmp11_input.decodeSequentially_8()) {
      tmp4_local0 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 0, new ArrayListSerializer($serializer_getInstance_16()), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 2, new ArrayListSerializer(StringSerializer_getInstance()), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 5, new ArrayListSerializer($serializer_getInstance_17()), tmp9_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp10_local6 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp11_input.decodeElementIndex_8(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 0, new ArrayListSerializer($serializer_getInstance_16()), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 2, new ArrayListSerializer(StringSerializer_getInstance()), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 5, new ArrayListSerializer($serializer_getInstance_17()), tmp9_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp10_local6 = tmp11_input.decodeNullableSerializableElement_8(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          default:throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp11_input.endStructure_11(tmp0_desc);
    return Configuration_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
  };
  $serializer_18.prototype.serialize_128 = function (encoder, value) {
    var tmp0_desc = this._descriptor_57;
    var tmp1_output = encoder.beginStructure_11(tmp0_desc);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 0, new ArrayListSerializer($serializer_getInstance_16()), value._categories);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 1, StringSerializer_getInstance(), value._empty_template);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 2, new ArrayListSerializer(StringSerializer_getInstance()), value._ignore_labels);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 3, StringSerializer_getInstance(), value._pr_template);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 4, StringSerializer_getInstance(), value._sort_0);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 5, new ArrayListSerializer($serializer_getInstance_17()), value._transformers);
    tmp1_output.encodeNullableSerializableElement_1(tmp0_desc, 6, StringSerializer_getInstance(), value._template);
    tmp1_output.endStructure_11(tmp0_desc);
  };
  $serializer_18.prototype.serialize_129 = function (encoder, value) {
    return this.serialize_128(encoder, value instanceof Configuration ? value : THROW_CCE());
  };
  $serializer_18.$metadata$ = {
    simpleName: '$serializer',
    kind: 'object',
    interfaces: [GeneratedSerializer]
  };
  var $serializer_instance_18;
  function $serializer_getInstance_18() {
    if ($serializer_instance_18 == null)
      new $serializer_18();
    return $serializer_instance_18;
  }
  function Configuration_init_$Init$(seen1, categories, empty_template, ignore_labels, pr_template, sort, transformers, template, serializationConstructorMarker, $this) {
    if (0 === (seen1 & 1))
      throw MissingFieldException_init_$Create$('categories');
    else
      $this._categories = categories;
    if (0 === (seen1 & 2))
      throw MissingFieldException_init_$Create$('empty_template');
    else
      $this._empty_template = empty_template;
    if (0 === (seen1 & 4))
      throw MissingFieldException_init_$Create$('ignore_labels');
    else
      $this._ignore_labels = ignore_labels;
    if (0 === (seen1 & 8))
      throw MissingFieldException_init_$Create$('pr_template');
    else
      $this._pr_template = pr_template;
    if (0 === (seen1 & 16))
      throw MissingFieldException_init_$Create$('sort');
    else
      $this._sort_0 = sort;
    if (0 === (seen1 & 32))
      throw MissingFieldException_init_$Create$('transformers');
    else
      $this._transformers = transformers;
    if (0 === (seen1 & 64))
      throw MissingFieldException_init_$Create$('template');
    else
      $this._template = template;
    return $this;
  }
  function Configuration_init_$Create$(seen1, categories, empty_template, ignore_labels, pr_template, sort, transformers, template, serializationConstructorMarker) {
    return Configuration_init_$Init$(seen1, categories, empty_template, ignore_labels, pr_template, sort, transformers, template, serializationConstructorMarker, Object.create(Configuration.prototype));
  }
  function Configuration(categories, empty_template, ignore_labels, pr_template, sort, transformers, template) {
    Companion_getInstance_67();
    this._categories = categories;
    this._empty_template = empty_template;
    this._ignore_labels = ignore_labels;
    this._pr_template = pr_template;
    this._sort_0 = sort;
    this._transformers = transformers;
    this._template = template;
  }
  Configuration.prototype.toString = function () {
    return '' + 'Configuration(categories=' + this._categories + ', empty_template=' + this._empty_template + ', ignore_labels=' + this._ignore_labels + ', pr_template=' + this._pr_template + ', sort=' + this._sort_0 + ', transformers=' + this._transformers + ', template=' + this._template + ')';
  };
  Configuration.prototype.hashCode = function () {
    var result = this._categories == null ? 0 : hashCode(this._categories);
    result = imul(result, 31) + (this._empty_template == null ? 0 : getStringHashCode(this._empty_template)) | 0;
    result = imul(result, 31) + (this._ignore_labels == null ? 0 : hashCode(this._ignore_labels)) | 0;
    result = imul(result, 31) + (this._pr_template == null ? 0 : getStringHashCode(this._pr_template)) | 0;
    result = imul(result, 31) + (this._sort_0 == null ? 0 : getStringHashCode(this._sort_0)) | 0;
    result = imul(result, 31) + (this._transformers == null ? 0 : hashCode(this._transformers)) | 0;
    result = imul(result, 31) + (this._template == null ? 0 : getStringHashCode(this._template)) | 0;
    return result;
  };
  Configuration.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Configuration))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Configuration ? other : THROW_CCE();
    if (!equals_1(this._categories, tmp0_other_with_cast._categories))
      return false;
    if (!(this._empty_template == tmp0_other_with_cast._empty_template))
      return false;
    if (!equals_1(this._ignore_labels, tmp0_other_with_cast._ignore_labels))
      return false;
    if (!(this._pr_template == tmp0_other_with_cast._pr_template))
      return false;
    if (!(this._sort_0 == tmp0_other_with_cast._sort_0))
      return false;
    if (!equals_1(this._transformers, tmp0_other_with_cast._transformers))
      return false;
    if (!(this._template == tmp0_other_with_cast._template))
      return false;
    return true;
  };
  Configuration.$metadata$ = {
    simpleName: 'Configuration',
    kind: 'class',
    interfaces: [],
    associatedObjects: {0: $serializer_getInstance_18}
  };
  function readJsonFile($this, filename, $cont) {
    var tmp = new $readJsonFileCOROUTINE$5($this, filename, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function _no_name_provided__247() {
  }
  _no_name_provided__247.prototype.invoke_398 = function ($this$Json) {
    $this$Json._coerceInputValues = false;
    $this$Json._isLenient = true;
    $this$Json._ignoreUnknownKeys = true;
  };
  _no_name_provided__247.prototype.invoke_420 = function (p1) {
    this.invoke_398(p1 instanceof JsonBuilder ? p1 : THROW_CCE());
    return Unit_getInstance();
  };
  _no_name_provided__247.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function $resolveConfigurationCOROUTINE$4(_this_, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__46 = _this_;
  }
  $resolveConfigurationCOROUTINE$4.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._configuration0 = Companion_getInstance_67()._DEFAULT_CONFIG;
            var tmp_0 = this;
            tmp_0._tmp0_isEmpty_01 = this.__this__46._configPath;
            if (charSequenceLength(this._tmp0_isEmpty_01) === 0) {
              return this._configuration0;
            } else {
            }

            this._repoPath2 = repositoryPath(this.__this__46._providedPath);
            this._resolvedConfigPath3 = function () {
              var $externalVarargReceiverTmp = path;
              return $externalVarargReceiverTmp.resolve.apply($externalVarargReceiverTmp, [].concat([this._repoPath2, this.__this__46._configPath]));
            }.call(this);
            print('' + 'config path = ' + this._resolvedConfigPath3);
            this._state_0 = 1;
            suspendResult = readJsonFile(this.__this__46, this._resolvedConfigPath3, this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var tmp0_elvis_lhs = suspendResult;
            this._configuration0 = tmp0_elvis_lhs == null ? Companion_getInstance_67()._DEFAULT_CONFIG : tmp0_elvis_lhs;
            println(this._configuration0);
            return this._configuration0;
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $resolveConfigurationCOROUTINE$4.$metadata$ = {
    simpleName: '$resolveConfigurationCOROUTINE$4',
    kind: 'class',
    interfaces: []
  };
  function $readJsonFileCOROUTINE$5(_this_, filename, resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
    this.__this__47 = _this_;
    this._filename = filename;
  }
  $readJsonFileCOROUTINE$5.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 5;
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = readFile_0(this._filename, 'utf8', this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            this._rawData0 = suspendResult;
            this._exceptionState = 5;
            this._state_0 = 3;
            continue $sm;
          case 2:
            this._exceptionState = 5;
            var tmp_0 = this._exception_0;
            if (tmp_0 instanceof Exception) {
              var error_1 = this._exception_0;
              print("\u26A0\uFE0F Configuration provided, but it couldn't be found. Fallback to Defaults.");
              return null;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 3:
            this._exceptionState = 5;
            var TRY_RESULT;
            this._exceptionState = 4;
            var tmp0_decodeFromString_0 = Json$default(null, _no_name_provided_$factory_209(), 1, null);
            var tmp1_serializer_0_1 = tmp0_decodeFromString_0._get_serializersModule__15();
            var tmp0_cast_0_2 = serializer_1(tmp1_serializer_0_1, createKType_0(getKClass_0(Configuration), [], false));
            TRY_RESULT = tmp0_decodeFromString_0.decodeFromString_2(isInterface(tmp0_cast_0_2, KSerializer) ? tmp0_cast_0_2 : THROW_CCE(), this._rawData0);
            this._exceptionState = 5;
            this._state_0 = 6;
            continue $sm;
          case 4:
            this._exceptionState = 5;
            var tmp_1 = this._exception_0;
            if (tmp_1 instanceof Exception) {
              var error_2 = this._exception_0;
              printStackTrace(error_2);
              print("\u26A0\uFE0F Configuration provided, but it couldn't be parsed. Fallback to Defaults.");
              TRY_RESULT = null;
              this._state_0 = 6;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 5:
            throw this._exception_0;
          case 6:
            this._exceptionState = 5;
            return TRY_RESULT;
        }
      } catch ($p) {
        if (this._exceptionState === 5) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $readJsonFileCOROUTINE$5.$metadata$ = {
    simpleName: '$readJsonFileCOROUTINE$5',
    kind: 'class',
    interfaces: []
  };
  function Inputs(token, owner, repo, providedPath, milestone, configPath, failOnError) {
    this._token_0 = token;
    this._owner_3 = owner;
    this._repo_1 = repo;
    this._providedPath = providedPath;
    this._milestone_0 = milestone;
    this._configPath = configPath;
    this._failOnError = failOnError;
  }
  Inputs.prototype.resolveConfiguration = function ($cont) {
    var tmp = new $resolveConfigurationCOROUTINE$4(this, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  Inputs.prototype.toString = function () {
    return '' + 'Inputs(token=' + this._token_0 + ', owner=' + this._owner_3 + ', repo=' + this._repo_1 + ', providedPath=' + this._providedPath + ', milestone=' + this._milestone_0 + ', configPath=' + this._configPath + ', failOnError=' + this._failOnError + ')';
  };
  Inputs.prototype.hashCode = function () {
    var result = getStringHashCode(this._token_0);
    result = imul(result, 31) + getStringHashCode(this._owner_3) | 0;
    result = imul(result, 31) + getStringHashCode(this._repo_1) | 0;
    result = imul(result, 31) + getStringHashCode(this._providedPath) | 0;
    result = imul(result, 31) + (this._milestone_0 == null ? 0 : getStringHashCode(this._milestone_0)) | 0;
    result = imul(result, 31) + getStringHashCode(this._configPath) | 0;
    result = imul(result, 31) + (this._failOnError | 0) | 0;
    return result;
  };
  Inputs.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Inputs))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof Inputs ? other : THROW_CCE();
    if (!(this._token_0 === tmp0_other_with_cast._token_0))
      return false;
    if (!(this._owner_3 === tmp0_other_with_cast._owner_3))
      return false;
    if (!(this._repo_1 === tmp0_other_with_cast._repo_1))
      return false;
    if (!(this._providedPath === tmp0_other_with_cast._providedPath))
      return false;
    if (!(this._milestone_0 == tmp0_other_with_cast._milestone_0))
      return false;
    if (!(this._configPath === tmp0_other_with_cast._configPath))
      return false;
    if (!(this._failOnError === tmp0_other_with_cast._failOnError))
      return false;
    return true;
  };
  Inputs.$metadata$ = {
    simpleName: 'Inputs',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_209() {
    var i = new _no_name_provided__247();
    return function (p1) {
      i.invoke_398(p1);
      return Unit_getInstance();
    };
  }
  function MilestoneInfo(number, title, created_at, updated_at, closedPRs, closedAt) {
    this._number_1 = number;
    this._title_2 = title;
    this._created_at = created_at;
    this._updated_at = updated_at;
    this._closedPRs = closedPRs;
    this._closedAt_1 = closedAt;
  }
  MilestoneInfo.prototype.toString = function () {
    return '' + 'MilestoneInfo(number=' + this._number_1 + ', title=' + this._title_2 + ', created_at=' + this._created_at + ', updated_at=' + this._updated_at + ', closedPRs=' + this._closedPRs + ', closedAt=' + this._closedAt_1 + ')';
  };
  MilestoneInfo.prototype.hashCode = function () {
    var result = this._number_1;
    result = imul(result, 31) + getStringHashCode(this._title_2) | 0;
    result = imul(result, 31) + (this._created_at == null ? 0 : this._created_at.hashCode()) | 0;
    result = imul(result, 31) + (this._updated_at == null ? 0 : this._updated_at.hashCode()) | 0;
    result = imul(result, 31) + this._closedPRs | 0;
    result = imul(result, 31) + (this._closedAt_1 == null ? 0 : this._closedAt_1.hashCode()) | 0;
    return result;
  };
  MilestoneInfo.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MilestoneInfo))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof MilestoneInfo ? other : THROW_CCE();
    if (!(this._number_1 === tmp0_other_with_cast._number_1))
      return false;
    if (!(this._title_2 === tmp0_other_with_cast._title_2))
      return false;
    if (!equals_1(this._created_at, tmp0_other_with_cast._created_at))
      return false;
    if (!equals_1(this._updated_at, tmp0_other_with_cast._updated_at))
      return false;
    if (!(this._closedPRs === tmp0_other_with_cast._closedPRs))
      return false;
    if (!equals_1(this._closedAt_1, tmp0_other_with_cast._closedAt_1))
      return false;
    return true;
  };
  MilestoneInfo.$metadata$ = {
    simpleName: 'MilestoneInfo',
    kind: 'class',
    interfaces: []
  };
  function PullRequestInfo(number, title, htmlURL, mergedAt, mergeCommitSha, author, labels, body, assignees, requestedReviewers) {
    this._number_2 = number;
    this._title_3 = title;
    this._htmlURL = htmlURL;
    this._mergedAt_0 = mergedAt;
    this._mergeCommitSha_0 = mergeCommitSha;
    this._author = author;
    this._labels_1 = labels;
    this._body_5 = body;
    this._assignees_0 = assignees;
    this._requestedReviewers_0 = requestedReviewers;
  }
  PullRequestInfo.prototype.toString = function () {
    return '' + 'PullRequestInfo(number=' + this._number_2 + ', title=' + this._title_3 + ', htmlURL=' + this._htmlURL + ', mergedAt=' + this._mergedAt_0 + ', mergeCommitSha=' + this._mergeCommitSha_0 + ', author=' + this._author + ', labels=' + this._labels_1 + ', body=' + this._body_5 + ', assignees=' + this._assignees_0 + ', requestedReviewers=' + this._requestedReviewers_0 + ')';
  };
  PullRequestInfo.prototype.hashCode = function () {
    var result = this._number_2;
    result = imul(result, 31) + getStringHashCode(this._title_3) | 0;
    result = imul(result, 31) + getStringHashCode(this._htmlURL) | 0;
    result = imul(result, 31) + (this._mergedAt_0 == null ? 0 : this._mergedAt_0.hashCode()) | 0;
    result = imul(result, 31) + getStringHashCode(this._mergeCommitSha_0) | 0;
    result = imul(result, 31) + getStringHashCode(this._author) | 0;
    result = imul(result, 31) + (this._labels_1 == null ? 0 : hashCode(this._labels_1)) | 0;
    result = imul(result, 31) + getStringHashCode(this._body_5) | 0;
    result = imul(result, 31) + (this._assignees_0 == null ? 0 : hashCode(this._assignees_0)) | 0;
    result = imul(result, 31) + (this._requestedReviewers_0 == null ? 0 : hashCode(this._requestedReviewers_0)) | 0;
    return result;
  };
  PullRequestInfo.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PullRequestInfo))
      return false;
    else {
    }
    var tmp0_other_with_cast = other instanceof PullRequestInfo ? other : THROW_CCE();
    if (!(this._number_2 === tmp0_other_with_cast._number_2))
      return false;
    if (!(this._title_3 === tmp0_other_with_cast._title_3))
      return false;
    if (!(this._htmlURL === tmp0_other_with_cast._htmlURL))
      return false;
    if (!equals_1(this._mergedAt_0, tmp0_other_with_cast._mergedAt_0))
      return false;
    if (!(this._mergeCommitSha_0 === tmp0_other_with_cast._mergeCommitSha_0))
      return false;
    if (!(this._author === tmp0_other_with_cast._author))
      return false;
    if (!equals_1(this._labels_1, tmp0_other_with_cast._labels_1))
      return false;
    if (!(this._body_5 === tmp0_other_with_cast._body_5))
      return false;
    if (!equals_1(this._assignees_0, tmp0_other_with_cast._assignees_0))
      return false;
    if (!equals_1(this._requestedReviewers_0, tmp0_other_with_cast._requestedReviewers_0))
      return false;
    return true;
  };
  PullRequestInfo.$metadata$ = {
    simpleName: 'PullRequestInfo',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__248() {
  }
  _no_name_provided__248.prototype.invoke_417 = function (a, b) {
    return compareValues(a._mergedAt_0, b._mergedAt_0);
  };
  _no_name_provided__248.prototype.invoke_418 = function (p1, p2) {
    var tmp = p1 instanceof PullRequestInfo ? p1 : THROW_CCE();
    return this.invoke_417(tmp, p2 instanceof PullRequestInfo ? p2 : THROW_CCE());
  };
  _no_name_provided__248.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__249() {
  }
  _no_name_provided__249.prototype.invoke_417 = function (a, b) {
    return compareValues(b._mergedAt_0, a._mergedAt_0);
  };
  _no_name_provided__249.prototype.invoke_418 = function (p1, p2) {
    var tmp = p1 instanceof PullRequestInfo ? p1 : THROW_CCE();
    return this.invoke_417(tmp, p2 instanceof PullRequestInfo ? p2 : THROW_CCE());
  };
  _no_name_provided__249.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function haveCommonElements($this, arr1, arr2) {
    var tmp0_safe_receiver = arr1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = joinToString$default_0(tmp0_safe_receiver, null, null, null, 0, null, null, 63, null);
    }
    var tmp_0 = tmp;
    var tmp1_safe_receiver = arr2;
    var tmp_1;
    if (tmp1_safe_receiver == null) {
      tmp_1 = null;
    } else {
      tmp_1 = joinToString$default_0(tmp1_safe_receiver, null, null, null, 0, null, null, 63, null);
    }
    println('' + 'haveCommonElements - ' + tmp_0 + ' ' + tmp_1);
    var tmp2_safe_receiver = arr1;
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp0_iterator_1 = tmp2_safe_receiver.iterator_62();
      while (tmp0_iterator_1.hasNext_29()) {
        var element_2 = tmp0_iterator_1.next_31();
        var tmp0_safe_receiver_5 = arr2;
        var tmp1_elvis_lhs_4 = tmp0_safe_receiver_5 == null ? null : tmp0_safe_receiver_5.contains_48(element_2);
        return tmp1_elvis_lhs_4 == null ? false : tmp1_elvis_lhs_4;
      }
      Unit_getInstance();
    }
    Unit_getInstance();
    return false;
  }
  function fillTemplate($this, pr, template) {
    if (isBlank(template))
      return '';
    var transformed = template;
    var tmp = transformed;
    var tmp_0 = pr._number_2.toString();
    transformed = replace$default_0(tmp, '${{NUMBER}}', tmp_0, false, 4, null);
    var tmp_1 = transformed;
    transformed = replace$default_0(tmp_1, '${{TITLE}}', pr._title_3, false, 4, null);
    var tmp_2 = transformed;
    transformed = replace$default_0(tmp_2, '${{URL}}', pr._htmlURL, false, 4, null);
    var tmp_3 = transformed;
    var tmp_4 = toString_0(pr._mergedAt_0);
    transformed = replace$default_0(tmp_3, '${{MERGED_AT}}', tmp_4, false, 4, null);
    var tmp_5 = transformed;
    transformed = replace$default_0(tmp_5, '${{AUTHOR}}', pr._author, false, 4, null);
    var tmp_6 = transformed;
    var tmp0_safe_receiver = pr._labels_1;
    var tmp_7;
    if (tmp0_safe_receiver == null) {
      tmp_7 = null;
    } else {
      tmp_7 = joinToString$default_0(tmp0_safe_receiver, null, null, null, 0, null, null, 63, null);
    }
    var tmp1_elvis_lhs = tmp_7;
    var tmp_8 = tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs;
    transformed = replace$default_0(tmp_6, '${{LABELS}}', tmp_8, false, 4, null);
    var tmp_9 = transformed;
    transformed = replace$default_0(tmp_9, '${{BODY}}', pr._body_5, false, 4, null);
    var tmp_10 = transformed;
    var tmp2_safe_receiver = pr._assignees_0;
    var tmp_11;
    if (tmp2_safe_receiver == null) {
      tmp_11 = null;
    } else {
      tmp_11 = joinToString$default_0(tmp2_safe_receiver, null, null, null, 0, null, null, 63, null);
    }
    var tmp3_elvis_lhs = tmp_11;
    var tmp_12 = tmp3_elvis_lhs == null ? '' : tmp3_elvis_lhs;
    transformed = replace$default_0(tmp_10, '${{ASSIGNEES}}', tmp_12, false, 4, null);
    var tmp_13 = transformed;
    var tmp4_safe_receiver = pr._requestedReviewers_0;
    var tmp_14;
    if (tmp4_safe_receiver == null) {
      tmp_14 = null;
    } else {
      tmp_14 = joinToString$default_0(tmp4_safe_receiver, null, null, null, 0, null, null, 63, null);
    }
    var tmp5_elvis_lhs = tmp_14;
    var tmp_15 = tmp5_elvis_lhs == null ? '' : tmp5_elvis_lhs;
    transformed = replace$default_0(tmp_13, '${{REVIEWERS}}', tmp_15, false, 4, null);
    println('' + 'transformed ' + transformed);
    return transformed;
  }
  function sam$kotlin_Comparator$0_1(function_0) {
    this._function_2 = function_0;
  }
  sam$kotlin_Comparator$0_1.prototype.compare_4 = function (a, b) {
    return this._function_2(a, b);
  };
  sam$kotlin_Comparator$0_1.prototype.compare = function (a, b) {
    return this.compare_4(a, b);
  };
  sam$kotlin_Comparator$0_1.$metadata$ = {
    simpleName: 'sam$kotlin_Comparator$0',
    kind: 'class',
    interfaces: [Comparator]
  };
  function _no_name_provided__250(this$0, $prs, resultContinuation) {
    this._this$0_66 = this$0;
    this._$prs = $prs;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__250.prototype.invoke_419 = function ($this$supervisorScope, $cont) {
    var tmp = this.create_47($this$supervisorScope, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__250.prototype.invoke_420 = function (p1, $cont) {
    return this.invoke_419((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  _no_name_provided__250.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 2;
            this._state_0 = 1;
            suspendResult = this._this$0_66._inputs_0.resolveConfiguration(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var config = suspendResult;
            var tmp0_safe_receiver = config._categories;
            var tmp_0;
            if (tmp0_safe_receiver == null) {
              tmp_0 = null;
            } else {
              var tmp0_mapTo_0_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_safe_receiver, 10));
              var tmp0_iterator_1_2 = tmp0_safe_receiver.iterator_62();
              while (tmp0_iterator_1_2.hasNext_29()) {
                var item_2_3 = tmp0_iterator_1_2.next_31();
                tmp0_mapTo_0_1.add_32(joinToString$default_0(item_2_3._labels_0, null, null, null, 0, null, null, 63, null));
                Unit_getInstance();
              }
              tmp_0 = tmp0_mapTo_0_1;
            }

            var tmp1_safe_receiver = tmp_0;
            var tmp_1;
            if (tmp1_safe_receiver == null) {
              tmp_1 = null;
            } else {
              tmp_1 = joinToString$default_0(tmp1_safe_receiver, ' | ', null, null, 0, null, null, 62, null);
            }

            println('' + '\u2139\uFE0F config categories: ' + tmp_1);
            var tmp2_safe_receiver = config._sort_0;
            var tmp_2;
            if (tmp2_safe_receiver == null) {
              tmp_2 = null;
            } else {
              var tmp_3;
              if (charSequenceLength(tmp2_safe_receiver) === 0) {
                tmp_3 = Companion_getInstance_67()._DEFAULT_CONFIG._sort_0;
              } else {
                {
                  tmp_3 = tmp2_safe_receiver;
                }
              }
              tmp_2 = tmp_3;
            }

            var tmp3_elvis_lhs = tmp_2;
            var sort = tmp3_elvis_lhs == null ? Companion_getInstance_67()._DEFAULT_CONFIG._sort_0 : tmp3_elvis_lhs;
            var tmp4_safe_receiver = sort;
            var tmp_4;
            if (tmp4_safe_receiver == null) {
              tmp_4 = null;
            } else {
              tmp_4 = tmp4_safe_receiver.toUpperCase();
            }

            var sortAsc = tmp_4 === 'ASC';
            if (sortAsc) {
              var tmp_5 = _no_name_provided_$factory_211();
              sortedWith(this._$prs, new sam$kotlin_Comparator$0_1(tmp_5));
              Unit_getInstance();
            } else {
              var tmp_6 = _no_name_provided_$factory_212();
              sortedWith(this._$prs, new sam$kotlin_Comparator$0_1(tmp_6));
              Unit_getInstance();
            }

            println('' + '\u2139\uFE0F Sorted all pull requests ascending: ' + sort);
            var transformedMap = LinkedHashMap_init_$Create$();
            var tmp0_iterator_1 = this._$prs.iterator_62();
            while (tmp0_iterator_1.hasNext_29()) {
              var element_2 = tmp0_iterator_1.next_31();
              var tmp0_elvis_lhs_5 = config._pr_template;
              var tmp0_set_0_4 = fillTemplate(this._this$0_66, element_2, tmp0_elvis_lhs_5 == null ? ensureNotNull(Companion_getInstance_67()._DEFAULT_CONFIG._pr_template) : tmp0_elvis_lhs_5);
              transformedMap.put_10(element_2, tmp0_set_0_4);
              Unit_getInstance();
            }

            println('' + 'Wrote messages for ' + this._$prs._get_size__48() + ' pull requests');
            var categorized = LinkedHashMap_init_$Create$();
            var tmp5_elvis_lhs = config._categories;
            var categories = tmp5_elvis_lhs == null ? ensureNotNull(Companion_getInstance_67()._DEFAULT_CONFIG._categories) : tmp5_elvis_lhs;
            var tmp6_elvis_lhs = config._ignore_labels;
            var ignoredLabels = tmp6_elvis_lhs == null ? ensureNotNull(Companion_getInstance_67()._DEFAULT_CONFIG._ignore_labels) : tmp6_elvis_lhs;
            var tmp0_iterator_1_0 = categories.iterator_62();
            while (tmp0_iterator_1_0.hasNext_29()) {
              var element_2_0 = tmp0_iterator_1_0.next_31();
              var tmp0_set_0_4_0 = ArrayList_init_$Create$();
              categorized.put_10(element_2_0, tmp0_set_0_4_0);
              Unit_getInstance();
            }

            var categorizedPrs = ArrayList_init_$Create$();
            var ignoredPrs = ArrayList_init_$Create$();
            var uncategorizedPrs = ArrayList_init_$Create$();
            var tmp0_iterator_1_1 = transformedMap._get_entries__8().iterator_62();
            while (tmp0_iterator_1_1.hasNext_29()) {
              var element_2_1 = tmp0_iterator_1_1.next_31();
              var pr_4 = element_2_1._get_key__52();
              var body_5 = element_2_1._get_value__27();
              if (haveCommonElements(this._this$0_66, ignoredLabels, pr_4._labels_1)) {
                ignoredPrs.add_32(body_5);
                Unit_getInstance();
              }var matched_6 = false;
              var tmp0_iterator_1_7 = categorized._get_entries__8().iterator_62();
              while (tmp0_iterator_1_7.hasNext_29()) {
                var element_2_8 = tmp0_iterator_1_7.next_31();
                if (haveCommonElements(this._this$0_66, element_2_8._get_key__52()._labels_0, pr_4._labels_1)) {
                  element_2_8._get_value__27().add_32(body_5);
                  Unit_getInstance();
                  matched_6 = true;
                }}
              if (!matched_6) {
                var tmp0_iterator_9 = categorized._get_entries__8().iterator_62();
                $l$break: while (tmp0_iterator_9.hasNext_29()) {
                  var categorizedEntry_10 = tmp0_iterator_9.next_31();
                  if (categorizedEntry_10._get_key__52()._labels_0.isEmpty_50()) {
                    categorizedEntry_10._get_value__27().add_32(body_5);
                    Unit_getInstance();
                    break $l$break;
                  }}
                uncategorizedPrs.add_32(body_5);
                Unit_getInstance();
              } else {
                categorizedPrs.add_32(body_5);
                Unit_getInstance();
              }
            }

            println('' + '\u2139\uFE0F Ordered all pull requests into ' + joinToString$default_0(categories, null, null, null, 0, null, null, 63, null) + ' categories');
            var changelog = '';
            var tmp7_iterator = categorized._get_entries__8().iterator_62();
            while (tmp7_iterator.hasNext_29()) {
              var categorizedEntry = tmp7_iterator.next_31();
              var pullRequests = categorizedEntry._get_value__27();
              var category = categorizedEntry._get_key__52();
              if (pullRequests._get_size__48() > 0) {
                changelog = '' + (changelog + category._title_1) + '\n\n';
                var tmp8_iterator = pullRequests.iterator_62();
                while (tmp8_iterator.hasNext_29()) {
                  var pr = tmp8_iterator.next_31();
                  changelog = '' + (changelog + pr) + '\n';
                }
                changelog = '' + changelog + '\n';
              }}

            println('' + 'Wrote ' + joinToString$default_0(categorizedPrs, null, null, null, 0, null, null, 63, null) + ' categorized pull requests down');
            var changelogUncategorized = '';
            var tmp9_iterator = uncategorizedPrs.iterator_62();
            while (tmp9_iterator.hasNext_29()) {
              var pr_0 = tmp9_iterator.next_31();
              changelogUncategorized = '' + (changelogUncategorized + pr_0) + '\n';
            }

            println('' + 'Wrote ' + joinToString$default_0(uncategorizedPrs, null, null, null, 0, null, null, 63, null) + ' non categorized pull requests down');
            var changelogIgnored = '';
            var tmp10_iterator = ignoredPrs.iterator_62();
            while (tmp10_iterator.hasNext_29()) {
              var pr_1 = tmp10_iterator.next_31();
              changelogIgnored = '' + (changelogIgnored + pr_1) + '\n';
            }

            println('' + 'Wrote ' + ignoredPrs._get_size__48() + ' ignored pull requests down');
            var tmp11_elvis_lhs = config._template;
            var transformedChangelog = tmp11_elvis_lhs == null ? ensureNotNull(Companion_getInstance_67()._DEFAULT_CONFIG._template) : tmp11_elvis_lhs;
            var tmp_7 = transformedChangelog;
            var tmp_8 = changelog;
            transformedChangelog = replace$default_0(tmp_7, '${{CHANGELOG}}', tmp_8, false, 4, null);
            var tmp_9 = transformedChangelog;
            var tmp_10 = changelogUncategorized;
            transformedChangelog = replace$default_0(tmp_9, '${{UNCATEGORIZED}}', tmp_10, false, 4, null);
            var tmp_11 = transformedChangelog;
            var tmp_12 = changelogIgnored;
            transformedChangelog = replace$default_0(tmp_11, '${{IGNORED}}', tmp_12, false, 4, null);
            var tmp_13 = transformedChangelog;
            var tmp_14 = categorizedPrs._get_size__48().toString();
            transformedChangelog = replace$default_0(tmp_13, '${{CATEGORIZED_COUNT}}', tmp_14, false, 4, null);
            var tmp_15 = transformedChangelog;
            var tmp_16 = uncategorizedPrs._get_size__48().toString();
            transformedChangelog = replace$default_0(tmp_15, '${{UNCATEGORIZED_COUNT}}', tmp_16, false, 4, null);
            var tmp_17 = transformedChangelog;
            var tmp_18 = ignoredPrs._get_size__48().toString();
            transformedChangelog = replace$default_0(tmp_17, '${{IGNORED_COUNT}}', tmp_18, false, 4, null);
            println('\u2139\uFE0F Filled template');
            return transformedChangelog;
          case 2:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 2) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__250.prototype.create_47 = function ($this$supervisorScope, completion) {
    var i = new _no_name_provided__250(this._this$0_66, this._$prs, completion);
    i._$this$supervisorScope = $this$supervisorScope;
    return i;
  };
  _no_name_provided__250.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function BuildChangelog(inputs) {
    this._inputs_0 = inputs;
  }
  BuildChangelog.prototype.invoke_406 = function (prs, $cont) {
    return supervisorScope(_no_name_provided_$factory_210(this, prs, null), $cont);
  };
  BuildChangelog.$metadata$ = {
    simpleName: 'BuildChangelog',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_210(this$0, $prs, resultContinuation) {
    var i = new _no_name_provided__250(this$0, $prs, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_419(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_211() {
    var i = new _no_name_provided__248();
    return function (p1, p2) {
      return i.invoke_417(p1, p2);
    };
  }
  function _no_name_provided_$factory_212() {
    var i = new _no_name_provided__249();
    return function (p1, p2) {
      return i.invoke_417(p1, p2);
    };
  }
  function _no_name_provided__251() {
  }
  _no_name_provided__251.prototype.invoke_407 = function (a, b) {
    var tmp0_safe_receiver_3 = b._updated_at;
    var tmp = tmp0_safe_receiver_3 == null ? null : tmp0_safe_receiver_3._get_epochSeconds_();
    var tmp0_safe_receiver_3_0 = a._updated_at;
    return compareValues(tmp, tmp0_safe_receiver_3_0 == null ? null : tmp0_safe_receiver_3_0._get_epochSeconds_());
  };
  _no_name_provided__251.prototype.invoke_418 = function (p1, p2) {
    var tmp = p1 instanceof MilestoneInfo ? p1 : THROW_CCE();
    return this.invoke_407(tmp, p2 instanceof MilestoneInfo ? p2 : THROW_CCE());
  };
  _no_name_provided__251.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function sam$kotlin_Comparator$0_2(function_0) {
    this._function_3 = function_0;
  }
  sam$kotlin_Comparator$0_2.prototype.compare_4 = function (a, b) {
    return this._function_3(a, b);
  };
  sam$kotlin_Comparator$0_2.prototype.compare = function (a, b) {
    return this.compare_4(a, b);
  };
  sam$kotlin_Comparator$0_2.$metadata$ = {
    simpleName: 'sam$kotlin_Comparator$0',
    kind: 'class',
    interfaces: [Comparator]
  };
  function _no_name_provided__252(this$0, resultContinuation) {
    this._this$0_67 = this$0;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__252.prototype.invoke_419 = function ($this$supervisorScope, $cont) {
    var tmp = this.create_47($this$supervisorScope, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__252.prototype.invoke_420 = function (p1, $cont) {
    return this.invoke_419((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  _no_name_provided__252.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            info_1('FetchLastClosedMilestone invoke');
            this._page0 = 1;
            this._moreMilestoneExist1 = true;
            var tmp_0 = this;
            tmp_0._mergedMilestoneList2 = ArrayList_init_$Create$();
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (!this._moreMilestoneExist1) {
              this._state_0 = 3;
              continue $sm;
            }
            this._state_0 = 2;
            suspendResult = this._this$0_67._githubClient.milestones(MilestoneRequest_init_$Create$('closed', null, null, 0, this._page0, 14, null), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            var milestoneResponse = suspendResult;
            var tmp0_iterator_1 = milestoneResponse.iterator_62();
            while (tmp0_iterator_1.hasNext_29()) {
              var element_2 = tmp0_iterator_1.next_31();
              var tmp0_elvis_lhs_4 = element_2._title;
              var tmp_1 = tmp0_elvis_lhs_4 == null ? '' : tmp0_elvis_lhs_4;
              var tmp1_safe_receiver_5 = element_2._createdAt;
              var tmp_2 = tmp1_safe_receiver_5 == null ? null : toInstant(tmp1_safe_receiver_5);
              var tmp2_safe_receiver_6 = element_2._updatedAt;
              var tmp_3 = tmp2_safe_receiver_6 == null ? null : toInstant(tmp2_safe_receiver_6);
              var tmp3_safe_receiver_7 = element_2._closedAt;
              this._mergedMilestoneList2.add_32(new MilestoneInfo(element_2._number, tmp_1, tmp_2, tmp_3, element_2._closedIssues, tmp3_safe_receiver_7 == null ? null : toInstant(tmp3_safe_receiver_7)));
              Unit_getInstance();
            }

            var tmp_4 = milestoneResponse._get_size__48();
            Companion_getInstance_65();
            if (tmp_4 < 50) {
              this._moreMilestoneExist1 = false;
            } else {
              {
                var tmp0 = this._page0;
                this._page0 = tmp0 + 1 | 0;
                Unit_getInstance();
              }
            }

            this._state_0 = 1;
            continue $sm;
          case 3:
            if (this._mergedMilestoneList2.isEmpty_50()) {
              throw IllegalStateException_init_$Create$('No closed milestones found');
            }
            if (this._mergedMilestoneList2._get_size__48() > 1) {
              var tmp_5 = _no_name_provided_$factory_214();
              sortWith(this._mergedMilestoneList2, new sam$kotlin_Comparator$0_2(tmp_5));
            }
            var firstMilestone = first(this._mergedMilestoneList2);
            var now = System_getInstance().now_1();
            var systemTZ = Companion_getInstance_63().currentSystemDefault();
            if (!(firstMilestone._closedAt_1 == null) ? firstMilestone._closedAt_1.compareTo_29(plus_4(now, -1, Companion_getInstance_61()._DAY, systemTZ)) < 0 : false) {
              throw IllegalStateException_init_$Create$('No milestone closed in last 24 hours');
            }
            return firstMilestone;
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__252.prototype.create_47 = function ($this$supervisorScope, completion) {
    var i = new _no_name_provided__252(this._this$0_67, completion);
    i._$this$supervisorScope_0 = $this$supervisorScope;
    return i;
  };
  _no_name_provided__252.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function FetchLastClosedMilestone(githubClient) {
    this._githubClient = githubClient;
  }
  FetchLastClosedMilestone.prototype.invoke_411 = function ($cont) {
    return supervisorScope(_no_name_provided_$factory_213(this, null), $cont);
  };
  FetchLastClosedMilestone.$metadata$ = {
    simpleName: 'FetchLastClosedMilestone',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_213(this$0, resultContinuation) {
    var i = new _no_name_provided__252(this$0, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_419(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_214() {
    var i = new _no_name_provided__251();
    return function (p1, p2) {
      return i.invoke_407(p1, p2);
    };
  }
  function _no_name_provided__253(this$0, $name, resultContinuation) {
    this._this$0_68 = this$0;
    this._$name = $name;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__253.prototype.invoke_419 = function ($this$supervisorScope, $cont) {
    var tmp = this.create_47($this$supervisorScope, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__253.prototype.invoke_420 = function (p1, $cont) {
    return this.invoke_419((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  _no_name_provided__253.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            this._page0_0 = 1;
            this._moreMilestoneExist1_0 = true;
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (!this._moreMilestoneExist1_0) {
              this._state_0 = 3;
              continue $sm;
            }
            this._state_0 = 2;
            suspendResult = this._this$0_68._githubClient_0.milestones(MilestoneRequest_init_$Create$('all', null, null, 0, this._page0_0, 14, null), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            var milestoneResponse = suspendResult;
            var tmp0_iterator_1 = milestoneResponse.iterator_62();
            while (tmp0_iterator_1.hasNext_29()) {
              var element_2 = tmp0_iterator_1.next_31();
              if (element_2._title === this._$name) {
                var tmp0_safe_receiver_4 = element_2._createdAt;
                var tmp_0 = tmp0_safe_receiver_4 == null ? null : toInstant(tmp0_safe_receiver_4);
                var tmp1_safe_receiver_5 = element_2._updatedAt;
                var tmp_1 = tmp1_safe_receiver_5 == null ? null : toInstant(tmp1_safe_receiver_5);
                var tmp2_safe_receiver_6 = element_2._closedAt;
                return new MilestoneInfo(element_2._number, element_2._title, tmp_0, tmp_1, element_2._closedIssues, tmp2_safe_receiver_6 == null ? null : toInstant(tmp2_safe_receiver_6));
              }}

            var tmp_2 = milestoneResponse._get_size__48();
            Companion_getInstance_65();
            if (tmp_2 < 50) {
              this._moreMilestoneExist1_0 = false;
            } else {
              {
                var tmp0 = this._page0_0;
                this._page0_0 = tmp0 + 1 | 0;
                Unit_getInstance();
              }
            }

            this._state_0 = 1;
            continue $sm;
          case 3:
            throw IllegalStateException_init_$Create$('' + 'No milestone found with name - ' + this._$name);
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__253.prototype.create_47 = function ($this$supervisorScope, completion) {
    var i = new _no_name_provided__253(this._this$0_68, this._$name, completion);
    i._$this$supervisorScope_1 = $this$supervisorScope;
    return i;
  };
  _no_name_provided__253.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function FetchMilestoneByName(githubClient) {
    this._githubClient_0 = githubClient;
  }
  FetchMilestoneByName.prototype.invoke_414 = function (name, $cont) {
    return supervisorScope(_no_name_provided_$factory_215(this, name, null), $cont);
  };
  FetchMilestoneByName.$metadata$ = {
    simpleName: 'FetchMilestoneByName',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_215(this$0, $name, resultContinuation) {
    var i = new _no_name_provided__253(this$0, $name, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_419(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided__254() {
  }
  _no_name_provided__254.prototype.invoke_417 = function (a, b) {
    var tmp0_safe_receiver_3_30 = b._mergedAt_0;
    var tmp = tmp0_safe_receiver_3_30 == null ? null : tmp0_safe_receiver_3_30._get_epochSeconds_();
    var tmp0_safe_receiver_3_31 = a._mergedAt_0;
    return compareValues(tmp, tmp0_safe_receiver_3_31 == null ? null : tmp0_safe_receiver_3_31._get_epochSeconds_());
  };
  _no_name_provided__254.prototype.invoke_418 = function (p1, p2) {
    var tmp = p1 instanceof PullRequestInfo ? p1 : THROW_CCE();
    return this.invoke_417(tmp, p2 instanceof PullRequestInfo ? p2 : THROW_CCE());
  };
  _no_name_provided__254.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided__255() {
  }
  _no_name_provided__255.prototype.invoke_417 = function (a, b) {
    var tmp0_safe_receiver_3 = b._mergedAt_0;
    var tmp = tmp0_safe_receiver_3 == null ? null : tmp0_safe_receiver_3._get_epochSeconds_();
    var tmp0_safe_receiver_3_0 = a._mergedAt_0;
    return compareValues(tmp, tmp0_safe_receiver_3_0 == null ? null : tmp0_safe_receiver_3_0._get_epochSeconds_());
  };
  _no_name_provided__255.prototype.invoke_418 = function (p1, p2) {
    var tmp = p1 instanceof PullRequestInfo ? p1 : THROW_CCE();
    return this.invoke_417(tmp, p2 instanceof PullRequestInfo ? p2 : THROW_CCE());
  };
  _no_name_provided__255.$metadata$ = {
    kind: 'class',
    interfaces: []
  };
  function sam$kotlin_Comparator$0_3(function_0) {
    this._function_4 = function_0;
  }
  sam$kotlin_Comparator$0_3.prototype.compare_4 = function (a, b) {
    return this._function_4(a, b);
  };
  sam$kotlin_Comparator$0_3.prototype.compare = function (a, b) {
    return this.compare_4(a, b);
  };
  sam$kotlin_Comparator$0_3.$metadata$ = {
    simpleName: 'sam$kotlin_Comparator$0',
    kind: 'class',
    interfaces: [Comparator]
  };
  function _no_name_provided__256(this$0, $milestone, $closedPRs, resultContinuation) {
    this._this$0_69 = this$0;
    this._$milestone = $milestone;
    this._$closedPRs = $closedPRs;
    CoroutineImpl_0.call(this, resultContinuation);
  }
  _no_name_provided__256.prototype.invoke_419 = function ($this$supervisorScope, $cont) {
    var tmp = this.create_47($this$supervisorScope, $cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  };
  _no_name_provided__256.prototype.invoke_420 = function (p1, $cont) {
    return this.invoke_419((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  _no_name_provided__256.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            this._page0_1 = 1;
            var tmp_0 = this;
            tmp_0._mergedPRList1 = ArrayList_init_$Create$();
            this._morePRsExist2 = true;
            this._state_0 = 1;
            continue $sm;
          case 1:
            if (!this._morePRsExist2) {
              this._state_0 = 3;
              continue $sm;
            }
            this._state_0 = 2;
            suspendResult = this._this$0_69._githubClient_1.pullRequests(MilestoneRequest_init_$Create$('closed', 'desc', 'updated', 0, this._page0_1, 8, null), this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 2:
            var pullRequests = suspendResult;
            var tmp0_filterTo_0_1 = ArrayList_init_$Create$();
            var tmp0_iterator_1_2 = pullRequests.iterator_62();
            while (tmp0_iterator_1_2.hasNext_29()) {
              var element_2_3 = tmp0_iterator_1_2.next_31();
              var tmp0_safe_receiver_5 = element_2_3._milestone;
              if ((tmp0_safe_receiver_5 == null ? null : tmp0_safe_receiver_5._number) === this._$milestone) {
                tmp0_filterTo_0_1.add_32(element_2_3);
                Unit_getInstance();
              } else {
              }
            }

            var tmp0_forEach_0 = tmp0_filterTo_0_1;
            var tmp0_iterator_1 = tmp0_forEach_0.iterator_62();
            while (tmp0_iterator_1.hasNext_29()) {
              var element_2 = tmp0_iterator_1.next_31();
              var tmp0_elvis_lhs_4 = element_2._title_0;
              var tmp_1 = tmp0_elvis_lhs_4 == null ? '' : tmp0_elvis_lhs_4;
              var tmp1_elvis_lhs_5 = element_2._htmlUrl_2;
              var tmp_2 = tmp1_elvis_lhs_5 == null ? '' : tmp1_elvis_lhs_5;
              var tmp2_safe_receiver_6 = element_2._mergedAt;
              var tmp_3 = tmp2_safe_receiver_6 == null ? null : toInstant(tmp2_safe_receiver_6);
              var tmp3_elvis_lhs_7 = element_2._mergeCommitSha;
              var tmp_4 = tmp3_elvis_lhs_7 == null ? '' : tmp3_elvis_lhs_7;
              var tmp4_safe_receiver_9 = element_2._user_2;
              var tmp5_elvis_lhs_8 = tmp4_safe_receiver_9 == null ? null : tmp4_safe_receiver_9._login;
              var tmp_5 = tmp5_elvis_lhs_8 == null ? '' : tmp5_elvis_lhs_8;
              var tmp6_safe_receiver_10 = element_2._labels;
              var tmp_6;
              if (tmp6_safe_receiver_10 == null) {
                tmp_6 = null;
              } else {
                var tmp0_mapTo_0_1_11 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp6_safe_receiver_10, 10));
                var tmp0_iterator_1_2_12 = tmp6_safe_receiver_10.iterator_62();
                while (tmp0_iterator_1_2_12.hasNext_29()) {
                  var item_2_3_13 = tmp0_iterator_1_2_12.next_31();
                  var tmp0_safe_receiver_6_15 = item_2_3_13;
                  var tmp1_elvis_lhs_5_14 = tmp0_safe_receiver_6_15 == null ? null : tmp0_safe_receiver_6_15._name_9;
                  tmp0_mapTo_0_1_11.add_32(tmp1_elvis_lhs_5_14 == null ? '' : tmp1_elvis_lhs_5_14);
                  Unit_getInstance();
                }
                tmp_6 = tmp0_mapTo_0_1_11;
              }
              var tmp_7 = tmp_6;
              var tmp7_elvis_lhs_16 = element_2._body_4;
              var tmp_8 = tmp7_elvis_lhs_16 == null ? '' : tmp7_elvis_lhs_16;
              var tmp8_safe_receiver_17 = element_2._assignees;
              var tmp_9;
              if (tmp8_safe_receiver_17 == null) {
                tmp_9 = null;
              } else {
                var tmp0_mapTo_0_1_18 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp8_safe_receiver_17, 10));
                var tmp0_iterator_1_2_19 = tmp8_safe_receiver_17.iterator_62();
                while (tmp0_iterator_1_2_19.hasNext_29()) {
                  var item_2_3_20 = tmp0_iterator_1_2_19.next_31();
                  var tmp0_safe_receiver_6_22 = item_2_3_20;
                  var tmp1_elvis_lhs_5_21 = tmp0_safe_receiver_6_22 == null ? null : tmp0_safe_receiver_6_22._login;
                  tmp0_mapTo_0_1_18.add_32(tmp1_elvis_lhs_5_21 == null ? '' : tmp1_elvis_lhs_5_21);
                  Unit_getInstance();
                }
                tmp_9 = tmp0_mapTo_0_1_18;
              }
              var tmp_10 = tmp_9;
              var tmp9_safe_receiver_23 = element_2._requestedReviewers;
              var tmp_11;
              if (tmp9_safe_receiver_23 == null) {
                tmp_11 = null;
              } else {
                var tmp0_mapTo_0_1_24 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp9_safe_receiver_23, 10));
                var tmp0_iterator_1_2_25 = tmp9_safe_receiver_23.iterator_62();
                while (tmp0_iterator_1_2_25.hasNext_29()) {
                  var item_2_3_26 = tmp0_iterator_1_2_25.next_31();
                  var tmp0_safe_receiver_6_28 = item_2_3_26;
                  var tmp1_elvis_lhs_5_27 = tmp0_safe_receiver_6_28 == null ? null : tmp0_safe_receiver_6_28._login;
                  tmp0_mapTo_0_1_24.add_32(tmp1_elvis_lhs_5_27 == null ? '' : tmp1_elvis_lhs_5_27);
                  Unit_getInstance();
                }
                tmp_11 = tmp0_mapTo_0_1_24;
              }
              this._mergedPRList1.add_32(new PullRequestInfo(element_2._number_0, tmp_1, tmp_2, tmp_3, tmp_4, tmp_5, tmp_7, tmp_8, tmp_10, tmp_11));
              Unit_getInstance();
              if (this._mergedPRList1._get_size__48() === this._$closedPRs) {
                if (this._mergedPRList1._get_size__48() > 1) {
                  var tmp_12 = _no_name_provided_$factory_217();
                  sortWith(this._mergedPRList1, new sam$kotlin_Comparator$0_3(tmp_12));
                }return this._mergedPRList1;
              }}

            var tmp_13 = pullRequests._get_size__48();
            Companion_getInstance_65();
            if (tmp_13 < 50) {
              this._morePRsExist2 = false;
            } else {
              {
                var tmp0 = this._page0_1;
                this._page0_1 = tmp0 + 1 | 0;
                Unit_getInstance();
              }
            }

            this._state_0 = 1;
            continue $sm;
          case 3:
            if (this._mergedPRList1.isEmpty_50()) {
              throw IllegalStateException_init_$Create$('Found no Pull Requests for milestone');
            }
            if (this._mergedPRList1._get_size__48() > 1) {
              var tmp_14 = _no_name_provided_$factory_218();
              sortWith(this._mergedPRList1, new sam$kotlin_Comparator$0_3(tmp_14));
            }
            return toList_0(this._mergedPRList1);
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  _no_name_provided__256.prototype.create_47 = function ($this$supervisorScope, completion) {
    var i = new _no_name_provided__256(this._this$0_69, this._$milestone, this._$closedPRs, completion);
    i._$this$supervisorScope_2 = $this$supervisorScope;
    return i;
  };
  _no_name_provided__256.$metadata$ = {
    kind: 'class',
    interfaces: [],
    suspendArity: 1
  };
  function GetPRsForMilestone(githubClient) {
    this._githubClient_1 = githubClient;
  }
  GetPRsForMilestone.prototype.invoke_421 = function (milestone, closedPRs, milestoneClosedAt, $cont) {
    return supervisorScope(_no_name_provided_$factory_216(this, milestone, closedPRs, null), $cont);
  };
  GetPRsForMilestone.$metadata$ = {
    simpleName: 'GetPRsForMilestone',
    kind: 'class',
    interfaces: []
  };
  function _no_name_provided_$factory_216(this$0, $milestone, $closedPRs, resultContinuation) {
    var i = new _no_name_provided__256(this$0, $milestone, $closedPRs, resultContinuation);
    var l = function (p1, $cont) {
      return i.invoke_419(p1, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided_$factory_217() {
    var i = new _no_name_provided__254();
    return function (p1, p2) {
      return i.invoke_417(p1, p2);
    };
  }
  function _no_name_provided_$factory_218() {
    var i = new _no_name_provided__255();
    return function (p1, p2) {
      return i.invoke_417(p1, p2);
    };
  }
  function failOrError(message, failOnError) {
    setOutput_1('failed', true);
    if (failOnError) {
      setFailed_1(message);
    } else {
      throw IllegalStateException_init_$Create$(toString_1(message));
    }
  }
  function repositoryPath(providedPath) {
    var githubWorkspacePath = ActionsEnvironment_getInstance()._get_GITHUB_WORKSPACE_();
    githubWorkspacePath = function () {
      var $externalVarargReceiverTmp = path;
      return $externalVarargReceiverTmp.resolve.apply($externalVarargReceiverTmp, [].concat([githubWorkspacePath]));
    }.call(this);
    debug_1('' + "GITHUB_WORKSPACE = '" + githubWorkspacePath + "'");
    var tmp;
    if (charSequenceLength(providedPath) === 0) {
      tmp = '.';
    } else {
      {
        tmp = providedPath;
      }
    }
    var repositoryPath_0 = tmp;
    repositoryPath_0 = function () {
      var $externalVarargReceiverTmp = path;
      return $externalVarargReceiverTmp.resolve.apply($externalVarargReceiverTmp, [].concat([githubWorkspacePath, repositoryPath_0]));
    }.call(this);
    debug_1('' + "repositoryPath = '" + repositoryPath_0 + "'");
    return repositoryPath_0;
  }
  function ActionFailedException_init_$Init$(message, $this) {
    ActionFailedException.call($this, message, null);
    return $this;
  }
  function ActionFailedException_init_$Create$(message) {
    var tmp = ActionFailedException_init_$Init$(message, Object.create(ActionFailedException.prototype));
    captureStack(tmp, ActionFailedException_init_$Create$);
    return tmp;
  }
  function ActionFailedException(message, cause) {
    extendThrowable(this, message, cause);
    this._message_5 = message;
    captureStack(this, ActionFailedException);
  }
  ActionFailedException.prototype._get_message__58 = function () {
    return this._message_5;
  };
  ActionFailedException.$metadata$ = {
    simpleName: 'ActionFailedException',
    kind: 'class',
    interfaces: []
  };
  Object.defineProperty(ActionFailedException.prototype, 'message', {
    configurable: true,
    get: ActionFailedException.prototype._get_message__58
  });
  function ActionsEnvironment() {
    ActionsEnvironment_instance = this;
    this._HOME$delegate = Environment_getInstance();
    this._GITHUB_WORKFLOW$delegate = Environment_getInstance();
    this._GITHUB_RUN_ID$delegate = Environment_getInstance();
    this._GITHUB_RUN_NUMBER$delegate = Environment_getInstance();
    this._GITHUB_ACTION$delegate = Environment_getInstance();
    this._GITHUB_ACTOR$delegate = Environment_getInstance();
    this._GITHUB_REPOSITORY$delegate = Environment_getInstance();
    this._GITHUB_EVENT_NAME$delegate = Environment_getInstance();
    this._GITHUB_EVENT_PATH$delegate = Environment_getInstance();
    this._GITHUB_WORKSPACE$delegate = Environment_getInstance();
    this._GITHUB_SHA$delegate = Environment_getInstance();
    this._GITHUB_REF$delegate = Environment_getInstance();
    this._GITHUB_HEAD_REF$delegate = Environment_getInstance();
    this._GITHUB_BASE_REF$delegate = Environment_getInstance();
    this._GITHUB_SERVER_URL$delegate = Environment_getInstance();
    this._GITHUB_API_URL$delegate = Environment_getInstance();
    this._GITHUB_GRAPHQL_URL$delegate = Environment_getInstance();
    this._RUNNER_OS$delegate = Environment_getInstance();
    this._GITHUB_TOKEN$delegate = Environment_getInstance();
  }
  ActionsEnvironment.prototype._get_GITHUB_REPOSITORY_ = function () {
    return this._GITHUB_REPOSITORY$delegate.getValue_8(this, GITHUB_REPOSITORY$factory());
  };
  ActionsEnvironment.prototype._get_GITHUB_WORKSPACE_ = function () {
    return this._GITHUB_WORKSPACE$delegate.getValue_8(this, GITHUB_WORKSPACE$factory());
  };
  ActionsEnvironment.prototype._get_GITHUB_TOKEN_ = function () {
    return this._GITHUB_TOKEN$delegate.getValue_8(this, GITHUB_TOKEN$factory());
  };
  ActionsEnvironment.$metadata$ = {
    simpleName: 'ActionsEnvironment',
    kind: 'object',
    interfaces: []
  };
  var ActionsEnvironment_instance;
  function ActionsEnvironment_getInstance() {
    if (ActionsEnvironment_instance == null)
      new ActionsEnvironment();
    return ActionsEnvironment_instance;
  }
  function Environment() {
    Environment_instance = this;
  }
  Environment.prototype.getValue_8 = function (environment, property) {
    var tmp0_get_0 = process_0.env;
    var tmp1_get_0 = property.callableName;
    var tmp0_elvis_lhs = tmp0_get_0[tmp1_get_0];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw ActionFailedException_init_$Create$('' + property.callableName + ' is not found in process.env');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  Environment.$metadata$ = {
    simpleName: 'Environment',
    kind: 'object',
    interfaces: []
  };
  var Environment_instance;
  function Environment_getInstance() {
    if (Environment_instance == null)
      new Environment();
    return Environment_instance;
  }
  function GITHUB_REPOSITORY$factory() {
    return getPropertyCallableRef('GITHUB_REPOSITORY', 1, KProperty1, function (receiver) {
      return receiver._get_GITHUB_REPOSITORY_();
    }, null);
  }
  function GITHUB_WORKSPACE$factory() {
    return getPropertyCallableRef('GITHUB_WORKSPACE', 1, KProperty1, function (receiver) {
      return receiver._get_GITHUB_WORKSPACE_();
    }, null);
  }
  function GITHUB_TOKEN$factory() {
    return getPropertyCallableRef('GITHUB_TOKEN', 1, KProperty1, function (receiver) {
      return receiver._get_GITHUB_TOKEN_();
    }, null);
  }
  function readFile_0(path_0, encoding, $cont) {
    return await_0(readFileAsync_0(path_0, encoding), $cont);
  }
  function main($cont) {
    var tmp = new $mainCOROUTINE$0($cont);
    tmp._result = Unit_getInstance();
    tmp._exception_0 = null;
    return tmp.doResume_95();
  }
  function resolveInputs() {
    var tmp$ret$0;
    l$ret$1: do {
      var tmp0_group_0 = 'Reading input values';
      startGroup_1(tmp0_group_0);
      try {
        var tmp = ActionsEnvironment_getInstance()._get_GITHUB_REPOSITORY_();
        var tmp_0 = ['/'];
        var tempRepoString_2 = split$default(tmp, tmp_0, false, 0, 6, null);
        var tmp0_ifEmpty_0_3 = getInput_1('token');
        var tmp_1;
        if (charSequenceLength(tmp0_ifEmpty_0_3) === 0) {
          tmp_1 = ActionsEnvironment_getInstance()._get_GITHUB_TOKEN_();
        } else {
          {
            tmp_1 = tmp0_ifEmpty_0_3;
          }
        }
        var tmp_2 = tmp_1;
        var tmp1_ifEmpty_0_4 = getInput_1('owner');
        var tmp_3;
        if (charSequenceLength(tmp1_ifEmpty_0_4) === 0) {
          tmp_3 = first(tempRepoString_2);
        } else {
          {
            tmp_3 = tmp1_ifEmpty_0_4;
          }
        }
        var tmp_4 = tmp_3;
        var tmp2_ifEmpty_0_5 = getInput_1('repo');
        var tmp_5;
        if (charSequenceLength(tmp2_ifEmpty_0_5) === 0) {
          tmp_5 = tempRepoString_2.get_77(1);
        } else {
          {
            tmp_5 = tmp2_ifEmpty_0_5;
          }
        }
        tmp$ret$0 = new Inputs(tmp_2, tmp_4, tmp_5, getInput_1('path'), getInput_1('milestone'), getInput_1('configuration'), toBoolean(getInput_1('failOnError')));
        break l$ret$1;
      }finally {
        endGroup_1();
      }
    }
     while (false);
    return tmp$ret$0;
  }
  function $mainCOROUTINE$0(resultContinuation) {
    CoroutineImpl_0.call(this, resultContinuation);
  }
  $mainCOROUTINE$0.prototype.doResume_95 = function () {
    var suspendResult = this._result;
    $sm: do
      try {
        var tmp = this._state_0;
        switch (tmp) {
          case 0:
            this._exceptionState = 4;
            setOutput_1('failed', false);
            this._inputs0 = resolveInputs();
            print('' + this._inputs0);
            setOutput_1('owner', this._inputs0._owner_3);
            setOutput_1('repo', this._inputs0._repo_1);
            this._exceptionState = 2;
            this._releaseNoteBuilder1 = new ReleaseNoteBuilder(this._inputs0);
            this._state_0 = 1;
            suspendResult = this._releaseNoteBuilder1.build_17(this);
            if (suspendResult === _get_COROUTINE_SUSPENDED_()) {
              return suspendResult;
            }
            continue $sm;
          case 1:
            var changelog = suspendResult;
            setOutput_1('changelog', changelog);
            print(changelog);
            this._exceptionState = 4;
            this._state_0 = 3;
            continue $sm;
          case 2:
            this._exceptionState = 4;
            var tmp_0 = this._exception_0;
            if (tmp_0 instanceof Exception) {
              var ex = this._exception_0;
              var tmp0_elvis_lhs = ex.message;
              failOrError(tmp0_elvis_lhs == null ? 'Error while generating changelog' : tmp0_elvis_lhs, this._inputs0._failOnError);
              this._state_0 = 3;
              continue $sm;
            } else {
              {
                throw this._exception_0;
              }
            }

            break;
          case 3:
            this._exceptionState = 4;
            return Unit_getInstance();
          case 4:
            throw this._exception_0;
        }
      } catch ($p) {
        if (this._exceptionState === 4) {
          throw $p;
        } else {
          this._state_0 = this._exceptionState;
          this._exception_0 = $p;
        }
      }
     while (true);
  };
  $mainCOROUTINE$0.$metadata$ = {
    simpleName: '$mainCOROUTINE$0',
    kind: 'class',
    interfaces: []
  };
  AbstractMap.prototype._get_entries__8 = Map_0.prototype._get_entries__8;
  CombinedContext.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  AbstractCoroutineContextElement.prototype.get_63 = Element_0.prototype.get_63;
  AbstractCoroutineContextElement.prototype.fold_28 = Element_0.prototype.fold_28;
  AbstractCoroutineContextElement.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  AbstractCoroutineContextElement.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  IntIterator.prototype.hasNext_29 = Iterator_0.prototype.hasNext_29;
  CharIterator.prototype.hasNext_29 = Iterator_0.prototype.hasNext_29;
  AbstractMutableList.prototype.get_77 = List.prototype.get_77;
  AbstractMutableMap.prototype._get_entries__8 = MutableMap.prototype._get_entries__8;
  InternalHashCodeMap.prototype.createJsMap_0 = InternalMap.prototype.createJsMap_0;
  KClassImpl.prototype._get_simpleName__4 = KClass.prototype._get_simpleName__4;
  KClassImpl.prototype.isInstance_4 = KClass.prototype.isInstance_4;
  JobSupport.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  JobSupport.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  JobSupport.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  JobSupport.prototype.get_63 = Element_0.prototype.get_63;
  JobSupport.prototype.fold_28 = Element_0.prototype.fold_28;
  JobSupport.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  AbstractCoroutine.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  AbstractCoroutine.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  AbstractCoroutine.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  AbstractCoroutine.prototype.get_63 = Element_0.prototype.get_63;
  AbstractCoroutine.prototype.fold_28 = Element_0.prototype.fold_28;
  AbstractCoroutine.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  StandaloneCoroutine.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  StandaloneCoroutine.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  StandaloneCoroutine.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  StandaloneCoroutine.prototype.get_63 = Element_0.prototype.get_63;
  StandaloneCoroutine.prototype.fold_28 = Element_0.prototype.fold_28;
  StandaloneCoroutine.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  LazyStandaloneCoroutine.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  LazyStandaloneCoroutine.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  LazyStandaloneCoroutine.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  LazyStandaloneCoroutine.prototype.get_63 = Element_0.prototype.get_63;
  LazyStandaloneCoroutine.prototype.fold_28 = Element_0.prototype.fold_28;
  LazyStandaloneCoroutine.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  DeferredCoroutine.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  DeferredCoroutine.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  DeferredCoroutine.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  DeferredCoroutine.prototype.get_63 = Element_0.prototype.get_63;
  DeferredCoroutine.prototype.fold_28 = Element_0.prototype.fold_28;
  DeferredCoroutine.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  LazyDeferredCoroutine.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  LazyDeferredCoroutine.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  LazyDeferredCoroutine.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  LazyDeferredCoroutine.prototype.get_63 = Element_0.prototype.get_63;
  LazyDeferredCoroutine.prototype.fold_28 = Element_0.prototype.fold_28;
  LazyDeferredCoroutine.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  SchedulerTask.prototype.run_5 = Runnable.prototype.run_5;
  CancellableContinuationImpl.prototype.tryResume$default_1 = CancellableContinuation.prototype.tryResume$default_1;
  CompletableDeferredImpl.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  CompletableDeferredImpl.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  CompletableDeferredImpl.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  CompletableDeferredImpl.prototype.get_63 = Element_0.prototype.get_63;
  CompletableDeferredImpl.prototype.fold_28 = Element_0.prototype.fold_28;
  CompletableDeferredImpl.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  CoroutineDispatcher.prototype.get_63 = ContinuationInterceptor.prototype.get_63;
  CoroutineDispatcher.prototype.fold_28 = Element_0.prototype.fold_28;
  CoroutineDispatcher.prototype.minusKey_29 = ContinuationInterceptor.prototype.minusKey_29;
  CoroutineDispatcher.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  CoroutineName.prototype.get_63 = Element_0.prototype.get_63;
  CoroutineName.prototype.fold_28 = Element_0.prototype.fold_28;
  CoroutineName.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  CoroutineName.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  EventLoop.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  EventLoop.prototype.get_63 = ContinuationInterceptor.prototype.get_63;
  EventLoop.prototype.fold_28 = Element_0.prototype.fold_28;
  EventLoop.prototype.minusKey_29 = ContinuationInterceptor.prototype.minusKey_29;
  AwaitContinuation.prototype.tryResume$default_1 = CancellableContinuation.prototype.tryResume$default_1;
  JobImpl.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  JobImpl.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  JobImpl.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  JobImpl.prototype.get_63 = Element_0.prototype.get_63;
  JobImpl.prototype.fold_28 = Element_0.prototype.fold_28;
  JobImpl.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  MainCoroutineDispatcher.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  MainCoroutineDispatcher.prototype.get_63 = ContinuationInterceptor.prototype.get_63;
  MainCoroutineDispatcher.prototype.fold_28 = Element_0.prototype.fold_28;
  MainCoroutineDispatcher.prototype.minusKey_29 = ContinuationInterceptor.prototype.minusKey_29;
  SupervisorJobImpl.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  SupervisorJobImpl.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  SupervisorJobImpl.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  SupervisorJobImpl.prototype.get_63 = Element_0.prototype.get_63;
  SupervisorJobImpl.prototype.fold_28 = Element_0.prototype.fold_28;
  SupervisorJobImpl.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  ScopeCoroutine.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  ScopeCoroutine.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  ScopeCoroutine.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  ScopeCoroutine.prototype.get_63 = Element_0.prototype.get_63;
  ScopeCoroutine.prototype.fold_28 = Element_0.prototype.fold_28;
  ScopeCoroutine.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  SupervisorCoroutine.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  SupervisorCoroutine.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  SupervisorCoroutine.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  SupervisorCoroutine.prototype.get_63 = Element_0.prototype.get_63;
  SupervisorCoroutine.prototype.fold_28 = Element_0.prototype.fold_28;
  SupervisorCoroutine.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  Unconfined.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  Unconfined.prototype.get_63 = ContinuationInterceptor.prototype.get_63;
  Unconfined.prototype.fold_28 = Element_0.prototype.fold_28;
  Unconfined.prototype.minusKey_29 = ContinuationInterceptor.prototype.minusKey_29;
  Receive.prototype.tryResumeReceive_2 = ReceiveOrClosed.prototype.tryResumeReceive_2;
  Receive.prototype.completeResumeReceive_2 = ReceiveOrClosed.prototype.completeResumeReceive_2;
  AbstractSendChannel.prototype.close$default_5 = SendChannel.prototype.close$default_5;
  AbstractChannel.prototype.cancel$default_17 = ReceiveChannel.prototype.cancel$default_17;
  AbstractChannel.prototype.close$default_5 = SendChannel.prototype.close$default_5;
  ArrayChannel.prototype.cancel$default_17 = ReceiveChannel.prototype.cancel$default_17;
  ArrayChannel.prototype.close$default_5 = SendChannel.prototype.close$default_5;
  ConflatedChannel.prototype.cancel$default_17 = ReceiveChannel.prototype.cancel$default_17;
  ConflatedChannel.prototype.close$default_5 = SendChannel.prototype.close$default_5;
  LinkedListChannel.prototype.cancel$default_17 = ReceiveChannel.prototype.cancel$default_17;
  LinkedListChannel.prototype.close$default_5 = SendChannel.prototype.close$default_5;
  RendezvousChannel.prototype.cancel$default_17 = ReceiveChannel.prototype.cancel$default_17;
  RendezvousChannel.prototype.close$default_5 = SendChannel.prototype.close$default_5;
  MutexImpl.prototype.lock$default_0 = Mutex.prototype.lock$default_0;
  MutexImpl.prototype.unlock$default_0 = Mutex.prototype.unlock$default_0;
  JsMainDispatcher.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  JsMainDispatcher.prototype.get_63 = ContinuationInterceptor.prototype.get_63;
  JsMainDispatcher.prototype.fold_28 = Element_0.prototype.fold_28;
  JsMainDispatcher.prototype.minusKey_29 = ContinuationInterceptor.prototype.minusKey_29;
  UnconfinedEventLoop.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  UnconfinedEventLoop.prototype.get_63 = ContinuationInterceptor.prototype.get_63;
  UnconfinedEventLoop.prototype.fold_28 = Element_0.prototype.fold_28;
  UnconfinedEventLoop.prototype.minusKey_29 = ContinuationInterceptor.prototype.minusKey_29;
  SetTimeoutBasedDispatcher.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  SetTimeoutBasedDispatcher.prototype.get_63 = ContinuationInterceptor.prototype.get_63;
  SetTimeoutBasedDispatcher.prototype.fold_28 = Element_0.prototype.fold_28;
  SetTimeoutBasedDispatcher.prototype.minusKey_29 = ContinuationInterceptor.prototype.minusKey_29;
  NodeDispatcher.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  NodeDispatcher.prototype.get_63 = ContinuationInterceptor.prototype.get_63;
  NodeDispatcher.prototype.fold_28 = Element_0.prototype.fold_28;
  NodeDispatcher.prototype.minusKey_29 = ContinuationInterceptor.prototype.minusKey_29;
  SetTimeoutDispatcher.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  SetTimeoutDispatcher.prototype.get_63 = ContinuationInterceptor.prototype.get_63;
  SetTimeoutDispatcher.prototype.fold_28 = Element_0.prototype.fold_28;
  SetTimeoutDispatcher.prototype.minusKey_29 = ContinuationInterceptor.prototype.minusKey_29;
  WindowDispatcher.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  WindowDispatcher.prototype.get_63 = ContinuationInterceptor.prototype.get_63;
  WindowDispatcher.prototype.fold_28 = Element_0.prototype.fold_28;
  WindowDispatcher.prototype.minusKey_29 = ContinuationInterceptor.prototype.minusKey_29;
  ByteChannelSequentialBase.prototype.attachJob_1 = ByteChannel.prototype.attachJob_1;
  ChannelJob.prototype.invokeOnCompletion$default_11 = Job.prototype.invokeOnCompletion$default_11;
  ChannelJob.prototype.cancel$default_17 = Job.prototype.cancel$default_17;
  DefaultPool.prototype.close_40 = ObjectPool.prototype.close_40;
  DefaultBufferPool.prototype.close_40 = ObjectPool.prototype.close_40;
  NoPoolImpl.prototype.borrow_12 = ObjectPool.prototype.borrow_12;
  NoPoolImpl.prototype.close_40 = ObjectPool.prototype.close_40;
  EmptyBufferPoolImpl.prototype.close_40 = ObjectPool.prototype.close_40;
  _no_name_provided__61.prototype.close_40 = ObjectPool.prototype.close_40;
  _no_name_provided__62.prototype.close_40 = ObjectPool.prototype.close_40;
  _no_name_provided__63.prototype.close_40 = ObjectPool.prototype.close_40;
  _no_name_provided__64.prototype.close_40 = ObjectPool.prototype.close_40;
  _no_name_provided__69.prototype.close_40 = ObjectPool.prototype.close_40;
  _no_name_provided__70.prototype.close_40 = ObjectPool.prototype.close_40;
  _no_name_provided__1_3.prototype.get_63 = Element_0.prototype.get_63;
  _no_name_provided__1_3.prototype.fold_28 = Element_0.prototype.fold_28;
  _no_name_provided__1_3.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  _no_name_provided__1_3.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  AttributesJs.prototype.get_58 = Attributes.prototype.get_58;
  EmptyHeaders.prototype.get_64 = StringValues.prototype.get_64;
  EmptyHeaders.prototype.forEach_7 = StringValues.prototype.forEach_7;
  EmptyParameters.prototype.forEach_7 = StringValues.prototype.forEach_7;
  _no_name_provided__114.prototype.close_40 = ObjectPool.prototype.close_40;
  _no_name_provided__115.prototype.close_40 = ObjectPool.prototype.close_40;
  _no_name_provided__118.prototype.close_40 = ObjectPool.prototype.close_40;
  HttpResponse.prototype._get_headers__24 = HttpMessage.prototype._get_headers__24;
  HttpResponse.prototype._get_coroutineContext__27 = CoroutineScope.prototype._get_coroutineContext__27;
  HttpClientEngineBase.prototype._get_dispatcher__0 = HttpClientEngine.prototype._get_dispatcher__0;
  HttpClientEngineBase.prototype._get_config__2 = HttpClientEngine.prototype._get_config__2;
  HttpClientEngineBase.prototype._get_supportedCapabilities__1 = HttpClientEngine.prototype._get_supportedCapabilities__1;
  HttpClientEngineBase.prototype.execute_16 = HttpClientEngine.prototype.execute_16;
  HttpClientEngineBase.prototype.install_19 = HttpClientEngine.prototype.install_19;
  KtorCallContextElement.prototype.get_63 = Element_0.prototype.get_63;
  KtorCallContextElement.prototype.fold_28 = Element_0.prototype.fold_28;
  KtorCallContextElement.prototype.minusKey_29 = Element_0.prototype.minusKey_29;
  KtorCallContextElement.prototype.plus_31 = CoroutineContext.prototype.plus_31;
  JsClientEngine.prototype.install_19 = HttpClientEngine.prototype.install_19;
  AbstractPolymorphicSerializer.prototype._get_descriptor__77 = KSerializer.prototype._get_descriptor__77;
  SerialDescriptorImpl.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  SerialDescriptorImpl.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  AbstractDecoder.prototype.decodeSerializableElement$default_8 = CompositeDecoder.prototype.decodeSerializableElement$default_8;
  AbstractDecoder.prototype._get_serializersModule__15 = Decoder_1.prototype._get_serializersModule__15;
  AbstractDecoder.prototype.decodeSerializableValue_16 = Decoder_1.prototype.decodeSerializableValue_16;
  AbstractDecoder.prototype.decodeSequentially_8 = CompositeDecoder.prototype.decodeSequentially_8;
  AbstractDecoder.prototype.decodeElementIndex_8 = CompositeDecoder.prototype.decodeElementIndex_8;
  AbstractDecoder.prototype.decodeCollectionSize_8 = CompositeDecoder.prototype.decodeCollectionSize_8;
  AbstractEncoder.prototype._get_serializersModule__15 = Encoder.prototype._get_serializersModule__15;
  AbstractEncoder.prototype.encodeNotNullMark_1 = Encoder.prototype.encodeNotNullMark_1;
  AbstractEncoder.prototype.beginCollection_1 = Encoder.prototype.beginCollection_1;
  AbstractEncoder.prototype.encodeSerializableValue_1 = Encoder.prototype.encodeSerializableValue_1;
  AbstractEncoder.prototype.encodeNullableSerializableValue_1 = Encoder.prototype.encodeNullableSerializableValue_1;
  ListLikeDescriptor.prototype._get_serialName__17 = SerialDescriptor.prototype._get_serialName__17;
  ListLikeDescriptor.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  ListLikeDescriptor.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  PrimitiveArrayDescriptor.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  PrimitiveArrayDescriptor.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  ArrayListClassDesc.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  ArrayListClassDesc.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  LinkedHashSetClassDesc.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  LinkedHashSetClassDesc.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  MapLikeDescriptor.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  MapLikeDescriptor.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  LinkedHashMapClassDesc.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  LinkedHashMapClassDesc.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  HashSetClassDesc.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  HashSetClassDesc.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  HashMapClassDesc.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  HashMapClassDesc.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  ArrayClassDesc.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  ArrayClassDesc.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  AbstractCollectionSerializer.prototype._get_descriptor__77 = KSerializer.prototype._get_descriptor__77;
  PluginGeneratedSerialDescriptor.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  PluginGeneratedSerialDescriptor.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  InlineClassDescriptor.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  _no_name_provided__210.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  PrimitiveSerialDescriptor_0.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  PrimitiveSerialDescriptor_0.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  TaggedDecoder.prototype.decodeSerializableElement$default_8 = CompositeDecoder.prototype.decodeSerializableElement$default_8;
  TaggedDecoder.prototype.decodeSerializableValue_16 = Decoder_1.prototype.decodeSerializableValue_16;
  TaggedDecoder.prototype.decodeSequentially_8 = CompositeDecoder.prototype.decodeSequentially_8;
  TaggedDecoder.prototype.decodeElementIndex_8 = CompositeDecoder.prototype.decodeElementIndex_8;
  TaggedDecoder.prototype.decodeCollectionSize_8 = CompositeDecoder.prototype.decodeCollectionSize_8;
  NamedValueDecoder.prototype.decodeSerializableValue_16 = Decoder_1.prototype.decodeSerializableValue_16;
  NamedValueDecoder.prototype.decodeSerializableElement$default_8 = CompositeDecoder.prototype.decodeSerializableElement$default_8;
  NamedValueDecoder.prototype.decodeSequentially_8 = CompositeDecoder.prototype.decodeSequentially_8;
  NamedValueDecoder.prototype.decodeElementIndex_8 = CompositeDecoder.prototype.decodeElementIndex_8;
  NamedValueDecoder.prototype.decodeCollectionSize_8 = CompositeDecoder.prototype.decodeCollectionSize_8;
  KeyValueSerializer.prototype._get_descriptor__77 = KSerializer.prototype._get_descriptor__77;
  _no_name_provided__228.prototype._get_isNullable__17 = SerialDescriptor.prototype._get_isNullable__17;
  _no_name_provided__228.prototype._get_isInline__17 = SerialDescriptor.prototype._get_isInline__17;
  PolymorphismValidator.prototype.contextual_2 = SerializersModuleCollector.prototype.contextual_2;
  StreamingJsonDecoder.prototype.decodeSequentially_8 = CompositeDecoder.prototype.decodeSequentially_8;
  StreamingJsonDecoder.prototype.decodeCollectionSize_8 = CompositeDecoder.prototype.decodeCollectionSize_8;
  StreamingJsonDecoder.prototype.decodeSerializableElement$default_8 = CompositeDecoder.prototype.decodeSerializableElement$default_8;
  JsonDecoderForUnsignedTypes.prototype.decodeSerializableValue_16 = Decoder_1.prototype.decodeSerializableValue_16;
  JsonDecoderForUnsignedTypes.prototype.decodeSerializableElement$default_8 = CompositeDecoder.prototype.decodeSerializableElement$default_8;
  JsonDecoderForUnsignedTypes.prototype.decodeSequentially_8 = CompositeDecoder.prototype.decodeSequentially_8;
  JsonDecoderForUnsignedTypes.prototype.decodeCollectionSize_8 = CompositeDecoder.prototype.decodeCollectionSize_8;
  StreamingJsonEncoder.prototype.encodeNotNullMark_1 = Encoder.prototype.encodeNotNullMark_1;
  StreamingJsonEncoder.prototype.beginCollection_1 = Encoder.prototype.beginCollection_1;
  StreamingJsonEncoder.prototype.encodeNullableSerializableValue_1 = Encoder.prototype.encodeNullableSerializableValue_1;
  AbstractJsonTreeDecoder.prototype.decodeSerializableElement$default_8 = CompositeDecoder.prototype.decodeSerializableElement$default_8;
  AbstractJsonTreeDecoder.prototype.decodeSequentially_8 = CompositeDecoder.prototype.decodeSequentially_8;
  AbstractJsonTreeDecoder.prototype.decodeElementIndex_8 = CompositeDecoder.prototype.decodeElementIndex_8;
  AbstractJsonTreeDecoder.prototype.decodeCollectionSize_8 = CompositeDecoder.prototype.decodeCollectionSize_8;
  JsonTreeDecoder.prototype.decodeSerializableElement$default_8 = CompositeDecoder.prototype.decodeSerializableElement$default_8;
  JsonTreeDecoder.prototype.decodeSequentially_8 = CompositeDecoder.prototype.decodeSequentially_8;
  JsonTreeDecoder.prototype.decodeCollectionSize_8 = CompositeDecoder.prototype.decodeCollectionSize_8;
  JsonTreeListDecoder.prototype.decodeSerializableElement$default_8 = CompositeDecoder.prototype.decodeSerializableElement$default_8;
  JsonTreeListDecoder.prototype.decodeSequentially_8 = CompositeDecoder.prototype.decodeSequentially_8;
  JsonTreeListDecoder.prototype.decodeCollectionSize_8 = CompositeDecoder.prototype.decodeCollectionSize_8;
  JsonTreeMapDecoder.prototype.decodeSerializableElement$default_8 = CompositeDecoder.prototype.decodeSerializableElement$default_8;
  JsonTreeMapDecoder.prototype.decodeSequentially_8 = CompositeDecoder.prototype.decodeSequentially_8;
  JsonTreeMapDecoder.prototype.decodeCollectionSize_8 = CompositeDecoder.prototype.decodeCollectionSize_8;
  $serializer.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_0.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_1.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_2.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_3.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_4.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_5.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_6.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_7.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_8.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_9.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_10.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_11.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_12.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_13.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_14.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_15.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_16.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_17.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  $serializer_18.prototype.typeParametersSerializers_20 = GeneratedSerializer.prototype.typeParametersSerializers_20;
  _stableSortingIsSupported = null;
  output = output$init$();
  EmptyContinuation = EmptyContinuation$init$();
  functionClasses = functionClasses$init$();
  buf = new ArrayBuffer(8);
  bufFloat64 = bufFloat64$init$();
  bufInt32 = bufInt32$init$();
  lowIndex = lowIndex$init$();
  highIndex = 1 - lowIndex | 0;
  ZERO = fromInt(0);
  ONE = fromInt(1);
  NEG_ONE = fromInt(-1);
  MAX_VALUE = new Long(-1, 2147483647);
  MIN_VALUE = new Long(0, -2147483648);
  TWO_PWR_24_ = fromInt(16777216);
  propertyRefClassMetadataCache = propertyRefClassMetadataCache$init$();
  RESUME_TOKEN = new Symbol('RESUME_TOKEN');
  COMPLETING_ALREADY = new Symbol('COMPLETING_ALREADY');
  COMPLETING_WAITING_CHILDREN = new Symbol('COMPLETING_WAITING_CHILDREN');
  COMPLETING_RETRY = new Symbol('COMPLETING_RETRY');
  TOO_LATE_TO_CANCEL = new Symbol('TOO_LATE_TO_CANCEL');
  SEALED = new Symbol('SEALED');
  EMPTY_NEW = new Empty(false);
  EMPTY_ACTIVE = new Empty(true);
  EMPTY = new Symbol('EMPTY');
  OFFER_SUCCESS = new Symbol('OFFER_SUCCESS');
  OFFER_FAILED = new Symbol('OFFER_FAILED');
  POLL_FAILED = new Symbol('POLL_FAILED');
  ENQUEUE_FAILED = new Symbol('ENQUEUE_FAILED');
  HANDLER_INVOKED = new Symbol('ON_CLOSE_HANDLER_INVOKED');
  NO_DECISION = new Symbol('NO_DECISION');
  UNDEFINED = new Symbol('UNDEFINED');
  REUSABLE_CLAIMED = new Symbol('REUSABLE_CLAIMED');
  UNLOCK_FAIL = new Symbol('UNLOCK_FAIL');
  LOCKED = new Symbol('LOCKED');
  UNLOCKED = new Symbol('UNLOCKED');
  EMPTY_LOCKED = new Empty_0(LOCKED);
  EMPTY_UNLOCKED = new Empty_0(UNLOCKED);
  counter = 0;
  DEBUG = false;
  DefaultChunkedBufferPool = DefaultBufferPool_init_$Create$(0, 0, null, 7, null);
  EmptyByteArray = new Int8Array(0);
  isLittleEndianPlatform = Companion_getInstance_24().nativeOrder() === ByteOrder_LITTLE_ENDIAN_getInstance();
  PACKET_MAX_COPY_SIZE = 200;
  ENCODING_ALIASES = setOf(['ansi_x3.4-1968', 'ascii', 'cp1252', 'cp819', 'csisolatin1', 'ibm819', 'iso-8859-1', 'iso-ir-100', 'iso8859-1', 'iso88591', 'iso_8859-1', 'iso_8859-1:1987', 'l1', 'latin1', 'us-ascii', 'windows-1252', 'x-cp1252']);
  REPLACEMENT = REPLACEMENT$init$();
  WIN1252_TABLE = WIN1252_TABLE$init$();
  BASE64_INVERSE_ALPHABET = BASE64_INVERSE_ALPHABET$init$();
  digits = toCharArray('0123456789abcdef');
  _crypto = _crypto$init$();
  URL_ALPHABET = URL_ALPHABET$init$();
  URL_ALPHABET_CHARS = plus(plus_0((new Char(97)).rangeTo(new Char(122)), (new Char(65)).rangeTo(new Char(90))), (new Char(48)).rangeTo(new Char(57)));
  HEX_ALPHABET = plus(plus_0((new Char(97)).rangeTo(new Char(102)), (new Char(65)).rangeTo(new Char(70))), (new Char(48)).rangeTo(new Char(57)));
  URL_PROTOCOL_PART = URL_PROTOCOL_PART$init$();
  VALID_PATH_PART = listOf([new Char(58), new Char(64), new Char(33), new Char(36), new Char(38), new Char(39), new Char(40), new Char(41), new Char(42), new Char(43), new Char(44), new Char(59), new Char(61), new Char(45), new Char(46), new Char(95), new Char(126)]);
  OAUTH_SYMBOLS = OAUTH_SYMBOLS$init$();
  LETTERS_AND_NUMBERS = plus_2(plus_2(toSet_0((new Char(97)).rangeTo(new Char(122))), toSet_0((new Char(65)).rangeTo(new Char(90)))), toSet_0((new Char(48)).rangeTo(new Char(57))));
  TOKENS = plus_2(setOf([new Char(33), new Char(35), new Char(37), new Char(38), new Char(39), new Char(42), new Char(43), new Char(45), new Char(46), new Char(94), new Char(95), new Char(96), new Char(124), new Char(126)]), LETTERS_AND_NUMBERS);
  loweredPartNames = setOf(['max-age', 'expires', 'domain', 'path', 'secure', 'httponly', '$x-enc']);
  clientCookieHeaderPattern = clientCookieHeaderPattern$init$();
  cookieCharsShouldBeEscaped = setOf([new Char(59), new Char(44), new Char(34)]);
  HTTP_DATE_FORMATS = listOf(['***, dd MMM YYYY hh:mm:ss zzz', '****, dd-MMM-YYYY hh:mm:ss zzz', '*** MMM d hh:mm:ss YYYY', '***, dd-MMM-YYYY hh:mm:ss zzz', '***, dd-MMM-YYYY hh-mm-ss zzz', '***, dd MMM YYYY hh:mm:ss zzz', '*** dd-MMM-YYYY hh:mm:ss zzz', '*** dd MMM YYYY hh:mm:ss zzz', '*** dd-MMM-YYYY hh-mm-ss zzz', '***,dd-MMM-YYYY hh:mm:ss zzz', '*** MMM d YYYY hh:mm:ss zzz']);
  contentTypesByExtensions$delegate = lazy(_no_name_provided_$factory_75());
  extensionsByContentType$delegate = lazy(_no_name_provided_$factory_76());
  HeaderFieldValueSeparators = setOf([new Char(40), new Char(41), new Char(60), new Char(62), new Char(64), new Char(44), new Char(59), new Char(58), new Char(92), new Char(34), new Char(47), new Char(91), new Char(93), new Char(63), new Char(61), new Char(123), new Char(125), new Char(32), new Char(9), new Char(10), new Char(13)]);
  IPv4address = then(then_0(then(then_0(then(then_0(_get_digits_(), '.'), _get_digits_()), '.'), _get_digits_()), '.'), _get_digits_());
  IPv6address = then_0(then_1('[', atLeastOne(or(_get_hex_(), ':'))), ']');
  IP_PARSER = buildRegexParser(or_0(IPv4address, IPv6address));
  mimes$delegate = lazy(_no_name_provided_$factory_81());
  token68Pattern = token68Pattern$init$();
  authSchemePattern = authSchemePattern$init$();
  parameterPattern = parameterPattern$init$();
  escapeRegex = escapeRegex$init$();
  CachingProperty = new AttributeKey('Caching');
  ChunkSizeBufferPool = ChunkSizeBufferPool$init$();
  CrLf = CrLf$init$();
  LastChunkBytes = LastChunkBytes$init$();
  EMPTY_INT_ARRAY = new Int32Array(0);
  IntArrayPool = IntArrayPool$init$();
  versions = Companion_getInstance_40().build_3(listOf(['HTTP/1.0', 'HTTP/1.1']));
  CharArrayPool = CharArrayPool$init$();
  DefaultHttpMethods = DefaultHttpMethods$init$();
  HexTable = HexTable$init$();
  HexLetterTable = HexLetterTable$init$();
  CALL_COROUTINE = new CoroutineName('call-context');
  ENGINE_CAPABILITIES_KEY = new AttributeKey('EngineCapabilities');
  DEFAULT_CAPABILITIES = setOf_0(Feature_getInstance_3());
  KTOR_DEFAULT_USER_AGENT = 'Ktor client';
  ValidateMark = new AttributeKey('ValidateMark');
  ExpectSuccessAttributeKey = new AttributeKey('ExpectSuccessAttribyteKey');
  FEATURE_INSTALLED_LIST = new AttributeKey('ApplicationFeatureRegistry');
  ALLOWED_FOR_REDIRECT = setOf([Companion_getInstance_33()._Get, Companion_getInstance_33()._Head]);
  REQUEST_EXTENSIONS_KEY = new AttributeKey('Websocket extensions');
  RN_BYTES = RN_BYTES$init$();
  serializersStore = serializersStore$init$();
  EMPTY_DESCRIPTOR_ARRAY = EMPTY_DESCRIPTOR_ARRAY$init$();
  EMPTY_SERIALIZER_ARRAY = EMPTY_SERIALIZER_ARRAY$init$();
  BUILTIN_SERIALIZERS = mapOf([to(PrimitiveClasses_getInstance()._get_stringClass_(), serializer_2(StringCompanionObject_getInstance())), to(getKClass_0(Char), serializer_3(Companion_getInstance_13())), to(PrimitiveClasses_getInstance()._get_charArrayClass_(), CharArraySerializer()), to(PrimitiveClasses_getInstance()._get_doubleClass_(), serializer_4(DoubleCompanionObject_getInstance())), to(PrimitiveClasses_getInstance()._get_doubleArrayClass_(), DoubleArraySerializer()), to(PrimitiveClasses_getInstance()._get_floatClass_(), serializer_5(FloatCompanionObject_getInstance())), to(PrimitiveClasses_getInstance()._get_floatArrayClass_(), FloatArraySerializer()), to(getKClass_0(Long), serializer_6(Companion_getInstance_15())), to(PrimitiveClasses_getInstance()._get_longArrayClass_(), LongArraySerializer()), to(PrimitiveClasses_getInstance()._get_intClass_(), serializer_7(IntCompanionObject_getInstance())), to(PrimitiveClasses_getInstance()._get_intArrayClass_(), IntArraySerializer()), to(PrimitiveClasses_getInstance()._get_shortClass_(), serializer_8(ShortCompanionObject_getInstance())), to(PrimitiveClasses_getInstance()._get_shortArrayClass_(), ShortArraySerializer()), to(PrimitiveClasses_getInstance()._get_byteClass_(), serializer_9(ByteCompanionObject_getInstance())), to(PrimitiveClasses_getInstance()._get_byteArrayClass_(), ByteArraySerializer()), to(PrimitiveClasses_getInstance()._get_booleanClass_(), serializer_10(BooleanCompanionObject_getInstance())), to(PrimitiveClasses_getInstance()._get_booleanArrayClass_(), BooleanArraySerializer()), to(getKClass_0(Unit), serializer_11(Unit_getInstance()))]);
  NULL = new Object();
  EmptySerializersModule = new SerialModuleImpl(emptyMap(), emptyMap(), emptyMap(), emptyMap());
  JsonAlternativeNamesKey = new Key_6();
  unsignedNumberDescriptors = setOf([serializer_12(Companion_getInstance_5())._get_descriptor__77(), serializer_13(Companion_getInstance_6())._get_descriptor__77(), serializer_14(Companion_getInstance_4())._get_descriptor__77(), serializer_15(Companion_getInstance_7())._get_descriptor__77()]);
  ESCAPE_STRINGS = ESCAPE_STRINGS$init$();
  initializer = SerializerInitializer_getInstance();
  var $kotlinx = _.kotlinx || (_.kotlinx = {});
  var $kotlinx$atomicfu = $kotlinx.atomicfu || ($kotlinx.atomicfu = {});
  $kotlinx$atomicfu.atomic$ref$ = atomic_2;
  $kotlinx$atomicfu.atomic$boolean$ = atomic_4;
  $kotlinx$atomicfu.atomic$int$ = atomic_6;
  $kotlinx$atomicfu.atomic$long$ = atomic_8;
  var $io = _.io || (_.io = {});
  var $io$ktor = $io.ktor || ($io.ktor = {});
  var $io$ktor$util = $io$ktor.util || ($io$ktor.util = {});
  $io$ktor$util.AttributesJsFn = Attributes_0;
  main(_get_EmptyContinuation_());
  return _;
}));


/***/ }),

/***/ 604:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const os = __importStar(__nccwpck_require__(87));
const utils_1 = __nccwpck_require__(245);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 127:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const command_1 = __nccwpck_require__(604);
const file_command_1 = __nccwpck_require__(352);
const utils_1 = __nccwpck_require__(245);
const os = __importStar(__nccwpck_require__(87));
const path = __importStar(__nccwpck_require__(622));
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        const delimiter = '_GitHubActionsFileCommandDelimeter_';
        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;
        file_command_1.issueCommand('ENV', commandValue);
    }
    else {
        command_1.issueCommand('set-env', { name }, convertedVal);
    }
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.  The value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, value);
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 */
function error(message) {
    command_1.issue('error', message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds an warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 */
function warning(message) {
    command_1.issue('warning', message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    command_1.issueCommand('save-state', { name }, value);
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 352:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// For internal use, subject to change.
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(747));
const os = __importStar(__nccwpck_require__(87));
const utils_1 = __nccwpck_require__(245);
function issueCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueCommand = issueCommand;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 245:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 112:
/***/ (function(__unused_webpack_module, exports) {

//! @version @js-joda/core - 3.2.0
//! @copyright (c) 2015-present, Philipp Thürwächter, Pattrick Hüper & js-joda contributors
//! @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
//! @license BSD-3-Clause (see LICENSE in the root directory of this source tree)

(function (global, factory) {
     true ? factory(exports) :
    0;
}(this, (function (exports) { 'use strict';

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    function createErrorType(name, init, superErrorClass) {
      if (superErrorClass === void 0) {
        superErrorClass = Error;
      }

      function JsJodaException(message) {
        if (!Error.captureStackTrace) {
          this.stack = new Error().stack;
        } else {
          Error.captureStackTrace(this, this.constructor);
        }

        this.message = message;
        init && init.apply(this, arguments);

        this.toString = function () {
          return this.name + ": " + this.message;
        };
      }

      JsJodaException.prototype = Object.create(superErrorClass.prototype);
      JsJodaException.prototype.name = name;
      JsJodaException.prototype.constructor = JsJodaException;
      return JsJodaException;
    }

    var DateTimeException = createErrorType('DateTimeException', messageWithCause);
    var DateTimeParseException = createErrorType('DateTimeParseException', messageForDateTimeParseException);
    var UnsupportedTemporalTypeException = createErrorType('UnsupportedTemporalTypeException', null, DateTimeException);
    var ArithmeticException = createErrorType('ArithmeticException');
    var IllegalArgumentException = createErrorType('IllegalArgumentException');
    var IllegalStateException = createErrorType('IllegalStateException');
    var NullPointerException = createErrorType('NullPointerException');

    function messageWithCause(message, cause) {
      if (cause === void 0) {
        cause = null;
      }

      var msg = message || this.name;

      if (cause !== null && cause instanceof Error) {
        msg += '\n-------\nCaused by: ' + cause.stack + '\n-------\n';
      }

      this.message = msg;
    }

    function messageForDateTimeParseException(message, text, index, cause) {
      if (text === void 0) {
        text = '';
      }

      if (index === void 0) {
        index = 0;
      }

      if (cause === void 0) {
        cause = null;
      }

      var msg = message || this.name;
      msg += ': ' + text + ', at index: ' + index;

      if (cause !== null && cause instanceof Error) {
        msg += '\n-------\nCaused by: ' + cause.stack + '\n-------\n';
      }

      this.message = msg;

      this.parsedString = function () {
        return text;
      };

      this.errorIndex = function () {
        return index;
      };
    }

    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    function assert(assertion, msg, error) {
      if (!assertion) {
        if (error) {
          throw new error(msg);
        } else {
          throw new Error(msg);
        }
      }
    }
    function requireNonNull(value, parameterName) {
      if (value == null) {
        throw new NullPointerException(parameterName + ' must not be null');
      }

      return value;
    }
    function requireInstance(value, _class, parameterName) {
      if (!(value instanceof _class)) {
        throw new IllegalArgumentException(parameterName + ' must be an instance of ' + (_class.name ? _class.name : _class) + (value && value.constructor && value.constructor.name ? ', but is ' + value.constructor.name : ''));
      }

      return value;
    }
    function abstractMethodFail(methodName) {
      throw new TypeError('abstract method "' + methodName + '" is not implemented');
    }

    var assert$1 = /*#__PURE__*/Object.freeze({
        __proto__: null,
        assert: assert,
        requireNonNull: requireNonNull,
        requireInstance: requireInstance,
        abstractMethodFail: abstractMethodFail
    });

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var MAX_SAFE_INTEGER = 9007199254740991;
    var MIN_SAFE_INTEGER = -9007199254740991;
    var MathUtil = function () {
      function MathUtil() {}

      MathUtil.intDiv = function intDiv(x, y) {
        var r = x / y;
        r = MathUtil.roundDown(r);
        return MathUtil.safeZero(r);
      };

      MathUtil.intMod = function intMod(x, y) {
        var r = x - MathUtil.intDiv(x, y) * y;
        r = MathUtil.roundDown(r);
        return MathUtil.safeZero(r);
      };

      MathUtil.roundDown = function roundDown(r) {
        if (r < 0) {
          return Math.ceil(r);
        } else {
          return Math.floor(r);
        }
      };

      MathUtil.floorDiv = function floorDiv(x, y) {
        var r = Math.floor(x / y);
        return MathUtil.safeZero(r);
      };

      MathUtil.floorMod = function floorMod(x, y) {
        var r = x - MathUtil.floorDiv(x, y) * y;
        return MathUtil.safeZero(r);
      };

      MathUtil.safeAdd = function safeAdd(x, y) {
        MathUtil.verifyInt(x);
        MathUtil.verifyInt(y);

        if (x === 0) {
          return MathUtil.safeZero(y);
        }

        if (y === 0) {
          return MathUtil.safeZero(x);
        }

        var r = MathUtil.safeToInt(x + y);

        if (r === x || r === y) {
          throw new ArithmeticException('Invalid addition beyond MAX_SAFE_INTEGER!');
        }

        return r;
      };

      MathUtil.safeSubtract = function safeSubtract(x, y) {
        MathUtil.verifyInt(x);
        MathUtil.verifyInt(y);

        if (x === 0 && y === 0) {
          return 0;
        } else if (x === 0) {
          return MathUtil.safeZero(-1 * y);
        } else if (y === 0) {
          return MathUtil.safeZero(x);
        }

        return MathUtil.safeToInt(x - y);
      };

      MathUtil.safeMultiply = function safeMultiply(x, y) {
        MathUtil.verifyInt(x);
        MathUtil.verifyInt(y);

        if (x === 1) {
          return MathUtil.safeZero(y);
        }

        if (y === 1) {
          return MathUtil.safeZero(x);
        }

        if (x === 0 || y === 0) {
          return 0;
        }

        var r = MathUtil.safeToInt(x * y);

        if (r / y !== x || x === MIN_SAFE_INTEGER && y === -1 || y === MIN_SAFE_INTEGER && x === -1) {
          throw new ArithmeticException('Multiplication overflows: ' + x + ' * ' + y);
        }

        return r;
      };

      MathUtil.parseInt = function (_parseInt) {
        function parseInt(_x) {
          return _parseInt.apply(this, arguments);
        }

        parseInt.toString = function () {
          return _parseInt.toString();
        };

        return parseInt;
      }(function (value) {
        var r = parseInt(value);
        return MathUtil.safeToInt(r);
      });

      MathUtil.safeToInt = function safeToInt(value) {
        MathUtil.verifyInt(value);
        return MathUtil.safeZero(value);
      };

      MathUtil.verifyInt = function verifyInt(value) {
        if (value == null) {
          throw new ArithmeticException("Invalid value: '" + value + "', using null or undefined as argument");
        }

        if (isNaN(value)) {
          throw new ArithmeticException('Invalid int value, using NaN as argument');
        }

        if (value % 1 !== 0) {
          throw new ArithmeticException("Invalid value: '" + value + "' is a float");
        }

        if (value > MAX_SAFE_INTEGER || value < MIN_SAFE_INTEGER) {
          throw new ArithmeticException('Calculation overflows an int: ' + value);
        }
      };

      MathUtil.safeZero = function safeZero(value) {
        return value === 0 ? 0 : +value;
      };

      MathUtil.compareNumbers = function compareNumbers(a, b) {
        if (a < b) {
          return -1;
        }

        if (a > b) {
          return 1;
        }

        return 0;
      };

      MathUtil.smi = function smi(int) {
        return int >>> 1 & 0x40000000 | int & 0xBFFFFFFF;
      };

      MathUtil.hash = function hash(number) {
        if (number !== number || number === Infinity) {
          return 0;
        }

        var result = number;

        while (number > 0xFFFFFFFF) {
          number /= 0xFFFFFFFF;
          result ^= number;
        }

        return MathUtil.smi(result);
      };

      MathUtil.hashCode = function hashCode() {
        var result = 17;

        for (var _len = arguments.length, numbers = new Array(_len), _key = 0; _key < _len; _key++) {
          numbers[_key] = arguments[_key];
        }

        for (var _i = 0, _numbers = numbers; _i < _numbers.length; _i++) {
          var n = _numbers[_i];
          result = (result << 5) - result + MathUtil.hash(n);
        }

        return MathUtil.hash(result);
      };

      return MathUtil;
    }();
    MathUtil.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;
    MathUtil.MIN_SAFE_INTEGER = MIN_SAFE_INTEGER;

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var Enum = function () {
      function Enum(name) {
        this._name = name;
      }

      var _proto = Enum.prototype;

      _proto.equals = function equals(other) {
        return this === other;
      };

      _proto.toString = function toString() {
        return this._name;
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      return Enum;
    }();

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var TemporalAmount = function () {
      function TemporalAmount() {}

      var _proto = TemporalAmount.prototype;

      _proto.get = function get(unit) {
        abstractMethodFail('get');
      };

      _proto.units = function units() {
        abstractMethodFail('units');
      };

      _proto.addTo = function addTo(temporal) {
        abstractMethodFail('addTo');
      };

      _proto.subtractFrom = function subtractFrom(temporal) {
        abstractMethodFail('subtractFrom');
      };

      return TemporalAmount;
    }();

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var TemporalUnit = function () {
      function TemporalUnit() {}

      var _proto = TemporalUnit.prototype;

      _proto.duration = function duration() {
        abstractMethodFail('duration');
      };

      _proto.isDurationEstimated = function isDurationEstimated() {
        abstractMethodFail('isDurationEstimated');
      };

      _proto.isDateBased = function isDateBased() {
        abstractMethodFail('isDateBased');
      };

      _proto.isTimeBased = function isTimeBased() {
        abstractMethodFail('isTimeBased');
      };

      _proto.isSupportedBy = function isSupportedBy(temporal) {
        abstractMethodFail('isSupportedBy');
      };

      _proto.addTo = function addTo(dateTime, periodToAdd) {
        abstractMethodFail('addTo');
      };

      _proto.between = function between(temporal1, temporal2) {
        abstractMethodFail('between');
      };

      return TemporalUnit;
    }();

    var Duration = function (_TemporalAmount) {
      _inheritsLoose(Duration, _TemporalAmount);

      function Duration(seconds, nanos) {
        var _this;

        _this = _TemporalAmount.call(this) || this;
        _this._seconds = MathUtil.safeToInt(seconds);
        _this._nanos = MathUtil.safeToInt(nanos);
        return _this;
      }

      Duration.ofDays = function ofDays(days) {
        return Duration._create(MathUtil.safeMultiply(days, LocalTime.SECONDS_PER_DAY), 0);
      };

      Duration.ofHours = function ofHours(hours) {
        return Duration._create(MathUtil.safeMultiply(hours, LocalTime.SECONDS_PER_HOUR), 0);
      };

      Duration.ofMinutes = function ofMinutes(minutes) {
        return Duration._create(MathUtil.safeMultiply(minutes, LocalTime.SECONDS_PER_MINUTE), 0);
      };

      Duration.ofSeconds = function ofSeconds(seconds, nanoAdjustment) {
        if (nanoAdjustment === void 0) {
          nanoAdjustment = 0;
        }

        var secs = MathUtil.safeAdd(seconds, MathUtil.floorDiv(nanoAdjustment, LocalTime.NANOS_PER_SECOND));
        var nos = MathUtil.floorMod(nanoAdjustment, LocalTime.NANOS_PER_SECOND);
        return Duration._create(secs, nos);
      };

      Duration.ofMillis = function ofMillis(millis) {
        var secs = MathUtil.intDiv(millis, 1000);
        var mos = MathUtil.intMod(millis, 1000);

        if (mos < 0) {
          mos += 1000;
          secs--;
        }

        return Duration._create(secs, mos * 1000000);
      };

      Duration.ofNanos = function ofNanos(nanos) {
        var secs = MathUtil.intDiv(nanos, LocalTime.NANOS_PER_SECOND);
        var nos = MathUtil.intMod(nanos, LocalTime.NANOS_PER_SECOND);

        if (nos < 0) {
          nos += LocalTime.NANOS_PER_SECOND;
          secs--;
        }

        return this._create(secs, nos);
      };

      Duration.of = function of(amount, unit) {
        return Duration.ZERO.plus(amount, unit);
      };

      Duration.from = function from(amount) {
        requireNonNull(amount, 'amount');
        requireInstance(amount, TemporalAmount);
        var duration = Duration.ZERO;
        amount.units().forEach(function (unit) {
          duration = duration.plus(amount.get(unit), unit);
        });
        return duration;
      };

      Duration.between = function between(startInclusive, endExclusive) {
        requireNonNull(startInclusive, 'startInclusive');
        requireNonNull(endExclusive, 'endExclusive');
        var secs = startInclusive.until(endExclusive, ChronoUnit.SECONDS);
        var nanos = 0;

        if (startInclusive.isSupported(ChronoField.NANO_OF_SECOND) && endExclusive.isSupported(ChronoField.NANO_OF_SECOND)) {
          try {
            var startNos = startInclusive.getLong(ChronoField.NANO_OF_SECOND);
            nanos = endExclusive.getLong(ChronoField.NANO_OF_SECOND) - startNos;

            if (secs > 0 && nanos < 0) {
              nanos += LocalTime.NANOS_PER_SECOND;
            } else if (secs < 0 && nanos > 0) {
              nanos -= LocalTime.NANOS_PER_SECOND;
            } else if (secs === 0 && nanos !== 0) {
              var adjustedEnd = endExclusive.with(ChronoField.NANO_OF_SECOND, startNos);
              secs = startInclusive.until(adjustedEnd, ChronoUnit.SECONDS);
            }
          } catch (e) {}
        }

        return this.ofSeconds(secs, nanos);
      };

      Duration.parse = function parse(text) {
        requireNonNull(text, 'text');
        var PATTERN = new RegExp('([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?', 'i');
        var matches = PATTERN.exec(text);

        if (matches !== null) {
          if ('T' === matches[3] === false) {
            var negate = '-' === matches[1];
            var dayMatch = matches[2];
            var hourMatch = matches[4];
            var minuteMatch = matches[5];
            var secondMatch = matches[6];
            var fractionMatch = matches[7];

            if (dayMatch != null || hourMatch != null || minuteMatch != null || secondMatch != null) {
              var daysAsSecs = Duration._parseNumber(text, dayMatch, LocalTime.SECONDS_PER_DAY, 'days');

              var hoursAsSecs = Duration._parseNumber(text, hourMatch, LocalTime.SECONDS_PER_HOUR, 'hours');

              var minsAsSecs = Duration._parseNumber(text, minuteMatch, LocalTime.SECONDS_PER_MINUTE, 'minutes');

              var seconds = Duration._parseNumber(text, secondMatch, 1, 'seconds');

              var negativeSecs = secondMatch != null && secondMatch.charAt(0) === '-';

              var nanos = Duration._parseFraction(text, fractionMatch, negativeSecs ? -1 : 1);

              try {
                return Duration._create(negate, daysAsSecs, hoursAsSecs, minsAsSecs, seconds, nanos);
              } catch (ex) {
                throw new DateTimeParseException('Text cannot be parsed to a Duration: overflow', text, 0, ex);
              }
            }
          }
        }

        throw new DateTimeParseException('Text cannot be parsed to a Duration', text, 0);
      };

      Duration._parseNumber = function _parseNumber(text, parsed, multiplier, errorText) {
        if (parsed == null) {
          return 0;
        }

        try {
          if (parsed[0] === '+') {
            parsed = parsed.substring(1);
          }

          return MathUtil.safeMultiply(parseFloat(parsed), multiplier);
        } catch (ex) {
          throw new DateTimeParseException('Text cannot be parsed to a Duration: ' + errorText, text, 0, ex);
        }
      };

      Duration._parseFraction = function _parseFraction(text, parsed, negate) {
        if (parsed == null || parsed.length === 0) {
          return 0;
        }

        parsed = (parsed + '000000000').substring(0, 9);
        return parseFloat(parsed) * negate;
      };

      Duration._create = function _create() {
        if (arguments.length <= 2) {
          return Duration._createSecondsNanos(arguments[0], arguments[1]);
        } else {
          return Duration._createNegateDaysHoursMinutesSecondsNanos(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
        }
      };

      Duration._createNegateDaysHoursMinutesSecondsNanos = function _createNegateDaysHoursMinutesSecondsNanos(negate, daysAsSecs, hoursAsSecs, minsAsSecs, secs, nanos) {
        var seconds = MathUtil.safeAdd(daysAsSecs, MathUtil.safeAdd(hoursAsSecs, MathUtil.safeAdd(minsAsSecs, secs)));

        if (negate) {
          return Duration.ofSeconds(seconds, nanos).negated();
        }

        return Duration.ofSeconds(seconds, nanos);
      };

      Duration._createSecondsNanos = function _createSecondsNanos(seconds, nanoAdjustment) {
        if (seconds === void 0) {
          seconds = 0;
        }

        if (nanoAdjustment === void 0) {
          nanoAdjustment = 0;
        }

        if (seconds === 0 && nanoAdjustment === 0) {
          return Duration.ZERO;
        }

        return new Duration(seconds, nanoAdjustment);
      };

      var _proto = Duration.prototype;

      _proto.get = function get(unit) {
        if (unit === ChronoUnit.SECONDS) {
          return this._seconds;
        } else if (unit === ChronoUnit.NANOS) {
          return this._nanos;
        } else {
          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }
      };

      _proto.units = function units() {
        return [ChronoUnit.SECONDS, ChronoUnit.NANOS];
      };

      _proto.isZero = function isZero() {
        return this._seconds === 0 && this._nanos === 0;
      };

      _proto.isNegative = function isNegative() {
        return this._seconds < 0;
      };

      _proto.seconds = function seconds() {
        return this._seconds;
      };

      _proto.nano = function nano() {
        return this._nanos;
      };

      _proto.withSeconds = function withSeconds(seconds) {
        return Duration._create(seconds, this._nanos);
      };

      _proto.withNanos = function withNanos(nanoOfSecond) {
        ChronoField.NANO_OF_SECOND.checkValidIntValue(nanoOfSecond);
        return Duration._create(this._seconds, nanoOfSecond);
      };

      _proto.plusDuration = function plusDuration(duration) {
        requireNonNull(duration, 'duration');
        return this.plus(duration.seconds(), duration.nano());
      };

      _proto.plus = function plus(durationOrNumber, unitOrNumber) {
        if (arguments.length === 1) {
          return this.plusDuration(durationOrNumber);
        } else if (arguments.length === 2 && unitOrNumber instanceof TemporalUnit) {
          return this.plusAmountUnit(durationOrNumber, unitOrNumber);
        } else {
          return this.plusSecondsNanos(durationOrNumber, unitOrNumber);
        }
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        requireNonNull(amountToAdd, 'amountToAdd');
        requireNonNull(unit, 'unit');

        if (unit === ChronoUnit.DAYS) {
          return this.plusSecondsNanos(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_DAY), 0);
        }

        if (unit.isDurationEstimated()) {
          throw new UnsupportedTemporalTypeException('Unit must not have an estimated duration');
        }

        if (amountToAdd === 0) {
          return this;
        }

        if (unit instanceof ChronoUnit) {
          switch (unit) {
            case ChronoUnit.NANOS:
              return this.plusNanos(amountToAdd);

            case ChronoUnit.MICROS:
              return this.plusSecondsNanos(MathUtil.intDiv(amountToAdd, 1000000 * 1000) * 1000, MathUtil.intMod(amountToAdd, 1000000 * 1000) * 1000);

            case ChronoUnit.MILLIS:
              return this.plusMillis(amountToAdd);

            case ChronoUnit.SECONDS:
              return this.plusSeconds(amountToAdd);
          }

          return this.plusSecondsNanos(MathUtil.safeMultiply(unit.duration().seconds(), amountToAdd), 0);
        }

        var duration = unit.duration().multipliedBy(amountToAdd);
        return this.plusSecondsNanos(duration.seconds(), duration.nano());
      };

      _proto.plusDays = function plusDays(daysToAdd) {
        return this.plusSecondsNanos(MathUtil.safeMultiply(daysToAdd, LocalTime.SECONDS_PER_DAY), 0);
      };

      _proto.plusHours = function plusHours(hoursToAdd) {
        return this.plusSecondsNanos(MathUtil.safeMultiply(hoursToAdd, LocalTime.SECONDS_PER_HOUR), 0);
      };

      _proto.plusMinutes = function plusMinutes(minutesToAdd) {
        return this.plusSecondsNanos(MathUtil.safeMultiply(minutesToAdd, LocalTime.SECONDS_PER_MINUTE), 0);
      };

      _proto.plusSeconds = function plusSeconds(secondsToAdd) {
        return this.plusSecondsNanos(secondsToAdd, 0);
      };

      _proto.plusMillis = function plusMillis(millisToAdd) {
        return this.plusSecondsNanos(MathUtil.intDiv(millisToAdd, 1000), MathUtil.intMod(millisToAdd, 1000) * 1000000);
      };

      _proto.plusNanos = function plusNanos(nanosToAdd) {
        return this.plusSecondsNanos(0, nanosToAdd);
      };

      _proto.plusSecondsNanos = function plusSecondsNanos(secondsToAdd, nanosToAdd) {
        requireNonNull(secondsToAdd, 'secondsToAdd');
        requireNonNull(nanosToAdd, 'nanosToAdd');

        if (secondsToAdd === 0 && nanosToAdd === 0) {
          return this;
        }

        var epochSec = MathUtil.safeAdd(this._seconds, secondsToAdd);
        epochSec = MathUtil.safeAdd(epochSec, MathUtil.intDiv(nanosToAdd, LocalTime.NANOS_PER_SECOND));
        nanosToAdd = MathUtil.intMod(nanosToAdd, LocalTime.NANOS_PER_SECOND);
        var nanoAdjustment = MathUtil.safeAdd(this._nanos, nanosToAdd);
        return Duration.ofSeconds(epochSec, nanoAdjustment);
      };

      _proto.minus = function minus(durationOrNumber, unit) {
        if (arguments.length === 1) {
          return this.minusDuration(durationOrNumber);
        } else {
          return this.minusAmountUnit(durationOrNumber, unit);
        }
      };

      _proto.minusDuration = function minusDuration(duration) {
        requireNonNull(duration, 'duration');
        var secsToSubtract = duration.seconds();
        var nanosToSubtract = duration.nano();

        if (secsToSubtract === MIN_SAFE_INTEGER) {
          return this.plus(MAX_SAFE_INTEGER, -nanosToSubtract);
        }

        return this.plus(-secsToSubtract, -nanosToSubtract);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        requireNonNull(amountToSubtract, 'amountToSubtract');
        requireNonNull(unit, 'unit');
        return amountToSubtract === MIN_SAFE_INTEGER ? this.plusAmountUnit(MAX_SAFE_INTEGER, unit) : this.plusAmountUnit(-amountToSubtract, unit);
      };

      _proto.minusDays = function minusDays(daysToSubtract) {
        return daysToSubtract === MIN_SAFE_INTEGER ? this.plusDays(MAX_SAFE_INTEGER) : this.plusDays(-daysToSubtract);
      };

      _proto.minusHours = function minusHours(hoursToSubtract) {
        return hoursToSubtract === MIN_SAFE_INTEGER ? this.plusHours(MAX_SAFE_INTEGER) : this.plusHours(-hoursToSubtract);
      };

      _proto.minusMinutes = function minusMinutes(minutesToSubtract) {
        return minutesToSubtract === MIN_SAFE_INTEGER ? this.plusMinutes(MAX_SAFE_INTEGER) : this.plusMinutes(-minutesToSubtract);
      };

      _proto.minusSeconds = function minusSeconds(secondsToSubtract) {
        return secondsToSubtract === MIN_SAFE_INTEGER ? this.plusSeconds(MAX_SAFE_INTEGER) : this.plusSeconds(-secondsToSubtract);
      };

      _proto.minusMillis = function minusMillis(millisToSubtract) {
        return millisToSubtract === MIN_SAFE_INTEGER ? this.plusMillis(MAX_SAFE_INTEGER) : this.plusMillis(-millisToSubtract);
      };

      _proto.minusNanos = function minusNanos(nanosToSubtract) {
        return nanosToSubtract === MIN_SAFE_INTEGER ? this.plusNanos(MAX_SAFE_INTEGER) : this.plusNanos(-nanosToSubtract);
      };

      _proto.multipliedBy = function multipliedBy(multiplicand) {
        if (multiplicand === 0) {
          return Duration.ZERO;
        }

        if (multiplicand === 1) {
          return this;
        }

        var secs = MathUtil.safeMultiply(this._seconds, multiplicand);
        var nos = MathUtil.safeMultiply(this._nanos, multiplicand);
        secs = secs + MathUtil.intDiv(nos, LocalTime.NANOS_PER_SECOND);
        nos = MathUtil.intMod(nos, LocalTime.NANOS_PER_SECOND);
        return Duration.ofSeconds(secs, nos);
      };

      _proto.dividedBy = function dividedBy(divisor) {
        if (divisor === 0) {
          throw new ArithmeticException('Cannot divide by zero');
        }

        if (divisor === 1) {
          return this;
        }

        var secs = MathUtil.intDiv(this._seconds, divisor);
        var secsMod = MathUtil.roundDown((this._seconds / divisor - secs) * LocalTime.NANOS_PER_SECOND);
        var nos = MathUtil.intDiv(this._nanos, divisor);
        nos = secsMod + nos;
        return Duration.ofSeconds(secs, nos);
      };

      _proto.negated = function negated() {
        return this.multipliedBy(-1);
      };

      _proto.abs = function abs() {
        return this.isNegative() ? this.negated() : this;
      };

      _proto.addTo = function addTo(temporal) {
        requireNonNull(temporal, 'temporal');

        if (this._seconds !== 0) {
          temporal = temporal.plus(this._seconds, ChronoUnit.SECONDS);
        }

        if (this._nanos !== 0) {
          temporal = temporal.plus(this._nanos, ChronoUnit.NANOS);
        }

        return temporal;
      };

      _proto.subtractFrom = function subtractFrom(temporal) {
        requireNonNull(temporal, 'temporal');

        if (this._seconds !== 0) {
          temporal = temporal.minus(this._seconds, ChronoUnit.SECONDS);
        }

        if (this._nanos !== 0) {
          temporal = temporal.minus(this._nanos, ChronoUnit.NANOS);
        }

        return temporal;
      };

      _proto.toDays = function toDays() {
        return MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_DAY);
      };

      _proto.toHours = function toHours() {
        return MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_HOUR);
      };

      _proto.toMinutes = function toMinutes() {
        return MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_MINUTE);
      };

      _proto.toMillis = function toMillis() {
        var millis = Math.round(MathUtil.safeMultiply(this._seconds, 1000));
        millis = MathUtil.safeAdd(millis, MathUtil.intDiv(this._nanos, 1000000));
        return millis;
      };

      _proto.toNanos = function toNanos() {
        var totalNanos = MathUtil.safeMultiply(this._seconds, LocalTime.NANOS_PER_SECOND);
        totalNanos = MathUtil.safeAdd(totalNanos, this._nanos);
        return totalNanos;
      };

      _proto.compareTo = function compareTo(otherDuration) {
        requireNonNull(otherDuration, 'otherDuration');
        requireInstance(otherDuration, Duration, 'otherDuration');
        var cmp = MathUtil.compareNumbers(this._seconds, otherDuration.seconds());

        if (cmp !== 0) {
          return cmp;
        }

        return this._nanos - otherDuration.nano();
      };

      _proto.equals = function equals(otherDuration) {
        if (this === otherDuration) {
          return true;
        }

        if (otherDuration instanceof Duration) {
          return this.seconds() === otherDuration.seconds() && this.nano() === otherDuration.nano();
        }

        return false;
      };

      _proto.toString = function toString() {
        if (this === Duration.ZERO) {
          return 'PT0S';
        }

        var hours = MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_HOUR);
        var minutes = MathUtil.intDiv(MathUtil.intMod(this._seconds, LocalTime.SECONDS_PER_HOUR), LocalTime.SECONDS_PER_MINUTE);
        var secs = MathUtil.intMod(this._seconds, LocalTime.SECONDS_PER_MINUTE);
        var rval = 'PT';

        if (hours !== 0) {
          rval += hours + 'H';
        }

        if (minutes !== 0) {
          rval += minutes + 'M';
        }

        if (secs === 0 && this._nanos === 0 && rval.length > 2) {
          return rval;
        }

        if (secs < 0 && this._nanos > 0) {
          if (secs === -1) {
            rval += '-0';
          } else {
            rval += secs + 1;
          }
        } else {
          rval += secs;
        }

        if (this._nanos > 0) {
          rval += '.';
          var nanoString;

          if (secs < 0) {
            nanoString = '' + (2 * LocalTime.NANOS_PER_SECOND - this._nanos);
          } else {
            nanoString = '' + (LocalTime.NANOS_PER_SECOND + this._nanos);
          }

          nanoString = nanoString.slice(1, nanoString.length);
          rval += nanoString;

          while (rval.charAt(rval.length - 1) === '0') {
            rval = rval.slice(0, rval.length - 1);
          }
        }

        rval += 'S';
        return rval;
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      return Duration;
    }(TemporalAmount);
    function _init() {
      Duration.ZERO = new Duration(0, 0);
    }

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)
     */
    var YearConstants = function YearConstants() {};
    function _init$1() {
      YearConstants.MIN_VALUE = -999999;
      YearConstants.MAX_VALUE = 999999;
    }

    var ChronoUnit = function (_TemporalUnit) {
      _inheritsLoose(ChronoUnit, _TemporalUnit);

      function ChronoUnit(name, estimatedDuration) {
        var _this;

        _this = _TemporalUnit.call(this) || this;
        _this._name = name;
        _this._duration = estimatedDuration;
        return _this;
      }

      var _proto = ChronoUnit.prototype;

      _proto.duration = function duration() {
        return this._duration;
      };

      _proto.isDurationEstimated = function isDurationEstimated() {
        return this.isDateBased() || this === ChronoUnit.FOREVER;
      };

      _proto.isDateBased = function isDateBased() {
        return this.compareTo(ChronoUnit.DAYS) >= 0 && this !== ChronoUnit.FOREVER;
      };

      _proto.isTimeBased = function isTimeBased() {
        return this.compareTo(ChronoUnit.DAYS) < 0;
      };

      _proto.isSupportedBy = function isSupportedBy(temporal) {
        if (this === ChronoUnit.FOREVER) {
          return false;
        }

        try {
          temporal.plus(1, this);
          return true;
        } catch (e) {
          try {
            temporal.plus(-1, this);
            return true;
          } catch (e2) {
            return false;
          }
        }
      };

      _proto.addTo = function addTo(temporal, amount) {
        return temporal.plus(amount, this);
      };

      _proto.between = function between(temporal1, temporal2) {
        return temporal1.until(temporal2, this);
      };

      _proto.toString = function toString() {
        return this._name;
      };

      _proto.compareTo = function compareTo(other) {
        return this.duration().compareTo(other.duration());
      };

      return ChronoUnit;
    }(TemporalUnit);
    function _init$2() {
      ChronoUnit.NANOS = new ChronoUnit('Nanos', Duration.ofNanos(1));
      ChronoUnit.MICROS = new ChronoUnit('Micros', Duration.ofNanos(1000));
      ChronoUnit.MILLIS = new ChronoUnit('Millis', Duration.ofNanos(1000000));
      ChronoUnit.SECONDS = new ChronoUnit('Seconds', Duration.ofSeconds(1));
      ChronoUnit.MINUTES = new ChronoUnit('Minutes', Duration.ofSeconds(60));
      ChronoUnit.HOURS = new ChronoUnit('Hours', Duration.ofSeconds(3600));
      ChronoUnit.HALF_DAYS = new ChronoUnit('HalfDays', Duration.ofSeconds(43200));
      ChronoUnit.DAYS = new ChronoUnit('Days', Duration.ofSeconds(86400));
      ChronoUnit.WEEKS = new ChronoUnit('Weeks', Duration.ofSeconds(7 * 86400));
      ChronoUnit.MONTHS = new ChronoUnit('Months', Duration.ofSeconds(31556952 / 12));
      ChronoUnit.YEARS = new ChronoUnit('Years', Duration.ofSeconds(31556952));
      ChronoUnit.DECADES = new ChronoUnit('Decades', Duration.ofSeconds(31556952 * 10));
      ChronoUnit.CENTURIES = new ChronoUnit('Centuries', Duration.ofSeconds(31556952 * 100));
      ChronoUnit.MILLENNIA = new ChronoUnit('Millennia', Duration.ofSeconds(31556952 * 1000));
      ChronoUnit.ERAS = new ChronoUnit('Eras', Duration.ofSeconds(31556952 * (YearConstants.MAX_VALUE + 1)));
      ChronoUnit.FOREVER = new ChronoUnit('Forever', Duration.ofSeconds(MathUtil.MAX_SAFE_INTEGER, 999999999));
    }

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */

    var TemporalField = function () {
      function TemporalField() {}

      var _proto = TemporalField.prototype;

      _proto.isDateBased = function isDateBased() {
        abstractMethodFail('isDateBased');
      };

      _proto.isTimeBased = function isTimeBased() {
        abstractMethodFail('isTimeBased');
      };

      _proto.baseUnit = function baseUnit() {
        abstractMethodFail('baseUnit');
      };

      _proto.rangeUnit = function rangeUnit() {
        abstractMethodFail('rangeUnit');
      };

      _proto.range = function range() {
        abstractMethodFail('range');
      };

      _proto.rangeRefinedBy = function rangeRefinedBy(temporal) {
        abstractMethodFail('rangeRefinedBy');
      };

      _proto.getFrom = function getFrom(temporal) {
        abstractMethodFail('getFrom');
      };

      _proto.adjustInto = function adjustInto(temporal, newValue) {
        abstractMethodFail('adjustInto');
      };

      _proto.isSupportedBy = function isSupportedBy(temporal) {
        abstractMethodFail('isSupportedBy');
      };

      _proto.displayName = function displayName() {
        abstractMethodFail('displayName');
      };

      _proto.equals = function equals(other) {
        abstractMethodFail('equals');
      };

      _proto.name = function name() {
        abstractMethodFail('name');
      };

      return TemporalField;
    }();

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var ValueRange = function () {
      function ValueRange(minSmallest, minLargest, maxSmallest, maxLargest) {
        assert(!(minSmallest > minLargest), 'Smallest minimum value \'' + minSmallest + '\' must be less than largest minimum value \'' + minLargest + '\'', IllegalArgumentException);
        assert(!(maxSmallest > maxLargest), 'Smallest maximum value \'' + maxSmallest + '\' must be less than largest maximum value \'' + maxLargest + '\'', IllegalArgumentException);
        assert(!(minLargest > maxLargest), 'Minimum value \'' + minLargest + '\' must be less than maximum value \'' + maxLargest + '\'', IllegalArgumentException);
        this._minSmallest = minSmallest;
        this._minLargest = minLargest;
        this._maxLargest = maxLargest;
        this._maxSmallest = maxSmallest;
      }

      var _proto = ValueRange.prototype;

      _proto.isFixed = function isFixed() {
        return this._minSmallest === this._minLargest && this._maxSmallest === this._maxLargest;
      };

      _proto.minimum = function minimum() {
        return this._minSmallest;
      };

      _proto.largestMinimum = function largestMinimum() {
        return this._minLargest;
      };

      _proto.maximum = function maximum() {
        return this._maxLargest;
      };

      _proto.smallestMaximum = function smallestMaximum() {
        return this._maxSmallest;
      };

      _proto.isValidValue = function isValidValue(value) {
        return this.minimum() <= value && value <= this.maximum();
      };

      _proto.checkValidValue = function checkValidValue(value, field) {
        var msg;

        if (!this.isValidValue(value)) {
          if (field != null) {
            msg = 'Invalid value for ' + field + ' (valid values ' + this.toString() + '): ' + value;
          } else {
            msg = 'Invalid value (valid values ' + this.toString() + '): ' + value;
          }

          return assert(false, msg, DateTimeException);
        }

        return value;
      };

      _proto.checkValidIntValue = function checkValidIntValue(value, field) {
        if (this.isValidIntValue(value) === false) {
          throw new DateTimeException('Invalid int value for ' + field + ': ' + value);
        }

        return value;
      };

      _proto.isValidIntValue = function isValidIntValue(value) {
        return this.isIntValue() && this.isValidValue(value);
      };

      _proto.isIntValue = function isIntValue() {
        return this.minimum() >= MathUtil.MIN_SAFE_INTEGER && this.maximum() <= MathUtil.MAX_SAFE_INTEGER;
      };

      _proto.equals = function equals(other) {
        if (other === this) {
          return true;
        }

        if (other instanceof ValueRange) {
          return this._minSmallest === other._minSmallest && this._minLargest === other._minLargest && this._maxSmallest === other._maxSmallest && this._maxLargest === other._maxLargest;
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return MathUtil.hashCode(this._minSmallest, this._minLargest, this._maxSmallest, this._maxLargest);
      };

      _proto.toString = function toString() {
        var str = this.minimum() + (this.minimum() !== this.largestMinimum() ? '/' + this.largestMinimum() : '');
        str += ' - ';
        str += this.smallestMaximum() + (this.smallestMaximum() !== this.maximum() ? '/' + this.maximum() : '');
        return str;
      };

      ValueRange.of = function of() {
        if (arguments.length === 2) {
          return new ValueRange(arguments[0], arguments[0], arguments[1], arguments[1]);
        } else if (arguments.length === 3) {
          return new ValueRange(arguments[0], arguments[0], arguments[1], arguments[2]);
        } else if (arguments.length === 4) {
          return new ValueRange(arguments[0], arguments[1], arguments[2], arguments[3]);
        } else {
          return assert(false, 'Invalid number of arguments ' + arguments.length, IllegalArgumentException);
        }
      };

      return ValueRange;
    }();

    var ChronoField = function (_TemporalField) {
      _inheritsLoose(ChronoField, _TemporalField);

      ChronoField.byName = function byName(fieldName) {
        for (var prop in ChronoField) {
          if (ChronoField[prop]) {
            if (ChronoField[prop] instanceof ChronoField && ChronoField[prop].name() === fieldName) {
              return ChronoField[prop];
            }
          }
        }
      };

      function ChronoField(name, baseUnit, rangeUnit, range) {
        var _this;

        _this = _TemporalField.call(this) || this;
        _this._name = name;
        _this._baseUnit = baseUnit;
        _this._rangeUnit = rangeUnit;
        _this._range = range;
        return _this;
      }

      var _proto = ChronoField.prototype;

      _proto.name = function name() {
        return this._name;
      };

      _proto.baseUnit = function baseUnit() {
        return this._baseUnit;
      };

      _proto.rangeUnit = function rangeUnit() {
        return this._rangeUnit;
      };

      _proto.range = function range() {
        return this._range;
      };

      _proto.displayName = function displayName() {
        return this.toString();
      };

      _proto.checkValidValue = function checkValidValue(value) {
        return this.range().checkValidValue(value, this);
      };

      _proto.checkValidIntValue = function checkValidIntValue(value) {
        return this.range().checkValidIntValue(value, this);
      };

      _proto.isDateBased = function isDateBased() {
        var dateBased = this === ChronoField.DAY_OF_WEEK || this === ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH || this === ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR || this === ChronoField.DAY_OF_MONTH || this === ChronoField.DAY_OF_YEAR || this === ChronoField.EPOCH_DAY || this === ChronoField.ALIGNED_WEEK_OF_MONTH || this === ChronoField.ALIGNED_WEEK_OF_YEAR || this === ChronoField.MONTH_OF_YEAR || this === ChronoField.YEAR_OF_ERA || this === ChronoField.YEAR || this === ChronoField.ERA;
        return dateBased;
      };

      _proto.isTimeBased = function isTimeBased() {
        var timeBased = this === ChronoField.NANO_OF_SECOND || this === ChronoField.NANO_OF_DAY || this === ChronoField.MICRO_OF_SECOND || this === ChronoField.MICRO_OF_DAY || this === ChronoField.MILLI_OF_SECOND || this === ChronoField.MILLI_OF_DAY || this === ChronoField.SECOND_OF_MINUTE || this === ChronoField.SECOND_OF_DAY || this === ChronoField.MINUTE_OF_HOUR || this === ChronoField.MINUTE_OF_DAY || this === ChronoField.HOUR_OF_AMPM || this === ChronoField.CLOCK_HOUR_OF_AMPM || this === ChronoField.HOUR_OF_DAY || this === ChronoField.CLOCK_HOUR_OF_DAY || this === ChronoField.AMPM_OF_DAY;
        return timeBased;
      };

      _proto.rangeRefinedBy = function rangeRefinedBy(temporal) {
        return temporal.range(this);
      };

      _proto.getFrom = function getFrom(temporal) {
        return temporal.getLong(this);
      };

      _proto.toString = function toString() {
        return this.name();
      };

      _proto.equals = function equals(other) {
        return this === other;
      };

      _proto.adjustInto = function adjustInto(temporal, newValue) {
        return temporal.with(this, newValue);
      };

      _proto.isSupportedBy = function isSupportedBy(temporal) {
        return temporal.isSupported(this);
      };

      return ChronoField;
    }(TemporalField);
    function _init$3() {
      ChronoField.NANO_OF_SECOND = new ChronoField('NanoOfSecond', ChronoUnit.NANOS, ChronoUnit.SECONDS, ValueRange.of(0, 999999999));
      ChronoField.NANO_OF_DAY = new ChronoField('NanoOfDay', ChronoUnit.NANOS, ChronoUnit.DAYS, ValueRange.of(0, 86400 * 1000000000 - 1));
      ChronoField.MICRO_OF_SECOND = new ChronoField('MicroOfSecond', ChronoUnit.MICROS, ChronoUnit.SECONDS, ValueRange.of(0, 999999));
      ChronoField.MICRO_OF_DAY = new ChronoField('MicroOfDay', ChronoUnit.MICROS, ChronoUnit.DAYS, ValueRange.of(0, 86400 * 1000000 - 1));
      ChronoField.MILLI_OF_SECOND = new ChronoField('MilliOfSecond', ChronoUnit.MILLIS, ChronoUnit.SECONDS, ValueRange.of(0, 999));
      ChronoField.MILLI_OF_DAY = new ChronoField('MilliOfDay', ChronoUnit.MILLIS, ChronoUnit.DAYS, ValueRange.of(0, 86400 * 1000 - 1));
      ChronoField.SECOND_OF_MINUTE = new ChronoField('SecondOfMinute', ChronoUnit.SECONDS, ChronoUnit.MINUTES, ValueRange.of(0, 59));
      ChronoField.SECOND_OF_DAY = new ChronoField('SecondOfDay', ChronoUnit.SECONDS, ChronoUnit.DAYS, ValueRange.of(0, 86400 - 1));
      ChronoField.MINUTE_OF_HOUR = new ChronoField('MinuteOfHour', ChronoUnit.MINUTES, ChronoUnit.HOURS, ValueRange.of(0, 59));
      ChronoField.MINUTE_OF_DAY = new ChronoField('MinuteOfDay', ChronoUnit.MINUTES, ChronoUnit.DAYS, ValueRange.of(0, 24 * 60 - 1));
      ChronoField.HOUR_OF_AMPM = new ChronoField('HourOfAmPm', ChronoUnit.HOURS, ChronoUnit.HALF_DAYS, ValueRange.of(0, 11));
      ChronoField.CLOCK_HOUR_OF_AMPM = new ChronoField('ClockHourOfAmPm', ChronoUnit.HOURS, ChronoUnit.HALF_DAYS, ValueRange.of(1, 12));
      ChronoField.HOUR_OF_DAY = new ChronoField('HourOfDay', ChronoUnit.HOURS, ChronoUnit.DAYS, ValueRange.of(0, 23));
      ChronoField.CLOCK_HOUR_OF_DAY = new ChronoField('ClockHourOfDay', ChronoUnit.HOURS, ChronoUnit.DAYS, ValueRange.of(1, 24));
      ChronoField.AMPM_OF_DAY = new ChronoField('AmPmOfDay', ChronoUnit.HALF_DAYS, ChronoUnit.DAYS, ValueRange.of(0, 1));
      ChronoField.DAY_OF_WEEK = new ChronoField('DayOfWeek', ChronoUnit.DAYS, ChronoUnit.WEEKS, ValueRange.of(1, 7));
      ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH = new ChronoField('AlignedDayOfWeekInMonth', ChronoUnit.DAYS, ChronoUnit.WEEKS, ValueRange.of(1, 7));
      ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR = new ChronoField('AlignedDayOfWeekInYear', ChronoUnit.DAYS, ChronoUnit.WEEKS, ValueRange.of(1, 7));
      ChronoField.DAY_OF_MONTH = new ChronoField('DayOfMonth', ChronoUnit.DAYS, ChronoUnit.MONTHS, ValueRange.of(1, 28, 31), 'day');
      ChronoField.DAY_OF_YEAR = new ChronoField('DayOfYear', ChronoUnit.DAYS, ChronoUnit.YEARS, ValueRange.of(1, 365, 366));
      ChronoField.EPOCH_DAY = new ChronoField('EpochDay', ChronoUnit.DAYS, ChronoUnit.FOREVER, ValueRange.of(Math.floor(YearConstants.MIN_VALUE * 365.25), Math.floor(YearConstants.MAX_VALUE * 365.25)));
      ChronoField.ALIGNED_WEEK_OF_MONTH = new ChronoField('AlignedWeekOfMonth', ChronoUnit.WEEKS, ChronoUnit.MONTHS, ValueRange.of(1, 4, 5));
      ChronoField.ALIGNED_WEEK_OF_YEAR = new ChronoField('AlignedWeekOfYear', ChronoUnit.WEEKS, ChronoUnit.YEARS, ValueRange.of(1, 53));
      ChronoField.MONTH_OF_YEAR = new ChronoField('MonthOfYear', ChronoUnit.MONTHS, ChronoUnit.YEARS, ValueRange.of(1, 12), 'month');
      ChronoField.PROLEPTIC_MONTH = new ChronoField('ProlepticMonth', ChronoUnit.MONTHS, ChronoUnit.FOREVER, ValueRange.of(YearConstants.MIN_VALUE * 12, YearConstants.MAX_VALUE * 12 + 11));
      ChronoField.YEAR_OF_ERA = new ChronoField('YearOfEra', ChronoUnit.YEARS, ChronoUnit.FOREVER, ValueRange.of(1, YearConstants.MAX_VALUE, YearConstants.MAX_VALUE + 1));
      ChronoField.YEAR = new ChronoField('Year', ChronoUnit.YEARS, ChronoUnit.FOREVER, ValueRange.of(YearConstants.MIN_VALUE, YearConstants.MAX_VALUE), 'year');
      ChronoField.ERA = new ChronoField('Era', ChronoUnit.ERAS, ChronoUnit.FOREVER, ValueRange.of(0, 1));
      ChronoField.INSTANT_SECONDS = new ChronoField('InstantSeconds', ChronoUnit.SECONDS, ChronoUnit.FOREVER, ValueRange.of(MIN_SAFE_INTEGER, MAX_SAFE_INTEGER));
      ChronoField.OFFSET_SECONDS = new ChronoField('OffsetSeconds', ChronoUnit.SECONDS, ChronoUnit.FOREVER, ValueRange.of(-18 * 3600, 18 * 3600));
    }

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var TemporalQueries = function () {
      function TemporalQueries() {}

      TemporalQueries.zoneId = function zoneId() {
        return TemporalQueries.ZONE_ID;
      };

      TemporalQueries.chronology = function chronology() {
        return TemporalQueries.CHRONO;
      };

      TemporalQueries.precision = function precision() {
        return TemporalQueries.PRECISION;
      };

      TemporalQueries.zone = function zone() {
        return TemporalQueries.ZONE;
      };

      TemporalQueries.offset = function offset() {
        return TemporalQueries.OFFSET;
      };

      TemporalQueries.localDate = function localDate() {
        return TemporalQueries.LOCAL_DATE;
      };

      TemporalQueries.localTime = function localTime() {
        return TemporalQueries.LOCAL_TIME;
      };

      return TemporalQueries;
    }();

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var TemporalAccessor = function () {
      function TemporalAccessor() {}

      var _proto = TemporalAccessor.prototype;

      _proto.query = function query(_query) {
        if (_query === TemporalQueries.zoneId() || _query === TemporalQueries.chronology() || _query === TemporalQueries.precision()) {
          return null;
        }

        return _query.queryFrom(this);
      };

      _proto.get = function get(field) {
        return this.range(field).checkValidIntValue(this.getLong(field), field);
      };

      _proto.range = function range(field) {
        if (field instanceof ChronoField) {
          if (this.isSupported(field)) {
            return field.range();
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.rangeRefinedBy(this);
      };

      return TemporalAccessor;
    }();

    var TemporalQuery = function (_Enum) {
      _inheritsLoose(TemporalQuery, _Enum);

      function TemporalQuery() {
        return _Enum.apply(this, arguments) || this;
      }

      var _proto = TemporalQuery.prototype;

      _proto.queryFrom = function queryFrom(temporal) {
        abstractMethodFail('queryFrom');
      };

      return TemporalQuery;
    }(Enum);
    function createTemporalQuery(name, queryFromFunction) {
      var ExtendedTemporalQuery = function (_TemporalQuery) {
        _inheritsLoose(ExtendedTemporalQuery, _TemporalQuery);

        function ExtendedTemporalQuery() {
          return _TemporalQuery.apply(this, arguments) || this;
        }

        return ExtendedTemporalQuery;
      }(TemporalQuery);

      ExtendedTemporalQuery.prototype.queryFrom = queryFromFunction;
      return new ExtendedTemporalQuery(name);
    }

    var DayOfWeek = function (_TemporalAccessor) {
      _inheritsLoose(DayOfWeek, _TemporalAccessor);

      function DayOfWeek(ordinal, name) {
        var _this;

        _this = _TemporalAccessor.call(this) || this;
        _this._ordinal = ordinal;
        _this._name = name;
        return _this;
      }

      var _proto = DayOfWeek.prototype;

      _proto.ordinal = function ordinal() {
        return this._ordinal;
      };

      _proto.name = function name() {
        return this._name;
      };

      DayOfWeek.values = function values() {
        return ENUMS.slice();
      };

      DayOfWeek.valueOf = function valueOf(name) {
        var ordinal = 0;

        for (ordinal; ordinal < ENUMS.length; ordinal++) {
          if (ENUMS[ordinal].name() === name) {
            break;
          }
        }

        return DayOfWeek.of(ordinal + 1);
      };

      DayOfWeek.of = function of(dayOfWeek) {
        if (dayOfWeek < 1 || dayOfWeek > 7) {
          throw new DateTimeException('Invalid value for DayOfWeek: ' + dayOfWeek);
        }

        return ENUMS[dayOfWeek - 1];
      };

      DayOfWeek.from = function from(temporal) {
        assert(temporal != null, 'temporal', NullPointerException);

        if (temporal instanceof DayOfWeek) {
          return temporal;
        }

        try {
          return DayOfWeek.of(temporal.get(ChronoField.DAY_OF_WEEK));
        } catch (ex) {
          if (ex instanceof DateTimeException) {
            throw new DateTimeException('Unable to obtain DayOfWeek from TemporalAccessor: ' + temporal + ', type ' + (temporal.constructor != null ? temporal.constructor.name : ''), ex);
          } else {
            throw ex;
          }
        }
      };

      _proto.value = function value() {
        return this._ordinal + 1;
      };

      _proto.displayName = function displayName(style, locale) {
        throw new IllegalArgumentException('Pattern using (localized) text not implemented yet!');
      };

      _proto.isSupported = function isSupported(field) {
        if (field instanceof ChronoField) {
          return field === ChronoField.DAY_OF_WEEK;
        }

        return field != null && field.isSupportedBy(this);
      };

      _proto.range = function range(field) {
        if (field === ChronoField.DAY_OF_WEEK) {
          return field.range();
        } else if (field instanceof ChronoField) {
          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.rangeRefinedBy(this);
      };

      _proto.get = function get(field) {
        if (field === ChronoField.DAY_OF_WEEK) {
          return this.value();
        }

        return this.range(field).checkValidIntValue(this.getLong(field), field);
      };

      _proto.getLong = function getLong(field) {
        if (field === ChronoField.DAY_OF_WEEK) {
          return this.value();
        } else if (field instanceof ChronoField) {
          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.getFrom(this);
      };

      _proto.plus = function plus(days) {
        var amount = MathUtil.floorMod(days, 7);
        return ENUMS[MathUtil.floorMod(this._ordinal + (amount + 7), 7)];
      };

      _proto.minus = function minus(days) {
        return this.plus(-1 * MathUtil.floorMod(days, 7));
      };

      _proto.query = function query(_query) {
        if (_query === TemporalQueries.precision()) {
          return ChronoUnit.DAYS;
        } else if (_query === TemporalQueries.localDate() || _query === TemporalQueries.localTime() || _query === TemporalQueries.chronology() || _query === TemporalQueries.zone() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.offset()) {
          return null;
        }

        assert(_query != null, 'query', NullPointerException);
        return _query.queryFrom(this);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        requireNonNull(temporal, 'temporal');
        return temporal.with(ChronoField.DAY_OF_WEEK, this.value());
      };

      _proto.equals = function equals(other) {
        return this === other;
      };

      _proto.toString = function toString() {
        return this._name;
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        requireInstance(other, DayOfWeek, 'other');
        return this._ordinal - other._ordinal;
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      return DayOfWeek;
    }(TemporalAccessor);
    var ENUMS;
    function _init$4() {
      DayOfWeek.MONDAY = new DayOfWeek(0, 'MONDAY');
      DayOfWeek.TUESDAY = new DayOfWeek(1, 'TUESDAY');
      DayOfWeek.WEDNESDAY = new DayOfWeek(2, 'WEDNESDAY');
      DayOfWeek.THURSDAY = new DayOfWeek(3, 'THURSDAY');
      DayOfWeek.FRIDAY = new DayOfWeek(4, 'FRIDAY');
      DayOfWeek.SATURDAY = new DayOfWeek(5, 'SATURDAY');
      DayOfWeek.SUNDAY = new DayOfWeek(6, 'SUNDAY');
      DayOfWeek.FROM = createTemporalQuery('DayOfWeek.FROM', function (temporal) {
        return DayOfWeek.from(temporal);
      });
      ENUMS = [DayOfWeek.MONDAY, DayOfWeek.TUESDAY, DayOfWeek.WEDNESDAY, DayOfWeek.THURSDAY, DayOfWeek.FRIDAY, DayOfWeek.SATURDAY, DayOfWeek.SUNDAY];
    }

    var Month = function (_TemporalAccessor) {
      _inheritsLoose(Month, _TemporalAccessor);

      function Month(value, name) {
        var _this;

        _this = _TemporalAccessor.call(this) || this;
        _this._value = MathUtil.safeToInt(value);
        _this._name = name;
        return _this;
      }

      var _proto = Month.prototype;

      _proto.value = function value() {
        return this._value;
      };

      _proto.ordinal = function ordinal() {
        return this._value - 1;
      };

      _proto.name = function name() {
        return this._name;
      };

      _proto.displayName = function displayName(style, locale) {
        throw new IllegalArgumentException('Pattern using (localized) text not implemented yet!');
      };

      _proto.isSupported = function isSupported(field) {
        if (null === field) {
          return false;
        }

        if (field instanceof ChronoField) {
          return field === ChronoField.MONTH_OF_YEAR;
        }

        return field != null && field.isSupportedBy(this);
      };

      _proto.get = function get(field) {
        if (field === ChronoField.MONTH_OF_YEAR) {
          return this.value();
        }

        return this.range(field).checkValidIntValue(this.getLong(field), field);
      };

      _proto.getLong = function getLong(field) {
        if (field === ChronoField.MONTH_OF_YEAR) {
          return this.value();
        } else if (field instanceof ChronoField) {
          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.getFrom(this);
      };

      _proto.plus = function plus(months) {
        var amount = MathUtil.intMod(months, 12) + 12;
        var newMonthVal = MathUtil.intMod(this.value() + amount, 12);
        newMonthVal = newMonthVal === 0 ? 12 : newMonthVal;
        return Month.of(newMonthVal);
      };

      _proto.minus = function minus(months) {
        return this.plus(-1 * MathUtil.intMod(months, 12));
      };

      _proto.length = function length(leapYear) {
        switch (this) {
          case Month.FEBRUARY:
            return leapYear ? 29 : 28;

          case Month.APRIL:
          case Month.JUNE:
          case Month.SEPTEMBER:
          case Month.NOVEMBER:
            return 30;

          default:
            return 31;
        }
      };

      _proto.minLength = function minLength() {
        switch (this) {
          case Month.FEBRUARY:
            return 28;

          case Month.APRIL:
          case Month.JUNE:
          case Month.SEPTEMBER:
          case Month.NOVEMBER:
            return 30;

          default:
            return 31;
        }
      };

      _proto.maxLength = function maxLength() {
        switch (this) {
          case Month.FEBRUARY:
            return 29;

          case Month.APRIL:
          case Month.JUNE:
          case Month.SEPTEMBER:
          case Month.NOVEMBER:
            return 30;

          default:
            return 31;
        }
      };

      _proto.firstDayOfYear = function firstDayOfYear(leapYear) {
        var leap = leapYear ? 1 : 0;

        switch (this) {
          case Month.JANUARY:
            return 1;

          case Month.FEBRUARY:
            return 32;

          case Month.MARCH:
            return 60 + leap;

          case Month.APRIL:
            return 91 + leap;

          case Month.MAY:
            return 121 + leap;

          case Month.JUNE:
            return 152 + leap;

          case Month.JULY:
            return 182 + leap;

          case Month.AUGUST:
            return 213 + leap;

          case Month.SEPTEMBER:
            return 244 + leap;

          case Month.OCTOBER:
            return 274 + leap;

          case Month.NOVEMBER:
            return 305 + leap;

          case Month.DECEMBER:
          default:
            return 335 + leap;
        }
      };

      _proto.firstMonthOfQuarter = function firstMonthOfQuarter() {
        switch (this) {
          case Month.JANUARY:
          case Month.FEBRUARY:
          case Month.MARCH:
            return Month.JANUARY;

          case Month.APRIL:
          case Month.MAY:
          case Month.JUNE:
            return Month.APRIL;

          case Month.JULY:
          case Month.AUGUST:
          case Month.SEPTEMBER:
            return Month.JULY;

          case Month.OCTOBER:
          case Month.NOVEMBER:
          case Month.DECEMBER:
          default:
            return Month.OCTOBER;
        }
      };

      _proto.query = function query(_query) {
        assert(_query != null, 'query() parameter must not be null', DateTimeException);

        if (_query === TemporalQueries.chronology()) {
          return IsoChronology.INSTANCE;
        } else if (_query === TemporalQueries.precision()) {
          return ChronoUnit.MONTHS;
        }

        return _TemporalAccessor.prototype.query.call(this, _query);
      };

      _proto.toString = function toString() {
        switch (this) {
          case Month.JANUARY:
            return 'JANUARY';

          case Month.FEBRUARY:
            return 'FEBRUARY';

          case Month.MARCH:
            return 'MARCH';

          case Month.APRIL:
            return 'APRIL';

          case Month.MAY:
            return 'MAY';

          case Month.JUNE:
            return 'JUNE';

          case Month.JULY:
            return 'JULY';

          case Month.AUGUST:
            return 'AUGUST';

          case Month.SEPTEMBER:
            return 'SEPTEMBER';

          case Month.OCTOBER:
            return 'OCTOBER';

          case Month.NOVEMBER:
            return 'NOVEMBER';

          case Month.DECEMBER:
            return 'DECEMBER';

          default:
            return 'unknown Month, value: ' + this.value();
        }
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      _proto.adjustInto = function adjustInto(temporal) {
        return temporal.with(ChronoField.MONTH_OF_YEAR, this.value());
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        requireInstance(other, Month, 'other');
        return this._value - other._value;
      };

      _proto.equals = function equals(other) {
        return this === other;
      };

      Month.valueOf = function valueOf(name) {
        var ordinal = 0;

        for (ordinal; ordinal < MONTHS.length; ordinal++) {
          if (MONTHS[ordinal].name() === name) {
            break;
          }
        }

        return Month.of(ordinal + 1);
      };

      Month.values = function values() {
        return MONTHS.slice();
      };

      Month.of = function of(month) {
        if (month < 1 || month > 12) {
          assert(false, 'Invalid value for MonthOfYear: ' + month, DateTimeException);
        }

        return MONTHS[month - 1];
      };

      Month.from = function from(temporal) {
        if (temporal instanceof Month) {
          return temporal;
        }

        try {
          return Month.of(temporal.get(ChronoField.MONTH_OF_YEAR));
        } catch (ex) {
          throw new DateTimeException('Unable to obtain Month from TemporalAccessor: ' + temporal + ' of type ' + (temporal && temporal.constructor != null ? temporal.constructor.name : ''), ex);
        }
      };

      return Month;
    }(TemporalAccessor);
    var MONTHS;
    function _init$5() {
      Month.JANUARY = new Month(1, 'JANUARY');
      Month.FEBRUARY = new Month(2, 'FEBRUARY');
      Month.MARCH = new Month(3, 'MARCH');
      Month.APRIL = new Month(4, 'APRIL');
      Month.MAY = new Month(5, 'MAY');
      Month.JUNE = new Month(6, 'JUNE');
      Month.JULY = new Month(7, 'JULY');
      Month.AUGUST = new Month(8, 'AUGUST');
      Month.SEPTEMBER = new Month(9, 'SEPTEMBER');
      Month.OCTOBER = new Month(10, 'OCTOBER');
      Month.NOVEMBER = new Month(11, 'NOVEMBER');
      Month.DECEMBER = new Month(12, 'DECEMBER');
      MONTHS = [Month.JANUARY, Month.FEBRUARY, Month.MARCH, Month.APRIL, Month.MAY, Month.JUNE, Month.JULY, Month.AUGUST, Month.SEPTEMBER, Month.OCTOBER, Month.NOVEMBER, Month.DECEMBER];
    }

    var PATTERN = /([-+]?)P(?:([-+]?[0-9]+)Y)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)W)?(?:([-+]?[0-9]+)D)?/;
    var Period = function (_TemporalAmount) {
      _inheritsLoose(Period, _TemporalAmount);

      function Period(years, months, days) {
        var _this;

        _this = _TemporalAmount.call(this) || this;

        var _years = MathUtil.safeToInt(years);

        var _months = MathUtil.safeToInt(months);

        var _days = MathUtil.safeToInt(days);

        if (_years === 0 && _months === 0 && _days === 0) {
          if (!Period.ZERO) {
            _this._years = _years;
            _this._months = _months;
            _this._days = _days;
            Period.ZERO = _assertThisInitialized(_this);
          }

          return Period.ZERO || _assertThisInitialized(_this);
        }

        _this._years = _years;
        _this._months = _months;
        _this._days = _days;
        return _this;
      }

      Period.ofYears = function ofYears(years) {
        return Period.create(years, 0, 0);
      };

      Period.ofMonths = function ofMonths(months) {
        return Period.create(0, months, 0);
      };

      Period.ofWeeks = function ofWeeks(weeks) {
        return Period.create(0, 0, MathUtil.safeMultiply(weeks, 7));
      };

      Period.ofDays = function ofDays(days) {
        return Period.create(0, 0, days);
      };

      Period.of = function of(years, months, days) {
        return Period.create(years, months, days);
      };

      Period.from = function from(amount) {
        if (amount instanceof Period) {
          return amount;
        }

        requireNonNull(amount, 'amount');
        var years = 0;
        var months = 0;
        var days = 0;
        var units = amount.units();

        for (var i = 0; i < units.length; i++) {
          var unit = units[i];
          var unitAmount = amount.get(unit);

          if (unit === ChronoUnit.YEARS) {
            years = MathUtil.safeToInt(unitAmount);
          } else if (unit === ChronoUnit.MONTHS) {
            months = MathUtil.safeToInt(unitAmount);
          } else if (unit === ChronoUnit.DAYS) {
            days = MathUtil.safeToInt(unitAmount);
          } else {
            throw new DateTimeException('Unit must be Years, Months or Days, but was ' + unit);
          }
        }

        return Period.create(years, months, days);
      };

      Period.between = function between(startDate, endDate) {
        requireNonNull(startDate, 'startDate');
        requireNonNull(endDate, 'endDate');
        requireInstance(startDate, LocalDate, 'startDate');
        requireInstance(endDate, LocalDate, 'endDate');
        return startDate.until(endDate);
      };

      Period.parse = function parse(text) {
        requireNonNull(text, 'text');

        try {
          return Period._parse(text);
        } catch (ex) {
          if (ex instanceof ArithmeticException) {
            throw new DateTimeParseException('Text cannot be parsed to a Period', text, 0, ex);
          } else {
            throw ex;
          }
        }
      };

      Period._parse = function _parse(text) {
        var matches = PATTERN.exec(text);

        if (matches != null) {
          var negate = '-' === matches[1] ? -1 : 1;
          var yearMatch = matches[2];
          var monthMatch = matches[3];
          var weekMatch = matches[4];
          var dayMatch = matches[5];

          if (yearMatch != null || monthMatch != null || weekMatch != null || dayMatch != null) {
            var years = Period._parseNumber(text, yearMatch, negate);

            var months = Period._parseNumber(text, monthMatch, negate);

            var weeks = Period._parseNumber(text, weekMatch, negate);

            var days = Period._parseNumber(text, dayMatch, negate);

            days = MathUtil.safeAdd(days, MathUtil.safeMultiply(weeks, 7));
            return Period.create(years, months, days);
          }
        }

        throw new DateTimeParseException('Text cannot be parsed to a Period', text, 0);
      };

      Period._parseNumber = function _parseNumber(text, str, negate) {
        if (str == null) {
          return 0;
        }

        var val = MathUtil.parseInt(str);
        return MathUtil.safeMultiply(val, negate);
      };

      Period.create = function create(years, months, days) {
        return new Period(years, months, days);
      };

      var _proto = Period.prototype;

      _proto.units = function units() {
        return [ChronoUnit.YEARS, ChronoUnit.MONTHS, ChronoUnit.DAYS];
      };

      _proto.chronology = function chronology() {
        return IsoChronology.INSTANCE;
      };

      _proto.get = function get(unit) {
        if (unit === ChronoUnit.YEARS) {
          return this._years;
        }

        if (unit === ChronoUnit.MONTHS) {
          return this._months;
        }

        if (unit === ChronoUnit.DAYS) {
          return this._days;
        }

        throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
      };

      _proto.isZero = function isZero() {
        return this === Period.ZERO;
      };

      _proto.isNegative = function isNegative() {
        return this._years < 0 || this._months < 0 || this._days < 0;
      };

      _proto.years = function years() {
        return this._years;
      };

      _proto.months = function months() {
        return this._months;
      };

      _proto.days = function days() {
        return this._days;
      };

      _proto.withYears = function withYears(years) {
        if (years === this._years) {
          return this;
        }

        return Period.create(years, this._months, this._days);
      };

      _proto.withMonths = function withMonths(months) {
        if (months === this._months) {
          return this;
        }

        return Period.create(this._years, months, this._days);
      };

      _proto.withDays = function withDays(days) {
        if (days === this._days) {
          return this;
        }

        return Period.create(this._years, this._months, days);
      };

      _proto.plus = function plus(amountToAdd) {
        var amount = Period.from(amountToAdd);
        return Period.create(MathUtil.safeAdd(this._years, amount._years), MathUtil.safeAdd(this._months, amount._months), MathUtil.safeAdd(this._days, amount._days));
      };

      _proto.plusYears = function plusYears(yearsToAdd) {
        if (yearsToAdd === 0) {
          return this;
        }

        return Period.create(MathUtil.safeToInt(MathUtil.safeAdd(this._years, yearsToAdd)), this._months, this._days);
      };

      _proto.plusMonths = function plusMonths(monthsToAdd) {
        if (monthsToAdd === 0) {
          return this;
        }

        return Period.create(this._years, MathUtil.safeToInt(MathUtil.safeAdd(this._months, monthsToAdd)), this._days);
      };

      _proto.plusDays = function plusDays(daysToAdd) {
        if (daysToAdd === 0) {
          return this;
        }

        return Period.create(this._years, this._months, MathUtil.safeToInt(MathUtil.safeAdd(this._days, daysToAdd)));
      };

      _proto.minus = function minus(amountToSubtract) {
        var amount = Period.from(amountToSubtract);
        return Period.create(MathUtil.safeSubtract(this._years, amount._years), MathUtil.safeSubtract(this._months, amount._months), MathUtil.safeSubtract(this._days, amount._days));
      };

      _proto.minusYears = function minusYears(yearsToSubtract) {
        return this.plusYears(-1 * yearsToSubtract);
      };

      _proto.minusMonths = function minusMonths(monthsToSubtract) {
        return this.plusMonths(-1 * monthsToSubtract);
      };

      _proto.minusDays = function minusDays(daysToSubtract) {
        return this.plusDays(-1 * daysToSubtract);
      };

      _proto.multipliedBy = function multipliedBy(scalar) {
        if (this === Period.ZERO || scalar === 1) {
          return this;
        }

        return Period.create(MathUtil.safeMultiply(this._years, scalar), MathUtil.safeMultiply(this._months, scalar), MathUtil.safeMultiply(this._days, scalar));
      };

      _proto.negated = function negated() {
        return this.multipliedBy(-1);
      };

      _proto.normalized = function normalized() {
        var totalMonths = this.toTotalMonths();
        var splitYears = MathUtil.intDiv(totalMonths, 12);
        var splitMonths = MathUtil.intMod(totalMonths, 12);

        if (splitYears === this._years && splitMonths === this._months) {
          return this;
        }

        return Period.create(MathUtil.safeToInt(splitYears), splitMonths, this._days);
      };

      _proto.toTotalMonths = function toTotalMonths() {
        return this._years * 12 + this._months;
      };

      _proto.addTo = function addTo(temporal) {
        requireNonNull(temporal, 'temporal');

        if (this._years !== 0) {
          if (this._months !== 0) {
            temporal = temporal.plus(this.toTotalMonths(), ChronoUnit.MONTHS);
          } else {
            temporal = temporal.plus(this._years, ChronoUnit.YEARS);
          }
        } else if (this._months !== 0) {
          temporal = temporal.plus(this._months, ChronoUnit.MONTHS);
        }

        if (this._days !== 0) {
          temporal = temporal.plus(this._days, ChronoUnit.DAYS);
        }

        return temporal;
      };

      _proto.subtractFrom = function subtractFrom(temporal) {
        requireNonNull(temporal, 'temporal');

        if (this._years !== 0) {
          if (this._months !== 0) {
            temporal = temporal.minus(this.toTotalMonths(), ChronoUnit.MONTHS);
          } else {
            temporal = temporal.minus(this._years, ChronoUnit.YEARS);
          }
        } else if (this._months !== 0) {
          temporal = temporal.minus(this._months, ChronoUnit.MONTHS);
        }

        if (this._days !== 0) {
          temporal = temporal.minus(this._days, ChronoUnit.DAYS);
        }

        return temporal;
      };

      _proto.equals = function equals(obj) {
        if (this === obj) {
          return true;
        }

        if (obj instanceof Period) {
          var other = obj;
          return this._years === other._years && this._months === other._months && this._days === other._days;
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return MathUtil.hashCode(this._years, this._months, this._days);
      };

      _proto.toString = function toString() {
        if (this === Period.ZERO) {
          return 'P0D';
        } else {
          var buf = 'P';

          if (this._years !== 0) {
            buf += '' + this._years + 'Y';
          }

          if (this._months !== 0) {
            buf += '' + this._months + 'M';
          }

          if (this._days !== 0) {
            buf += '' + this._days + 'D';
          }

          return buf;
        }
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      return Period;
    }(TemporalAmount);
    function _init$6() {
      Period.ofDays(0);
    }

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var ParsePosition = function () {
      function ParsePosition(index) {
        this._index = index;
        this._errorIndex = -1;
      }

      var _proto = ParsePosition.prototype;

      _proto.getIndex = function getIndex() {
        return this._index;
      };

      _proto.setIndex = function setIndex(index) {
        this._index = index;
      };

      _proto.getErrorIndex = function getErrorIndex() {
        return this._errorIndex;
      };

      _proto.setErrorIndex = function setErrorIndex(errorIndex) {
        this._errorIndex = errorIndex;
      };

      return ParsePosition;
    }();

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var EnumMap = function () {
      function EnumMap() {
        this._map = {};
      }

      var _proto = EnumMap.prototype;

      _proto.putAll = function putAll(otherMap) {
        for (var key in otherMap._map) {
          this._map[key] = otherMap._map[key];
        }

        return this;
      };

      _proto.containsKey = function containsKey(key) {
        return this._map.hasOwnProperty(key.name()) && this.get(key) !== undefined;
      };

      _proto.get = function get(key) {
        return this._map[key.name()];
      };

      _proto.put = function put(key, val) {
        return this.set(key, val);
      };

      _proto.set = function set(key, val) {
        this._map[key.name()] = val;
        return this;
      };

      _proto.retainAll = function retainAll(keyList) {
        var map = {};

        for (var i = 0; i < keyList.length; i++) {
          var key = keyList[i].name();
          map[key] = this._map[key];
        }

        this._map = map;
        return this;
      };

      _proto.remove = function remove(key) {
        var keyName = key.name();
        var val = this._map[keyName];
        this._map[keyName] = undefined;
        return val;
      };

      _proto.keySet = function keySet() {
        return this._map;
      };

      _proto.clear = function clear() {
        this._map = {};
      };

      return EnumMap;
    }();

    var ResolverStyle = function (_Enum) {
      _inheritsLoose(ResolverStyle, _Enum);

      function ResolverStyle() {
        return _Enum.apply(this, arguments) || this;
      }

      return ResolverStyle;
    }(Enum);
    ResolverStyle.STRICT = new ResolverStyle('STRICT');
    ResolverStyle.SMART = new ResolverStyle('SMART');
    ResolverStyle.LENIENT = new ResolverStyle('LENIENT');

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var TemporalAdjuster = function () {
      function TemporalAdjuster() {}

      var _proto = TemporalAdjuster.prototype;

      _proto.adjustInto = function adjustInto(temporal) {
        abstractMethodFail('adjustInto');
      };

      return TemporalAdjuster;
    }();

    var Temporal = function (_TemporalAccessor) {
      _inheritsLoose(Temporal, _TemporalAccessor);

      function Temporal() {
        return _TemporalAccessor.apply(this, arguments) || this;
      }

      var _proto = Temporal.prototype;

      _proto.isSupported = function isSupported(unit) {
        abstractMethodFail('isSupported');
      };

      _proto.minus = function minus(p1, p2) {
        if (arguments.length < 2) {
          return this.minusAmount(p1);
        } else {
          return this.minusAmountUnit(p1, p2);
        }
      };

      _proto.minusAmount = function minusAmount(amount) {
        abstractMethodFail('minusAmount');
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        abstractMethodFail('minusAmountUnit');
      };

      _proto.plus = function plus(p1, p2) {
        if (arguments.length < 2) {
          return this.plusAmount(p1);
        } else {
          return this.plusAmountUnit(p1, p2);
        }
      };

      _proto.plusAmount = function plusAmount(amount) {
        abstractMethodFail('plusAmount');
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        abstractMethodFail('plusAmountUnit');
      };

      _proto.until = function until(endTemporal, unit) {
        abstractMethodFail('until');
      };

      _proto.with = function _with(p1, p2) {
        if (arguments.length < 2) {
          return this.withAdjuster(p1);
        } else {
          return this.withFieldValue(p1, p2);
        }
      };

      _proto.withAdjuster = function withAdjuster(adjuster) {
        abstractMethodFail('withAdjuster');
      };

      _proto.withFieldValue = function withFieldValue(field, newValue) {
        abstractMethodFail('withFieldValue');
      };

      return Temporal;
    }(TemporalAccessor);

    var DefaultInterfaceTemporal = function (_Temporal) {
      _inheritsLoose(DefaultInterfaceTemporal, _Temporal);

      function DefaultInterfaceTemporal() {
        return _Temporal.apply(this, arguments) || this;
      }

      var _proto = DefaultInterfaceTemporal.prototype;

      _proto.withAdjuster = function withAdjuster(adjuster) {
        requireNonNull(adjuster, 'adjuster');
        requireInstance(adjuster, TemporalAdjuster, 'adjuster');
        return adjuster.adjustInto(this);
      };

      _proto.plusAmount = function plusAmount(amount) {
        requireNonNull(amount, 'amount');
        requireInstance(amount, TemporalAmount, 'amount');
        return amount.addTo(this);
      };

      _proto.minusAmount = function minusAmount(amount) {
        requireNonNull(amount, 'amount');
        requireInstance(amount, TemporalAmount, 'amount');
        return amount.subtractFrom(this);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        requireNonNull(amountToSubtract, 'amountToSubtract');
        requireNonNull(unit, 'unit');
        requireInstance(unit, TemporalUnit, 'unit');
        return amountToSubtract === MIN_SAFE_INTEGER ? this.plusAmountUnit(MAX_SAFE_INTEGER, unit).plusAmountUnit(1, unit) : this.plusAmount(-amountToSubtract, unit);
      };

      return DefaultInterfaceTemporal;
    }(Temporal);

    var ChronoLocalDate = function (_DefaultInterfaceTemp) {
      _inheritsLoose(ChronoLocalDate, _DefaultInterfaceTemp);

      function ChronoLocalDate() {
        return _DefaultInterfaceTemp.apply(this, arguments) || this;
      }

      var _proto = ChronoLocalDate.prototype;

      _proto.isSupported = function isSupported(fieldOrUnit) {
        if (fieldOrUnit instanceof ChronoField) {
          return fieldOrUnit.isDateBased();
        } else if (fieldOrUnit instanceof ChronoUnit) {
          return fieldOrUnit.isDateBased();
        }

        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
      };

      _proto.query = function query(_query) {
        if (_query === TemporalQueries.chronology()) {
          return this.chronology();
        } else if (_query === TemporalQueries.precision()) {
          return ChronoUnit.DAYS;
        } else if (_query === TemporalQueries.localDate()) {
          return LocalDate.ofEpochDay(this.toEpochDay());
        } else if (_query === TemporalQueries.localTime() || _query === TemporalQueries.zone() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.offset()) {
          return null;
        }

        return _DefaultInterfaceTemp.prototype.query.call(this, _query);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        return temporal.with(ChronoField.EPOCH_DAY, this.toEpochDay());
      };

      _proto.format = function format(formatter) {
        requireNonNull(formatter, 'formatter');
        requireInstance(formatter, DateTimeFormatter, 'formatter');
        return formatter.format(this);
      };

      return ChronoLocalDate;
    }(DefaultInterfaceTemporal);

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var StringUtil = function () {
      function StringUtil() {}

      StringUtil.startsWith = function startsWith(text, pattern) {
        return text.indexOf(pattern) === 0;
      };

      StringUtil.hashCode = function hashCode(text) {
        var len = text.length;

        if (len === 0) {
          return 0;
        }

        var hash = 0;

        for (var i = 0; i < len; i++) {
          var chr = text.charCodeAt(i);
          hash = (hash << 5) - hash + chr;
          hash |= 0;
        }

        return MathUtil.smi(hash);
      };

      return StringUtil;
    }();

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var ZoneId = function () {
      function ZoneId() {}

      ZoneId.systemDefault = function systemDefault() {
        throw new DateTimeException('not supported operation');
      };

      ZoneId.getAvailableZoneIds = function getAvailableZoneIds() {
        throw new DateTimeException('not supported operation');
      };

      ZoneId.of = function of(zoneId) {
        throw new DateTimeException('not supported operation' + zoneId);
      };

      ZoneId.ofOffset = function ofOffset(prefix, offset) {
        throw new DateTimeException('not supported operation' + prefix + offset);
      };

      ZoneId.from = function from(temporal) {
        throw new DateTimeException('not supported operation' + temporal);
      };

      var _proto = ZoneId.prototype;

      _proto.id = function id() {
        abstractMethodFail('ZoneId.id');
      };

      _proto.rules = function rules() {
        abstractMethodFail('ZoneId.rules');
      };

      _proto.normalized = function normalized() {
        var rules = this.rules();

        if (rules.isFixedOffset()) {
          return rules.offset(Instant.EPOCH);
        }

        return this;
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof ZoneId) {
          return this.id() === other.id();
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return StringUtil.hashCode(this.id());
      };

      _proto.toString = function toString() {
        return this.id();
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      return ZoneId;
    }();

    var ZoneRules = function () {
      function ZoneRules() {}

      ZoneRules.of = function of(offset) {
        requireNonNull(offset, 'offset');
        return new Fixed(offset);
      };

      var _proto = ZoneRules.prototype;

      _proto.isFixedOffset = function isFixedOffset() {
        abstractMethodFail('ZoneRules.isFixedOffset');
      };

      _proto.offset = function offset(instantOrLocalDateTime) {
        if (instantOrLocalDateTime instanceof Instant) {
          return this.offsetOfInstant(instantOrLocalDateTime);
        } else {
          return this.offsetOfLocalDateTime(instantOrLocalDateTime);
        }
      };

      _proto.offsetOfInstant = function offsetOfInstant(instant) {
        abstractMethodFail('ZoneRules.offsetInstant');
      };

      _proto.offsetOfEpochMilli = function offsetOfEpochMilli(epochMilli) {
        abstractMethodFail('ZoneRules.offsetOfEpochMilli');
      };

      _proto.offsetOfLocalDateTime = function offsetOfLocalDateTime(localDateTime) {
        abstractMethodFail('ZoneRules.offsetLocalDateTime');
      };

      _proto.validOffsets = function validOffsets(localDateTime) {
        abstractMethodFail('ZoneRules.validOffsets');
      };

      _proto.transition = function transition(localDateTime) {
        abstractMethodFail('ZoneRules.transition');
      };

      _proto.standardOffset = function standardOffset(instant) {
        abstractMethodFail('ZoneRules.standardOffset');
      };

      _proto.daylightSavings = function daylightSavings(instant) {
        abstractMethodFail('ZoneRules.daylightSavings');
      };

      _proto.isDaylightSavings = function isDaylightSavings(instant) {
        abstractMethodFail('ZoneRules.isDaylightSavings');
      };

      _proto.isValidOffset = function isValidOffset(localDateTime, offset) {
        abstractMethodFail('ZoneRules.isValidOffset');
      };

      _proto.nextTransition = function nextTransition(instant) {
        abstractMethodFail('ZoneRules.nextTransition');
      };

      _proto.previousTransition = function previousTransition(instant) {
        abstractMethodFail('ZoneRules.previousTransition');
      };

      _proto.transitions = function transitions() {
        abstractMethodFail('ZoneRules.transitions');
      };

      _proto.transitionRules = function transitionRules() {
        abstractMethodFail('ZoneRules.transitionRules');
      };

      _proto.toString = function toString() {
        abstractMethodFail('ZoneRules.toString');
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      return ZoneRules;
    }();

    var Fixed = function (_ZoneRules) {
      _inheritsLoose(Fixed, _ZoneRules);

      function Fixed(offset) {
        var _this;

        _this = _ZoneRules.call(this) || this;
        _this._offset = offset;
        return _this;
      }

      var _proto2 = Fixed.prototype;

      _proto2.isFixedOffset = function isFixedOffset() {
        return true;
      };

      _proto2.offsetOfInstant = function offsetOfInstant() {
        return this._offset;
      };

      _proto2.offsetOfEpochMilli = function offsetOfEpochMilli() {
        return this._offset;
      };

      _proto2.offsetOfLocalDateTime = function offsetOfLocalDateTime() {
        return this._offset;
      };

      _proto2.validOffsets = function validOffsets() {
        return [this._offset];
      };

      _proto2.transition = function transition() {
        return null;
      };

      _proto2.standardOffset = function standardOffset() {
        return this._offset;
      };

      _proto2.daylightSavings = function daylightSavings() {
        return Duration.ZERO;
      };

      _proto2.isDaylightSavings = function isDaylightSavings() {
        return false;
      };

      _proto2.isValidOffset = function isValidOffset(localDateTime, offset) {
        return this._offset.equals(offset);
      };

      _proto2.nextTransition = function nextTransition() {
        return null;
      };

      _proto2.previousTransition = function previousTransition() {
        return null;
      };

      _proto2.transitions = function transitions() {
        return [];
      };

      _proto2.transitionRules = function transitionRules() {
        return [];
      };

      _proto2.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof Fixed) {
          return this._offset.equals(other._offset);
        }

        return false;
      };

      _proto2.toString = function toString() {
        return 'FixedRules:' + this._offset.toString();
      };

      return Fixed;
    }(ZoneRules);

    var SECONDS_CACHE = {};
    var ID_CACHE = {};
    var ZoneOffset = function (_ZoneId) {
      _inheritsLoose(ZoneOffset, _ZoneId);

      function ZoneOffset(totalSeconds) {
        var _this;

        _this = _ZoneId.call(this) || this;

        ZoneOffset._validateTotalSeconds(totalSeconds);

        _this._totalSeconds = MathUtil.safeToInt(totalSeconds);
        _this._rules = ZoneRules.of(_assertThisInitialized(_this));
        _this._id = ZoneOffset._buildId(totalSeconds);
        return _this;
      }

      var _proto = ZoneOffset.prototype;

      _proto.totalSeconds = function totalSeconds() {
        return this._totalSeconds;
      };

      _proto.id = function id() {
        return this._id;
      };

      ZoneOffset._buildId = function _buildId(totalSeconds) {
        if (totalSeconds === 0) {
          return 'Z';
        } else {
          var absTotalSeconds = Math.abs(totalSeconds);
          var absHours = MathUtil.intDiv(absTotalSeconds, LocalTime.SECONDS_PER_HOUR);
          var absMinutes = MathUtil.intMod(MathUtil.intDiv(absTotalSeconds, LocalTime.SECONDS_PER_MINUTE), LocalTime.MINUTES_PER_HOUR);
          var buf = '' + (totalSeconds < 0 ? '-' : '+') + (absHours < 10 ? '0' : '') + absHours + (absMinutes < 10 ? ':0' : ':') + absMinutes;
          var absSeconds = MathUtil.intMod(absTotalSeconds, LocalTime.SECONDS_PER_MINUTE);

          if (absSeconds !== 0) {
            buf += (absSeconds < 10 ? ':0' : ':') + absSeconds;
          }

          return buf;
        }
      };

      ZoneOffset._validateTotalSeconds = function _validateTotalSeconds(totalSeconds) {
        if (Math.abs(totalSeconds) > ZoneOffset.MAX_SECONDS) {
          throw new DateTimeException('Zone offset not in valid range: -18:00 to +18:00');
        }
      };

      ZoneOffset._validate = function _validate(hours, minutes, seconds) {
        if (hours < -18 || hours > 18) {
          throw new DateTimeException('Zone offset hours not in valid range: value ' + hours + ' is not in the range -18 to 18');
        }

        if (hours > 0) {
          if (minutes < 0 || seconds < 0) {
            throw new DateTimeException('Zone offset minutes and seconds must be positive because hours is positive');
          }
        } else if (hours < 0) {
          if (minutes > 0 || seconds > 0) {
            throw new DateTimeException('Zone offset minutes and seconds must be negative because hours is negative');
          }
        } else if (minutes > 0 && seconds < 0 || minutes < 0 && seconds > 0) {
          throw new DateTimeException('Zone offset minutes and seconds must have the same sign');
        }

        if (Math.abs(minutes) > 59) {
          throw new DateTimeException('Zone offset minutes not in valid range: abs(value) ' + Math.abs(minutes) + ' is not in the range 0 to 59');
        }

        if (Math.abs(seconds) > 59) {
          throw new DateTimeException('Zone offset seconds not in valid range: abs(value) ' + Math.abs(seconds) + ' is not in the range 0 to 59');
        }

        if (Math.abs(hours) === 18 && (Math.abs(minutes) > 0 || Math.abs(seconds) > 0)) {
          throw new DateTimeException('Zone offset not in valid range: -18:00 to +18:00');
        }
      };

      ZoneOffset.of = function of(offsetId) {
        requireNonNull(offsetId, 'offsetId');
        var offset = ID_CACHE[offsetId];

        if (offset != null) {
          return offset;
        }

        var hours, minutes, seconds;

        switch (offsetId.length) {
          case 2:
            offsetId = offsetId[0] + '0' + offsetId[1];

          case 3:
            hours = ZoneOffset._parseNumber(offsetId, 1, false);
            minutes = 0;
            seconds = 0;
            break;

          case 5:
            hours = ZoneOffset._parseNumber(offsetId, 1, false);
            minutes = ZoneOffset._parseNumber(offsetId, 3, false);
            seconds = 0;
            break;

          case 6:
            hours = ZoneOffset._parseNumber(offsetId, 1, false);
            minutes = ZoneOffset._parseNumber(offsetId, 4, true);
            seconds = 0;
            break;

          case 7:
            hours = ZoneOffset._parseNumber(offsetId, 1, false);
            minutes = ZoneOffset._parseNumber(offsetId, 3, false);
            seconds = ZoneOffset._parseNumber(offsetId, 5, false);
            break;

          case 9:
            hours = ZoneOffset._parseNumber(offsetId, 1, false);
            minutes = ZoneOffset._parseNumber(offsetId, 4, true);
            seconds = ZoneOffset._parseNumber(offsetId, 7, true);
            break;

          default:
            throw new DateTimeException('Invalid ID for ZoneOffset, invalid format: ' + offsetId);
        }

        var first = offsetId[0];

        if (first !== '+' && first !== '-') {
          throw new DateTimeException('Invalid ID for ZoneOffset, plus/minus not found when expected: ' + offsetId);
        }

        if (first === '-') {
          return ZoneOffset.ofHoursMinutesSeconds(-hours, -minutes, -seconds);
        } else {
          return ZoneOffset.ofHoursMinutesSeconds(hours, minutes, seconds);
        }
      };

      ZoneOffset._parseNumber = function _parseNumber(offsetId, pos, precededByColon) {
        if (precededByColon && offsetId[pos - 1] !== ':') {
          throw new DateTimeException('Invalid ID for ZoneOffset, colon not found when expected: ' + offsetId);
        }

        var ch1 = offsetId[pos];
        var ch2 = offsetId[pos + 1];

        if (ch1 < '0' || ch1 > '9' || ch2 < '0' || ch2 > '9') {
          throw new DateTimeException('Invalid ID for ZoneOffset, non numeric characters found: ' + offsetId);
        }

        return (ch1.charCodeAt(0) - 48) * 10 + (ch2.charCodeAt(0) - 48);
      };

      ZoneOffset.ofHours = function ofHours(hours) {
        return ZoneOffset.ofHoursMinutesSeconds(hours, 0, 0);
      };

      ZoneOffset.ofHoursMinutes = function ofHoursMinutes(hours, minutes) {
        return ZoneOffset.ofHoursMinutesSeconds(hours, minutes, 0);
      };

      ZoneOffset.ofHoursMinutesSeconds = function ofHoursMinutesSeconds(hours, minutes, seconds) {
        ZoneOffset._validate(hours, minutes, seconds);

        var totalSeconds = hours * LocalTime.SECONDS_PER_HOUR + minutes * LocalTime.SECONDS_PER_MINUTE + seconds;
        return ZoneOffset.ofTotalSeconds(totalSeconds);
      };

      ZoneOffset.ofTotalMinutes = function ofTotalMinutes(totalMinutes) {
        var totalSeconds = totalMinutes * LocalTime.SECONDS_PER_MINUTE;
        return ZoneOffset.ofTotalSeconds(totalSeconds);
      };

      ZoneOffset.ofTotalSeconds = function ofTotalSeconds(totalSeconds) {
        if (totalSeconds % (15 * LocalTime.SECONDS_PER_MINUTE) === 0) {
          var totalSecs = totalSeconds;
          var result = SECONDS_CACHE[totalSecs];

          if (result == null) {
            result = new ZoneOffset(totalSeconds);
            SECONDS_CACHE[totalSecs] = result;
            ID_CACHE[result.id()] = result;
          }

          return result;
        } else {
          return new ZoneOffset(totalSeconds);
        }
      };

      _proto.rules = function rules() {
        return this._rules;
      };

      _proto.get = function get(field) {
        return this.getLong(field);
      };

      _proto.getLong = function getLong(field) {
        if (field === ChronoField.OFFSET_SECONDS) {
          return this._totalSeconds;
        } else if (field instanceof ChronoField) {
          throw new DateTimeException('Unsupported field: ' + field);
        }

        return field.getFrom(this);
      };

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query');

        if (_query === TemporalQueries.offset() || _query === TemporalQueries.zone()) {
          return this;
        } else if (_query === TemporalQueries.localDate() || _query === TemporalQueries.localTime() || _query === TemporalQueries.precision() || _query === TemporalQueries.chronology() || _query === TemporalQueries.zoneId()) {
          return null;
        }

        return _query.queryFrom(this);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        return temporal.with(ChronoField.OFFSET_SECONDS, this._totalSeconds);
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        return other._totalSeconds - this._totalSeconds;
      };

      _proto.equals = function equals(obj) {
        if (this === obj) {
          return true;
        }

        if (obj instanceof ZoneOffset) {
          return this._totalSeconds === obj._totalSeconds;
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return this._totalSeconds;
      };

      _proto.toString = function toString() {
        return this._id;
      };

      return ZoneOffset;
    }(ZoneId);
    function _init$7() {
      ZoneOffset.MAX_SECONDS = 18 * LocalTime.SECONDS_PER_HOUR;
      ZoneOffset.UTC = ZoneOffset.ofTotalSeconds(0);
      ZoneOffset.MIN = ZoneOffset.ofTotalSeconds(-ZoneOffset.MAX_SECONDS);
      ZoneOffset.MAX = ZoneOffset.ofTotalSeconds(ZoneOffset.MAX_SECONDS);
    }

    var DateTimeBuilder = function (_TemporalAccessor) {
      _inheritsLoose(DateTimeBuilder, _TemporalAccessor);

      DateTimeBuilder.create = function create(field, value) {
        var dtb = new DateTimeBuilder();

        dtb._addFieldValue(field, value);

        return dtb;
      };

      function DateTimeBuilder() {
        var _this;

        _this = _TemporalAccessor.call(this) || this;
        _this.fieldValues = new EnumMap();
        _this.chrono = null;
        _this.zone = null;
        _this.date = null;
        _this.time = null;
        _this.leapSecond = false;
        _this.excessDays = null;
        return _this;
      }

      var _proto = DateTimeBuilder.prototype;

      _proto.getFieldValue0 = function getFieldValue0(field) {
        return this.fieldValues.get(field);
      };

      _proto._addFieldValue = function _addFieldValue(field, value) {
        requireNonNull(field, 'field');
        var old = this.getFieldValue0(field);

        if (old != null && old !== value) {
          throw new DateTimeException('Conflict found: ' + field + ' ' + old + ' differs from ' + field + ' ' + value + ': ' + this);
        }

        return this._putFieldValue0(field, value);
      };

      _proto._putFieldValue0 = function _putFieldValue0(field, value) {
        this.fieldValues.put(field, value);
        return this;
      };

      _proto.resolve = function resolve(resolverStyle, resolverFields) {
        if (resolverFields != null) {
          this.fieldValues.retainAll(resolverFields);
        }

        this._mergeDate(resolverStyle);

        this._mergeTime(resolverStyle);

        this._resolveTimeInferZeroes(resolverStyle);

        if (this.excessDays != null && this.excessDays.isZero() === false && this.date != null && this.time != null) {
          this.date = this.date.plus(this.excessDays);
          this.excessDays = Period.ZERO;
        }

        this._resolveInstant();

        return this;
      };

      _proto._mergeDate = function _mergeDate(resolverStyle) {
        this._checkDate(IsoChronology.INSTANCE.resolveDate(this.fieldValues, resolverStyle));
      };

      _proto._checkDate = function _checkDate(date) {
        if (date != null) {
          this._addObject(date);

          for (var fieldName in this.fieldValues.keySet()) {
            var field = ChronoField.byName(fieldName);

            if (field) {
              if (this.fieldValues.get(field) !== undefined) {
                if (field.isDateBased()) {
                  var val1 = void 0;

                  try {
                    val1 = date.getLong(field);
                  } catch (ex) {
                    if (ex instanceof DateTimeException) {
                      continue;
                    } else {
                      throw ex;
                    }
                  }

                  var val2 = this.fieldValues.get(field);

                  if (val1 !== val2) {
                    throw new DateTimeException('Conflict found: Field ' + field + ' ' + val1 + ' differs from ' + field + ' ' + val2 + ' derived from ' + date);
                  }
                }
              }
            }
          }
        }
      };

      _proto._mergeTime = function _mergeTime(resolverStyle) {
        if (this.fieldValues.containsKey(ChronoField.CLOCK_HOUR_OF_DAY)) {
          var ch = this.fieldValues.remove(ChronoField.CLOCK_HOUR_OF_DAY);

          if (resolverStyle !== ResolverStyle.LENIENT) {
            if (resolverStyle === ResolverStyle.SMART && ch === 0) ; else {
              ChronoField.CLOCK_HOUR_OF_DAY.checkValidValue(ch);
            }
          }

          this._addFieldValue(ChronoField.HOUR_OF_DAY, ch === 24 ? 0 : ch);
        }

        if (this.fieldValues.containsKey(ChronoField.CLOCK_HOUR_OF_AMPM)) {
          var _ch = this.fieldValues.remove(ChronoField.CLOCK_HOUR_OF_AMPM);

          if (resolverStyle !== ResolverStyle.LENIENT) {
            if (resolverStyle === ResolverStyle.SMART && _ch === 0) ; else {
              ChronoField.CLOCK_HOUR_OF_AMPM.checkValidValue(_ch);
            }
          }

          this._addFieldValue(ChronoField.HOUR_OF_AMPM, _ch === 12 ? 0 : _ch);
        }

        if (resolverStyle !== ResolverStyle.LENIENT) {
          if (this.fieldValues.containsKey(ChronoField.AMPM_OF_DAY)) {
            ChronoField.AMPM_OF_DAY.checkValidValue(this.fieldValues.get(ChronoField.AMPM_OF_DAY));
          }

          if (this.fieldValues.containsKey(ChronoField.HOUR_OF_AMPM)) {
            ChronoField.HOUR_OF_AMPM.checkValidValue(this.fieldValues.get(ChronoField.HOUR_OF_AMPM));
          }
        }

        if (this.fieldValues.containsKey(ChronoField.AMPM_OF_DAY) && this.fieldValues.containsKey(ChronoField.HOUR_OF_AMPM)) {
          var ap = this.fieldValues.remove(ChronoField.AMPM_OF_DAY);
          var hap = this.fieldValues.remove(ChronoField.HOUR_OF_AMPM);

          this._addFieldValue(ChronoField.HOUR_OF_DAY, ap * 12 + hap);
        }

        if (this.fieldValues.containsKey(ChronoField.NANO_OF_DAY)) {
          var nod = this.fieldValues.remove(ChronoField.NANO_OF_DAY);

          if (resolverStyle !== ResolverStyle.LENIENT) {
            ChronoField.NANO_OF_DAY.checkValidValue(nod);
          }

          this._addFieldValue(ChronoField.SECOND_OF_DAY, MathUtil.intDiv(nod, 1000000000));

          this._addFieldValue(ChronoField.NANO_OF_SECOND, MathUtil.intMod(nod, 1000000000));
        }

        if (this.fieldValues.containsKey(ChronoField.MICRO_OF_DAY)) {
          var cod = this.fieldValues.remove(ChronoField.MICRO_OF_DAY);

          if (resolverStyle !== ResolverStyle.LENIENT) {
            ChronoField.MICRO_OF_DAY.checkValidValue(cod);
          }

          this._addFieldValue(ChronoField.SECOND_OF_DAY, MathUtil.intDiv(cod, 1000000));

          this._addFieldValue(ChronoField.MICRO_OF_SECOND, MathUtil.intMod(cod, 1000000));
        }

        if (this.fieldValues.containsKey(ChronoField.MILLI_OF_DAY)) {
          var lod = this.fieldValues.remove(ChronoField.MILLI_OF_DAY);

          if (resolverStyle !== ResolverStyle.LENIENT) {
            ChronoField.MILLI_OF_DAY.checkValidValue(lod);
          }

          this._addFieldValue(ChronoField.SECOND_OF_DAY, MathUtil.intDiv(lod, 1000));

          this._addFieldValue(ChronoField.MILLI_OF_SECOND, MathUtil.intMod(lod, 1000));
        }

        if (this.fieldValues.containsKey(ChronoField.SECOND_OF_DAY)) {
          var sod = this.fieldValues.remove(ChronoField.SECOND_OF_DAY);

          if (resolverStyle !== ResolverStyle.LENIENT) {
            ChronoField.SECOND_OF_DAY.checkValidValue(sod);
          }

          this._addFieldValue(ChronoField.HOUR_OF_DAY, MathUtil.intDiv(sod, 3600));

          this._addFieldValue(ChronoField.MINUTE_OF_HOUR, MathUtil.intMod(MathUtil.intDiv(sod, 60), 60));

          this._addFieldValue(ChronoField.SECOND_OF_MINUTE, MathUtil.intMod(sod, 60));
        }

        if (this.fieldValues.containsKey(ChronoField.MINUTE_OF_DAY)) {
          var mod = this.fieldValues.remove(ChronoField.MINUTE_OF_DAY);

          if (resolverStyle !== ResolverStyle.LENIENT) {
            ChronoField.MINUTE_OF_DAY.checkValidValue(mod);
          }

          this._addFieldValue(ChronoField.HOUR_OF_DAY, MathUtil.intDiv(mod, 60));

          this._addFieldValue(ChronoField.MINUTE_OF_HOUR, MathUtil.intMod(mod, 60));
        }

        if (resolverStyle !== ResolverStyle.LENIENT) {
          if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND)) {
            ChronoField.MILLI_OF_SECOND.checkValidValue(this.fieldValues.get(ChronoField.MILLI_OF_SECOND));
          }

          if (this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND)) {
            ChronoField.MICRO_OF_SECOND.checkValidValue(this.fieldValues.get(ChronoField.MICRO_OF_SECOND));
          }
        }

        if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND) && this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND)) {
          var los = this.fieldValues.remove(ChronoField.MILLI_OF_SECOND);
          var cos = this.fieldValues.get(ChronoField.MICRO_OF_SECOND);

          this._putFieldValue0(ChronoField.MICRO_OF_SECOND, los * 1000 + MathUtil.intMod(cos, 1000));
        }

        if (this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND) && this.fieldValues.containsKey(ChronoField.NANO_OF_SECOND)) {
          var nos = this.fieldValues.get(ChronoField.NANO_OF_SECOND);

          this._putFieldValue0(ChronoField.MICRO_OF_SECOND, MathUtil.intDiv(nos, 1000));

          this.fieldValues.remove(ChronoField.MICRO_OF_SECOND);
        }

        if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND) && this.fieldValues.containsKey(ChronoField.NANO_OF_SECOND)) {
          var _nos = this.fieldValues.get(ChronoField.NANO_OF_SECOND);

          this._putFieldValue0(ChronoField.MILLI_OF_SECOND, MathUtil.intDiv(_nos, 1000000));

          this.fieldValues.remove(ChronoField.MILLI_OF_SECOND);
        }

        if (this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND)) {
          var _cos = this.fieldValues.remove(ChronoField.MICRO_OF_SECOND);

          this._putFieldValue0(ChronoField.NANO_OF_SECOND, _cos * 1000);
        } else if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND)) {
          var _los = this.fieldValues.remove(ChronoField.MILLI_OF_SECOND);

          this._putFieldValue0(ChronoField.NANO_OF_SECOND, _los * 1000000);
        }
      };

      _proto._resolveTimeInferZeroes = function _resolveTimeInferZeroes(resolverStyle) {
        var hod = this.fieldValues.get(ChronoField.HOUR_OF_DAY);
        var moh = this.fieldValues.get(ChronoField.MINUTE_OF_HOUR);
        var som = this.fieldValues.get(ChronoField.SECOND_OF_MINUTE);
        var nos = this.fieldValues.get(ChronoField.NANO_OF_SECOND);

        if (hod == null) {
          return;
        }

        if (moh == null && (som != null || nos != null)) {
          return;
        }

        if (moh != null && som == null && nos != null) {
          return;
        }

        if (resolverStyle !== ResolverStyle.LENIENT) {
          if (hod != null) {
            if (resolverStyle === ResolverStyle.SMART && hod === 24 && (moh == null || moh === 0) && (som == null || som === 0) && (nos == null || nos === 0)) {
              hod = 0;
              this.excessDays = Period.ofDays(1);
            }

            var hodVal = ChronoField.HOUR_OF_DAY.checkValidIntValue(hod);

            if (moh != null) {
              var mohVal = ChronoField.MINUTE_OF_HOUR.checkValidIntValue(moh);

              if (som != null) {
                var somVal = ChronoField.SECOND_OF_MINUTE.checkValidIntValue(som);

                if (nos != null) {
                  var nosVal = ChronoField.NANO_OF_SECOND.checkValidIntValue(nos);

                  this._addObject(LocalTime.of(hodVal, mohVal, somVal, nosVal));
                } else {
                  this._addObject(LocalTime.of(hodVal, mohVal, somVal));
                }
              } else {
                if (nos == null) {
                  this._addObject(LocalTime.of(hodVal, mohVal));
                }
              }
            } else {
              if (som == null && nos == null) {
                this._addObject(LocalTime.of(hodVal, 0));
              }
            }
          }
        } else {
          if (hod != null) {
            var _hodVal = hod;

            if (moh != null) {
              if (som != null) {
                if (nos == null) {
                  nos = 0;
                }

                var totalNanos = MathUtil.safeMultiply(_hodVal, 3600000000000);
                totalNanos = MathUtil.safeAdd(totalNanos, MathUtil.safeMultiply(moh, 60000000000));
                totalNanos = MathUtil.safeAdd(totalNanos, MathUtil.safeMultiply(som, 1000000000));
                totalNanos = MathUtil.safeAdd(totalNanos, nos);
                var excessDays = MathUtil.floorDiv(totalNanos, 86400000000000);
                var nod = MathUtil.floorMod(totalNanos, 86400000000000);

                this._addObject(LocalTime.ofNanoOfDay(nod));

                this.excessDays = Period.ofDays(excessDays);
              } else {
                var totalSecs = MathUtil.safeMultiply(_hodVal, 3600);
                totalSecs = MathUtil.safeAdd(totalSecs, MathUtil.safeMultiply(moh, 60));

                var _excessDays = MathUtil.floorDiv(totalSecs, 86400);

                var sod = MathUtil.floorMod(totalSecs, 86400);

                this._addObject(LocalTime.ofSecondOfDay(sod));

                this.excessDays = Period.ofDays(_excessDays);
              }
            } else {
              var _excessDays2 = MathUtil.safeToInt(MathUtil.floorDiv(_hodVal, 24));

              _hodVal = MathUtil.floorMod(_hodVal, 24);

              this._addObject(LocalTime.of(_hodVal, 0));

              this.excessDays = Period.ofDays(_excessDays2);
            }
          }
        }

        this.fieldValues.remove(ChronoField.HOUR_OF_DAY);
        this.fieldValues.remove(ChronoField.MINUTE_OF_HOUR);
        this.fieldValues.remove(ChronoField.SECOND_OF_MINUTE);
        this.fieldValues.remove(ChronoField.NANO_OF_SECOND);
      };

      _proto._addObject = function _addObject(dateOrTime) {
        if (dateOrTime instanceof ChronoLocalDate) {
          this.date = dateOrTime;
        } else if (dateOrTime instanceof LocalTime) {
          this.time = dateOrTime;
        }
      };

      _proto._resolveInstant = function _resolveInstant() {
        if (this.date != null && this.time != null) {
          var offsetSecs = this.fieldValues.get(ChronoField.OFFSET_SECONDS);

          if (offsetSecs != null) {
            var offset = ZoneOffset.ofTotalSeconds(offsetSecs);
            var instant = this.date.atTime(this.time).atZone(offset).getLong(ChronoField.INSTANT_SECONDS);
            this.fieldValues.put(ChronoField.INSTANT_SECONDS, instant);
          } else if (this.zone != null) {
            var _instant = this.date.atTime(this.time).atZone(this.zone).getLong(ChronoField.INSTANT_SECONDS);

            this.fieldValues.put(ChronoField.INSTANT_SECONDS, _instant);
          }
        }
      };

      _proto.build = function build(type) {
        return type.queryFrom(this);
      };

      _proto.isSupported = function isSupported(field) {
        if (field == null) {
          return false;
        }

        return this.fieldValues.containsKey(field) && this.fieldValues.get(field) !== undefined || this.date != null && this.date.isSupported(field) || this.time != null && this.time.isSupported(field);
      };

      _proto.getLong = function getLong(field) {
        requireNonNull(field, 'field');
        var value = this.getFieldValue0(field);

        if (value == null) {
          if (this.date != null && this.date.isSupported(field)) {
            return this.date.getLong(field);
          }

          if (this.time != null && this.time.isSupported(field)) {
            return this.time.getLong(field);
          }

          throw new DateTimeException('Field not found: ' + field);
        }

        return value;
      };

      _proto.query = function query(_query) {
        if (_query === TemporalQueries.zoneId()) {
          return this.zone;
        } else if (_query === TemporalQueries.chronology()) {
          return this.chrono;
        } else if (_query === TemporalQueries.localDate()) {
          return this.date != null ? LocalDate.from(this.date) : null;
        } else if (_query === TemporalQueries.localTime()) {
          return this.time;
        } else if (_query === TemporalQueries.zone() || _query === TemporalQueries.offset()) {
          return _query.queryFrom(this);
        } else if (_query === TemporalQueries.precision()) {
          return null;
        }

        return _query.queryFrom(this);
      };

      return DateTimeBuilder;
    }(TemporalAccessor);

    var DateTimeParseContext = function () {
      function DateTimeParseContext() {
        if (arguments.length === 1) {
          if (arguments[0] instanceof DateTimeParseContext) {
            this._constructorSelf.apply(this, arguments);

            return;
          } else {
            this._constructorFormatter.apply(this, arguments);
          }
        } else {
          this._constructorParam.apply(this, arguments);
        }

        this._caseSensitive = true;
        this._strict = true;
        this._parsed = [new Parsed(this)];
      }

      var _proto = DateTimeParseContext.prototype;

      _proto._constructorParam = function _constructorParam(locale, symbols, chronology) {
        this._locale = locale;
        this._symbols = symbols;
        this._overrideChronology = chronology;
      };

      _proto._constructorFormatter = function _constructorFormatter(formatter) {
        this._locale = formatter.locale();
        this._symbols = formatter.decimalStyle();
        this._overrideChronology = formatter.chronology();
      };

      _proto._constructorSelf = function _constructorSelf(other) {
        this._locale = other._locale;
        this._symbols = other._symbols;
        this._overrideChronology = other._overrideChronology;
        this._overrideZone = other._overrideZone;
        this._caseSensitive = other._caseSensitive;
        this._strict = other._strict;
        this._parsed = [new Parsed(this)];
      };

      _proto.copy = function copy() {
        return new DateTimeParseContext(this);
      };

      _proto.symbols = function symbols() {
        return this._symbols;
      };

      _proto.isStrict = function isStrict() {
        return this._strict;
      };

      _proto.setStrict = function setStrict(strict) {
        this._strict = strict;
      };

      _proto.locale = function locale() {
        return this._locale;
      };

      _proto.setLocale = function setLocale(locale) {
        this._locale = locale;
      };

      _proto.startOptional = function startOptional() {
        this._parsed.push(this.currentParsed().copy());
      };

      _proto.endOptional = function endOptional(successful) {
        if (successful) {
          this._parsed.splice(this._parsed.length - 2, 1);
        } else {
          this._parsed.splice(this._parsed.length - 1, 1);
        }
      };

      _proto.isCaseSensitive = function isCaseSensitive() {
        return this._caseSensitive;
      };

      _proto.setCaseSensitive = function setCaseSensitive(caseSensitive) {
        this._caseSensitive = caseSensitive;
      };

      _proto.subSequenceEquals = function subSequenceEquals(cs1, offset1, cs2, offset2, length) {
        if (offset1 + length > cs1.length || offset2 + length > cs2.length) {
          return false;
        }

        if (!this.isCaseSensitive()) {
          cs1 = cs1.toLowerCase();
          cs2 = cs2.toLowerCase();
        }

        for (var i = 0; i < length; i++) {
          var ch1 = cs1[offset1 + i];
          var ch2 = cs2[offset2 + i];

          if (ch1 !== ch2) {
            return false;
          }
        }

        return true;
      };

      _proto.charEquals = function charEquals(ch1, ch2) {
        if (this.isCaseSensitive()) {
          return ch1 === ch2;
        }

        return this.charEqualsIgnoreCase(ch1, ch2);
      };

      _proto.charEqualsIgnoreCase = function charEqualsIgnoreCase(c1, c2) {
        return c1 === c2 || c1.toLowerCase() === c2.toLowerCase();
      };

      _proto.setParsedField = function setParsedField(field, value, errorPos, successPos) {
        var currentParsedFieldValues = this.currentParsed().fieldValues;
        var old = currentParsedFieldValues.get(field);
        currentParsedFieldValues.set(field, value);
        return old != null && old !== value ? ~errorPos : successPos;
      };

      _proto.setParsedZone = function setParsedZone(zone) {
        requireNonNull(zone, 'zone');
        this.currentParsed().zone = zone;
      };

      _proto.getParsed = function getParsed(field) {
        return this.currentParsed().fieldValues.get(field);
      };

      _proto.toParsed = function toParsed() {
        return this.currentParsed();
      };

      _proto.currentParsed = function currentParsed() {
        return this._parsed[this._parsed.length - 1];
      };

      _proto.setParsedLeapSecond = function setParsedLeapSecond() {
        this.currentParsed().leapSecond = true;
      };

      _proto.getEffectiveChronology = function getEffectiveChronology() {
        var chrono = this.currentParsed().chrono;

        if (chrono == null) {
          chrono = this._overrideChronology;

          if (chrono == null) {
            chrono = IsoChronology.INSTANCE;
          }
        }

        return chrono;
      };

      return DateTimeParseContext;
    }();

    var Parsed = function (_Temporal) {
      _inheritsLoose(Parsed, _Temporal);

      function Parsed(dateTimeParseContext) {
        var _this;

        _this = _Temporal.call(this) || this;
        _this.chrono = null;
        _this.zone = null;
        _this.fieldValues = new EnumMap();
        _this.leapSecond = false;
        _this.dateTimeParseContext = dateTimeParseContext;
        return _this;
      }

      var _proto2 = Parsed.prototype;

      _proto2.copy = function copy() {
        var cloned = new Parsed();
        cloned.chrono = this.chrono;
        cloned.zone = this.zone;
        cloned.fieldValues.putAll(this.fieldValues);
        cloned.leapSecond = this.leapSecond;
        cloned.dateTimeParseContext = this.dateTimeParseContext;
        return cloned;
      };

      _proto2.toString = function toString() {
        return this.fieldValues + ", " + this.chrono + ", " + this.zone;
      };

      _proto2.isSupported = function isSupported(field) {
        return this.fieldValues.containsKey(field);
      };

      _proto2.get = function get(field) {
        var val = this.fieldValues.get(field);
        assert(val != null);
        return val;
      };

      _proto2.query = function query(_query) {
        if (_query === TemporalQueries.chronology()) {
          return this.chrono;
        }

        if (_query === TemporalQueries.zoneId() || _query === TemporalQueries.zone()) {
          return this.zone;
        }

        return _Temporal.prototype.query.call(this, _query);
      };

      _proto2.toBuilder = function toBuilder() {
        var builder = new DateTimeBuilder();
        builder.fieldValues.putAll(this.fieldValues);
        builder.chrono = this.dateTimeParseContext.getEffectiveChronology();

        if (this.zone != null) {
          builder.zone = this.zone;
        } else {
          builder.zone = this.overrideZone;
        }

        builder.leapSecond = this.leapSecond;
        builder.excessDays = this.excessDays;
        return builder;
      };

      return Parsed;
    }(Temporal);

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var DateTimePrintContext = function () {
      function DateTimePrintContext(temporal, localeOrFormatter, symbols) {
        if (arguments.length === 2 && arguments[1] instanceof DateTimeFormatter) {
          this._temporal = DateTimePrintContext.adjust(temporal, localeOrFormatter);
          this._locale = localeOrFormatter.locale();
          this._symbols = localeOrFormatter.decimalStyle();
        } else {
          this._temporal = temporal;
          this._locale = localeOrFormatter;
          this._symbols = symbols;
        }

        this._optional = 0;
      }

      DateTimePrintContext.adjust = function adjust(temporal, formatter) {
        return temporal;
      };

      var _proto = DateTimePrintContext.prototype;

      _proto.symbols = function symbols() {
        return this._symbols;
      };

      _proto.startOptional = function startOptional() {
        this._optional++;
      };

      _proto.endOptional = function endOptional() {
        this._optional--;
      };

      _proto.getValueQuery = function getValueQuery(query) {
        var result = this._temporal.query(query);

        if (result == null && this._optional === 0) {
          throw new DateTimeException('Unable to extract value: ' + this._temporal);
        }

        return result;
      };

      _proto.getValue = function getValue(field) {
        try {
          return this._temporal.getLong(field);
        } catch (ex) {
          if (ex instanceof DateTimeException && this._optional > 0) {
            return null;
          }

          throw ex;
        }
      };

      _proto.temporal = function temporal() {
        return this._temporal;
      };

      _proto.locale = function locale() {
        return this._locale;
      };

      _proto.setDateTime = function setDateTime(temporal) {
        this._temporal = temporal;
      };

      _proto.setLocale = function setLocale(locale) {
        this._locale = locale;
      };

      return DateTimePrintContext;
    }();

    var IsoFields = {};
    var QUARTER_DAYS = [0, 90, 181, 273, 0, 91, 182, 274];

    var Field = function (_TemporalField) {
      _inheritsLoose(Field, _TemporalField);

      function Field() {
        return _TemporalField.apply(this, arguments) || this;
      }

      var _proto = Field.prototype;

      _proto.isDateBased = function isDateBased() {
        return true;
      };

      _proto.isTimeBased = function isTimeBased() {
        return false;
      };

      _proto._isIso = function _isIso() {
        return true;
      };

      Field._getWeekRangeByLocalDate = function _getWeekRangeByLocalDate(date) {
        var wby = Field._getWeekBasedYear(date);

        return ValueRange.of(1, Field._getWeekRangeByYear(wby));
      };

      Field._getWeekRangeByYear = function _getWeekRangeByYear(wby) {
        var date = LocalDate.of(wby, 1, 1);

        if (date.dayOfWeek() === DayOfWeek.THURSDAY || date.dayOfWeek() === DayOfWeek.WEDNESDAY && date.isLeapYear()) {
          return 53;
        }

        return 52;
      };

      Field._getWeek = function _getWeek(date) {
        var dow0 = date.dayOfWeek().ordinal();
        var doy0 = date.dayOfYear() - 1;
        var doyThu0 = doy0 + (3 - dow0);
        var alignedWeek = MathUtil.intDiv(doyThu0, 7);
        var firstThuDoy0 = doyThu0 - alignedWeek * 7;
        var firstMonDoy0 = firstThuDoy0 - 3;

        if (firstMonDoy0 < -3) {
          firstMonDoy0 += 7;
        }

        if (doy0 < firstMonDoy0) {
          return Field._getWeekRangeByLocalDate(date.withDayOfYear(180).minusYears(1)).maximum();
        }

        var week = MathUtil.intDiv(doy0 - firstMonDoy0, 7) + 1;

        if (week === 53) {
          if ((firstMonDoy0 === -3 || firstMonDoy0 === -2 && date.isLeapYear()) === false) {
            week = 1;
          }
        }

        return week;
      };

      Field._getWeekBasedYear = function _getWeekBasedYear(date) {
        var year = date.year();
        var doy = date.dayOfYear();

        if (doy <= 3) {
          var dow = date.dayOfWeek().ordinal();

          if (doy - dow < -2) {
            year--;
          }
        } else if (doy >= 363) {
          var _dow = date.dayOfWeek().ordinal();

          doy = doy - 363 - (date.isLeapYear() ? 1 : 0);

          if (doy - _dow >= 0) {
            year++;
          }
        }

        return year;
      };

      _proto.displayName = function displayName() {
        return this.toString();
      };

      _proto.resolve = function resolve() {
        return null;
      };

      _proto.name = function name() {
        return this.toString();
      };

      return Field;
    }(TemporalField);

    var DAY_OF_QUARTER_FIELD = function (_Field) {
      _inheritsLoose(DAY_OF_QUARTER_FIELD, _Field);

      function DAY_OF_QUARTER_FIELD() {
        return _Field.apply(this, arguments) || this;
      }

      var _proto2 = DAY_OF_QUARTER_FIELD.prototype;

      _proto2.toString = function toString() {
        return 'DayOfQuarter';
      };

      _proto2.baseUnit = function baseUnit() {
        return ChronoUnit.DAYS;
      };

      _proto2.rangeUnit = function rangeUnit() {
        return QUARTER_YEARS;
      };

      _proto2.range = function range() {
        return ValueRange.of(1, 90, 92);
      };

      _proto2.isSupportedBy = function isSupportedBy(temporal) {
        return temporal.isSupported(ChronoField.DAY_OF_YEAR) && temporal.isSupported(ChronoField.MONTH_OF_YEAR) && temporal.isSupported(ChronoField.YEAR) && this._isIso(temporal);
      };

      _proto2.rangeRefinedBy = function rangeRefinedBy(temporal) {
        if (temporal.isSupported(this) === false) {
          throw new UnsupportedTemporalTypeException('Unsupported field: DayOfQuarter');
        }

        var qoy = temporal.getLong(QUARTER_OF_YEAR);

        if (qoy === 1) {
          var year = temporal.getLong(ChronoField.YEAR);
          return IsoChronology.isLeapYear(year) ? ValueRange.of(1, 91) : ValueRange.of(1, 90);
        } else if (qoy === 2) {
          return ValueRange.of(1, 91);
        } else if (qoy === 3 || qoy === 4) {
          return ValueRange.of(1, 92);
        }

        return this.range();
      };

      _proto2.getFrom = function getFrom(temporal) {
        if (temporal.isSupported(this) === false) {
          throw new UnsupportedTemporalTypeException('Unsupported field: DayOfQuarter');
        }

        var doy = temporal.get(ChronoField.DAY_OF_YEAR);
        var moy = temporal.get(ChronoField.MONTH_OF_YEAR);
        var year = temporal.getLong(ChronoField.YEAR);
        return doy - QUARTER_DAYS[MathUtil.intDiv(moy - 1, 3) + (IsoChronology.isLeapYear(year) ? 4 : 0)];
      };

      _proto2.adjustInto = function adjustInto(temporal, newValue) {
        var curValue = this.getFrom(temporal);
        this.range().checkValidValue(newValue, this);
        return temporal.with(ChronoField.DAY_OF_YEAR, temporal.getLong(ChronoField.DAY_OF_YEAR) + (newValue - curValue));
      };

      _proto2.resolve = function resolve(fieldValues, partialTemporal, resolverStyle) {
        var yearLong = fieldValues.get(ChronoField.YEAR);
        var qoyLong = fieldValues.get(QUARTER_OF_YEAR);

        if (yearLong == null || qoyLong == null) {
          return null;
        }

        var y = ChronoField.YEAR.checkValidIntValue(yearLong);
        var doq = fieldValues.get(DAY_OF_QUARTER);
        var date;

        if (resolverStyle === ResolverStyle.LENIENT) {
          var qoy = qoyLong;
          date = LocalDate.of(y, 1, 1);
          date = date.plusMonths(MathUtil.safeMultiply(MathUtil.safeSubtract(qoy, 1), 3));
          date = date.plusDays(MathUtil.safeSubtract(doq, 1));
        } else {
          var _qoy = QUARTER_OF_YEAR.range().checkValidIntValue(qoyLong, QUARTER_OF_YEAR);

          if (resolverStyle === ResolverStyle.STRICT) {
            var max = 92;

            if (_qoy === 1) {
              max = IsoChronology.isLeapYear(y) ? 91 : 90;
            } else if (_qoy === 2) {
              max = 91;
            }

            ValueRange.of(1, max).checkValidValue(doq, this);
          } else {
            this.range().checkValidValue(doq, this);
          }

          date = LocalDate.of(y, (_qoy - 1) * 3 + 1, 1).plusDays(doq - 1);
        }

        fieldValues.remove(this);
        fieldValues.remove(ChronoField.YEAR);
        fieldValues.remove(QUARTER_OF_YEAR);
        return date;
      };

      return DAY_OF_QUARTER_FIELD;
    }(Field);

    var QUARTER_OF_YEAR_FIELD = function (_Field2) {
      _inheritsLoose(QUARTER_OF_YEAR_FIELD, _Field2);

      function QUARTER_OF_YEAR_FIELD() {
        return _Field2.apply(this, arguments) || this;
      }

      var _proto3 = QUARTER_OF_YEAR_FIELD.prototype;

      _proto3.toString = function toString() {
        return 'QuarterOfYear';
      };

      _proto3.baseUnit = function baseUnit() {
        return QUARTER_YEARS;
      };

      _proto3.rangeUnit = function rangeUnit() {
        return ChronoUnit.YEARS;
      };

      _proto3.range = function range() {
        return ValueRange.of(1, 4);
      };

      _proto3.isSupportedBy = function isSupportedBy(temporal) {
        return temporal.isSupported(ChronoField.MONTH_OF_YEAR) && this._isIso(temporal);
      };

      _proto3.rangeRefinedBy = function rangeRefinedBy(temporal) {
        return this.range();
      };

      _proto3.getFrom = function getFrom(temporal) {
        if (temporal.isSupported(this) === false) {
          throw new UnsupportedTemporalTypeException('Unsupported field: QuarterOfYear');
        }

        var moy = temporal.getLong(ChronoField.MONTH_OF_YEAR);
        return MathUtil.intDiv(moy + 2, 3);
      };

      _proto3.adjustInto = function adjustInto(temporal, newValue) {
        var curValue = this.getFrom(temporal);
        this.range().checkValidValue(newValue, this);
        return temporal.with(ChronoField.MONTH_OF_YEAR, temporal.getLong(ChronoField.MONTH_OF_YEAR) + (newValue - curValue) * 3);
      };

      return QUARTER_OF_YEAR_FIELD;
    }(Field);

    var WEEK_OF_WEEK_BASED_YEAR_FIELD = function (_Field3) {
      _inheritsLoose(WEEK_OF_WEEK_BASED_YEAR_FIELD, _Field3);

      function WEEK_OF_WEEK_BASED_YEAR_FIELD() {
        return _Field3.apply(this, arguments) || this;
      }

      var _proto4 = WEEK_OF_WEEK_BASED_YEAR_FIELD.prototype;

      _proto4.toString = function toString() {
        return 'WeekOfWeekBasedYear';
      };

      _proto4.baseUnit = function baseUnit() {
        return ChronoUnit.WEEKS;
      };

      _proto4.rangeUnit = function rangeUnit() {
        return WEEK_BASED_YEARS;
      };

      _proto4.range = function range() {
        return ValueRange.of(1, 52, 53);
      };

      _proto4.isSupportedBy = function isSupportedBy(temporal) {
        return temporal.isSupported(ChronoField.EPOCH_DAY) && this._isIso(temporal);
      };

      _proto4.rangeRefinedBy = function rangeRefinedBy(temporal) {
        if (temporal.isSupported(this) === false) {
          throw new UnsupportedTemporalTypeException('Unsupported field: WeekOfWeekBasedYear');
        }

        return Field._getWeekRangeByLocalDate(LocalDate.from(temporal));
      };

      _proto4.getFrom = function getFrom(temporal) {
        if (temporal.isSupported(this) === false) {
          throw new UnsupportedTemporalTypeException('Unsupported field: WeekOfWeekBasedYear');
        }

        return Field._getWeek(LocalDate.from(temporal));
      };

      _proto4.adjustInto = function adjustInto(temporal, newValue) {
        this.range().checkValidValue(newValue, this);
        return temporal.plus(MathUtil.safeSubtract(newValue, this.getFrom(temporal)), ChronoUnit.WEEKS);
      };

      _proto4.resolve = function resolve(fieldValues, partialTemporal, resolverStyle) {
        var wbyLong = fieldValues.get(WEEK_BASED_YEAR);
        var dowLong = fieldValues.get(ChronoField.DAY_OF_WEEK);

        if (wbyLong == null || dowLong == null) {
          return null;
        }

        var wby = WEEK_BASED_YEAR.range().checkValidIntValue(wbyLong, WEEK_BASED_YEAR);
        var wowby = fieldValues.get(WEEK_OF_WEEK_BASED_YEAR);
        var date;

        if (resolverStyle === ResolverStyle.LENIENT) {
          var dow = dowLong;
          var weeks = 0;

          if (dow > 7) {
            weeks = MathUtil.intDiv(dow - 1, 7);
            dow = MathUtil.intMod(dow - 1, 7) + 1;
          } else if (dow < 1) {
            weeks = MathUtil.intDiv(dow, 7) - 1;
            dow = MathUtil.intMod(dow, 7) + 7;
          }

          date = LocalDate.of(wby, 1, 4).plusWeeks(wowby - 1).plusWeeks(weeks).with(ChronoField.DAY_OF_WEEK, dow);
        } else {
          var _dow2 = ChronoField.DAY_OF_WEEK.checkValidIntValue(dowLong);

          if (resolverStyle === ResolverStyle.STRICT) {
            var temp = LocalDate.of(wby, 1, 4);

            var range = Field._getWeekRangeByLocalDate(temp);

            range.checkValidValue(wowby, this);
          } else {
            this.range().checkValidValue(wowby, this);
          }

          date = LocalDate.of(wby, 1, 4).plusWeeks(wowby - 1).with(ChronoField.DAY_OF_WEEK, _dow2);
        }

        fieldValues.remove(this);
        fieldValues.remove(WEEK_BASED_YEAR);
        fieldValues.remove(ChronoField.DAY_OF_WEEK);
        return date;
      };

      _proto4.displayName = function displayName() {
        return 'Week';
      };

      return WEEK_OF_WEEK_BASED_YEAR_FIELD;
    }(Field);

    var WEEK_BASED_YEAR_FIELD = function (_Field4) {
      _inheritsLoose(WEEK_BASED_YEAR_FIELD, _Field4);

      function WEEK_BASED_YEAR_FIELD() {
        return _Field4.apply(this, arguments) || this;
      }

      var _proto5 = WEEK_BASED_YEAR_FIELD.prototype;

      _proto5.toString = function toString() {
        return 'WeekBasedYear';
      };

      _proto5.baseUnit = function baseUnit() {
        return WEEK_BASED_YEARS;
      };

      _proto5.rangeUnit = function rangeUnit() {
        return ChronoUnit.FOREVER;
      };

      _proto5.range = function range() {
        return ChronoField.YEAR.range();
      };

      _proto5.isSupportedBy = function isSupportedBy(temporal) {
        return temporal.isSupported(ChronoField.EPOCH_DAY) && this._isIso(temporal);
      };

      _proto5.rangeRefinedBy = function rangeRefinedBy(temporal) {
        return ChronoField.YEAR.range();
      };

      _proto5.getFrom = function getFrom(temporal) {
        if (temporal.isSupported(this) === false) {
          throw new UnsupportedTemporalTypeException('Unsupported field: WeekBasedYear');
        }

        return Field._getWeekBasedYear(LocalDate.from(temporal));
      };

      _proto5.adjustInto = function adjustInto(temporal, newValue) {
        if (this.isSupportedBy(temporal) === false) {
          throw new UnsupportedTemporalTypeException('Unsupported field: WeekBasedYear');
        }

        var newWby = this.range().checkValidIntValue(newValue, WEEK_BASED_YEAR);
        var date = LocalDate.from(temporal);
        var dow = date.get(ChronoField.DAY_OF_WEEK);

        var week = Field._getWeek(date);

        if (week === 53 && Field._getWeekRangeByYear(newWby) === 52) {
          week = 52;
        }

        var resolved = LocalDate.of(newWby, 1, 4);
        var days = dow - resolved.get(ChronoField.DAY_OF_WEEK) + (week - 1) * 7;
        resolved = resolved.plusDays(days);
        return temporal.with(resolved);
      };

      return WEEK_BASED_YEAR_FIELD;
    }(Field);

    var Unit = function (_TemporalUnit) {
      _inheritsLoose(Unit, _TemporalUnit);

      function Unit(name, estimatedDuration) {
        var _this;

        _this = _TemporalUnit.call(this) || this;
        _this._name = name;
        _this._duration = estimatedDuration;
        return _this;
      }

      var _proto6 = Unit.prototype;

      _proto6.duration = function duration() {
        return this._duration;
      };

      _proto6.isDurationEstimated = function isDurationEstimated() {
        return true;
      };

      _proto6.isDateBased = function isDateBased() {
        return true;
      };

      _proto6.isTimeBased = function isTimeBased() {
        return false;
      };

      _proto6.isSupportedBy = function isSupportedBy(temporal) {
        return temporal.isSupported(ChronoField.EPOCH_DAY);
      };

      _proto6.addTo = function addTo(temporal, periodToAdd) {
        switch (this) {
          case WEEK_BASED_YEARS:
            {
              var added = MathUtil.safeAdd(temporal.get(WEEK_BASED_YEAR), periodToAdd);
              return temporal.with(WEEK_BASED_YEAR, added);
            }

          case QUARTER_YEARS:
            return temporal.plus(MathUtil.intDiv(periodToAdd, 256), ChronoUnit.YEARS).plus(MathUtil.intMod(periodToAdd, 256) * 3, ChronoUnit.MONTHS);

          default:
            throw new IllegalStateException('Unreachable');
        }
      };

      _proto6.between = function between(temporal1, temporal2) {
        switch (this) {
          case WEEK_BASED_YEARS:
            return MathUtil.safeSubtract(temporal2.getLong(WEEK_BASED_YEAR), temporal1.getLong(WEEK_BASED_YEAR));

          case QUARTER_YEARS:
            return MathUtil.intDiv(temporal1.until(temporal2, ChronoUnit.MONTHS), 3);

          default:
            throw new IllegalStateException('Unreachable');
        }
      };

      _proto6.toString = function toString() {
        return name;
      };

      return Unit;
    }(TemporalUnit);

    var DAY_OF_QUARTER = null;
    var QUARTER_OF_YEAR = null;
    var WEEK_OF_WEEK_BASED_YEAR = null;
    var WEEK_BASED_YEAR = null;
    var WEEK_BASED_YEARS = null;
    var QUARTER_YEARS = null;
    function _init$8() {
      DAY_OF_QUARTER = new DAY_OF_QUARTER_FIELD();
      QUARTER_OF_YEAR = new QUARTER_OF_YEAR_FIELD();
      WEEK_OF_WEEK_BASED_YEAR = new WEEK_OF_WEEK_BASED_YEAR_FIELD();
      WEEK_BASED_YEAR = new WEEK_BASED_YEAR_FIELD();
      WEEK_BASED_YEARS = new Unit('WeekBasedYears', Duration.ofSeconds(31556952));
      QUARTER_YEARS = new Unit('QuarterYears', Duration.ofSeconds(31556952 / 4));
      IsoFields.DAY_OF_QUARTER = DAY_OF_QUARTER;
      IsoFields.QUARTER_OF_YEAR = QUARTER_OF_YEAR;
      IsoFields.WEEK_OF_WEEK_BASED_YEAR = WEEK_OF_WEEK_BASED_YEAR;
      IsoFields.WEEK_BASED_YEAR = WEEK_BASED_YEAR;
      IsoFields.WEEK_BASED_YEARS = WEEK_BASED_YEARS;
      IsoFields.QUARTER_YEARS = QUARTER_YEARS;

      LocalDate.prototype.isoWeekOfWeekyear = function () {
        return this.get(IsoFields.WEEK_OF_WEEK_BASED_YEAR);
      };

      LocalDate.prototype.isoWeekyear = function () {
        return this.get(IsoFields.WEEK_BASED_YEAR);
      };
    }

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var DecimalStyle = function () {
      function DecimalStyle(zeroChar, positiveSignChar, negativeSignChar, decimalPointChar) {
        this._zeroDigit = zeroChar;
        this._zeroDigitCharCode = zeroChar.charCodeAt(0);
        this._positiveSign = positiveSignChar;
        this._negativeSign = negativeSignChar;
        this._decimalSeparator = decimalPointChar;
      }

      var _proto = DecimalStyle.prototype;

      _proto.positiveSign = function positiveSign() {
        return this._positiveSign;
      };

      _proto.withPositiveSign = function withPositiveSign(positiveSign) {
        if (positiveSign === this._positiveSign) {
          return this;
        }

        return new DecimalStyle(this._zeroDigit, positiveSign, this._negativeSign, this._decimalSeparator);
      };

      _proto.negativeSign = function negativeSign() {
        return this._negativeSign;
      };

      _proto.withNegativeSign = function withNegativeSign(negativeSign) {
        if (negativeSign === this._negativeSign) {
          return this;
        }

        return new DecimalStyle(this._zeroDigit, this._positiveSign, negativeSign, this._decimalSeparator);
      };

      _proto.zeroDigit = function zeroDigit() {
        return this._zeroDigit;
      };

      _proto.withZeroDigit = function withZeroDigit(zeroDigit) {
        if (zeroDigit === this._zeroDigit) {
          return this;
        }

        return new DecimalStyle(zeroDigit, this._positiveSign, this._negativeSign, this._decimalSeparator);
      };

      _proto.decimalSeparator = function decimalSeparator() {
        return this._decimalSeparator;
      };

      _proto.withDecimalSeparator = function withDecimalSeparator(decimalSeparator) {
        if (decimalSeparator === this._decimalSeparator) {
          return this;
        }

        return new DecimalStyle(this._zeroDigit, this._positiveSign, this._negativeSign, decimalSeparator);
      };

      _proto.convertToDigit = function convertToDigit(char) {
        var val = char.charCodeAt(0) - this._zeroDigitCharCode;

        return val >= 0 && val <= 9 ? val : -1;
      };

      _proto.convertNumberToI18N = function convertNumberToI18N(numericText) {
        if (this._zeroDigit === '0') {
          return numericText;
        }

        var diff = this._zeroDigitCharCode - '0'.charCodeAt(0);
        var convertedText = '';

        for (var i = 0; i < numericText.length; i++) {
          convertedText += String.fromCharCode(numericText.charCodeAt(i) + diff);
        }

        return convertedText;
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof DecimalStyle) {
          return this._zeroDigit === other._zeroDigit && this._positiveSign === other._positiveSign && this._negativeSign === other._negativeSign && this._decimalSeparator === other._decimalSeparator;
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return this._zeroDigit + this._positiveSign + this._negativeSign + this._decimalSeparator;
      };

      _proto.toString = function toString() {
        return 'DecimalStyle[' + this._zeroDigit + this._positiveSign + this._negativeSign + this._decimalSeparator + ']';
      };

      DecimalStyle.of = function of() {
        throw new Error('not yet supported');
      };

      DecimalStyle.availableLocales = function availableLocales() {
        throw new Error('not yet supported');
      };

      return DecimalStyle;
    }();
    DecimalStyle.STANDARD = new DecimalStyle('0', '+', '-', '.');

    var SignStyle = function (_Enum) {
      _inheritsLoose(SignStyle, _Enum);

      function SignStyle() {
        return _Enum.apply(this, arguments) || this;
      }

      var _proto = SignStyle.prototype;

      _proto.parse = function parse(positive, strict, fixedWidth) {
        switch (this) {
          case SignStyle.NORMAL:
            return !positive || !strict;

          case SignStyle.ALWAYS:
          case SignStyle.EXCEEDS_PAD:
            return true;

          default:
            return !strict && !fixedWidth;
        }
      };

      return SignStyle;
    }(Enum);
    SignStyle.NORMAL = new SignStyle('NORMAL');
    SignStyle.NEVER = new SignStyle('NEVER');
    SignStyle.ALWAYS = new SignStyle('ALWAYS');
    SignStyle.EXCEEDS_PAD = new SignStyle('EXCEEDS_PAD');
    SignStyle.NOT_NEGATIVE = new SignStyle('NOT_NEGATIVE');

    var TextStyle = function (_Enum) {
      _inheritsLoose(TextStyle, _Enum);

      function TextStyle() {
        return _Enum.apply(this, arguments) || this;
      }

      var _proto = TextStyle.prototype;

      _proto.isStandalone = function isStandalone() {
        switch (this) {
          case TextStyle.FULL_STANDALONE:
          case TextStyle.SHORT_STANDALONE:
          case TextStyle.NARROW_STANDALONE:
            return true;

          default:
            return false;
        }
      };

      _proto.asStandalone = function asStandalone() {
        switch (this) {
          case TextStyle.FULL:
            return TextStyle.FULL_STANDALONE;

          case TextStyle.SHORT:
            return TextStyle.SHORT_STANDALONE;

          case TextStyle.NARROW:
            return TextStyle.NARROW_STANDALONE;

          default:
            return this;
        }
      };

      _proto.asNormal = function asNormal() {
        switch (this) {
          case TextStyle.FULL_STANDALONE:
            return TextStyle.FULL;

          case TextStyle.SHORT_STANDALONE:
            return TextStyle.SHORT;

          case TextStyle.NARROW_STANDALONE:
            return TextStyle.NARROW;

          default:
            return this;
        }
      };

      return TextStyle;
    }(Enum);
    TextStyle.FULL = new TextStyle('FULL');
    TextStyle.FULL_STANDALONE = new TextStyle('FULL_STANDALONE');
    TextStyle.SHORT = new TextStyle('SHORT');
    TextStyle.SHORT_STANDALONE = new TextStyle('SHORT_STANDALONE');
    TextStyle.NARROW = new TextStyle('NARROW');
    TextStyle.NARROW_STANDALONE = new TextStyle('NARROW_STANDALONE');

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var CharLiteralPrinterParser = function () {
      function CharLiteralPrinterParser(literal) {
        if (literal.length > 1) {
          throw new IllegalArgumentException('invalid literal, too long: "' + literal + '"');
        }

        this._literal = literal;
      }

      var _proto = CharLiteralPrinterParser.prototype;

      _proto.print = function print(context, buf) {
        buf.append(this._literal);
        return true;
      };

      _proto.parse = function parse(context, text, position) {
        var length = text.length;

        if (position === length) {
          return ~position;
        }

        var ch = text.charAt(position);

        if (context.charEquals(this._literal, ch) === false) {
          return ~position;
        }

        return position + this._literal.length;
      };

      _proto.toString = function toString() {
        if (this._literal === '\'') {
          return "''";
        }

        return "'" + this._literal + "'";
      };

      return CharLiteralPrinterParser;
    }();

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var CompositePrinterParser = function () {
      function CompositePrinterParser(printerParsers, optional) {
        this._printerParsers = printerParsers;
        this._optional = optional;
      }

      var _proto = CompositePrinterParser.prototype;

      _proto.withOptional = function withOptional(optional) {
        if (optional === this._optional) {
          return this;
        }

        return new CompositePrinterParser(this._printerParsers, optional);
      };

      _proto.print = function print(context, buf) {
        var length = buf.length();

        if (this._optional) {
          context.startOptional();
        }

        try {
          for (var i = 0; i < this._printerParsers.length; i++) {
            var pp = this._printerParsers[i];

            if (pp.print(context, buf) === false) {
              buf.setLength(length);
              return true;
            }
          }
        } finally {
          if (this._optional) {
            context.endOptional();
          }
        }

        return true;
      };

      _proto.parse = function parse(context, text, position) {
        if (this._optional) {
          context.startOptional();
          var pos = position;

          for (var i = 0; i < this._printerParsers.length; i++) {
            var pp = this._printerParsers[i];
            pos = pp.parse(context, text, pos);

            if (pos < 0) {
              context.endOptional(false);
              return position;
            }
          }

          context.endOptional(true);
          return pos;
        } else {
          for (var _i = 0; _i < this._printerParsers.length; _i++) {
            var _pp = this._printerParsers[_i];
            position = _pp.parse(context, text, position);

            if (position < 0) {
              break;
            }
          }

          return position;
        }
      };

      _proto.toString = function toString() {
        var buf = '';

        if (this._printerParsers != null) {
          buf += this._optional ? '[' : '(';

          for (var i = 0; i < this._printerParsers.length; i++) {
            var pp = this._printerParsers[i];
            buf += pp.toString();
          }

          buf += this._optional ? ']' : ')';
        }

        return buf;
      };

      return CompositePrinterParser;
    }();

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var FractionPrinterParser = function () {
      function FractionPrinterParser(field, minWidth, maxWidth, decimalPoint) {
        requireNonNull(field, 'field');

        if (field.range().isFixed() === false) {
          throw new IllegalArgumentException('Field must have a fixed set of values: ' + field);
        }

        if (minWidth < 0 || minWidth > 9) {
          throw new IllegalArgumentException('Minimum width must be from 0 to 9 inclusive but was ' + minWidth);
        }

        if (maxWidth < 1 || maxWidth > 9) {
          throw new IllegalArgumentException('Maximum width must be from 1 to 9 inclusive but was ' + maxWidth);
        }

        if (maxWidth < minWidth) {
          throw new IllegalArgumentException('Maximum width must exceed or equal the minimum width but ' + maxWidth + ' < ' + minWidth);
        }

        this.field = field;
        this.minWidth = minWidth;
        this.maxWidth = maxWidth;
        this.decimalPoint = decimalPoint;
      }

      var _proto = FractionPrinterParser.prototype;

      _proto.print = function print(context, buf) {
        var value = context.getValue(this.field);

        if (value === null) {
          return false;
        }

        var symbols = context.symbols();

        if (value === 0) {
          if (this.minWidth > 0) {
            if (this.decimalPoint) {
              buf.append(symbols.decimalSeparator());
            }

            for (var i = 0; i < this.minWidth; i++) {
              buf.append(symbols.zeroDigit());
            }
          }
        } else {
          var fraction = this.convertToFraction(value, symbols.zeroDigit());
          var outputScale = Math.min(Math.max(fraction.length, this.minWidth), this.maxWidth);
          fraction = fraction.substr(0, outputScale);

          if (fraction * 1 > 0) {
            while (fraction.length > this.minWidth && fraction[fraction.length - 1] === '0') {
              fraction = fraction.substr(0, fraction.length - 1);
            }
          }

          var str = fraction;
          str = symbols.convertNumberToI18N(str);

          if (this.decimalPoint) {
            buf.append(symbols.decimalSeparator());
          }

          buf.append(str);
        }

        return true;
      };

      _proto.parse = function parse(context, text, position) {
        var effectiveMin = context.isStrict() ? this.minWidth : 0;
        var effectiveMax = context.isStrict() ? this.maxWidth : 9;
        var length = text.length;

        if (position === length) {
          return effectiveMin > 0 ? ~position : position;
        }

        if (this.decimalPoint) {
          if (text[position] !== context.symbols().decimalSeparator()) {
            return effectiveMin > 0 ? ~position : position;
          }

          position++;
        }

        var minEndPos = position + effectiveMin;

        if (minEndPos > length) {
          return ~position;
        }

        var maxEndPos = Math.min(position + effectiveMax, length);
        var total = 0;
        var pos = position;

        while (pos < maxEndPos) {
          var ch = text.charAt(pos++);
          var digit = context.symbols().convertToDigit(ch);

          if (digit < 0) {
            if (pos < minEndPos) {
              return ~position;
            }

            pos--;
            break;
          }

          total = total * 10 + digit;
        }

        var moveLeft = pos - position;
        var scale = Math.pow(10, moveLeft);
        var value = this.convertFromFraction(total, scale);
        return context.setParsedField(this.field, value, position, pos);
      };

      _proto.convertToFraction = function convertToFraction(value, zeroDigit) {
        var range = this.field.range();
        range.checkValidValue(value, this.field);

        var _min = range.minimum();

        var _range = range.maximum() - _min + 1;

        var _value = value - _min;

        var _scaled = MathUtil.intDiv(_value * 1000000000, _range);

        var fraction = '' + _scaled;

        while (fraction.length < 9) {
          fraction = zeroDigit + fraction;
        }

        return fraction;
      };

      _proto.convertFromFraction = function convertFromFraction(total, scale) {
        var range = this.field.range();

        var _min = range.minimum();

        var _range = range.maximum() - _min + 1;

        var _value = MathUtil.intDiv(total * _range, scale);

        return _value;
      };

      _proto.toString = function toString() {
        var decimal = this.decimalPoint ? ',DecimalPoint' : '';
        return 'Fraction(' + this.field + ',' + this.minWidth + ',' + this.maxWidth + decimal + ')';
      };

      return FractionPrinterParser;
    }();

    var MAX_WIDTH = 15;
    var EXCEED_POINTS = [0, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000];
    var NumberPrinterParser = function () {
      function NumberPrinterParser(field, minWidth, maxWidth, signStyle, subsequentWidth) {
        if (subsequentWidth === void 0) {
          subsequentWidth = 0;
        }

        this._field = field;
        this._minWidth = minWidth;
        this._maxWidth = maxWidth;
        this._signStyle = signStyle;
        this._subsequentWidth = subsequentWidth;
      }

      var _proto = NumberPrinterParser.prototype;

      _proto.field = function field() {
        return this._field;
      };

      _proto.minWidth = function minWidth() {
        return this._minWidth;
      };

      _proto.maxWidth = function maxWidth() {
        return this._maxWidth;
      };

      _proto.signStyle = function signStyle() {
        return this._signStyle;
      };

      _proto.withFixedWidth = function withFixedWidth() {
        if (this._subsequentWidth === -1) {
          return this;
        }

        return new NumberPrinterParser(this._field, this._minWidth, this._maxWidth, this._signStyle, -1);
      };

      _proto.withSubsequentWidth = function withSubsequentWidth(subsequentWidth) {
        return new NumberPrinterParser(this._field, this._minWidth, this._maxWidth, this._signStyle, this._subsequentWidth + subsequentWidth);
      };

      _proto._isFixedWidth = function _isFixedWidth() {
        return this._subsequentWidth === -1 || this._subsequentWidth > 0 && this._minWidth === this._maxWidth && this._signStyle === SignStyle.NOT_NEGATIVE;
      };

      _proto.print = function print(context, buf) {
        var contextValue = context.getValue(this._field);

        if (contextValue == null) {
          return false;
        }

        var value = this._getValue(context, contextValue);

        var symbols = context.symbols();
        var str = '' + Math.abs(value);

        if (str.length > this._maxWidth) {
          throw new DateTimeException('Field ' + this._field + ' cannot be printed as the value ' + value + ' exceeds the maximum print width of ' + this._maxWidth);
        }

        str = symbols.convertNumberToI18N(str);

        if (value >= 0) {
          switch (this._signStyle) {
            case SignStyle.EXCEEDS_PAD:
              if (this._minWidth < MAX_WIDTH && value >= EXCEED_POINTS[this._minWidth]) {
                buf.append(symbols.positiveSign());
              }

              break;

            case SignStyle.ALWAYS:
              buf.append(symbols.positiveSign());
              break;
          }
        } else {
          switch (this._signStyle) {
            case SignStyle.NORMAL:
            case SignStyle.EXCEEDS_PAD:
            case SignStyle.ALWAYS:
              buf.append(symbols.negativeSign());
              break;

            case SignStyle.NOT_NEGATIVE:
              throw new DateTimeException('Field ' + this._field + ' cannot be printed as the value ' + value + ' cannot be negative according to the SignStyle');
          }
        }

        for (var i = 0; i < this._minWidth - str.length; i++) {
          buf.append(symbols.zeroDigit());
        }

        buf.append(str);
        return true;
      };

      _proto.parse = function parse(context, text, position) {
        var length = text.length;

        if (position === length) {
          return ~position;
        }

        assert(position >= 0 && position < length);
        var sign = text.charAt(position);
        var negative = false;
        var positive = false;

        if (sign === context.symbols().positiveSign()) {
          if (this._signStyle.parse(true, context.isStrict(), this._minWidth === this._maxWidth) === false) {
            return ~position;
          }

          positive = true;
          position++;
        } else if (sign === context.symbols().negativeSign()) {
          if (this._signStyle.parse(false, context.isStrict(), this._minWidth === this._maxWidth) === false) {
            return ~position;
          }

          negative = true;
          position++;
        } else {
          if (this._signStyle === SignStyle.ALWAYS && context.isStrict()) {
            return ~position;
          }
        }

        var effMinWidth = context.isStrict() || this._isFixedWidth() ? this._minWidth : 1;
        var minEndPos = position + effMinWidth;

        if (minEndPos > length) {
          return ~position;
        }

        var effMaxWidth = (context.isStrict() || this._isFixedWidth() ? this._maxWidth : 9) + Math.max(this._subsequentWidth, 0);
        var total = 0;
        var pos = position;

        for (var pass = 0; pass < 2; pass++) {
          var maxEndPos = Math.min(pos + effMaxWidth, length);

          while (pos < maxEndPos) {
            var ch = text.charAt(pos++);
            var digit = context.symbols().convertToDigit(ch);

            if (digit < 0) {
              pos--;

              if (pos < minEndPos) {
                return ~position;
              }

              break;
            }

            if (pos - position > MAX_WIDTH) {
              throw new ArithmeticException('number text exceeds length');
            } else {
              total = total * 10 + digit;
            }
          }

          if (this._subsequentWidth > 0 && pass === 0) {
            var parseLen = pos - position;
            effMaxWidth = Math.max(effMinWidth, parseLen - this._subsequentWidth);
            pos = position;
            total = 0;
          } else {
            break;
          }
        }

        if (negative) {
          if (total === 0 && context.isStrict()) {
            return ~(position - 1);
          }

          if (total !== 0) {
            total = -total;
          }
        } else if (this._signStyle === SignStyle.EXCEEDS_PAD && context.isStrict()) {
          var _parseLen = pos - position;

          if (positive) {
            if (_parseLen <= this._minWidth) {
              return ~(position - 1);
            }
          } else {
            if (_parseLen > this._minWidth) {
              return ~position;
            }
          }
        }

        return this._setValue(context, total, position, pos);
      };

      _proto._getValue = function _getValue(context, value) {
        return value;
      };

      _proto._setValue = function _setValue(context, value, errorPos, successPos) {
        return context.setParsedField(this._field, value, errorPos, successPos);
      };

      _proto.toString = function toString() {
        if (this._minWidth === 1 && this._maxWidth === MAX_WIDTH && this._signStyle === SignStyle.NORMAL) {
          return 'Value(' + this._field + ')';
        }

        if (this._minWidth === this._maxWidth && this._signStyle === SignStyle.NOT_NEGATIVE) {
          return 'Value(' + this._field + ',' + this._minWidth + ')';
        }

        return 'Value(' + this._field + ',' + this._minWidth + ',' + this._maxWidth + ',' + this._signStyle + ')';
      };

      return NumberPrinterParser;
    }();
    var ReducedPrinterParser = function (_NumberPrinterParser) {
      _inheritsLoose(ReducedPrinterParser, _NumberPrinterParser);

      function ReducedPrinterParser(field, width, maxWidth, baseValue, baseDate) {
        var _this;

        _this = _NumberPrinterParser.call(this, field, width, maxWidth, SignStyle.NOT_NEGATIVE) || this;

        if (width < 1 || width > 10) {
          throw new IllegalArgumentException('The width must be from 1 to 10 inclusive but was ' + width);
        }

        if (maxWidth < 1 || maxWidth > 10) {
          throw new IllegalArgumentException('The maxWidth must be from 1 to 10 inclusive but was ' + maxWidth);
        }

        if (maxWidth < width) {
          throw new IllegalArgumentException('The maxWidth must be greater than the width');
        }

        if (baseDate === null) {
          if (field.range().isValidValue(baseValue) === false) {
            throw new IllegalArgumentException('The base value must be within the range of the field');
          }

          if (baseValue + EXCEED_POINTS[width] > MathUtil.MAX_SAFE_INTEGER) {
            throw new DateTimeException('Unable to add printer-parser as the range exceeds the capacity of an int');
          }
        }

        _this._baseValue = baseValue;
        _this._baseDate = baseDate;
        return _this;
      }

      var _proto2 = ReducedPrinterParser.prototype;

      _proto2._getValue = function _getValue(context, value) {
        var absValue = Math.abs(value);
        var baseValue = this._baseValue;

        if (this._baseDate !== null) {
          context.temporal();
          var chrono = IsoChronology.INSTANCE;
          baseValue = chrono.date(this._baseDate).get(this._field);
        }

        if (value >= baseValue && value < baseValue + EXCEED_POINTS[this._minWidth]) {
          return absValue % EXCEED_POINTS[this._minWidth];
        }

        return absValue % EXCEED_POINTS[this._maxWidth];
      };

      _proto2._setValue = function _setValue(context, value, errorPos, successPos) {
        var baseValue = this._baseValue;

        if (this._baseDate != null) {
          var chrono = context.getEffectiveChronology();
          baseValue = chrono.date(this._baseDate).get(this._field);
        }

        var parseLen = successPos - errorPos;

        if (parseLen === this._minWidth && value >= 0) {
          var range = EXCEED_POINTS[this._minWidth];
          var lastPart = baseValue % range;
          var basePart = baseValue - lastPart;

          if (baseValue > 0) {
            value = basePart + value;
          } else {
            value = basePart - value;
          }

          if (value < baseValue) {
            value += range;
          }
        }

        return context.setParsedField(this._field, value, errorPos, successPos);
      };

      _proto2.withFixedWidth = function withFixedWidth() {
        if (this._subsequentWidth === -1) {
          return this;
        }

        return new ReducedPrinterParser(this._field, this._minWidth, this._maxWidth, this._baseValue, this._baseDate, -1);
      };

      _proto2.withSubsequentWidth = function withSubsequentWidth(subsequentWidth) {
        return new ReducedPrinterParser(this._field, this._minWidth, this._maxWidth, this._baseValue, this._baseDate, this._subsequentWidth + subsequentWidth);
      };

      _proto2.isFixedWidth = function isFixedWidth(context) {
        if (context.isStrict() === false) {
          return false;
        }

        return _NumberPrinterParser.prototype.isFixedWidth.call(this, context);
      };

      _proto2.toString = function toString() {
        return 'ReducedValue(' + this._field + ',' + this._minWidth + ',' + this._maxWidth + ',' + (this._baseDate != null ? this._baseDate : this._baseValue) + ')';
      };

      return ReducedPrinterParser;
    }(NumberPrinterParser);

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var PATTERNS = ['+HH', '+HHmm', '+HH:mm', '+HHMM', '+HH:MM', '+HHMMss', '+HH:MM:ss', '+HHMMSS', '+HH:MM:SS'];
    var OffsetIdPrinterParser = function () {
      function OffsetIdPrinterParser(noOffsetText, pattern) {
        requireNonNull(noOffsetText, 'noOffsetText');
        requireNonNull(pattern, 'pattern');
        this.noOffsetText = noOffsetText;
        this.type = this._checkPattern(pattern);
      }

      var _proto = OffsetIdPrinterParser.prototype;

      _proto._checkPattern = function _checkPattern(pattern) {
        for (var i = 0; i < PATTERNS.length; i++) {
          if (PATTERNS[i] === pattern) {
            return i;
          }
        }

        throw new IllegalArgumentException('Invalid zone offset pattern: ' + pattern);
      };

      _proto.print = function print(context, buf) {
        var offsetSecs = context.getValue(ChronoField.OFFSET_SECONDS);

        if (offsetSecs == null) {
          return false;
        }

        var totalSecs = MathUtil.safeToInt(offsetSecs);

        if (totalSecs === 0) {
          buf.append(this.noOffsetText);
        } else {
          var absHours = Math.abs(MathUtil.intMod(MathUtil.intDiv(totalSecs, 3600), 100));
          var absMinutes = Math.abs(MathUtil.intMod(MathUtil.intDiv(totalSecs, 60), 60));
          var absSeconds = Math.abs(MathUtil.intMod(totalSecs, 60));
          var bufPos = buf.length();
          var output = absHours;
          buf.append(totalSecs < 0 ? '-' : '+').appendChar(MathUtil.intDiv(absHours, 10) + '0').appendChar(MathUtil.intMod(absHours, 10) + '0');

          if (this.type >= 3 || this.type >= 1 && absMinutes > 0) {
            buf.append(this.type % 2 === 0 ? ':' : '').appendChar(MathUtil.intDiv(absMinutes, 10) + '0').appendChar(absMinutes % 10 + '0');
            output += absMinutes;

            if (this.type >= 7 || this.type >= 5 && absSeconds > 0) {
              buf.append(this.type % 2 === 0 ? ':' : '').appendChar(MathUtil.intDiv(absSeconds, 10) + '0').appendChar(absSeconds % 10 + '0');
              output += absSeconds;
            }
          }

          if (output === 0) {
            buf.setLength(bufPos);
            buf.append(this.noOffsetText);
          }
        }

        return true;
      };

      _proto.parse = function parse(context, text, position) {
        var length = text.length;
        var noOffsetLen = this.noOffsetText.length;

        if (noOffsetLen === 0) {
          if (position === length) {
            return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position);
          }
        } else {
          if (position === length) {
            return ~position;
          }

          if (context.subSequenceEquals(text, position, this.noOffsetText, 0, noOffsetLen)) {
            return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position + noOffsetLen);
          }
        }

        var sign = text[position];

        if (sign === '+' || sign === '-') {
          var negative = sign === '-' ? -1 : 1;
          var array = [0, 0, 0, 0];
          array[0] = position + 1;

          if ((this._parseNumber(array, 1, text, true) || this._parseNumber(array, 2, text, this.type >= 3) || this._parseNumber(array, 3, text, false)) === false) {
            var offsetSecs = MathUtil.safeZero(negative * (array[1] * 3600 + array[2] * 60 + array[3]));
            return context.setParsedField(ChronoField.OFFSET_SECONDS, offsetSecs, position, array[0]);
          }
        }

        if (noOffsetLen === 0) {
          return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position + noOffsetLen);
        }

        return ~position;
      };

      _proto._parseNumber = function _parseNumber(array, arrayIndex, parseText, required) {
        if ((this.type + 3) / 2 < arrayIndex) {
          return false;
        }

        var pos = array[0];

        if (this.type % 2 === 0 && arrayIndex > 1) {
          if (pos + 1 > parseText.length || parseText[pos] !== ':') {
            return required;
          }

          pos++;
        }

        if (pos + 2 > parseText.length) {
          return required;
        }

        var ch1 = parseText[pos++];
        var ch2 = parseText[pos++];

        if (ch1 < '0' || ch1 > '9' || ch2 < '0' || ch2 > '9') {
          return required;
        }

        var value = (ch1.charCodeAt(0) - 48) * 10 + (ch2.charCodeAt(0) - 48);

        if (value < 0 || value > 59) {
          return required;
        }

        array[arrayIndex] = value;
        array[0] = pos;
        return false;
      };

      _proto.toString = function toString() {
        var converted = this.noOffsetText.replace('\'', '\'\'');
        return 'Offset(' + PATTERNS[this.type] + ',\'' + converted + '\')';
      };

      return OffsetIdPrinterParser;
    }();
    OffsetIdPrinterParser.INSTANCE_ID = new OffsetIdPrinterParser('Z', '+HH:MM:ss');
    OffsetIdPrinterParser.PATTERNS = PATTERNS;

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var PadPrinterParserDecorator = function () {
      function PadPrinterParserDecorator(printerParser, padWidth, padChar) {
        this._printerParser = printerParser;
        this._padWidth = padWidth;
        this._padChar = padChar;
      }

      var _proto = PadPrinterParserDecorator.prototype;

      _proto.print = function print(context, buf) {
        var preLen = buf.length();

        if (this._printerParser.print(context, buf) === false) {
          return false;
        }

        var len = buf.length() - preLen;

        if (len > this._padWidth) {
          throw new DateTimeException("Cannot print as output of " + len + " characters exceeds pad width of " + this._padWidth);
        }

        for (var i = 0; i < this._padWidth - len; i++) {
          buf.insert(preLen, this._padChar);
        }

        return true;
      };

      _proto.parse = function parse(context, text, position) {
        var strict = context.isStrict();
        var caseSensitive = context.isCaseSensitive();
        assert(!(position > text.length));
        assert(position >= 0);

        if (position === text.length) {
          return ~position;
        }

        var endPos = position + this._padWidth;

        if (endPos > text.length) {
          if (strict) {
            return ~position;
          }

          endPos = text.length;
        }

        var pos = position;

        while (pos < endPos && (caseSensitive ? text[pos] === this._padChar : context.charEquals(text[pos], this._padChar))) {
          pos++;
        }

        text = text.substring(0, endPos);

        var resultPos = this._printerParser.parse(context, text, pos);

        if (resultPos !== endPos && strict) {
          return ~(position + pos);
        }

        return resultPos;
      };

      _proto.toString = function toString() {
        return "Pad(" + this._printerParser + "," + this._padWidth + (this._padChar === ' ' ? ')' : ',\'' + this._padChar + '\')');
      };

      return PadPrinterParserDecorator;
    }();

    var SettingsParser = function (_Enum) {
      _inheritsLoose(SettingsParser, _Enum);

      function SettingsParser() {
        return _Enum.apply(this, arguments) || this;
      }

      var _proto = SettingsParser.prototype;

      _proto.print = function print() {
        return true;
      };

      _proto.parse = function parse(context, text, position) {
        switch (this) {
          case SettingsParser.SENSITIVE:
            context.setCaseSensitive(true);
            break;

          case SettingsParser.INSENSITIVE:
            context.setCaseSensitive(false);
            break;

          case SettingsParser.STRICT:
            context.setStrict(true);
            break;

          case SettingsParser.LENIENT:
            context.setStrict(false);
            break;
        }

        return position;
      };

      _proto.toString = function toString() {
        switch (this) {
          case SettingsParser.SENSITIVE:
            return 'ParseCaseSensitive(true)';

          case SettingsParser.INSENSITIVE:
            return 'ParseCaseSensitive(false)';

          case SettingsParser.STRICT:
            return 'ParseStrict(true)';

          case SettingsParser.LENIENT:
            return 'ParseStrict(false)';
        }
      };

      return SettingsParser;
    }(Enum);
    SettingsParser.SENSITIVE = new SettingsParser('SENSITIVE');
    SettingsParser.INSENSITIVE = new SettingsParser('INSENSITIVE');
    SettingsParser.STRICT = new SettingsParser('STRICT');
    SettingsParser.LENIENT = new SettingsParser('LENIENT');

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var StringLiteralPrinterParser = function () {
      function StringLiteralPrinterParser(literal) {
        this._literal = literal;
      }

      var _proto = StringLiteralPrinterParser.prototype;

      _proto.print = function print(context, buf) {
        buf.append(this._literal);
        return true;
      };

      _proto.parse = function parse(context, text, position) {
        var length = text.length;
        assert(!(position > length || position < 0));

        if (context.subSequenceEquals(text, position, this._literal, 0, this._literal.length) === false) {
          return ~position;
        }

        return position + this._literal.length;
      };

      _proto.toString = function toString() {
        var converted = this._literal.replace("'", "''");

        return '\'' + converted + '\'';
      };

      return StringLiteralPrinterParser;
    }();

    /*
     * @copyright (c) 2016, Philipp Thürwächter, Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var ZoneRulesProvider = function () {
      function ZoneRulesProvider() {}

      ZoneRulesProvider.getRules = function getRules(zoneId) {
        throw new DateTimeException('unsupported ZoneId:' + zoneId);
      };

      ZoneRulesProvider.getAvailableZoneIds = function getAvailableZoneIds() {
        return [];
      };

      return ZoneRulesProvider;
    }();

    var ZoneRegion = function (_ZoneId) {
      _inheritsLoose(ZoneRegion, _ZoneId);

      ZoneRegion.ofId = function ofId(zoneId) {
        var rules = ZoneRulesProvider.getRules(zoneId);
        return new ZoneRegion(zoneId, rules);
      };

      function ZoneRegion(id, rules) {
        var _this;

        _this = _ZoneId.call(this) || this;
        _this._id = id;
        _this._rules = rules;
        return _this;
      }

      var _proto = ZoneRegion.prototype;

      _proto.id = function id() {
        return this._id;
      };

      _proto.rules = function rules() {
        return this._rules;
      };

      return ZoneRegion;
    }(ZoneId);

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var ZoneIdPrinterParser = function () {
      function ZoneIdPrinterParser(query, description) {
        this.query = query;
        this.description = description;
      }

      var _proto = ZoneIdPrinterParser.prototype;

      _proto.print = function print(context, buf) {
        var zone = context.getValueQuery(this.query);

        if (zone == null) {
          return false;
        }

        buf.append(zone.id());
        return true;
      };

      _proto.parse = function parse(context, text, position) {
        var length = text.length;

        if (position > length) {
          return ~position;
        }

        if (position === length) {
          return ~position;
        }

        var nextChar = text.charAt(position);

        if (nextChar === '+' || nextChar === '-') {
          var newContext = context.copy();
          var endPos = OffsetIdPrinterParser.INSTANCE_ID.parse(newContext, text, position);

          if (endPos < 0) {
            return endPos;
          }

          var offset = newContext.getParsed(ChronoField.OFFSET_SECONDS);
          var zone = ZoneOffset.ofTotalSeconds(offset);
          context.setParsedZone(zone);
          return endPos;
        } else if (length >= position + 2) {
          var nextNextChar = text.charAt(position + 1);

          if (context.charEquals(nextChar, 'U') && context.charEquals(nextNextChar, 'T')) {
            if (length >= position + 3 && context.charEquals(text.charAt(position + 2), 'C')) {
              return this._parsePrefixedOffset(context, text, position, position + 3);
            }

            return this._parsePrefixedOffset(context, text, position, position + 2);
          } else if (context.charEquals(nextChar, 'G') && length >= position + 3 && context.charEquals(nextNextChar, 'M') && context.charEquals(text.charAt(position + 2), 'T')) {
            return this._parsePrefixedOffset(context, text, position, position + 3);
          }
        }

        if (text.substr(position, 6) === 'SYSTEM') {
          context.setParsedZone(ZoneId.systemDefault());
          return position + 6;
        }

        if (context.charEquals(nextChar, 'Z')) {
          context.setParsedZone(ZoneOffset.UTC);
          return position + 1;
        }

        var availableZoneIds = ZoneRulesProvider.getAvailableZoneIds();

        if (zoneIdTree.size !== availableZoneIds.length) {
          zoneIdTree = ZoneIdTree.createTreeMap(availableZoneIds);
        }

        var maxParseLength = length - position;
        var treeMap = zoneIdTree.treeMap;
        var parsedZoneId = null;
        var parseLength = 0;

        while (treeMap != null) {
          var parsedSubZoneId = text.substr(position, Math.min(treeMap.length, maxParseLength));
          treeMap = treeMap.get(parsedSubZoneId);

          if (treeMap != null && treeMap.isLeaf) {
            parsedZoneId = parsedSubZoneId;
            parseLength = treeMap.length;
          }
        }

        if (parsedZoneId != null) {
          context.setParsedZone(ZoneRegion.ofId(parsedZoneId));
          return position + parseLength;
        }

        return ~position;
      };

      _proto._parsePrefixedOffset = function _parsePrefixedOffset(context, text, prefixPos, position) {
        var prefix = text.substring(prefixPos, position).toUpperCase();
        var newContext = context.copy();

        if (position < text.length && context.charEquals(text.charAt(position), 'Z')) {
          context.setParsedZone(ZoneId.ofOffset(prefix, ZoneOffset.UTC));
          return position;
        }

        var endPos = OffsetIdPrinterParser.INSTANCE_ID.parse(newContext, text, position);

        if (endPos < 0) {
          context.setParsedZone(ZoneId.ofOffset(prefix, ZoneOffset.UTC));
          return position;
        }

        var offsetSecs = newContext.getParsed(ChronoField.OFFSET_SECONDS);
        var offset = ZoneOffset.ofTotalSeconds(offsetSecs);
        context.setParsedZone(ZoneId.ofOffset(prefix, offset));
        return endPos;
      };

      _proto.toString = function toString() {
        return this.description;
      };

      return ZoneIdPrinterParser;
    }();

    var ZoneIdTree = function () {
      ZoneIdTree.createTreeMap = function createTreeMap(availableZoneIds) {
        var sortedZoneIds = availableZoneIds.sort(function (a, b) {
          return a.length - b.length;
        });
        var treeMap = new ZoneIdTreeMap(sortedZoneIds[0].length, false);

        for (var i = 0; i < sortedZoneIds.length; i++) {
          treeMap.add(sortedZoneIds[i]);
        }

        return new ZoneIdTree(sortedZoneIds.length, treeMap);
      };

      function ZoneIdTree(size, treeMap) {
        this.size = size;
        this.treeMap = treeMap;
      }

      return ZoneIdTree;
    }();

    var ZoneIdTreeMap = function () {
      function ZoneIdTreeMap(length, isLeaf) {
        if (length === void 0) {
          length = 0;
        }

        if (isLeaf === void 0) {
          isLeaf = false;
        }

        this.length = length;
        this.isLeaf = isLeaf;
        this._treeMap = {};
      }

      var _proto2 = ZoneIdTreeMap.prototype;

      _proto2.add = function add(zoneId) {
        var idLength = zoneId.length;

        if (idLength === this.length) {
          this._treeMap[zoneId] = new ZoneIdTreeMap(idLength, true);
        } else if (idLength > this.length) {
          var subZoneId = zoneId.substr(0, this.length);
          var subTreeMap = this._treeMap[subZoneId];

          if (subTreeMap == null) {
            subTreeMap = new ZoneIdTreeMap(idLength, false);
            this._treeMap[subZoneId] = subTreeMap;
          }

          subTreeMap.add(zoneId);
        }
      };

      _proto2.get = function get(zoneId) {
        return this._treeMap[zoneId];
      };

      return ZoneIdTreeMap;
    }();

    var zoneIdTree = new ZoneIdTree([]);

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var MAX_WIDTH$1 = 15;
    var DateTimeFormatterBuilder = function () {
      function DateTimeFormatterBuilder() {
        this._active = this;
        this._parent = null;
        this._printerParsers = [];
        this._optional = false;
        this._padNextWidth = 0;
        this._padNextChar = null;
        this._valueParserIndex = -1;
      }

      DateTimeFormatterBuilder._of = function _of(parent, optional) {
        requireNonNull(parent, 'parent');
        requireNonNull(optional, 'optional');
        var dtFormatterBuilder = new DateTimeFormatterBuilder();
        dtFormatterBuilder._parent = parent;
        dtFormatterBuilder._optional = optional;
        return dtFormatterBuilder;
      };

      var _proto = DateTimeFormatterBuilder.prototype;

      _proto.parseCaseSensitive = function parseCaseSensitive() {
        this._appendInternalPrinterParser(SettingsParser.SENSITIVE);

        return this;
      };

      _proto.parseCaseInsensitive = function parseCaseInsensitive() {
        this._appendInternalPrinterParser(SettingsParser.INSENSITIVE);

        return this;
      };

      _proto.parseStrict = function parseStrict() {
        this._appendInternalPrinterParser(SettingsParser.STRICT);

        return this;
      };

      _proto.parseLenient = function parseLenient() {
        this._appendInternalPrinterParser(SettingsParser.LENIENT);

        return this;
      };

      _proto.appendValue = function appendValue() {
        if (arguments.length === 1) {
          return this._appendValue1.apply(this, arguments);
        } else if (arguments.length === 2) {
          return this._appendValue2.apply(this, arguments);
        } else {
          return this._appendValue4.apply(this, arguments);
        }
      };

      _proto._appendValue1 = function _appendValue1(field) {
        requireNonNull(field);

        this._appendValuePrinterParser(new NumberPrinterParser(field, 1, MAX_WIDTH$1, SignStyle.NORMAL));

        return this;
      };

      _proto._appendValue2 = function _appendValue2(field, width) {
        requireNonNull(field);

        if (width < 1 || width > MAX_WIDTH$1) {
          throw new IllegalArgumentException("The width must be from 1 to " + MAX_WIDTH$1 + " inclusive but was " + width);
        }

        var pp = new NumberPrinterParser(field, width, width, SignStyle.NOT_NEGATIVE);

        this._appendValuePrinterParser(pp);

        return this;
      };

      _proto._appendValue4 = function _appendValue4(field, minWidth, maxWidth, signStyle) {
        requireNonNull(field);
        requireNonNull(signStyle);

        if (minWidth === maxWidth && signStyle === SignStyle.NOT_NEGATIVE) {
          return this._appendValue2(field, maxWidth);
        }

        if (minWidth < 1 || minWidth > MAX_WIDTH$1) {
          throw new IllegalArgumentException("The minimum width must be from 1 to " + MAX_WIDTH$1 + " inclusive but was " + minWidth);
        }

        if (maxWidth < 1 || maxWidth > MAX_WIDTH$1) {
          throw new IllegalArgumentException("The minimum width must be from 1 to " + MAX_WIDTH$1 + " inclusive but was " + maxWidth);
        }

        if (maxWidth < minWidth) {
          throw new IllegalArgumentException("The maximum width must exceed or equal the minimum width but " + maxWidth + " < " + minWidth);
        }

        var pp = new NumberPrinterParser(field, minWidth, maxWidth, signStyle);

        this._appendValuePrinterParser(pp);

        return this;
      };

      _proto.appendValueReduced = function appendValueReduced() {
        if (arguments.length === 4 && arguments[3] instanceof ChronoLocalDate) {
          return this._appendValueReducedFieldWidthMaxWidthBaseDate.apply(this, arguments);
        } else {
          return this._appendValueReducedFieldWidthMaxWidthBaseValue.apply(this, arguments);
        }
      };

      _proto._appendValueReducedFieldWidthMaxWidthBaseValue = function _appendValueReducedFieldWidthMaxWidthBaseValue(field, width, maxWidth, baseValue) {
        requireNonNull(field, 'field');
        var pp = new ReducedPrinterParser(field, width, maxWidth, baseValue, null);

        this._appendValuePrinterParser(pp);

        return this;
      };

      _proto._appendValueReducedFieldWidthMaxWidthBaseDate = function _appendValueReducedFieldWidthMaxWidthBaseDate(field, width, maxWidth, baseDate) {
        requireNonNull(field, 'field');
        requireNonNull(baseDate, 'baseDate');
        requireInstance(baseDate, ChronoLocalDate, 'baseDate');
        var pp = new ReducedPrinterParser(field, width, maxWidth, 0, baseDate);

        this._appendValuePrinterParser(pp);

        return this;
      };

      _proto._appendValuePrinterParser = function _appendValuePrinterParser(pp) {
        assert(pp != null);

        if (this._active._valueParserIndex >= 0 && this._active._printerParsers[this._active._valueParserIndex] instanceof NumberPrinterParser) {
          var activeValueParser = this._active._valueParserIndex;
          var basePP = this._active._printerParsers[activeValueParser];

          if (pp.minWidth() === pp.maxWidth() && pp.signStyle() === SignStyle.NOT_NEGATIVE) {
            basePP = basePP.withSubsequentWidth(pp.maxWidth());

            this._appendInternal(pp.withFixedWidth());

            this._active._valueParserIndex = activeValueParser;
          } else {
            basePP = basePP.withFixedWidth();
            this._active._valueParserIndex = this._appendInternal(pp);
          }

          this._active._printerParsers[activeValueParser] = basePP;
        } else {
          this._active._valueParserIndex = this._appendInternal(pp);
        }

        return this;
      };

      _proto.appendFraction = function appendFraction(field, minWidth, maxWidth, decimalPoint) {
        this._appendInternal(new FractionPrinterParser(field, minWidth, maxWidth, decimalPoint));

        return this;
      };

      _proto.appendInstant = function appendInstant(fractionalDigits) {
        if (fractionalDigits === void 0) {
          fractionalDigits = -2;
        }

        if (fractionalDigits < -2 || fractionalDigits > 9) {
          throw new IllegalArgumentException('Invalid fractional digits: ' + fractionalDigits);
        }

        this._appendInternal(new InstantPrinterParser(fractionalDigits));

        return this;
      };

      _proto.appendOffsetId = function appendOffsetId() {
        this._appendInternal(OffsetIdPrinterParser.INSTANCE_ID);

        return this;
      };

      _proto.appendOffset = function appendOffset(pattern, noOffsetText) {
        this._appendInternalPrinterParser(new OffsetIdPrinterParser(noOffsetText, pattern));

        return this;
      };

      _proto.appendZoneId = function appendZoneId() {
        this._appendInternal(new ZoneIdPrinterParser(TemporalQueries.zoneId(), 'ZoneId()'));

        return this;
      };

      _proto.appendPattern = function appendPattern(pattern) {
        requireNonNull(pattern, 'pattern');

        this._parsePattern(pattern);

        return this;
      };

      _proto.appendZoneText = function appendZoneText() {
        throw new IllegalArgumentException('Pattern using (localized) text not implemented, use js-joda-locale plugin!');
      };

      _proto.appendText = function appendText() {
        throw new IllegalArgumentException('Pattern using (localized) text not implemented, use js-joda-locale plugin!');
      };

      _proto.appendLocalizedOffset = function appendLocalizedOffset() {
        throw new IllegalArgumentException('Pattern using (localized) text not implemented, use js-joda-locale plugin!');
      };

      _proto.appendWeekField = function appendWeekField() {
        throw new IllegalArgumentException('Pattern using (localized) text not implemented, use js-joda-locale plugin!');
      };

      _proto._parsePattern = function _parsePattern(pattern) {
        var FIELD_MAP = {
          'G': ChronoField.ERA,
          'y': ChronoField.YEAR_OF_ERA,
          'u': ChronoField.YEAR,
          'Q': IsoFields.QUARTER_OF_YEAR,
          'q': IsoFields.QUARTER_OF_YEAR,
          'M': ChronoField.MONTH_OF_YEAR,
          'L': ChronoField.MONTH_OF_YEAR,
          'D': ChronoField.DAY_OF_YEAR,
          'd': ChronoField.DAY_OF_MONTH,
          'F': ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH,
          'E': ChronoField.DAY_OF_WEEK,
          'c': ChronoField.DAY_OF_WEEK,
          'e': ChronoField.DAY_OF_WEEK,
          'a': ChronoField.AMPM_OF_DAY,
          'H': ChronoField.HOUR_OF_DAY,
          'k': ChronoField.CLOCK_HOUR_OF_DAY,
          'K': ChronoField.HOUR_OF_AMPM,
          'h': ChronoField.CLOCK_HOUR_OF_AMPM,
          'm': ChronoField.MINUTE_OF_HOUR,
          's': ChronoField.SECOND_OF_MINUTE,
          'S': ChronoField.NANO_OF_SECOND,
          'A': ChronoField.MILLI_OF_DAY,
          'n': ChronoField.NANO_OF_SECOND,
          'N': ChronoField.NANO_OF_DAY
        };

        for (var pos = 0; pos < pattern.length; pos++) {
          var cur = pattern.charAt(pos);

          if (cur >= 'A' && cur <= 'Z' || cur >= 'a' && cur <= 'z') {
            var start = pos++;

            for (; pos < pattern.length && pattern.charAt(pos) === cur; pos++) {
            }

            var count = pos - start;

            if (cur === 'p') {
              var pad = 0;

              if (pos < pattern.length) {
                cur = pattern.charAt(pos);

                if (cur >= 'A' && cur <= 'Z' || cur >= 'a' && cur <= 'z') {
                  pad = count;
                  start = pos++;

                  for (; pos < pattern.length && pattern.charAt(pos) === cur; pos++) {
                  }

                  count = pos - start;
                }
              }

              if (pad === 0) {
                throw new IllegalArgumentException('Pad letter \'p\' must be followed by valid pad pattern: ' + pattern);
              }

              this.padNext(pad);
            }

            var field = FIELD_MAP[cur];

            if (field != null) {
              this._parseField(cur, count, field);
            } else if (cur === 'z') {
              if (count > 4) {
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
              } else if (count === 4) {
                this.appendZoneText(TextStyle.FULL);
              } else {
                this.appendZoneText(TextStyle.SHORT);
              }
            } else if (cur === 'V') {
              if (count !== 2) {
                throw new IllegalArgumentException('Pattern letter count must be 2: ' + cur);
              }

              this.appendZoneId();
            } else if (cur === 'Z') {
              if (count < 4) {
                this.appendOffset('+HHMM', '+0000');
              } else if (count === 4) {
                this.appendLocalizedOffset(TextStyle.FULL);
              } else if (count === 5) {
                this.appendOffset('+HH:MM:ss', 'Z');
              } else {
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
              }
            } else if (cur === 'O') {
              if (count === 1) {
                this.appendLocalizedOffset(TextStyle.SHORT);
              } else if (count === 4) {
                this.appendLocalizedOffset(TextStyle.FULL);
              } else {
                throw new IllegalArgumentException('Pattern letter count must be 1 or 4: ' + cur);
              }
            } else if (cur === 'X') {
              if (count > 5) {
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
              }

              this.appendOffset(OffsetIdPrinterParser.PATTERNS[count + (count === 1 ? 0 : 1)], 'Z');
            } else if (cur === 'x') {
              if (count > 5) {
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
              }

              var zero = count === 1 ? '+00' : count % 2 === 0 ? '+0000' : '+00:00';
              this.appendOffset(OffsetIdPrinterParser.PATTERNS[count + (count === 1 ? 0 : 1)], zero);
            } else if (cur === 'W') {
              if (count > 1) {
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
              }

              this.appendWeekField('W', count);
            } else if (cur === 'w') {
              if (count > 2) {
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
              }

              this.appendWeekField('w', count);
            } else if (cur === 'Y') {
              this.appendWeekField('Y', count);
            } else {
              throw new IllegalArgumentException('Unknown pattern letter: ' + cur);
            }

            pos--;
          } else if (cur === '\'') {
            var _start = pos++;

            for (; pos < pattern.length; pos++) {
              if (pattern.charAt(pos) === '\'') {
                if (pos + 1 < pattern.length && pattern.charAt(pos + 1) === '\'') {
                  pos++;
                } else {
                  break;
                }
              }
            }

            if (pos >= pattern.length) {
              throw new IllegalArgumentException('Pattern ends with an incomplete string literal: ' + pattern);
            }

            var str = pattern.substring(_start + 1, pos);

            if (str.length === 0) {
              this.appendLiteral('\'');
            } else {
              this.appendLiteral(str.replace('\'\'', '\''));
            }
          } else if (cur === '[') {
            this.optionalStart();
          } else if (cur === ']') {
            if (this._active._parent === null) {
              throw new IllegalArgumentException('Pattern invalid as it contains ] without previous [');
            }

            this.optionalEnd();
          } else if (cur === '{' || cur === '}' || cur === '#') {
            throw new IllegalArgumentException('Pattern includes reserved character: \'' + cur + '\'');
          } else {
            this.appendLiteral(cur);
          }
        }
      };

      _proto._parseField = function _parseField(cur, count, field) {
        switch (cur) {
          case 'u':
          case 'y':
            if (count === 2) {
              this.appendValueReduced(field, 2, 2, ReducedPrinterParser.BASE_DATE);
            } else if (count < 4) {
              this.appendValue(field, count, MAX_WIDTH$1, SignStyle.NORMAL);
            } else {
              this.appendValue(field, count, MAX_WIDTH$1, SignStyle.EXCEEDS_PAD);
            }

            break;

          case 'M':
          case 'Q':
            switch (count) {
              case 1:
                this.appendValue(field);
                break;

              case 2:
                this.appendValue(field, 2);
                break;

              case 3:
                this.appendText(field, TextStyle.SHORT);
                break;

              case 4:
                this.appendText(field, TextStyle.FULL);
                break;

              case 5:
                this.appendText(field, TextStyle.NARROW);
                break;

              default:
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
            }

            break;

          case 'L':
          case 'q':
            switch (count) {
              case 1:
                this.appendValue(field);
                break;

              case 2:
                this.appendValue(field, 2);
                break;

              case 3:
                this.appendText(field, TextStyle.SHORT_STANDALONE);
                break;

              case 4:
                this.appendText(field, TextStyle.FULL_STANDALONE);
                break;

              case 5:
                this.appendText(field, TextStyle.NARROW_STANDALONE);
                break;

              default:
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
            }

            break;

          case 'e':
            switch (count) {
              case 1:
              case 2:
                this.appendWeekField('e', count);
                break;

              case 3:
                this.appendText(field, TextStyle.SHORT);
                break;

              case 4:
                this.appendText(field, TextStyle.FULL);
                break;

              case 5:
                this.appendText(field, TextStyle.NARROW);
                break;

              default:
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
            }

            break;

          case 'c':
            switch (count) {
              case 1:
                this.appendWeekField('c', count);
                break;

              case 2:
                throw new IllegalArgumentException('Invalid number of pattern letters: ' + cur);

              case 3:
                this.appendText(field, TextStyle.SHORT_STANDALONE);
                break;

              case 4:
                this.appendText(field, TextStyle.FULL_STANDALONE);
                break;

              case 5:
                this.appendText(field, TextStyle.NARROW_STANDALONE);
                break;

              default:
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
            }

            break;

          case 'a':
            if (count === 1) {
              this.appendText(field, TextStyle.SHORT);
            } else {
              throw new IllegalArgumentException('Too many pattern letters: ' + cur);
            }

            break;

          case 'E':
          case 'G':
            switch (count) {
              case 1:
              case 2:
              case 3:
                this.appendText(field, TextStyle.SHORT);
                break;

              case 4:
                this.appendText(field, TextStyle.FULL);
                break;

              case 5:
                this.appendText(field, TextStyle.NARROW);
                break;

              default:
                throw new IllegalArgumentException('Too many pattern letters: ' + cur);
            }

            break;

          case 'S':
            this.appendFraction(ChronoField.NANO_OF_SECOND, count, count, false);
            break;

          case 'F':
            if (count === 1) {
              this.appendValue(field);
            } else {
              throw new IllegalArgumentException('Too many pattern letters: ' + cur);
            }

            break;

          case 'd':
          case 'h':
          case 'H':
          case 'k':
          case 'K':
          case 'm':
          case 's':
            if (count === 1) {
              this.appendValue(field);
            } else if (count === 2) {
              this.appendValue(field, count);
            } else {
              throw new IllegalArgumentException('Too many pattern letters: ' + cur);
            }

            break;

          case 'D':
            if (count === 1) {
              this.appendValue(field);
            } else if (count <= 3) {
              this.appendValue(field, count);
            } else {
              throw new IllegalArgumentException('Too many pattern letters: ' + cur);
            }

            break;

          default:
            if (count === 1) {
              this.appendValue(field);
            } else {
              this.appendValue(field, count);
            }

            break;
        }
      };

      _proto.padNext = function padNext() {
        if (arguments.length === 1) {
          return this._padNext1.apply(this, arguments);
        } else {
          return this._padNext2.apply(this, arguments);
        }
      };

      _proto._padNext1 = function _padNext1(padWidth) {
        return this._padNext2(padWidth, ' ');
      };

      _proto._padNext2 = function _padNext2(padWidth, padChar) {
        if (padWidth < 1) {
          throw new IllegalArgumentException('The pad width must be at least one but was ' + padWidth);
        }

        this._active._padNextWidth = padWidth;
        this._active._padNextChar = padChar;
        this._active._valueParserIndex = -1;
        return this;
      };

      _proto.optionalStart = function optionalStart() {
        this._active._valueParserIndex = -1;
        this._active = DateTimeFormatterBuilder._of(this._active, true);
        return this;
      };

      _proto.optionalEnd = function optionalEnd() {
        if (this._active._parent == null) {
          throw new IllegalStateException('Cannot call optionalEnd() as there was no previous call to optionalStart()');
        }

        if (this._active._printerParsers.length > 0) {
          var cpp = new CompositePrinterParser(this._active._printerParsers, this._active._optional);
          this._active = this._active._parent;

          this._appendInternal(cpp);
        } else {
          this._active = this._active._parent;
        }

        return this;
      };

      _proto._appendInternal = function _appendInternal(pp) {
        assert(pp != null);

        if (this._active._padNextWidth > 0) {
          if (pp != null) {
            pp = new PadPrinterParserDecorator(pp, this._active._padNextWidth, this._active._padNextChar);
          }

          this._active._padNextWidth = 0;
          this._active._padNextChar = 0;
        }

        this._active._printerParsers.push(pp);

        this._active._valueParserIndex = -1;
        return this._active._printerParsers.length - 1;
      };

      _proto.appendLiteral = function appendLiteral(literal) {
        assert(literal != null);

        if (literal.length > 0) {
          if (literal.length === 1) {
            this._appendInternalPrinterParser(new CharLiteralPrinterParser(literal.charAt(0)));
          } else {
            this._appendInternalPrinterParser(new StringLiteralPrinterParser(literal));
          }
        }

        return this;
      };

      _proto._appendInternalPrinterParser = function _appendInternalPrinterParser(pp) {
        assert(pp != null);

        if (this._active._padNextWidth > 0) {
          if (pp != null) {
            pp = new PadPrinterParserDecorator(pp, this._active._padNextWidth, this._active._padNextChar);
          }

          this._active._padNextWidth = 0;
          this._active._padNextChar = 0;
        }

        this._active._printerParsers.push(pp);

        this._active._valueParserIndex = -1;
        return this._active._printerParsers.length - 1;
      };

      _proto.append = function append(formatter) {
        requireNonNull(formatter, 'formatter');

        this._appendInternal(formatter._toPrinterParser(false));

        return this;
      };

      _proto.toFormatter = function toFormatter(resolverStyle) {
        if (resolverStyle === void 0) {
          resolverStyle = ResolverStyle.SMART;
        }

        while (this._active._parent != null) {
          this.optionalEnd();
        }

        var pp = new CompositePrinterParser(this._printerParsers, false);
        return new DateTimeFormatter(pp, null, DecimalStyle.STANDARD, resolverStyle, null, null, null);
      };

      return DateTimeFormatterBuilder;
    }();
    var SECONDS_PER_10000_YEARS = 146097 * 25 * 86400;
    var SECONDS_0000_TO_1970 = (146097 * 5 - (30 * 365 + 7)) * 86400;

    var InstantPrinterParser = function () {
      function InstantPrinterParser(fractionalDigits) {
        this.fractionalDigits = fractionalDigits;
      }

      var _proto2 = InstantPrinterParser.prototype;

      _proto2.print = function print(context, buf) {
        var inSecs = context.getValue(ChronoField.INSTANT_SECONDS);
        var inNanos = 0;

        if (context.temporal().isSupported(ChronoField.NANO_OF_SECOND)) {
          inNanos = context.temporal().getLong(ChronoField.NANO_OF_SECOND);
        }

        if (inSecs == null) {
          return false;
        }

        var inSec = inSecs;
        var inNano = ChronoField.NANO_OF_SECOND.checkValidIntValue(inNanos);

        if (inSec >= -SECONDS_0000_TO_1970) {
          var zeroSecs = inSec - SECONDS_PER_10000_YEARS + SECONDS_0000_TO_1970;
          var hi = MathUtil.floorDiv(zeroSecs, SECONDS_PER_10000_YEARS) + 1;
          var lo = MathUtil.floorMod(zeroSecs, SECONDS_PER_10000_YEARS);
          var ldt = LocalDateTime.ofEpochSecond(lo - SECONDS_0000_TO_1970, 0, ZoneOffset.UTC);

          if (hi > 0) {
            buf.append('+').append(hi);
          }

          buf.append(ldt);

          if (ldt.second() === 0) {
            buf.append(':00');
          }
        } else {
          var _zeroSecs = inSec + SECONDS_0000_TO_1970;

          var _hi = MathUtil.intDiv(_zeroSecs, SECONDS_PER_10000_YEARS);

          var _lo = MathUtil.intMod(_zeroSecs, SECONDS_PER_10000_YEARS);

          var _ldt = LocalDateTime.ofEpochSecond(_lo - SECONDS_0000_TO_1970, 0, ZoneOffset.UTC);

          var pos = buf.length();
          buf.append(_ldt);

          if (_ldt.second() === 0) {
            buf.append(':00');
          }

          if (_hi < 0) {
            if (_ldt.year() === -10000) {
              buf.replace(pos, pos + 2, '' + (_hi - 1));
            } else if (_lo === 0) {
              buf.insert(pos, _hi);
            } else {
              buf.insert(pos + 1, Math.abs(_hi));
            }
          }
        }

        if (this.fractionalDigits === -2) {
          if (inNano !== 0) {
            buf.append('.');

            if (MathUtil.intMod(inNano, 1000000) === 0) {
              buf.append(('' + (MathUtil.intDiv(inNano, 1000000) + 1000)).substring(1));
            } else if (MathUtil.intMod(inNano, 1000) === 0) {
              buf.append(('' + (MathUtil.intDiv(inNano, 1000) + 1000000)).substring(1));
            } else {
              buf.append(('' + (inNano + 1000000000)).substring(1));
            }
          }
        } else if (this.fractionalDigits > 0 || this.fractionalDigits === -1 && inNano > 0) {
          buf.append('.');
          var div = 100000000;

          for (var i = 0; this.fractionalDigits === -1 && inNano > 0 || i < this.fractionalDigits; i++) {
            var digit = MathUtil.intDiv(inNano, div);
            buf.append(digit);
            inNano = inNano - digit * div;
            div = MathUtil.intDiv(div, 10);
          }
        }

        buf.append('Z');
        return true;
      };

      _proto2.parse = function parse(context, text, position) {
        var newContext = context.copy();
        var minDigits = this.fractionalDigits < 0 ? 0 : this.fractionalDigits;
        var maxDigits = this.fractionalDigits < 0 ? 9 : this.fractionalDigits;

        var parser = new DateTimeFormatterBuilder().append(DateTimeFormatter.ISO_LOCAL_DATE).appendLiteral('T').appendValue(ChronoField.HOUR_OF_DAY, 2).appendLiteral(':').appendValue(ChronoField.MINUTE_OF_HOUR, 2).appendLiteral(':').appendValue(ChronoField.SECOND_OF_MINUTE, 2).appendFraction(ChronoField.NANO_OF_SECOND, minDigits, maxDigits, true).appendLiteral('Z').toFormatter()._toPrinterParser(false);

        var pos = parser.parse(newContext, text, position);

        if (pos < 0) {
          return pos;
        }

        var yearParsed = newContext.getParsed(ChronoField.YEAR);
        var month = newContext.getParsed(ChronoField.MONTH_OF_YEAR);
        var day = newContext.getParsed(ChronoField.DAY_OF_MONTH);
        var hour = newContext.getParsed(ChronoField.HOUR_OF_DAY);
        var min = newContext.getParsed(ChronoField.MINUTE_OF_HOUR);
        var secVal = newContext.getParsed(ChronoField.SECOND_OF_MINUTE);
        var nanoVal = newContext.getParsed(ChronoField.NANO_OF_SECOND);
        var sec = secVal != null ? secVal : 0;
        var nano = nanoVal != null ? nanoVal : 0;
        var year = MathUtil.intMod(yearParsed, 10000);
        var days = 0;

        if (hour === 24 && min === 0 && sec === 0 && nano === 0) {
          hour = 0;
          days = 1;
        } else if (hour === 23 && min === 59 && sec === 60) {
          context.setParsedLeapSecond();
          sec = 59;
        }

        var instantSecs;

        try {
          var ldt = LocalDateTime.of(year, month, day, hour, min, sec, 0).plusDays(days);
          instantSecs = ldt.toEpochSecond(ZoneOffset.UTC);
          instantSecs += MathUtil.safeMultiply(MathUtil.intDiv(yearParsed, 10000), SECONDS_PER_10000_YEARS);
        } catch (ex) {
          return ~position;
        }

        var successPos = pos;
        successPos = context.setParsedField(ChronoField.INSTANT_SECONDS, instantSecs, position, successPos);
        return context.setParsedField(ChronoField.NANO_OF_SECOND, nano, position, successPos);
      };

      _proto2.toString = function toString() {
        return 'Instant()';
      };

      return InstantPrinterParser;
    }();

    function _init$9() {
      ReducedPrinterParser.BASE_DATE = LocalDate.of(2000, 1, 1);
      DateTimeFormatterBuilder.CompositePrinterParser = CompositePrinterParser;
      DateTimeFormatterBuilder.PadPrinterParserDecorator = PadPrinterParserDecorator;
      DateTimeFormatterBuilder.SettingsParser = SettingsParser;
      DateTimeFormatterBuilder.CharLiteralPrinterParser = StringLiteralPrinterParser;
      DateTimeFormatterBuilder.StringLiteralPrinterParser = StringLiteralPrinterParser;
      DateTimeFormatterBuilder.CharLiteralPrinterParser = CharLiteralPrinterParser;
      DateTimeFormatterBuilder.NumberPrinterParser = NumberPrinterParser;
      DateTimeFormatterBuilder.ReducedPrinterParser = ReducedPrinterParser;
      DateTimeFormatterBuilder.FractionPrinterParser = FractionPrinterParser;
      DateTimeFormatterBuilder.OffsetIdPrinterParser = OffsetIdPrinterParser;
      DateTimeFormatterBuilder.ZoneIdPrinterParser = ZoneIdPrinterParser;
    }

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var StringBuilder = function () {
      function StringBuilder() {
        this._str = '';
      }

      var _proto = StringBuilder.prototype;

      _proto.append = function append(str) {
        this._str += str;
        return this;
      };

      _proto.appendChar = function appendChar(str) {
        this._str += str[0];
        return this;
      };

      _proto.insert = function insert(offset, str) {
        this._str = this._str.slice(0, offset) + str + this._str.slice(offset);
        return this;
      };

      _proto.replace = function replace(start, end, str) {
        this._str = this._str.slice(0, start) + str + this._str.slice(end);
        return this;
      };

      _proto.length = function length() {
        return this._str.length;
      };

      _proto.setLength = function setLength(length) {
        this._str = this._str.slice(0, length);
        return this;
      };

      _proto.toString = function toString() {
        return this._str;
      };

      return StringBuilder;
    }();

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var DateTimeFormatter = function () {
      DateTimeFormatter.parsedExcessDays = function parsedExcessDays() {
        return DateTimeFormatter.PARSED_EXCESS_DAYS;
      };

      DateTimeFormatter.parsedLeapSecond = function parsedLeapSecond() {
        return DateTimeFormatter.PARSED_LEAP_SECOND;
      };

      DateTimeFormatter.ofPattern = function ofPattern(pattern) {
        return new DateTimeFormatterBuilder().appendPattern(pattern).toFormatter();
      };

      function DateTimeFormatter(printerParser, locale, decimalStyle, resolverStyle, resolverFields, chrono, zone) {
        if (chrono === void 0) {
          chrono = IsoChronology.INSTANCE;
        }

        assert(printerParser != null);
        assert(decimalStyle != null);
        assert(resolverStyle != null);
        this._printerParser = printerParser;
        this._locale = locale;
        this._decimalStyle = decimalStyle;
        this._resolverStyle = resolverStyle;
        this._resolverFields = resolverFields;
        this._chrono = chrono;
        this._zone = zone;
      }

      var _proto = DateTimeFormatter.prototype;

      _proto.locale = function locale() {
        return this._locale;
      };

      _proto.decimalStyle = function decimalStyle() {
        return this._decimalStyle;
      };

      _proto.chronology = function chronology() {
        return this._chrono;
      };

      _proto.withChronology = function withChronology(chrono) {
        if (this._chrono != null && this._chrono.equals(chrono)) {
          return this;
        }

        return new DateTimeFormatter(this._printerParser, this._locale, this._decimalStyle, this._resolverStyle, this._resolverFields, chrono, this._zone);
      };

      _proto.withLocale = function withLocale() {
        return this;
      };

      _proto.withResolverStyle = function withResolverStyle(resolverStyle) {
        requireNonNull(resolverStyle, 'resolverStyle');

        if (resolverStyle.equals(this._resolverStyle)) {
          return this;
        }

        return new DateTimeFormatter(this._printerParser, this._locale, this._decimalStyle, resolverStyle, this._resolverFields, this._chrono, this._zone);
      };

      _proto.format = function format(temporal) {
        var buf = new StringBuilder(32);

        this._formatTo(temporal, buf);

        return buf.toString();
      };

      _proto._formatTo = function _formatTo(temporal, appendable) {
        requireNonNull(temporal, 'temporal');
        requireNonNull(appendable, 'appendable');
        var context = new DateTimePrintContext(temporal, this);

        this._printerParser.print(context, appendable);
      };

      _proto.parse = function parse(text, type) {
        if (arguments.length === 1) {
          return this.parse1(text);
        } else {
          return this.parse2(text, type);
        }
      };

      _proto.parse1 = function parse1(text) {
        requireNonNull(text, 'text');

        try {
          return this._parseToBuilder(text, null).resolve(this._resolverStyle, this._resolverFields);
        } catch (ex) {
          if (ex instanceof DateTimeParseException) {
            throw ex;
          } else {
            throw this._createError(text, ex);
          }
        }
      };

      _proto.parse2 = function parse2(text, type) {
        requireNonNull(text, 'text');
        requireNonNull(type, 'type');

        try {
          var builder = this._parseToBuilder(text, null).resolve(this._resolverStyle, this._resolverFields);

          return builder.build(type);
        } catch (ex) {
          if (ex instanceof DateTimeParseException) {
            throw ex;
          } else {
            throw this._createError(text, ex);
          }
        }
      };

      _proto._createError = function _createError(text, ex) {
        var abbr = '';

        if (text.length > 64) {
          abbr = text.substring(0, 64) + '...';
        } else {
          abbr = text;
        }

        return new DateTimeParseException('Text \'' + abbr + '\' could not be parsed: ' + ex.message, text, 0, ex);
      };

      _proto._parseToBuilder = function _parseToBuilder(text, position) {
        var pos = position != null ? position : new ParsePosition(0);

        var result = this._parseUnresolved0(text, pos);

        if (result == null || pos.getErrorIndex() >= 0 || position == null && pos.getIndex() < text.length) {
          var abbr = '';

          if (text.length > 64) {
            abbr = text.substr(0, 64).toString() + '...';
          } else {
            abbr = text;
          }

          if (pos.getErrorIndex() >= 0) {
            throw new DateTimeParseException('Text \'' + abbr + '\' could not be parsed at index ' + pos.getErrorIndex(), text, pos.getErrorIndex());
          } else {
            throw new DateTimeParseException('Text \'' + abbr + '\' could not be parsed, unparsed text found at index ' + pos.getIndex(), text, pos.getIndex());
          }
        }

        return result.toBuilder();
      };

      _proto.parseUnresolved = function parseUnresolved(text, position) {
        return this._parseUnresolved0(text, position);
      };

      _proto._parseUnresolved0 = function _parseUnresolved0(text, position) {
        assert(text != null, 'text', NullPointerException);
        assert(position != null, 'position', NullPointerException);
        var context = new DateTimeParseContext(this);
        var pos = position.getIndex();
        pos = this._printerParser.parse(context, text, pos);

        if (pos < 0) {
          position.setErrorIndex(~pos);
          return null;
        }

        position.setIndex(pos);
        return context.toParsed();
      };

      _proto._toPrinterParser = function _toPrinterParser(optional) {
        return this._printerParser.withOptional(optional);
      };

      _proto.toString = function toString() {
        var pattern = this._printerParser.toString();

        return pattern.indexOf('[') === 0 ? pattern : pattern.substring(1, pattern.length - 1);
      };

      return DateTimeFormatter;
    }();
    function _init$a() {
      DateTimeFormatter.ISO_LOCAL_DATE = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).appendLiteral('-').appendValue(ChronoField.MONTH_OF_YEAR, 2).appendLiteral('-').appendValue(ChronoField.DAY_OF_MONTH, 2).toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
      DateTimeFormatter.ISO_LOCAL_TIME = new DateTimeFormatterBuilder().appendValue(ChronoField.HOUR_OF_DAY, 2).appendLiteral(':').appendValue(ChronoField.MINUTE_OF_HOUR, 2).optionalStart().appendLiteral(':').appendValue(ChronoField.SECOND_OF_MINUTE, 2).optionalStart().appendFraction(ChronoField.NANO_OF_SECOND, 0, 9, true).toFormatter(ResolverStyle.STRICT);
      DateTimeFormatter.ISO_LOCAL_DATE_TIME = new DateTimeFormatterBuilder().parseCaseInsensitive().append(DateTimeFormatter.ISO_LOCAL_DATE).appendLiteral('T').append(DateTimeFormatter.ISO_LOCAL_TIME).toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
      DateTimeFormatter.ISO_INSTANT = new DateTimeFormatterBuilder().parseCaseInsensitive().appendInstant().toFormatter(ResolverStyle.STRICT);
      DateTimeFormatter.ISO_OFFSET_DATE_TIME = new DateTimeFormatterBuilder().parseCaseInsensitive().append(DateTimeFormatter.ISO_LOCAL_DATE_TIME).appendOffsetId().toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
      DateTimeFormatter.ISO_ZONED_DATE_TIME = new DateTimeFormatterBuilder().append(DateTimeFormatter.ISO_OFFSET_DATE_TIME).optionalStart().appendLiteral('[').parseCaseSensitive().appendZoneId().appendLiteral(']').toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
      DateTimeFormatter.BASIC_ISO_DATE = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).appendValue(ChronoField.MONTH_OF_YEAR, 2).appendValue(ChronoField.DAY_OF_MONTH, 2).toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
      DateTimeFormatter.ISO_OFFSET_DATE = new DateTimeFormatterBuilder().parseCaseInsensitive().append(DateTimeFormatter.ISO_LOCAL_DATE).appendOffsetId().toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
      DateTimeFormatter.ISO_OFFSET_TIME = new DateTimeFormatterBuilder().parseCaseInsensitive().append(DateTimeFormatter.ISO_LOCAL_TIME).appendOffsetId().toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
      DateTimeFormatter.ISO_ORDINAL_DATE = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).appendLiteral('-').appendValue(ChronoField.DAY_OF_YEAR).toFormatter(ResolverStyle.STRICT);
      DateTimeFormatter.ISO_WEEK_DATE = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).appendLiteral('-W').appendValue(ChronoField.ALIGNED_WEEK_OF_YEAR).appendLiteral('-').appendValue(ChronoField.DAY_OF_WEEK).toFormatter(ResolverStyle.STRICT);
      DateTimeFormatter.PARSED_EXCESS_DAYS = createTemporalQuery('PARSED_EXCESS_DAYS', function (temporal) {
        if (temporal instanceof DateTimeBuilder) {
          return temporal.excessDays;
        } else {
          return Period.ZERO;
        }
      });
      DateTimeFormatter.PARSED_LEAP_SECOND = createTemporalQuery('PARSED_LEAP_SECOND', function (temporal) {
        if (temporal instanceof DateTimeBuilder) {
          return temporal.leapSecond;
        } else {
          return false;
        }
      });
    }

    var MonthDay = function (_TemporalAccessor) {
      _inheritsLoose(MonthDay, _TemporalAccessor);

      MonthDay.now = function now(zoneIdOrClock) {
        if (arguments.length === 0) {
          return MonthDay.now0();
        } else if (arguments.length === 1 && zoneIdOrClock instanceof ZoneId) {
          return MonthDay.nowZoneId(zoneIdOrClock);
        } else {
          return MonthDay.nowClock(zoneIdOrClock);
        }
      };

      MonthDay.now0 = function now0() {
        return this.nowClock(Clock.systemDefaultZone());
      };

      MonthDay.nowZoneId = function nowZoneId(zone) {
        requireNonNull(zone, 'zone');
        return this.nowClock(Clock.system(zone));
      };

      MonthDay.nowClock = function nowClock(clock) {
        requireNonNull(clock, 'clock');
        var now = LocalDate.now(clock);
        return MonthDay.of(now.month(), now.dayOfMonth());
      };

      MonthDay.of = function of(monthOrNumber, number) {
        if (arguments.length === 2 && monthOrNumber instanceof Month) {
          return MonthDay.ofMonthNumber(monthOrNumber, number);
        } else {
          return MonthDay.ofNumberNumber(monthOrNumber, number);
        }
      };

      MonthDay.ofMonthNumber = function ofMonthNumber(month, dayOfMonth) {
        requireNonNull(month, 'month');
        ChronoField.DAY_OF_MONTH.checkValidValue(dayOfMonth);

        if (dayOfMonth > month.maxLength()) {
          throw new DateTimeException('Illegal value for DayOfMonth field, value ' + dayOfMonth + ' is not valid for month ' + month.toString());
        }

        return new MonthDay(month.value(), dayOfMonth);
      };

      MonthDay.ofNumberNumber = function ofNumberNumber(month, dayOfMonth) {
        requireNonNull(month, 'month');
        requireNonNull(dayOfMonth, 'dayOfMonth');
        return MonthDay.of(Month.of(month), dayOfMonth);
      };

      MonthDay.from = function from(temporal) {
        requireNonNull(temporal, 'temporal');
        requireInstance(temporal, TemporalAccessor, 'temporal');

        if (temporal instanceof MonthDay) {
          return temporal;
        }

        try {
          return MonthDay.of(temporal.get(ChronoField.MONTH_OF_YEAR), temporal.get(ChronoField.DAY_OF_MONTH));
        } catch (ex) {
          throw new DateTimeException('Unable to obtain MonthDay from TemporalAccessor: ' + temporal + ', type ' + (temporal && temporal.constructor != null ? temporal.constructor.name : ''));
        }
      };

      MonthDay.parse = function parse(text, formatter) {
        if (arguments.length === 1) {
          return MonthDay.parseString(text);
        } else {
          return MonthDay.parseStringFormatter(text, formatter);
        }
      };

      MonthDay.parseString = function parseString(text) {
        return MonthDay.parseStringFormatter(text, PARSER);
      };

      MonthDay.parseStringFormatter = function parseStringFormatter(text, formatter) {
        requireNonNull(text, 'text');
        requireNonNull(formatter, 'formatter');
        requireInstance(formatter, DateTimeFormatter, 'formatter');
        return formatter.parse(text, MonthDay.FROM);
      };

      function MonthDay(month, dayOfMonth) {
        var _this;

        _this = _TemporalAccessor.call(this) || this;
        _this._month = MathUtil.safeToInt(month);
        _this._day = MathUtil.safeToInt(dayOfMonth);
        return _this;
      }

      var _proto = MonthDay.prototype;

      _proto.monthValue = function monthValue() {
        return this._month;
      };

      _proto.month = function month() {
        return Month.of(this._month);
      };

      _proto.dayOfMonth = function dayOfMonth() {
        return this._day;
      };

      _proto.isSupported = function isSupported(field) {
        if (field instanceof ChronoField) {
          return field === ChronoField.MONTH_OF_YEAR || field === ChronoField.DAY_OF_MONTH;
        }

        return field != null && field.isSupportedBy(this);
      };

      _proto.range = function range(field) {
        if (field === ChronoField.MONTH_OF_YEAR) {
          return field.range();
        } else if (field === ChronoField.DAY_OF_MONTH) {
          return ValueRange.of(1, this.month().minLength(), this.month().maxLength());
        }

        return _TemporalAccessor.prototype.range.call(this, field);
      };

      _proto.get = function get(field) {
        return this.range(field).checkValidIntValue(this.getLong(field), field);
      };

      _proto.getLong = function getLong(field) {
        requireNonNull(field, 'field');

        if (field instanceof ChronoField) {
          switch (field) {
            case ChronoField.DAY_OF_MONTH:
              return this._day;

            case ChronoField.MONTH_OF_YEAR:
              return this._month;
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.getFrom(this);
      };

      _proto.isValidYear = function isValidYear(year) {
        return (this._day === 29 && this._month === 2 && Year.isLeap(year) === false) === false;
      };

      _proto.withMonth = function withMonth(month) {
        return this.with(Month.of(month));
      };

      _proto.with = function _with(month) {
        requireNonNull(month, 'month');

        if (month.value() === this._month) {
          return this;
        }

        var day = Math.min(this._day, month.maxLength());
        return new MonthDay(month.value(), day);
      };

      _proto.withDayOfMonth = function withDayOfMonth(dayOfMonth) {
        if (dayOfMonth === this._day) {
          return this;
        }

        return MonthDay.of(this._month, dayOfMonth);
      };

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query');
        requireInstance(_query, TemporalQuery, 'query');

        if (_query === TemporalQueries.chronology()) {
          return IsoChronology.INSTANCE;
        }

        return _TemporalAccessor.prototype.query.call(this, _query);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        requireNonNull(temporal, 'temporal');
        temporal = temporal.with(ChronoField.MONTH_OF_YEAR, this._month);
        return temporal.with(ChronoField.DAY_OF_MONTH, Math.min(temporal.range(ChronoField.DAY_OF_MONTH).maximum(), this._day));
      };

      _proto.atYear = function atYear(year) {
        return LocalDate.of(year, this._month, this.isValidYear(year) ? this._day : 28);
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        requireInstance(other, MonthDay, 'other');
        var cmp = this._month - other.monthValue();

        if (cmp === 0) {
          cmp = this._day - other.dayOfMonth();
        }

        return cmp;
      };

      _proto.isAfter = function isAfter(other) {
        requireNonNull(other, 'other');
        requireInstance(other, MonthDay, 'other');
        return this.compareTo(other) > 0;
      };

      _proto.isBefore = function isBefore(other) {
        requireNonNull(other, 'other');
        requireInstance(other, MonthDay, 'other');
        return this.compareTo(other) < 0;
      };

      _proto.equals = function equals(obj) {
        if (this === obj) {
          return true;
        }

        if (obj instanceof MonthDay) {
          var other = obj;
          return this.monthValue() === other.monthValue() && this.dayOfMonth() === other.dayOfMonth();
        }

        return false;
      };

      _proto.toString = function toString() {
        return '--' + (this._month < 10 ? '0' : '') + this._month + (this._day < 10 ? '-0' : '-') + this._day;
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      _proto.format = function format(formatter) {
        requireNonNull(formatter, 'formatter');
        requireInstance(formatter, DateTimeFormatter, 'formatter');
        return formatter.format(this);
      };

      return MonthDay;
    }(TemporalAccessor);
    var PARSER;
    function _init$b() {
      PARSER = new DateTimeFormatterBuilder().appendLiteral('--').appendValue(ChronoField.MONTH_OF_YEAR, 2).appendLiteral('-').appendValue(ChronoField.DAY_OF_MONTH, 2).toFormatter();
      MonthDay.FROM = createTemporalQuery('MonthDay.FROM', function (temporal) {
        return MonthDay.from(temporal);
      });
    }

    var YearMonth = function (_Temporal) {
      _inheritsLoose(YearMonth, _Temporal);

      YearMonth.now = function now(zoneIdOrClock) {
        if (arguments.length === 0) {
          return YearMonth.now0();
        } else if (arguments.length === 1 && zoneIdOrClock instanceof ZoneId) {
          return YearMonth.nowZoneId(zoneIdOrClock);
        } else {
          return YearMonth.nowClock(zoneIdOrClock);
        }
      };

      YearMonth.now0 = function now0() {
        return YearMonth.nowClock(Clock.systemDefaultZone());
      };

      YearMonth.nowZoneId = function nowZoneId(zone) {
        return YearMonth.nowClock(Clock.system(zone));
      };

      YearMonth.nowClock = function nowClock(clock) {
        var now = LocalDate.now(clock);
        return YearMonth.of(now.year(), now.month());
      };

      YearMonth.of = function of(year, monthOrNumber) {
        if (arguments.length === 2 && monthOrNumber instanceof Month) {
          return YearMonth.ofNumberMonth(year, monthOrNumber);
        } else {
          return YearMonth.ofNumberNumber(year, monthOrNumber);
        }
      };

      YearMonth.ofNumberMonth = function ofNumberMonth(year, month) {
        requireNonNull(month, 'month');
        requireInstance(month, Month, 'month');
        return YearMonth.ofNumberNumber(year, month.value());
      };

      YearMonth.ofNumberNumber = function ofNumberNumber(year, month) {
        requireNonNull(year, 'year');
        requireNonNull(month, 'month');
        ChronoField.YEAR.checkValidValue(year);
        ChronoField.MONTH_OF_YEAR.checkValidValue(month);
        return new YearMonth(year, month);
      };

      YearMonth.from = function from(temporal) {
        requireNonNull(temporal, 'temporal');

        if (temporal instanceof YearMonth) {
          return temporal;
        }

        try {
          return YearMonth.of(temporal.get(ChronoField.YEAR), temporal.get(ChronoField.MONTH_OF_YEAR));
        } catch (ex) {
          throw new DateTimeException('Unable to obtain YearMonth from TemporalAccessor: ' + temporal + ', type ' + (temporal && temporal.constructor != null ? temporal.constructor.name : ''));
        }
      };

      YearMonth.parse = function parse(text, formatter) {
        if (arguments.length === 1) {
          return YearMonth.parseString(text);
        } else {
          return YearMonth.parseStringFormatter(text, formatter);
        }
      };

      YearMonth.parseString = function parseString(text) {
        return YearMonth.parseStringFormatter(text, PARSER$1);
      };

      YearMonth.parseStringFormatter = function parseStringFormatter(text, formatter) {
        requireNonNull(formatter, 'formatter');
        return formatter.parse(text, YearMonth.FROM);
      };

      function YearMonth(year, month) {
        var _this;

        _this = _Temporal.call(this) || this;
        _this._year = MathUtil.safeToInt(year);
        _this._month = MathUtil.safeToInt(month);
        return _this;
      }

      var _proto = YearMonth.prototype;

      _proto.isSupported = function isSupported(fieldOrUnit) {
        if (arguments.length === 1 && fieldOrUnit instanceof TemporalField) {
          return this.isSupportedField(fieldOrUnit);
        } else {
          return this.isSupportedUnit(fieldOrUnit);
        }
      };

      _proto.isSupportedField = function isSupportedField(field) {
        if (field instanceof ChronoField) {
          return field === ChronoField.YEAR || field === ChronoField.MONTH_OF_YEAR || field === ChronoField.PROLEPTIC_MONTH || field === ChronoField.YEAR_OF_ERA || field === ChronoField.ERA;
        }

        return field != null && field.isSupportedBy(this);
      };

      _proto.isSupportedUnit = function isSupportedUnit(unit) {
        if (unit instanceof ChronoUnit) {
          return unit === ChronoUnit.MONTHS || unit === ChronoUnit.YEARS || unit === ChronoUnit.DECADES || unit === ChronoUnit.CENTURIES || unit === ChronoUnit.MILLENNIA || unit === ChronoUnit.ERAS;
        }

        return unit != null && unit.isSupportedBy(this);
      };

      _proto.range = function range(field) {
        if (field === ChronoField.YEAR_OF_ERA) {
          return this.year() <= 0 ? ValueRange.of(1, Year.MAX_VALUE + 1) : ValueRange.of(1, Year.MAX_VALUE);
        }

        return _Temporal.prototype.range.call(this, field);
      };

      _proto.get = function get(field) {
        requireNonNull(field, 'field');
        requireInstance(field, TemporalField, 'field');
        return this.range(field).checkValidIntValue(this.getLong(field), field);
      };

      _proto.getLong = function getLong(field) {
        requireNonNull(field, 'field');
        requireInstance(field, TemporalField, 'field');

        if (field instanceof ChronoField) {
          switch (field) {
            case ChronoField.MONTH_OF_YEAR:
              return this._month;

            case ChronoField.PROLEPTIC_MONTH:
              return this._getProlepticMonth();

            case ChronoField.YEAR_OF_ERA:
              return this._year < 1 ? 1 - this._year : this._year;

            case ChronoField.YEAR:
              return this._year;

            case ChronoField.ERA:
              return this._year < 1 ? 0 : 1;
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.getFrom(this);
      };

      _proto._getProlepticMonth = function _getProlepticMonth() {
        return MathUtil.safeAdd(MathUtil.safeMultiply(this._year, 12), this._month - 1);
      };

      _proto.year = function year() {
        return this._year;
      };

      _proto.monthValue = function monthValue() {
        return this._month;
      };

      _proto.month = function month() {
        return Month.of(this._month);
      };

      _proto.isLeapYear = function isLeapYear() {
        return IsoChronology.isLeapYear(this._year);
      };

      _proto.isValidDay = function isValidDay(dayOfMonth) {
        return dayOfMonth >= 1 && dayOfMonth <= this.lengthOfMonth();
      };

      _proto.lengthOfMonth = function lengthOfMonth() {
        return this.month().length(this.isLeapYear());
      };

      _proto.lengthOfYear = function lengthOfYear() {
        return this.isLeapYear() ? 366 : 365;
      };

      _proto.with = function _with(adjusterOrField, value) {
        if (arguments.length === 1) {
          return this.withAdjuster(adjusterOrField);
        } else {
          return this.withFieldValue(adjusterOrField, value);
        }
      };

      _proto.withAdjuster = function withAdjuster(adjuster) {
        requireNonNull(adjuster, 'adjuster');
        return adjuster.adjustInto(this);
      };

      _proto.withFieldValue = function withFieldValue(field, newValue) {
        requireNonNull(field, 'field');
        requireInstance(field, TemporalField, 'field');

        if (field instanceof ChronoField) {
          var f = field;
          f.checkValidValue(newValue);

          switch (f) {
            case ChronoField.MONTH_OF_YEAR:
              return this.withMonth(newValue);

            case ChronoField.PROLEPTIC_MONTH:
              return this.plusMonths(newValue - this.getLong(ChronoField.PROLEPTIC_MONTH));

            case ChronoField.YEAR_OF_ERA:
              return this.withYear(this._year < 1 ? 1 - newValue : newValue);

            case ChronoField.YEAR:
              return this.withYear(newValue);

            case ChronoField.ERA:
              return this.getLong(ChronoField.ERA) === newValue ? this : this.withYear(1 - this._year);
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.adjustInto(this, newValue);
      };

      _proto.withYear = function withYear(year) {
        ChronoField.YEAR.checkValidValue(year);
        return new YearMonth(year, this._month);
      };

      _proto.withMonth = function withMonth(month) {
        ChronoField.MONTH_OF_YEAR.checkValidValue(month);
        return new YearMonth(this._year, month);
      };

      _proto.plusAmount = function plusAmount(amount) {
        requireNonNull(amount, 'amount');
        requireInstance(amount, TemporalAmount, 'amount');
        return amount.addTo(this);
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        requireNonNull(unit, 'unit');
        requireInstance(unit, TemporalUnit, 'unit');

        if (unit instanceof ChronoUnit) {
          switch (unit) {
            case ChronoUnit.MONTHS:
              return this.plusMonths(amountToAdd);

            case ChronoUnit.YEARS:
              return this.plusYears(amountToAdd);

            case ChronoUnit.DECADES:
              return this.plusYears(MathUtil.safeMultiply(amountToAdd, 10));

            case ChronoUnit.CENTURIES:
              return this.plusYears(MathUtil.safeMultiply(amountToAdd, 100));

            case ChronoUnit.MILLENNIA:
              return this.plusYears(MathUtil.safeMultiply(amountToAdd, 1000));

            case ChronoUnit.ERAS:
              return this.with(ChronoField.ERA, MathUtil.safeAdd(this.getLong(ChronoField.ERA), amountToAdd));
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.addTo(this, amountToAdd);
      };

      _proto.plusYears = function plusYears(yearsToAdd) {
        if (yearsToAdd === 0) {
          return this;
        }

        var newYear = ChronoField.YEAR.checkValidIntValue(this._year + yearsToAdd);
        return this.withYear(newYear);
      };

      _proto.plusMonths = function plusMonths(monthsToAdd) {
        if (monthsToAdd === 0) {
          return this;
        }

        var monthCount = this._year * 12 + (this._month - 1);
        var calcMonths = monthCount + monthsToAdd;
        var newYear = ChronoField.YEAR.checkValidIntValue(MathUtil.floorDiv(calcMonths, 12));
        var newMonth = MathUtil.floorMod(calcMonths, 12) + 1;
        return new YearMonth(newYear, newMonth);
      };

      _proto.minusAmount = function minusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.subtractFrom(this);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        return amountToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plusAmountUnit(MathUtil.MAX_SAFE_INTEGER, unit).plusAmountUnit(1, unit) : this.plusAmountUnit(-amountToSubtract, unit);
      };

      _proto.minusYears = function minusYears(yearsToSubtract) {
        return yearsToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plusYears(MathUtil.MIN_SAFE_INTEGER).plusYears(1) : this.plusYears(-yearsToSubtract);
      };

      _proto.minusMonths = function minusMonths(monthsToSubtract) {
        return monthsToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plusMonths(Math.MAX_SAFE_INTEGER).plusMonths(1) : this.plusMonths(-monthsToSubtract);
      };

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query');
        requireInstance(_query, TemporalQuery, 'query');

        if (_query === TemporalQueries.chronology()) {
          return IsoChronology.INSTANCE;
        } else if (_query === TemporalQueries.precision()) {
          return ChronoUnit.MONTHS;
        } else if (_query === TemporalQueries.localDate() || _query === TemporalQueries.localTime() || _query === TemporalQueries.zone() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.offset()) {
          return null;
        }

        return _Temporal.prototype.query.call(this, _query);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        requireNonNull(temporal, 'temporal');
        requireInstance(temporal, Temporal, 'temporal');
        return temporal.with(ChronoField.PROLEPTIC_MONTH, this._getProlepticMonth());
      };

      _proto.until = function until(endExclusive, unit) {
        requireNonNull(endExclusive, 'endExclusive');
        requireNonNull(unit, 'unit');
        requireInstance(endExclusive, Temporal, 'endExclusive');
        requireInstance(unit, TemporalUnit, 'unit');
        var end = YearMonth.from(endExclusive);

        if (unit instanceof ChronoUnit) {
          var monthsUntil = end._getProlepticMonth() - this._getProlepticMonth();

          switch (unit) {
            case ChronoUnit.MONTHS:
              return monthsUntil;

            case ChronoUnit.YEARS:
              return monthsUntil / 12;

            case ChronoUnit.DECADES:
              return monthsUntil / 120;

            case ChronoUnit.CENTURIES:
              return monthsUntil / 1200;

            case ChronoUnit.MILLENNIA:
              return monthsUntil / 12000;

            case ChronoUnit.ERAS:
              return end.getLong(ChronoField.ERA) - this.getLong(ChronoField.ERA);
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.between(this, end);
      };

      _proto.atDay = function atDay(dayOfMonth) {
        return LocalDate.of(this._year, this._month, dayOfMonth);
      };

      _proto.atEndOfMonth = function atEndOfMonth() {
        return LocalDate.of(this._year, this._month, this.lengthOfMonth());
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        requireInstance(other, YearMonth, 'other');
        var cmp = this._year - other.year();

        if (cmp === 0) {
          cmp = this._month - other.monthValue();
        }

        return cmp;
      };

      _proto.isAfter = function isAfter(other) {
        return this.compareTo(other) > 0;
      };

      _proto.isBefore = function isBefore(other) {
        return this.compareTo(other) < 0;
      };

      _proto.equals = function equals(obj) {
        if (this === obj) {
          return true;
        }

        if (obj instanceof YearMonth) {
          var other = obj;
          return this.year() === other.year() && this.monthValue() === other.monthValue();
        }

        return false;
      };

      _proto.toString = function toString() {
        return PARSER$1.format(this);
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      _proto.format = function format(formatter) {
        requireNonNull(formatter, 'formatter');
        return formatter.format(this);
      };

      return YearMonth;
    }(Temporal);
    var PARSER$1;
    function _init$c() {
      PARSER$1 = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).appendLiteral('-').appendValue(ChronoField.MONTH_OF_YEAR, 2).toFormatter();
      YearMonth.FROM = createTemporalQuery('YearMonth.FROM', function (temporal) {
        return YearMonth.from(temporal);
      });
    }

    var Year = function (_Temporal) {
      _inheritsLoose(Year, _Temporal);

      function Year(value) {
        var _this;

        _this = _Temporal.call(this) || this;
        _this._year = MathUtil.safeToInt(value);
        return _this;
      }

      var _proto = Year.prototype;

      _proto.value = function value() {
        return this._year;
      };

      Year.now = function now(zoneIdOrClock) {
        if (zoneIdOrClock === void 0) {
          zoneIdOrClock = undefined;
        }

        if (zoneIdOrClock === undefined) {
          return Year.now0();
        } else if (zoneIdOrClock instanceof ZoneId) {
          return Year.nowZoneId(zoneIdOrClock);
        } else {
          return Year.nowClock(zoneIdOrClock);
        }
      };

      Year.now0 = function now0() {
        return Year.nowClock(Clock.systemDefaultZone());
      };

      Year.nowZoneId = function nowZoneId(zone) {
        requireNonNull(zone, 'zone');
        requireInstance(zone, ZoneId, 'zone');
        return Year.nowClock(Clock.system(zone));
      };

      Year.nowClock = function nowClock(clock) {
        requireNonNull(clock, 'clock');
        requireInstance(clock, Clock, 'clock');
        var now = LocalDate.now(clock);
        return Year.of(now.year());
      };

      Year.of = function of(isoYear) {
        requireNonNull(isoYear, 'isoYear');
        ChronoField.YEAR.checkValidValue(isoYear);
        return new Year(isoYear);
      };

      Year.from = function from(temporal) {
        requireNonNull(temporal, 'temporal');
        requireInstance(temporal, TemporalAccessor, 'temporal');

        if (temporal instanceof Year) {
          return temporal;
        }

        try {
          return Year.of(temporal.get(ChronoField.YEAR));
        } catch (ex) {
          throw new DateTimeException('Unable to obtain Year from TemporalAccessor: ' + temporal + ', type ' + (temporal && temporal.constructor != null ? temporal.constructor.name : ''));
        }
      };

      Year.parse = function parse(text, formatter) {
        if (arguments.length <= 1) {
          return Year.parseText(text);
        } else {
          return Year.parseTextFormatter(text, formatter);
        }
      };

      Year.parseText = function parseText(text) {
        requireNonNull(text, 'text');
        return Year.parse(text, PARSER$2);
      };

      Year.parseTextFormatter = function parseTextFormatter(text, formatter) {
        if (formatter === void 0) {
          formatter = PARSER$2;
        }

        requireNonNull(text, 'text');
        requireNonNull(formatter, 'formatter');
        requireInstance(formatter, DateTimeFormatter, 'formatter');
        return formatter.parse(text, Year.FROM);
      };

      Year.isLeap = function isLeap(year) {
        return MathUtil.intMod(year, 4) === 0 && (MathUtil.intMod(year, 100) !== 0 || MathUtil.intMod(year, 400) === 0);
      };

      _proto.isSupported = function isSupported(fieldOrUnit) {
        if (arguments.length === 1 && fieldOrUnit instanceof TemporalField) {
          return this.isSupportedField(fieldOrUnit);
        } else {
          return this.isSupportedUnit(fieldOrUnit);
        }
      };

      _proto.isSupportedField = function isSupportedField(field) {
        if (field instanceof ChronoField) {
          return field === ChronoField.YEAR || field === ChronoField.YEAR_OF_ERA || field === ChronoField.ERA;
        }

        return field != null && field.isSupportedBy(this);
      };

      _proto.isSupportedUnit = function isSupportedUnit(unit) {
        if (unit instanceof ChronoUnit) {
          return unit === ChronoUnit.YEARS || unit === ChronoUnit.DECADES || unit === ChronoUnit.CENTURIES || unit === ChronoUnit.MILLENNIA || unit === ChronoUnit.ERAS;
        }

        return unit != null && unit.isSupportedBy(this);
      };

      _proto.range = function range(field) {
        if (this.isSupported(field)) {
          return field.range();
        } else if (field instanceof ChronoField) {
          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return _Temporal.prototype.range.call(this, field);
      };

      _proto.get = function get(field) {
        return this.range(field).checkValidIntValue(this.getLong(field), field);
      };

      _proto.getLong = function getLong(field) {
        requireNonNull(field, 'field');

        if (field instanceof ChronoField) {
          switch (field) {
            case ChronoField.YEAR_OF_ERA:
              return this._year < 1 ? 1 - this._year : this._year;

            case ChronoField.YEAR:
              return this._year;

            case ChronoField.ERA:
              return this._year < 1 ? 0 : 1;
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.getFrom(this);
      };

      _proto.isLeap = function isLeap() {
        return Year.isLeap(this._year);
      };

      _proto.withAdjuster = function withAdjuster(adjuster) {
        requireNonNull(adjuster, 'adjuster');
        return adjuster.adjustInto(this);
      };

      _proto.withFieldValue = function withFieldValue(field, newValue) {
        requireNonNull(field, 'field');
        requireInstance(field, TemporalField, 'field');

        if (field instanceof ChronoField) {
          field.checkValidValue(newValue);

          switch (field) {
            case ChronoField.YEAR_OF_ERA:
              return Year.of(this._year < 1 ? 1 - newValue : newValue);

            case ChronoField.YEAR:
              return Year.of(newValue);

            case ChronoField.ERA:
              return this.getLong(ChronoField.ERA) === newValue ? this : Year.of(1 - this._year);
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.adjustInto(this, newValue);
      };

      _proto.plusAmount = function plusAmount(amount) {
        requireNonNull(amount, 'amount');
        requireInstance(amount, TemporalAmount, 'amount');
        return amount.addTo(this);
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        requireNonNull(amountToAdd, 'amountToAdd');
        requireNonNull(unit, 'unit');
        requireInstance(unit, TemporalUnit, 'unit');

        if (unit instanceof ChronoUnit) {
          switch (unit) {
            case ChronoUnit.YEARS:
              return this.plusYears(amountToAdd);

            case ChronoUnit.DECADES:
              return this.plusYears(MathUtil.safeMultiply(amountToAdd, 10));

            case ChronoUnit.CENTURIES:
              return this.plusYears(MathUtil.safeMultiply(amountToAdd, 100));

            case ChronoUnit.MILLENNIA:
              return this.plusYears(MathUtil.safeMultiply(amountToAdd, 1000));

            case ChronoUnit.ERAS:
              return this.with(ChronoField.ERA, MathUtil.safeAdd(this.getLong(ChronoField.ERA), amountToAdd));
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.addTo(this, amountToAdd);
      };

      _proto.plusYears = function plusYears(yearsToAdd) {
        if (yearsToAdd === 0) {
          return this;
        }

        return Year.of(ChronoField.YEAR.checkValidIntValue(MathUtil.safeAdd(this._year, yearsToAdd)));
      };

      _proto.minusAmount = function minusAmount(amount) {
        requireNonNull(amount, 'amount');
        requireInstance(amount, TemporalAmount, 'amount');
        return amount.subtractFrom(this);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        requireNonNull(amountToSubtract, 'amountToSubtract');
        requireNonNull(unit, 'unit');
        requireInstance(unit, TemporalUnit, 'unit');
        return amountToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plus(MathUtil.MAX_SAFE_INTEGER, unit).plus(1, unit) : this.plus(-amountToSubtract, unit);
      };

      _proto.minusYears = function minusYears(yearsToSubtract) {
        return yearsToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plusYears(MathUtil.MAX_SAFE_INTEGER).plusYears(1) : this.plusYears(-yearsToSubtract);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        requireNonNull(temporal, 'temporal');
        return temporal.with(ChronoField.YEAR, this._year);
      };

      _proto.isValidMonthDay = function isValidMonthDay(monthDay) {
        return monthDay != null && monthDay.isValidYear(this._year);
      };

      _proto.length = function length() {
        return this.isLeap() ? 366 : 365;
      };

      _proto.atDay = function atDay(dayOfYear) {
        return LocalDate.ofYearDay(this._year, dayOfYear);
      };

      _proto.atMonth = function atMonth(monthOrNumber) {
        if (arguments.length === 1 && monthOrNumber instanceof Month) {
          return this.atMonthMonth(monthOrNumber);
        } else {
          return this.atMonthNumber(monthOrNumber);
        }
      };

      _proto.atMonthMonth = function atMonthMonth(month) {
        requireNonNull(month, 'month');
        requireInstance(month, Month, 'month');
        return YearMonth.of(this._year, month);
      };

      _proto.atMonthNumber = function atMonthNumber(month) {
        requireNonNull(month, 'month');
        return YearMonth.of(this._year, month);
      };

      _proto.atMonthDay = function atMonthDay(monthDay) {
        requireNonNull(monthDay, 'monthDay');
        requireInstance(monthDay, MonthDay, 'monthDay');
        return monthDay.atYear(this._year);
      };

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query()');
        requireInstance(_query, TemporalQuery, 'query()');

        if (_query === TemporalQueries.chronology()) {
          return IsoChronology.INSTANCE;
        } else if (_query === TemporalQueries.precision()) {
          return ChronoUnit.YEARS;
        } else if (_query === TemporalQueries.localDate() || _query === TemporalQueries.localTime() || _query === TemporalQueries.zone() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.offset()) {
          return null;
        }

        return _Temporal.prototype.query.call(this, _query);
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        requireInstance(other, Year, 'other');
        return this._year - other._year;
      };

      _proto.isAfter = function isAfter(other) {
        requireNonNull(other, 'other');
        requireInstance(other, Year, 'other');
        return this._year > other._year;
      };

      _proto.isBefore = function isBefore(other) {
        requireNonNull(other, 'other');
        requireInstance(other, Year, 'other');
        return this._year < other._year;
      };

      _proto.format = function format(formatter) {
        requireNonNull(formatter, 'formatter');
        requireInstance(formatter, DateTimeFormatter, 'formatter');
        return formatter.format(this);
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof Year) {
          return this.value() === other.value();
        }

        return false;
      };

      _proto.toString = function toString() {
        return '' + this._year;
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      _proto.until = function until(endExclusive, unit) {
        var end = Year.from(endExclusive);

        if (unit instanceof ChronoUnit) {
          var yearsUntil = end.value() - this.value();

          switch (unit) {
            case ChronoUnit.YEARS:
              return yearsUntil;

            case ChronoUnit.DECADES:
              return MathUtil.intDiv(yearsUntil, 10);

            case ChronoUnit.CENTURIES:
              return MathUtil.intDiv(yearsUntil, 100);

            case ChronoUnit.MILLENNIA:
              return MathUtil.intDiv(yearsUntil, 1000);

            case ChronoUnit.ERAS:
              return end.getLong(ChronoField.ERA) - this.getLong(ChronoField.ERA);
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.between(this, end);
      };

      return Year;
    }(Temporal);
    var PARSER$2;
    function _init$d() {
      Year.MIN_VALUE = YearConstants.MIN_VALUE;
      Year.MAX_VALUE = YearConstants.MAX_VALUE;
      PARSER$2 = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).toFormatter();
      Year.FROM = createTemporalQuery('Year.FROM', function (temporal) {
        return Year.from(temporal);
      });
    }

    var TemporalAdjusters = function () {
      function TemporalAdjusters() {}

      TemporalAdjusters.firstDayOfMonth = function firstDayOfMonth() {
        return Impl.FIRST_DAY_OF_MONTH;
      };

      TemporalAdjusters.lastDayOfMonth = function lastDayOfMonth() {
        return Impl.LAST_DAY_OF_MONTH;
      };

      TemporalAdjusters.firstDayOfNextMonth = function firstDayOfNextMonth() {
        return Impl.FIRST_DAY_OF_NEXT_MONTH;
      };

      TemporalAdjusters.firstDayOfYear = function firstDayOfYear() {
        return Impl.FIRST_DAY_OF_YEAR;
      };

      TemporalAdjusters.lastDayOfYear = function lastDayOfYear() {
        return Impl.LAST_DAY_OF_YEAR;
      };

      TemporalAdjusters.firstDayOfNextYear = function firstDayOfNextYear() {
        return Impl.FIRST_DAY_OF_NEXT_YEAR;
      };

      TemporalAdjusters.firstInMonth = function firstInMonth(dayOfWeek) {
        requireNonNull(dayOfWeek, 'dayOfWeek');
        return new DayOfWeekInMonth(1, dayOfWeek);
      };

      TemporalAdjusters.lastInMonth = function lastInMonth(dayOfWeek) {
        requireNonNull(dayOfWeek, 'dayOfWeek');
        return new DayOfWeekInMonth(-1, dayOfWeek);
      };

      TemporalAdjusters.dayOfWeekInMonth = function dayOfWeekInMonth(ordinal, dayOfWeek) {
        requireNonNull(dayOfWeek, 'dayOfWeek');
        return new DayOfWeekInMonth(ordinal, dayOfWeek);
      };

      TemporalAdjusters.next = function next(dayOfWeek) {
        return new RelativeDayOfWeek(2, dayOfWeek);
      };

      TemporalAdjusters.nextOrSame = function nextOrSame(dayOfWeek) {
        return new RelativeDayOfWeek(0, dayOfWeek);
      };

      TemporalAdjusters.previous = function previous(dayOfWeek) {
        return new RelativeDayOfWeek(3, dayOfWeek);
      };

      TemporalAdjusters.previousOrSame = function previousOrSame(dayOfWeek) {
        return new RelativeDayOfWeek(1, dayOfWeek);
      };

      return TemporalAdjusters;
    }();

    var Impl = function (_TemporalAdjuster) {
      _inheritsLoose(Impl, _TemporalAdjuster);

      function Impl(ordinal) {
        var _this;

        _this = _TemporalAdjuster.call(this) || this;
        _this._ordinal = ordinal;
        return _this;
      }

      var _proto = Impl.prototype;

      _proto.adjustInto = function adjustInto(temporal) {
        switch (this._ordinal) {
          case 0:
            return temporal.with(ChronoField.DAY_OF_MONTH, 1);

          case 1:
            return temporal.with(ChronoField.DAY_OF_MONTH, temporal.range(ChronoField.DAY_OF_MONTH).maximum());

          case 2:
            return temporal.with(ChronoField.DAY_OF_MONTH, 1).plus(1, ChronoUnit.MONTHS);

          case 3:
            return temporal.with(ChronoField.DAY_OF_YEAR, 1);

          case 4:
            return temporal.with(ChronoField.DAY_OF_YEAR, temporal.range(ChronoField.DAY_OF_YEAR).maximum());

          case 5:
            return temporal.with(ChronoField.DAY_OF_YEAR, 1).plus(1, ChronoUnit.YEARS);
        }

        throw new IllegalStateException('Unreachable');
      };

      return Impl;
    }(TemporalAdjuster);

    Impl.FIRST_DAY_OF_MONTH = new Impl(0);
    Impl.LAST_DAY_OF_MONTH = new Impl(1);
    Impl.FIRST_DAY_OF_NEXT_MONTH = new Impl(2);
    Impl.FIRST_DAY_OF_YEAR = new Impl(3);
    Impl.LAST_DAY_OF_YEAR = new Impl(4);
    Impl.FIRST_DAY_OF_NEXT_YEAR = new Impl(5);

    var DayOfWeekInMonth = function (_TemporalAdjuster2) {
      _inheritsLoose(DayOfWeekInMonth, _TemporalAdjuster2);

      function DayOfWeekInMonth(ordinal, dow) {
        var _this2;

        _this2 = _TemporalAdjuster2.call(this) || this;
        _this2._ordinal = ordinal;
        _this2._dowValue = dow.value();
        return _this2;
      }

      var _proto2 = DayOfWeekInMonth.prototype;

      _proto2.adjustInto = function adjustInto(temporal) {
        if (this._ordinal >= 0) {
          var temp = temporal.with(ChronoField.DAY_OF_MONTH, 1);
          var curDow = temp.get(ChronoField.DAY_OF_WEEK);
          var dowDiff = MathUtil.intMod(this._dowValue - curDow + 7, 7);
          dowDiff += (this._ordinal - 1) * 7;
          return temp.plus(dowDiff, ChronoUnit.DAYS);
        } else {
          var _temp = temporal.with(ChronoField.DAY_OF_MONTH, temporal.range(ChronoField.DAY_OF_MONTH).maximum());

          var _curDow = _temp.get(ChronoField.DAY_OF_WEEK);

          var daysDiff = this._dowValue - _curDow;
          daysDiff = daysDiff === 0 ? 0 : daysDiff > 0 ? daysDiff - 7 : daysDiff;
          daysDiff -= (-this._ordinal - 1) * 7;
          return _temp.plus(daysDiff, ChronoUnit.DAYS);
        }
      };

      return DayOfWeekInMonth;
    }(TemporalAdjuster);

    var RelativeDayOfWeek = function (_TemporalAdjuster3) {
      _inheritsLoose(RelativeDayOfWeek, _TemporalAdjuster3);

      function RelativeDayOfWeek(relative, dayOfWeek) {
        var _this3;

        _this3 = _TemporalAdjuster3.call(this) || this;
        requireNonNull(dayOfWeek, 'dayOfWeek');
        _this3._relative = relative;
        _this3._dowValue = dayOfWeek.value();
        return _this3;
      }

      var _proto3 = RelativeDayOfWeek.prototype;

      _proto3.adjustInto = function adjustInto(temporal) {
        var calDow = temporal.get(ChronoField.DAY_OF_WEEK);

        if (this._relative < 2 && calDow === this._dowValue) {
          return temporal;
        }

        if ((this._relative & 1) === 0) {
          var daysDiff = calDow - this._dowValue;
          return temporal.plus(daysDiff >= 0 ? 7 - daysDiff : -daysDiff, ChronoUnit.DAYS);
        } else {
          var _daysDiff = this._dowValue - calDow;

          return temporal.minus(_daysDiff >= 0 ? 7 - _daysDiff : -_daysDiff, ChronoUnit.DAYS);
        }
      };

      return RelativeDayOfWeek;
    }(TemporalAdjuster);

    var IsoChronology = function (_Enum) {
      _inheritsLoose(IsoChronology, _Enum);

      function IsoChronology() {
        return _Enum.apply(this, arguments) || this;
      }

      IsoChronology.isLeapYear = function isLeapYear(prolepticYear) {
        return (prolepticYear & 3) === 0 && (prolepticYear % 100 !== 0 || prolepticYear % 400 === 0);
      };

      var _proto = IsoChronology.prototype;

      _proto._updateResolveMap = function _updateResolveMap(fieldValues, field, value) {
        requireNonNull(fieldValues, 'fieldValues');
        requireNonNull(field, 'field');
        var current = fieldValues.get(field);

        if (current != null && current !== value) {
          throw new DateTimeException('Invalid state, field: ' + field + ' ' + current + ' conflicts with ' + field + ' ' + value);
        }

        fieldValues.put(field, value);
      };

      _proto.resolveDate = function resolveDate(fieldValues, resolverStyle) {
        if (fieldValues.containsKey(ChronoField.EPOCH_DAY)) {
          return LocalDate.ofEpochDay(fieldValues.remove(ChronoField.EPOCH_DAY));
        }

        var prolepticMonth = fieldValues.remove(ChronoField.PROLEPTIC_MONTH);

        if (prolepticMonth != null) {
          if (resolverStyle !== ResolverStyle.LENIENT) {
            ChronoField.PROLEPTIC_MONTH.checkValidValue(prolepticMonth);
          }

          this._updateResolveMap(fieldValues, ChronoField.MONTH_OF_YEAR, MathUtil.floorMod(prolepticMonth, 12) + 1);

          this._updateResolveMap(fieldValues, ChronoField.YEAR, MathUtil.floorDiv(prolepticMonth, 12));
        }

        var yoeLong = fieldValues.remove(ChronoField.YEAR_OF_ERA);

        if (yoeLong != null) {
          if (resolverStyle !== ResolverStyle.LENIENT) {
            ChronoField.YEAR_OF_ERA.checkValidValue(yoeLong);
          }

          var era = fieldValues.remove(ChronoField.ERA);

          if (era == null) {
            var year = fieldValues.get(ChronoField.YEAR);

            if (resolverStyle === ResolverStyle.STRICT) {
              if (year != null) {
                this._updateResolveMap(fieldValues, ChronoField.YEAR, year > 0 ? yoeLong : MathUtil.safeSubtract(1, yoeLong));
              } else {
                fieldValues.put(ChronoField.YEAR_OF_ERA, yoeLong);
              }
            } else {
              this._updateResolveMap(fieldValues, ChronoField.YEAR, year == null || year > 0 ? yoeLong : MathUtil.safeSubtract(1, yoeLong));
            }
          } else if (era === 1) {
            this._updateResolveMap(fieldValues, ChronoField.YEAR, yoeLong);
          } else if (era === 0) {
            this._updateResolveMap(fieldValues, ChronoField.YEAR, MathUtil.safeSubtract(1, yoeLong));
          } else {
            throw new DateTimeException('Invalid value for era: ' + era);
          }
        } else if (fieldValues.containsKey(ChronoField.ERA)) {
          ChronoField.ERA.checkValidValue(fieldValues.get(ChronoField.ERA));
        }

        if (fieldValues.containsKey(ChronoField.YEAR)) {
          if (fieldValues.containsKey(ChronoField.MONTH_OF_YEAR)) {
            if (fieldValues.containsKey(ChronoField.DAY_OF_MONTH)) {
              var y = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));
              var moy = fieldValues.remove(ChronoField.MONTH_OF_YEAR);
              var dom = fieldValues.remove(ChronoField.DAY_OF_MONTH);

              if (resolverStyle === ResolverStyle.LENIENT) {
                var months = moy - 1;
                var days = dom - 1;
                return LocalDate.of(y, 1, 1).plusMonths(months).plusDays(days);
              } else if (resolverStyle === ResolverStyle.SMART) {
                ChronoField.DAY_OF_MONTH.checkValidValue(dom);

                if (moy === 4 || moy === 6 || moy === 9 || moy === 11) {
                  dom = Math.min(dom, 30);
                } else if (moy === 2) {
                  dom = Math.min(dom, Month.FEBRUARY.length(Year.isLeap(y)));
                }

                return LocalDate.of(y, moy, dom);
              } else {
                return LocalDate.of(y, moy, dom);
              }
            }
          }

          if (fieldValues.containsKey(ChronoField.DAY_OF_YEAR)) {
            var _y = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));

            if (resolverStyle === ResolverStyle.LENIENT) {
              var _days = MathUtil.safeSubtract(fieldValues.remove(ChronoField.DAY_OF_YEAR), 1);

              return LocalDate.ofYearDay(_y, 1).plusDays(_days);
            }

            var doy = ChronoField.DAY_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.DAY_OF_YEAR));
            return LocalDate.ofYearDay(_y, doy);
          }

          if (fieldValues.containsKey(ChronoField.ALIGNED_WEEK_OF_YEAR)) {
            if (fieldValues.containsKey(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR)) {
              var _y2 = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));

              if (resolverStyle === ResolverStyle.LENIENT) {
                var weeks = MathUtil.safeSubtract(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR), 1);

                var _days2 = MathUtil.safeSubtract(fieldValues.remove(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR), 1);

                return LocalDate.of(_y2, 1, 1).plusWeeks(weeks).plusDays(_days2);
              }

              var aw = ChronoField.ALIGNED_WEEK_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR));
              var ad = ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR));
              var date = LocalDate.of(_y2, 1, 1).plusDays((aw - 1) * 7 + (ad - 1));

              if (resolverStyle === ResolverStyle.STRICT && date.get(ChronoField.YEAR) !== _y2) {
                throw new DateTimeException('Strict mode rejected date parsed to a different year');
              }

              return date;
            }

            if (fieldValues.containsKey(ChronoField.DAY_OF_WEEK)) {
              var _y3 = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));

              if (resolverStyle === ResolverStyle.LENIENT) {
                var _weeks = MathUtil.safeSubtract(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR), 1);

                var _days3 = MathUtil.safeSubtract(fieldValues.remove(ChronoField.DAY_OF_WEEK), 1);

                return LocalDate.of(_y3, 1, 1).plusWeeks(_weeks).plusDays(_days3);
              }

              var _aw = ChronoField.ALIGNED_WEEK_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR));

              var dow = ChronoField.DAY_OF_WEEK.checkValidIntValue(fieldValues.remove(ChronoField.DAY_OF_WEEK));

              var _date = LocalDate.of(_y3, 1, 1).plusWeeks(_aw - 1).with(TemporalAdjusters.nextOrSame(DayOfWeek.of(dow)));

              if (resolverStyle === ResolverStyle.STRICT && _date.get(ChronoField.YEAR) !== _y3) {
                throw new DateTimeException('Strict mode rejected date parsed to a different month');
              }

              return _date;
            }
          }
        }

        return null;
      };

      _proto.date = function date(temporal) {
        return LocalDate.from(temporal);
      };

      return IsoChronology;
    }(Enum);
    function _init$e() {
      IsoChronology.INSTANCE = new IsoChronology('IsoChronology');
    }

    var OffsetTime = function (_DefaultInterfaceTemp) {
      _inheritsLoose(OffsetTime, _DefaultInterfaceTemp);

      OffsetTime.from = function from(temporal) {
        requireNonNull(temporal, 'temporal');

        if (temporal instanceof OffsetTime) {
          return temporal;
        } else if (temporal instanceof OffsetDateTime) {
          return temporal.toOffsetTime();
        }

        try {
          var time = LocalTime.from(temporal);
          var offset = ZoneOffset.from(temporal);
          return new OffsetTime(time, offset);
        } catch (ex) {
          throw new DateTimeException("Unable to obtain OffsetTime TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
        }
      };

      OffsetTime.now = function now(clockOrZone) {
        if (arguments.length === 0) {
          return OffsetTime._now(Clock.systemDefaultZone());
        } else if (clockOrZone instanceof Clock) {
          return OffsetTime._now(clockOrZone);
        } else {
          return OffsetTime._now(Clock.system(clockOrZone));
        }
      };

      OffsetTime._now = function _now(clock) {
        requireNonNull(clock, 'clock');
        var now = clock.instant();
        return OffsetTime.ofInstant(now, clock.zone().rules().offset(now));
      };

      OffsetTime.of = function of() {
        if (arguments.length <= 2) {
          return OffsetTime.ofTimeAndOffset.apply(this, arguments);
        } else {
          return OffsetTime.ofNumbers.apply(this, arguments);
        }
      };

      OffsetTime.ofNumbers = function ofNumbers(hour, minute, second, nanoOfSecond, offset) {
        var time = LocalTime.of(hour, minute, second, nanoOfSecond);
        return new OffsetTime(time, offset);
      };

      OffsetTime.ofTimeAndOffset = function ofTimeAndOffset(time, offset) {
        return new OffsetTime(time, offset);
      };

      OffsetTime.ofInstant = function ofInstant(instant, zone) {
        requireNonNull(instant, 'instant');
        requireInstance(instant, Instant, 'instant');
        requireNonNull(zone, 'zone');
        requireInstance(zone, ZoneId, 'zone');
        var rules = zone.rules();
        var offset = rules.offset(instant);
        var secsOfDay = instant.epochSecond() % LocalTime.SECONDS_PER_DAY;
        secsOfDay = (secsOfDay + offset.totalSeconds()) % LocalTime.SECONDS_PER_DAY;

        if (secsOfDay < 0) {
          secsOfDay += LocalTime.SECONDS_PER_DAY;
        }

        var time = LocalTime.ofSecondOfDay(secsOfDay, instant.nano());
        return new OffsetTime(time, offset);
      };

      OffsetTime.parse = function parse(text, formatter) {
        if (formatter === void 0) {
          formatter = DateTimeFormatter.ISO_OFFSET_TIME;
        }

        requireNonNull(formatter, 'formatter');
        return formatter.parse(text, OffsetTime.FROM);
      };

      function OffsetTime(time, offset) {
        var _this;

        _this = _DefaultInterfaceTemp.call(this) || this;
        requireNonNull(time, 'time');
        requireInstance(time, LocalTime, 'time');
        requireNonNull(offset, 'offset');
        requireInstance(offset, ZoneOffset, 'offset');
        _this._time = time;
        _this._offset = offset;
        return _this;
      }

      var _proto = OffsetTime.prototype;

      _proto.adjustInto = function adjustInto(temporal) {
        return temporal.with(ChronoField.NANO_OF_DAY, this._time.toNanoOfDay()).with(ChronoField.OFFSET_SECONDS, this.offset().totalSeconds());
      };

      _proto.atDate = function atDate(date) {
        return OffsetDateTime.of(date, this._time, this._offset);
      };

      _proto.format = function format(formatter) {
        requireNonNull(formatter, 'formatter');
        return formatter.format(this, OffsetTime.FROM);
      };

      _proto.get = function get(field) {
        return _DefaultInterfaceTemp.prototype.get.call(this, field);
      };

      _proto.getLong = function getLong(field) {
        if (field instanceof ChronoField) {
          if (field === ChronoField.OFFSET_SECONDS) {
            return this._offset.totalSeconds();
          }

          return this._time.getLong(field);
        }

        return field.getFrom(this);
      };

      _proto.hour = function hour() {
        return this._time.hour();
      };

      _proto.minute = function minute() {
        return this._time.minute();
      };

      _proto.second = function second() {
        return this._time.second();
      };

      _proto.nano = function nano() {
        return this._time.nano();
      };

      _proto.offset = function offset() {
        return this._offset;
      };

      _proto.isAfter = function isAfter(other) {
        requireNonNull(other, 'other');
        return this._toEpochNano() > other._toEpochNano();
      };

      _proto.isBefore = function isBefore(other) {
        requireNonNull(other, 'other');
        return this._toEpochNano() < other._toEpochNano();
      };

      _proto.isEqual = function isEqual(other) {
        requireNonNull(other, 'other');
        return this._toEpochNano() === other._toEpochNano();
      };

      _proto.isSupported = function isSupported(fieldOrUnit) {
        if (fieldOrUnit instanceof ChronoField) {
          return fieldOrUnit.isTimeBased() || fieldOrUnit === ChronoField.OFFSET_SECONDS;
        } else if (fieldOrUnit instanceof ChronoUnit) {
          return fieldOrUnit.isTimeBased();
        }

        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
      };

      _proto.minusHours = function minusHours(hours) {
        return this._withLocalTimeOffset(this._time.minusHours(hours), this._offset);
      };

      _proto.minusMinutes = function minusMinutes(minutes) {
        return this._withLocalTimeOffset(this._time.minusMinutes(minutes), this._offset);
      };

      _proto.minusSeconds = function minusSeconds(seconds) {
        return this._withLocalTimeOffset(this._time.minusSeconds(seconds), this._offset);
      };

      _proto.minusNanos = function minusNanos(nanos) {
        return this._withLocalTimeOffset(this._time.minusNanos(nanos), this._offset);
      };

      _proto.minusAmount = function minusAmount(amount) {
        requireNonNull(amount);
        return amount.subtractFrom(this);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        return this.plus(-1 * amountToSubtract, unit);
      };

      _proto.plusAmount = function plusAmount(amount) {
        requireNonNull(amount);
        return amount.addTo(this);
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        if (unit instanceof ChronoUnit) {
          return this._withLocalTimeOffset(this._time.plus(amountToAdd, unit), this._offset);
        }

        return unit.addTo(this, amountToAdd);
      };

      _proto.plusHours = function plusHours(hours) {
        return this._withLocalTimeOffset(this._time.plusHours(hours), this._offset);
      };

      _proto.plusMinutes = function plusMinutes(minutes) {
        return this._withLocalTimeOffset(this._time.plusMinutes(minutes), this._offset);
      };

      _proto.plusSeconds = function plusSeconds(seconds) {
        return this._withLocalTimeOffset(this._time.plusSeconds(seconds), this._offset);
      };

      _proto.plusNanos = function plusNanos(nanos) {
        return this._withLocalTimeOffset(this._time.plusNanos(nanos), this._offset);
      };

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query');

        if (_query === TemporalQueries.precision()) {
          return ChronoUnit.NANOS;
        } else if (_query === TemporalQueries.offset() || _query === TemporalQueries.zone()) {
          return this.offset();
        } else if (_query === TemporalQueries.localTime()) {
          return this._time;
        } else if (_query === TemporalQueries.chronology() || _query === TemporalQueries.localDate() || _query === TemporalQueries.zoneId()) {
          return null;
        }

        return _DefaultInterfaceTemp.prototype.query.call(this, _query);
      };

      _proto.range = function range(field) {
        if (field instanceof ChronoField) {
          if (field === ChronoField.OFFSET_SECONDS) {
            return field.range();
          }

          return this._time.range(field);
        }

        return field.rangeRefinedBy(this);
      };

      _proto.toLocalTime = function toLocalTime() {
        return this._time;
      };

      _proto.truncatedTo = function truncatedTo(unit) {
        return this._withLocalTimeOffset(this._time.truncatedTo(unit), this._offset);
      };

      _proto.until = function until(endExclusive, unit) {
        requireNonNull(endExclusive, 'endExclusive');
        requireNonNull(unit, 'unit');
        var end = OffsetTime.from(endExclusive);

        if (unit instanceof ChronoUnit) {
          var nanosUntil = end._toEpochNano() - this._toEpochNano();

          switch (unit) {
            case ChronoUnit.NANOS:
              return nanosUntil;

            case ChronoUnit.MICROS:
              return Math.floor(nanosUntil / 1000);

            case ChronoUnit.MILLIS:
              return Math.floor(nanosUntil / 1000000);

            case ChronoUnit.SECONDS:
              return Math.floor(nanosUntil / LocalTime.NANOS_PER_SECOND);

            case ChronoUnit.MINUTES:
              return Math.floor(nanosUntil / LocalTime.NANOS_PER_MINUTE);

            case ChronoUnit.HOURS:
              return Math.floor(nanosUntil / LocalTime.NANOS_PER_HOUR);

            case ChronoUnit.HALF_DAYS:
              return Math.floor(nanosUntil / (12 * LocalTime.NANOS_PER_HOUR));
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.between(this, end);
      };

      _proto.withHour = function withHour(hour) {
        return this._withLocalTimeOffset(this._time.withHour(hour), this._offset);
      };

      _proto.withMinute = function withMinute(minute) {
        return this._withLocalTimeOffset(this._time.withMinute(minute), this._offset);
      };

      _proto.withSecond = function withSecond(second) {
        return this._withLocalTimeOffset(this._time.withSecond(second), this._offset);
      };

      _proto.withNano = function withNano(nano) {
        return this._withLocalTimeOffset(this._time.withNano(nano), this._offset);
      };

      _proto.withOffsetSameInstant = function withOffsetSameInstant(offset) {
        requireNonNull(offset, 'offset');

        if (offset.equals(this._offset)) {
          return this;
        }

        var difference = offset.totalSeconds() - this._offset.totalSeconds();

        var adjusted = this._time.plusSeconds(difference);

        return new OffsetTime(adjusted, offset);
      };

      _proto.withOffsetSameLocal = function withOffsetSameLocal(offset) {
        return offset != null && offset.equals(this._offset) ? this : new OffsetTime(this._time, offset);
      };

      _proto._toEpochNano = function _toEpochNano() {
        var nod = this._time.toNanoOfDay();

        var offsetNanos = this._offset.totalSeconds() * LocalTime.NANOS_PER_SECOND;
        return nod - offsetNanos;
      };

      _proto.withAdjuster = function withAdjuster(adjuster) {
        requireNonNull(adjuster, 'adjuster');

        if (adjuster instanceof LocalTime) {
          return this._withLocalTimeOffset(adjuster, this._offset);
        } else if (adjuster instanceof ZoneOffset) {
          return this._withLocalTimeOffset(this._time, adjuster);
        } else if (adjuster instanceof OffsetTime) {
          return adjuster;
        }

        return adjuster.adjustInto(this);
      };

      _proto.withFieldValue = function withFieldValue(field, newValue) {
        requireNonNull(field, 'field');

        if (field instanceof ChronoField) {
          if (field === ChronoField.OFFSET_SECONDS) {
            return this._withLocalTimeOffset(this._time, ZoneOffset.ofTotalSeconds(field.checkValidIntValue(newValue)));
          }

          return this._withLocalTimeOffset(this._time.with(field, newValue), this._offset);
        }

        return field.adjustInto(this, newValue);
      };

      _proto._withLocalTimeOffset = function _withLocalTimeOffset(time, offset) {
        if (this._time === time && this._offset.equals(offset)) {
          return this;
        }

        return new OffsetTime(time, offset);
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        requireInstance(other, OffsetTime, 'other');

        if (this._offset.equals(other._offset)) {
          return this._time.compareTo(other._time);
        }

        var compare = MathUtil.compareNumbers(this._toEpochNano(), other._toEpochNano());

        if (compare === 0) {
          return this._time.compareTo(other._time);
        }

        return compare;
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof OffsetTime) {
          return this._time.equals(other._time) && this._offset.equals(other._offset);
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return this._time.hashCode() ^ this._offset.hashCode();
      };

      _proto.toString = function toString() {
        return this._time.toString() + this._offset.toString();
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      return OffsetTime;
    }(DefaultInterfaceTemporal);
    function _init$f() {
      OffsetTime.MIN = OffsetTime.ofNumbers(0, 0, 0, 0, ZoneOffset.MAX);
      OffsetTime.MAX = OffsetTime.ofNumbers(23, 59, 59, 999999999, ZoneOffset.MIN);
      OffsetTime.FROM = createTemporalQuery('OffsetTime.FROM', function (temporal) {
        return OffsetTime.from(temporal);
      });
    }

    var ChronoZonedDateTime = function (_DefaultInterfaceTemp) {
      _inheritsLoose(ChronoZonedDateTime, _DefaultInterfaceTemp);

      function ChronoZonedDateTime() {
        return _DefaultInterfaceTemp.apply(this, arguments) || this;
      }

      var _proto = ChronoZonedDateTime.prototype;

      _proto.query = function query(_query) {
        if (_query === TemporalQueries.zoneId() || _query === TemporalQueries.zone()) {
          return this.zone();
        } else if (_query === TemporalQueries.chronology()) {
          return this.toLocalDate().chronology();
        } else if (_query === TemporalQueries.precision()) {
          return ChronoUnit.NANOS;
        } else if (_query === TemporalQueries.offset()) {
          return this.offset();
        } else if (_query === TemporalQueries.localDate()) {
          return LocalDate.ofEpochDay(this.toLocalDate().toEpochDay());
        } else if (_query === TemporalQueries.localTime()) {
          return this.toLocalTime();
        }

        return _DefaultInterfaceTemp.prototype.query.call(this, _query);
      };

      _proto.format = function format(formatter) {
        requireNonNull(formatter, 'formatter');
        return formatter.format(this);
      };

      _proto.toInstant = function toInstant() {
        return Instant.ofEpochSecond(this.toEpochSecond(), this.toLocalTime().nano());
      };

      _proto.toEpochSecond = function toEpochSecond() {
        var epochDay = this.toLocalDate().toEpochDay();
        var secs = epochDay * 86400 + this.toLocalTime().toSecondOfDay();
        secs -= this.offset().totalSeconds();
        return secs;
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        var cmp = MathUtil.compareNumbers(this.toEpochSecond(), other.toEpochSecond());

        if (cmp === 0) {
          cmp = this.toLocalTime().nano() - other.toLocalTime().nano();

          if (cmp === 0) {
            cmp = this.toLocalDateTime().compareTo(other.toLocalDateTime());

            if (cmp === 0) {
              cmp = strcmp(this.zone().id(), other.zone().id());
            }
          }
        }

        return cmp;
      };

      _proto.isAfter = function isAfter(other) {
        requireNonNull(other, 'other');
        var thisEpochSec = this.toEpochSecond();
        var otherEpochSec = other.toEpochSecond();
        return thisEpochSec > otherEpochSec || thisEpochSec === otherEpochSec && this.toLocalTime().nano() > other.toLocalTime().nano();
      };

      _proto.isBefore = function isBefore(other) {
        requireNonNull(other, 'other');
        var thisEpochSec = this.toEpochSecond();
        var otherEpochSec = other.toEpochSecond();
        return thisEpochSec < otherEpochSec || thisEpochSec === otherEpochSec && this.toLocalTime().nano() < other.toLocalTime().nano();
      };

      _proto.isEqual = function isEqual(other) {
        requireNonNull(other, 'other');
        return this.toEpochSecond() === other.toEpochSecond() && this.toLocalTime().nano() === other.toLocalTime().nano();
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof ChronoZonedDateTime) {
          return this.compareTo(other) === 0;
        }

        return false;
      };

      return ChronoZonedDateTime;
    }(DefaultInterfaceTemporal);

    function strcmp(a, b) {
      if (a < b) {
        return -1;
      }

      if (a > b) {
        return 1;
      }

      return 0;
    }

    var ZonedDateTime = function (_ChronoZonedDateTime) {
      _inheritsLoose(ZonedDateTime, _ChronoZonedDateTime);

      ZonedDateTime.now = function now(clockOrZone) {
        var clock;

        if (clockOrZone instanceof ZoneId) {
          clock = Clock.system(clockOrZone);
        } else {
          clock = clockOrZone == null ? Clock.systemDefaultZone() : clockOrZone;
        }

        return ZonedDateTime.ofInstant(clock.instant(), clock.zone());
      };

      ZonedDateTime.of = function of() {
        if (arguments.length <= 2) {
          return ZonedDateTime.of2.apply(this, arguments);
        } else if (arguments.length === 3 && arguments[0] instanceof LocalDate) {
          return ZonedDateTime.of3.apply(this, arguments);
        } else {
          return ZonedDateTime.of8.apply(this, arguments);
        }
      };

      ZonedDateTime.of3 = function of3(date, time, zone) {
        return ZonedDateTime.of2(LocalDateTime.of(date, time), zone);
      };

      ZonedDateTime.of2 = function of2(localDateTime, zone) {
        return ZonedDateTime.ofLocal(localDateTime, zone, null);
      };

      ZonedDateTime.of8 = function of8(year, month, dayOfMonth, hour, minute, second, nanoOfSecond, zone) {
        var dt = LocalDateTime.of(year, month, dayOfMonth, hour, minute, second, nanoOfSecond);
        return ZonedDateTime.ofLocal(dt, zone, null);
      };

      ZonedDateTime.ofLocal = function ofLocal(localDateTime, zone, preferredOffset) {
        requireNonNull(localDateTime, 'localDateTime');
        requireNonNull(zone, 'zone');

        if (zone instanceof ZoneOffset) {
          return new ZonedDateTime(localDateTime, zone, zone);
        }

        var offset = null;
        var rules = zone.rules();
        var validOffsets = rules.validOffsets(localDateTime);

        if (validOffsets.length === 1) {
          offset = validOffsets[0];
        } else if (validOffsets.length === 0) {
          var trans = rules.transition(localDateTime);
          localDateTime = localDateTime.plusSeconds(trans.duration().seconds());
          offset = trans.offsetAfter();
        } else {
          if (preferredOffset != null && validOffsets.some(function (validOffset) {
            return validOffset.equals(preferredOffset);
          })) {
            offset = preferredOffset;
          } else {
            offset = requireNonNull(validOffsets[0], 'offset');
          }
        }

        return new ZonedDateTime(localDateTime, offset, zone);
      };

      ZonedDateTime.ofInstant = function ofInstant() {
        if (arguments.length === 2) {
          return ZonedDateTime.ofInstant2.apply(this, arguments);
        } else {
          return ZonedDateTime.ofInstant3.apply(this, arguments);
        }
      };

      ZonedDateTime.ofInstant2 = function ofInstant2(instant, zone) {
        requireNonNull(instant, 'instant');
        requireNonNull(zone, 'zone');
        return ZonedDateTime._create(instant.epochSecond(), instant.nano(), zone);
      };

      ZonedDateTime.ofInstant3 = function ofInstant3(localDateTime, offset, zone) {
        requireNonNull(localDateTime, 'localDateTime');
        requireNonNull(offset, 'offset');
        requireNonNull(zone, 'zone');
        return ZonedDateTime._create(localDateTime.toEpochSecond(offset), localDateTime.nano(), zone);
      };

      ZonedDateTime._create = function _create(epochSecond, nanoOfSecond, zone) {
        var rules = zone.rules();
        var instant = Instant.ofEpochSecond(epochSecond, nanoOfSecond);
        var offset = rules.offset(instant);
        var ldt = LocalDateTime.ofEpochSecond(epochSecond, nanoOfSecond, offset);
        return new ZonedDateTime(ldt, offset, zone);
      };

      ZonedDateTime.ofStrict = function ofStrict(localDateTime, offset, zone) {
        requireNonNull(localDateTime, 'localDateTime');
        requireNonNull(offset, 'offset');
        requireNonNull(zone, 'zone');
        var rules = zone.rules();

        if (rules.isValidOffset(localDateTime, offset) === false) {
          var trans = rules.transition(localDateTime);

          if (trans != null && trans.isGap()) {
            throw new DateTimeException('LocalDateTime ' + localDateTime + ' does not exist in zone ' + zone + ' due to a gap in the local time-line, typically caused by daylight savings');
          }

          throw new DateTimeException('ZoneOffset "' + offset + '" is not valid for LocalDateTime "' + localDateTime + '" in zone "' + zone + '"');
        }

        return new ZonedDateTime(localDateTime, offset, zone);
      };

      ZonedDateTime.ofLenient = function ofLenient(localDateTime, offset, zone) {
        requireNonNull(localDateTime, 'localDateTime');
        requireNonNull(offset, 'offset');
        requireNonNull(zone, 'zone');

        if (zone instanceof ZoneOffset && offset.equals(zone) === false) {
          throw new IllegalArgumentException('ZoneId must match ZoneOffset');
        }

        return new ZonedDateTime(localDateTime, offset, zone);
      };

      ZonedDateTime.from = function from(temporal) {
        requireNonNull(temporal, 'temporal');

        if (temporal instanceof ZonedDateTime) {
          return temporal;
        }

        var zone = ZoneId.from(temporal);

        if (temporal.isSupported(ChronoField.INSTANT_SECONDS)) {
          var zdt = ZonedDateTime._from(temporal, zone);

          if (zdt != null) return zdt;
        }

        var ldt = LocalDateTime.from(temporal);
        return ZonedDateTime.of2(ldt, zone);
      };

      ZonedDateTime._from = function _from(temporal, zone) {
        try {
          return ZonedDateTime.__from(temporal, zone);
        } catch (ex) {
          if (!(ex instanceof DateTimeException)) throw ex;
        }
      };

      ZonedDateTime.__from = function __from(temporal, zone) {
        var epochSecond = temporal.getLong(ChronoField.INSTANT_SECONDS);
        var nanoOfSecond = temporal.get(ChronoField.NANO_OF_SECOND);
        return ZonedDateTime._create(epochSecond, nanoOfSecond, zone);
      };

      ZonedDateTime.parse = function parse(text, formatter) {
        if (formatter === void 0) {
          formatter = DateTimeFormatter.ISO_ZONED_DATE_TIME;
        }

        requireNonNull(formatter, 'formatter');
        return formatter.parse(text, ZonedDateTime.FROM);
      };

      function ZonedDateTime(dateTime, offset, zone) {
        var _this;

        requireNonNull(dateTime, 'dateTime');
        requireNonNull(offset, 'offset');
        requireNonNull(zone, 'zone');
        _this = _ChronoZonedDateTime.call(this) || this;
        _this._dateTime = dateTime;
        _this._offset = offset;
        _this._zone = zone;
        return _this;
      }

      var _proto = ZonedDateTime.prototype;

      _proto._resolveLocal = function _resolveLocal(newDateTime) {
        requireNonNull(newDateTime, 'newDateTime');
        return ZonedDateTime.ofLocal(newDateTime, this._zone, this._offset);
      };

      _proto._resolveInstant = function _resolveInstant(newDateTime) {
        return ZonedDateTime.ofInstant3(newDateTime, this._offset, this._zone);
      };

      _proto._resolveOffset = function _resolveOffset(offset) {
        if (offset.equals(this._offset) === false && this._zone.rules().isValidOffset(this._dateTime, offset)) {
          return new ZonedDateTime(this._dateTime, offset, this._zone);
        }

        return this;
      };

      _proto.isSupported = function isSupported(fieldOrUnit) {
        if (fieldOrUnit instanceof ChronoField) {
          return true;
        } else if (fieldOrUnit instanceof ChronoUnit) {
          return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();
        }

        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
      };

      _proto.range = function range(field) {
        if (field instanceof ChronoField) {
          if (field === ChronoField.INSTANT_SECONDS || field === ChronoField.OFFSET_SECONDS) {
            return field.range();
          }

          return this._dateTime.range(field);
        }

        return field.rangeRefinedBy(this);
      };

      _proto.get = function get(field) {
        return this.getLong(field);
      };

      _proto.getLong = function getLong(field) {
        if (field instanceof ChronoField) {
          switch (field) {
            case ChronoField.INSTANT_SECONDS:
              return this.toEpochSecond();

            case ChronoField.OFFSET_SECONDS:
              return this._offset.totalSeconds();
          }

          return this._dateTime.getLong(field);
        }

        requireNonNull(field, 'field');
        return field.getFrom(this);
      };

      _proto.offset = function offset() {
        return this._offset;
      };

      _proto.withEarlierOffsetAtOverlap = function withEarlierOffsetAtOverlap() {
        var trans = this._zone.rules().transition(this._dateTime);

        if (trans != null && trans.isOverlap()) {
          var earlierOffset = trans.offsetBefore();

          if (earlierOffset.equals(this._offset) === false) {
            return new ZonedDateTime(this._dateTime, earlierOffset, this._zone);
          }
        }

        return this;
      };

      _proto.withLaterOffsetAtOverlap = function withLaterOffsetAtOverlap() {
        var trans = this._zone.rules().transition(this.toLocalDateTime());

        if (trans != null) {
          var laterOffset = trans.offsetAfter();

          if (laterOffset.equals(this._offset) === false) {
            return new ZonedDateTime(this._dateTime, laterOffset, this._zone);
          }
        }

        return this;
      };

      _proto.zone = function zone() {
        return this._zone;
      };

      _proto.withZoneSameLocal = function withZoneSameLocal(zone) {
        requireNonNull(zone, 'zone');
        return this._zone.equals(zone) ? this : ZonedDateTime.ofLocal(this._dateTime, zone, this._offset);
      };

      _proto.withZoneSameInstant = function withZoneSameInstant(zone) {
        requireNonNull(zone, 'zone');
        return this._zone.equals(zone) ? this : ZonedDateTime._create(this._dateTime.toEpochSecond(this._offset), this._dateTime.nano(), zone);
      };

      _proto.withFixedOffsetZone = function withFixedOffsetZone() {
        return this._zone.equals(this._offset) ? this : new ZonedDateTime(this._dateTime, this._offset, this._offset);
      };

      _proto.year = function year() {
        return this._dateTime.year();
      };

      _proto.monthValue = function monthValue() {
        return this._dateTime.monthValue();
      };

      _proto.month = function month() {
        return this._dateTime.month();
      };

      _proto.dayOfMonth = function dayOfMonth() {
        return this._dateTime.dayOfMonth();
      };

      _proto.dayOfYear = function dayOfYear() {
        return this._dateTime.dayOfYear();
      };

      _proto.dayOfWeek = function dayOfWeek() {
        return this._dateTime.dayOfWeek();
      };

      _proto.hour = function hour() {
        return this._dateTime.hour();
      };

      _proto.minute = function minute() {
        return this._dateTime.minute();
      };

      _proto.second = function second() {
        return this._dateTime.second();
      };

      _proto.nano = function nano() {
        return this._dateTime.nano();
      };

      _proto.withAdjuster = function withAdjuster(adjuster) {
        if (adjuster instanceof LocalDate) {
          return this._resolveLocal(LocalDateTime.of(adjuster, this._dateTime.toLocalTime()));
        } else if (adjuster instanceof LocalTime) {
          return this._resolveLocal(LocalDateTime.of(this._dateTime.toLocalDate(), adjuster));
        } else if (adjuster instanceof LocalDateTime) {
          return this._resolveLocal(adjuster);
        } else if (adjuster instanceof Instant) {
          var instant = adjuster;
          return ZonedDateTime._create(instant.epochSecond(), instant.nano(), this._zone);
        } else if (adjuster instanceof ZoneOffset) {
          return this._resolveOffset(adjuster);
        }

        requireNonNull(adjuster, 'adjuster');
        return adjuster.adjustInto(this);
      };

      _proto.withFieldValue = function withFieldValue(field, newValue) {
        if (field instanceof ChronoField) {
          switch (field) {
            case ChronoField.INSTANT_SECONDS:
              return ZonedDateTime._create(newValue, this.nano(), this._zone);

            case ChronoField.OFFSET_SECONDS:
              {
                var offset = ZoneOffset.ofTotalSeconds(field.checkValidIntValue(newValue));
                return this._resolveOffset(offset);
              }
          }

          return this._resolveLocal(this._dateTime.with(field, newValue));
        }

        return field.adjustInto(this, newValue);
      };

      _proto.withYear = function withYear(year) {
        return this._resolveLocal(this._dateTime.withYear(year));
      };

      _proto.withMonth = function withMonth(month) {
        return this._resolveLocal(this._dateTime.withMonth(month));
      };

      _proto.withDayOfMonth = function withDayOfMonth(dayOfMonth) {
        return this._resolveLocal(this._dateTime.withDayOfMonth(dayOfMonth));
      };

      _proto.withDayOfYear = function withDayOfYear(dayOfYear) {
        return this._resolveLocal(this._dateTime.withDayOfYear(dayOfYear));
      };

      _proto.withHour = function withHour(hour) {
        return this._resolveLocal(this._dateTime.withHour(hour));
      };

      _proto.withMinute = function withMinute(minute) {
        return this._resolveLocal(this._dateTime.withMinute(minute));
      };

      _proto.withSecond = function withSecond(second) {
        return this._resolveLocal(this._dateTime.withSecond(second));
      };

      _proto.withNano = function withNano(nanoOfSecond) {
        return this._resolveLocal(this._dateTime.withNano(nanoOfSecond));
      };

      _proto.truncatedTo = function truncatedTo(unit) {
        return this._resolveLocal(this._dateTime.truncatedTo(unit));
      };

      _proto.plusAmount = function plusAmount(amount) {
        requireNonNull(amount);
        return amount.addTo(this);
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        if (unit instanceof ChronoUnit) {
          if (unit.isDateBased()) {
            return this._resolveLocal(this._dateTime.plus(amountToAdd, unit));
          } else {
            return this._resolveInstant(this._dateTime.plus(amountToAdd, unit));
          }
        }

        requireNonNull(unit, 'unit');
        return unit.addTo(this, amountToAdd);
      };

      _proto.plusYears = function plusYears(years) {
        return this._resolveLocal(this._dateTime.plusYears(years));
      };

      _proto.plusMonths = function plusMonths(months) {
        return this._resolveLocal(this._dateTime.plusMonths(months));
      };

      _proto.plusWeeks = function plusWeeks(weeks) {
        return this._resolveLocal(this._dateTime.plusWeeks(weeks));
      };

      _proto.plusDays = function plusDays(days) {
        return this._resolveLocal(this._dateTime.plusDays(days));
      };

      _proto.plusHours = function plusHours(hours) {
        return this._resolveInstant(this._dateTime.plusHours(hours));
      };

      _proto.plusMinutes = function plusMinutes(minutes) {
        return this._resolveInstant(this._dateTime.plusMinutes(minutes));
      };

      _proto.plusSeconds = function plusSeconds(seconds) {
        return this._resolveInstant(this._dateTime.plusSeconds(seconds));
      };

      _proto.plusNanos = function plusNanos(nanos) {
        return this._resolveInstant(this._dateTime.plusNanos(nanos));
      };

      _proto.minusAmount = function minusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.subtractFrom(this);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        return this.plusAmountUnit(-1 * amountToSubtract, unit);
      };

      _proto.minusYears = function minusYears(years) {
        return this.plusYears(-1 * years);
      };

      _proto.minusMonths = function minusMonths(months) {
        return this.plusMonths(-1 * months);
      };

      _proto.minusWeeks = function minusWeeks(weeks) {
        return this.plusWeeks(-1 * weeks);
      };

      _proto.minusDays = function minusDays(days) {
        return this.plusDays(-1 * days);
      };

      _proto.minusHours = function minusHours(hours) {
        return this.plusHours(-1 * hours);
      };

      _proto.minusMinutes = function minusMinutes(minutes) {
        return this.plusMinutes(-1 * minutes);
      };

      _proto.minusSeconds = function minusSeconds(seconds) {
        return this.plusSeconds(-1 * seconds);
      };

      _proto.minusNanos = function minusNanos(nanos) {
        return this.plusNanos(-1 * nanos);
      };

      _proto.query = function query(_query) {
        if (_query === TemporalQueries.localDate()) {
          return this.toLocalDate();
        }

        requireNonNull(_query, 'query');
        return _ChronoZonedDateTime.prototype.query.call(this, _query);
      };

      _proto.until = function until(endExclusive, unit) {
        var end = ZonedDateTime.from(endExclusive);

        if (unit instanceof ChronoUnit) {
          end = end.withZoneSameInstant(this._zone);

          if (unit.isDateBased()) {
            return this._dateTime.until(end._dateTime, unit);
          } else {
            var difference = this._offset.totalSeconds() - end._offset.totalSeconds();

            var adjustedEnd = end._dateTime.plusSeconds(difference);

            return this._dateTime.until(adjustedEnd, unit);
          }
        }

        return unit.between(this, end);
      };

      _proto.toLocalDateTime = function toLocalDateTime() {
        return this._dateTime;
      };

      _proto.toLocalDate = function toLocalDate() {
        return this._dateTime.toLocalDate();
      };

      _proto.toLocalTime = function toLocalTime() {
        return this._dateTime.toLocalTime();
      };

      _proto.toOffsetDateTime = function toOffsetDateTime() {
        return OffsetDateTime.of(this._dateTime, this._offset);
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof ZonedDateTime) {
          return this._dateTime.equals(other._dateTime) && this._offset.equals(other._offset) && this._zone.equals(other._zone);
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return MathUtil.hashCode(this._dateTime.hashCode(), this._offset.hashCode(), this._zone.hashCode());
      };

      _proto.toString = function toString() {
        var str = this._dateTime.toString() + this._offset.toString();

        if (this._offset !== this._zone) {
          str += '[' + this._zone.toString() + ']';
        }

        return str;
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      _proto.format = function format(formatter) {
        return _ChronoZonedDateTime.prototype.format.call(this, formatter);
      };

      return ZonedDateTime;
    }(ChronoZonedDateTime);
    function _init$g() {
      ZonedDateTime.FROM = createTemporalQuery('ZonedDateTime.FROM', function (temporal) {
        return ZonedDateTime.from(temporal);
      });
    }

    var OffsetDateTime = function (_DefaultInterfaceTemp) {
      _inheritsLoose(OffsetDateTime, _DefaultInterfaceTemp);

      OffsetDateTime.from = function from(temporal) {
        requireNonNull(temporal, 'temporal');

        if (temporal instanceof OffsetDateTime) {
          return temporal;
        }

        try {
          var offset = ZoneOffset.from(temporal);

          try {
            var ldt = LocalDateTime.from(temporal);
            return OffsetDateTime.of(ldt, offset);
          } catch (_) {
            var instant = Instant.from(temporal);
            return OffsetDateTime.ofInstant(instant, offset);
          }
        } catch (ex) {
          throw new DateTimeException("Unable to obtain OffsetDateTime TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
        }
      };

      OffsetDateTime.now = function now(clockOrZone) {
        if (arguments.length === 0) {
          return OffsetDateTime.now(Clock.systemDefaultZone());
        } else {
          requireNonNull(clockOrZone, 'clockOrZone');

          if (clockOrZone instanceof ZoneId) {
            return OffsetDateTime.now(Clock.system(clockOrZone));
          } else if (clockOrZone instanceof Clock) {
            var now = clockOrZone.instant();
            return OffsetDateTime.ofInstant(now, clockOrZone.zone().rules().offset(now));
          } else {
            throw new IllegalArgumentException('clockOrZone must be an instance of ZoneId or Clock');
          }
        }
      };

      OffsetDateTime.of = function of() {
        if (arguments.length <= 2) {
          return OffsetDateTime.ofDateTime.apply(this, arguments);
        } else if (arguments.length === 3) {
          return OffsetDateTime.ofDateAndTime.apply(this, arguments);
        } else {
          return OffsetDateTime.ofNumbers.apply(this, arguments);
        }
      };

      OffsetDateTime.ofDateTime = function ofDateTime(dateTime, offset) {
        return new OffsetDateTime(dateTime, offset);
      };

      OffsetDateTime.ofDateAndTime = function ofDateAndTime(date, time, offset) {
        var dt = LocalDateTime.of(date, time);
        return new OffsetDateTime(dt, offset);
      };

      OffsetDateTime.ofNumbers = function ofNumbers(year, month, dayOfMonth, hour, minute, second, nanoOfSecond, offset) {
        if (hour === void 0) {
          hour = 0;
        }

        if (minute === void 0) {
          minute = 0;
        }

        if (second === void 0) {
          second = 0;
        }

        if (nanoOfSecond === void 0) {
          nanoOfSecond = 0;
        }

        var dt = LocalDateTime.of(year, month, dayOfMonth, hour, minute, second, nanoOfSecond);
        return new OffsetDateTime(dt, offset);
      };

      OffsetDateTime.ofInstant = function ofInstant(instant, zone) {
        requireNonNull(instant, 'instant');
        requireNonNull(zone, 'zone');
        var rules = zone.rules();
        var offset = rules.offset(instant);
        var ldt = LocalDateTime.ofEpochSecond(instant.epochSecond(), instant.nano(), offset);
        return new OffsetDateTime(ldt, offset);
      };

      OffsetDateTime.parse = function parse(text, formatter) {
        if (formatter === void 0) {
          formatter = DateTimeFormatter.ISO_OFFSET_DATE_TIME;
        }

        requireNonNull(formatter, 'formatter');
        return formatter.parse(text, OffsetDateTime.FROM);
      };

      function OffsetDateTime(dateTime, offset) {
        var _this;

        _this = _DefaultInterfaceTemp.call(this) || this;
        requireNonNull(dateTime, 'dateTime');
        requireInstance(dateTime, LocalDateTime, 'dateTime');
        requireNonNull(offset, 'offset');
        requireInstance(offset, ZoneOffset, 'offset');
        _this._dateTime = dateTime;
        _this._offset = offset;
        return _this;
      }

      var _proto = OffsetDateTime.prototype;

      _proto.adjustInto = function adjustInto(temporal) {
        return temporal.with(ChronoField.EPOCH_DAY, this.toLocalDate().toEpochDay()).with(ChronoField.NANO_OF_DAY, this.toLocalTime().toNanoOfDay()).with(ChronoField.OFFSET_SECONDS, this.offset().totalSeconds());
      };

      _proto.until = function until(endExclusive, unit) {
        var end = OffsetDateTime.from(endExclusive);

        if (unit instanceof ChronoUnit) {
          end = end.withOffsetSameInstant(this._offset);
          return this._dateTime.until(end._dateTime, unit);
        }

        return unit.between(this, end);
      };

      _proto.atZoneSameInstant = function atZoneSameInstant(zone) {
        return ZonedDateTime.ofInstant(this._dateTime, this._offset, zone);
      };

      _proto.atZoneSimilarLocal = function atZoneSimilarLocal(zone) {
        return ZonedDateTime.ofLocal(this._dateTime, zone, this._offset);
      };

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query');

        if (_query === TemporalQueries.chronology()) {
          return IsoChronology.INSTANCE;
        } else if (_query === TemporalQueries.precision()) {
          return ChronoUnit.NANOS;
        } else if (_query === TemporalQueries.offset() || _query === TemporalQueries.zone()) {
          return this.offset();
        } else if (_query === TemporalQueries.localDate()) {
          return this.toLocalDate();
        } else if (_query === TemporalQueries.localTime()) {
          return this.toLocalTime();
        } else if (_query === TemporalQueries.zoneId()) {
          return null;
        }

        return _DefaultInterfaceTemp.prototype.query.call(this, _query);
      };

      _proto.get = function get(field) {
        if (field instanceof ChronoField) {
          switch (field) {
            case ChronoField.INSTANT_SECONDS:
              throw new DateTimeException('Field too large for an int: ' + field);

            case ChronoField.OFFSET_SECONDS:
              return this.offset().totalSeconds();
          }

          return this._dateTime.get(field);
        }

        return _DefaultInterfaceTemp.prototype.get.call(this, field);
      };

      _proto.getLong = function getLong(field) {
        if (field instanceof ChronoField) {
          switch (field) {
            case ChronoField.INSTANT_SECONDS:
              return this.toEpochSecond();

            case ChronoField.OFFSET_SECONDS:
              return this.offset().totalSeconds();
          }

          return this._dateTime.getLong(field);
        }

        return field.getFrom(this);
      };

      _proto.offset = function offset() {
        return this._offset;
      };

      _proto.year = function year() {
        return this._dateTime.year();
      };

      _proto.monthValue = function monthValue() {
        return this._dateTime.monthValue();
      };

      _proto.month = function month() {
        return this._dateTime.month();
      };

      _proto.dayOfMonth = function dayOfMonth() {
        return this._dateTime.dayOfMonth();
      };

      _proto.dayOfYear = function dayOfYear() {
        return this._dateTime.dayOfYear();
      };

      _proto.dayOfWeek = function dayOfWeek() {
        return this._dateTime.dayOfWeek();
      };

      _proto.hour = function hour() {
        return this._dateTime.hour();
      };

      _proto.minute = function minute() {
        return this._dateTime.minute();
      };

      _proto.second = function second() {
        return this._dateTime.second();
      };

      _proto.nano = function nano() {
        return this._dateTime.nano();
      };

      _proto.toLocalDateTime = function toLocalDateTime() {
        return this._dateTime;
      };

      _proto.toLocalDate = function toLocalDate() {
        return this._dateTime.toLocalDate();
      };

      _proto.toLocalTime = function toLocalTime() {
        return this._dateTime.toLocalTime();
      };

      _proto.toOffsetTime = function toOffsetTime() {
        return OffsetTime.of(this._dateTime.toLocalTime(), this._offset);
      };

      _proto.toZonedDateTime = function toZonedDateTime() {
        return ZonedDateTime.of(this._dateTime, this._offset);
      };

      _proto.toInstant = function toInstant() {
        return this._dateTime.toInstant(this._offset);
      };

      _proto.toEpochSecond = function toEpochSecond() {
        return this._dateTime.toEpochSecond(this._offset);
      };

      _proto.isSupported = function isSupported(fieldOrUnit) {
        if (fieldOrUnit instanceof ChronoField) {
          return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();
        }

        if (fieldOrUnit instanceof ChronoUnit) {
          return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();
        }

        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
      };

      _proto.range = function range(field) {
        if (field instanceof ChronoField) {
          if (field === ChronoField.INSTANT_SECONDS || field === ChronoField.OFFSET_SECONDS) {
            return field.range();
          }

          return this._dateTime.range(field);
        }

        return field.rangeRefinedBy(this);
      };

      _proto.withAdjuster = function withAdjuster(adjuster) {
        requireNonNull(adjuster);

        if (adjuster instanceof LocalDate || adjuster instanceof LocalTime || adjuster instanceof LocalDateTime) {
          return this._withDateTimeOffset(this._dateTime.with(adjuster), this._offset);
        } else if (adjuster instanceof Instant) {
          return OffsetDateTime.ofInstant(adjuster, this._offset);
        } else if (adjuster instanceof ZoneOffset) {
          return this._withDateTimeOffset(this._dateTime, adjuster);
        } else if (adjuster instanceof OffsetDateTime) {
          return adjuster;
        }

        return adjuster.adjustInto(this);
      };

      _proto.withFieldValue = function withFieldValue(field, newValue) {
        requireNonNull(field);

        if (field instanceof ChronoField) {
          var f = field;

          switch (f) {
            case ChronoField.INSTANT_SECONDS:
              return OffsetDateTime.ofInstant(Instant.ofEpochSecond(newValue, this.nano()), this._offset);

            case ChronoField.OFFSET_SECONDS:
              {
                return this._withDateTimeOffset(this._dateTime, ZoneOffset.ofTotalSeconds(f.checkValidIntValue(newValue)));
              }
          }

          return this._withDateTimeOffset(this._dateTime.with(field, newValue), this._offset);
        }

        return field.adjustInto(this, newValue);
      };

      _proto._withDateTimeOffset = function _withDateTimeOffset(dateTime, offset) {
        if (this._dateTime === dateTime && this._offset.equals(offset)) {
          return this;
        }

        return new OffsetDateTime(dateTime, offset);
      };

      _proto.withYear = function withYear(year) {
        return this._withDateTimeOffset(this._dateTime.withYear(year), this._offset);
      };

      _proto.withMonth = function withMonth(month) {
        return this._withDateTimeOffset(this._dateTime.withMonth(month), this._offset);
      };

      _proto.withDayOfMonth = function withDayOfMonth(dayOfMonth) {
        return this._withDateTimeOffset(this._dateTime.withDayOfMonth(dayOfMonth), this._offset);
      };

      _proto.withDayOfYear = function withDayOfYear(dayOfYear) {
        return this._withDateTimeOffset(this._dateTime.withDayOfYear(dayOfYear), this._offset);
      };

      _proto.withHour = function withHour(hour) {
        return this._withDateTimeOffset(this._dateTime.withHour(hour), this._offset);
      };

      _proto.withMinute = function withMinute(minute) {
        return this._withDateTimeOffset(this._dateTime.withMinute(minute), this._offset);
      };

      _proto.withSecond = function withSecond(second) {
        return this._withDateTimeOffset(this._dateTime.withSecond(second), this._offset);
      };

      _proto.withNano = function withNano(nanoOfSecond) {
        return this._withDateTimeOffset(this._dateTime.withNano(nanoOfSecond), this._offset);
      };

      _proto.withOffsetSameLocal = function withOffsetSameLocal(offset) {
        requireNonNull(offset, 'offset');
        return this._withDateTimeOffset(this._dateTime, offset);
      };

      _proto.withOffsetSameInstant = function withOffsetSameInstant(offset) {
        requireNonNull(offset, 'offset');

        if (offset.equals(this._offset)) {
          return this;
        }

        var difference = offset.totalSeconds() - this._offset.totalSeconds();

        var adjusted = this._dateTime.plusSeconds(difference);

        return new OffsetDateTime(adjusted, offset);
      };

      _proto.truncatedTo = function truncatedTo(unit) {
        return this._withDateTimeOffset(this._dateTime.truncatedTo(unit), this._offset);
      };

      _proto.plusAmount = function plusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.addTo(this);
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        if (unit instanceof ChronoUnit) {
          return this._withDateTimeOffset(this._dateTime.plus(amountToAdd, unit), this._offset);
        }

        return unit.addTo(this, amountToAdd);
      };

      _proto.plusYears = function plusYears(years) {
        return this._withDateTimeOffset(this._dateTime.plusYears(years), this._offset);
      };

      _proto.plusMonths = function plusMonths(months) {
        return this._withDateTimeOffset(this._dateTime.plusMonths(months), this._offset);
      };

      _proto.plusWeeks = function plusWeeks(weeks) {
        return this._withDateTimeOffset(this._dateTime.plusWeeks(weeks), this._offset);
      };

      _proto.plusDays = function plusDays(days) {
        return this._withDateTimeOffset(this._dateTime.plusDays(days), this._offset);
      };

      _proto.plusHours = function plusHours(hours) {
        return this._withDateTimeOffset(this._dateTime.plusHours(hours), this._offset);
      };

      _proto.plusMinutes = function plusMinutes(minutes) {
        return this._withDateTimeOffset(this._dateTime.plusMinutes(minutes), this._offset);
      };

      _proto.plusSeconds = function plusSeconds(seconds) {
        return this._withDateTimeOffset(this._dateTime.plusSeconds(seconds), this._offset);
      };

      _proto.plusNanos = function plusNanos(nanos) {
        return this._withDateTimeOffset(this._dateTime.plusNanos(nanos), this._offset);
      };

      _proto.minusAmount = function minusAmount(amount) {
        requireNonNull(amount);
        return amount.subtractFrom(this);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        return this.plus(-1 * amountToSubtract, unit);
      };

      _proto.minusYears = function minusYears(years) {
        return this._withDateTimeOffset(this._dateTime.minusYears(years), this._offset);
      };

      _proto.minusMonths = function minusMonths(months) {
        return this._withDateTimeOffset(this._dateTime.minusMonths(months), this._offset);
      };

      _proto.minusWeeks = function minusWeeks(weeks) {
        return this._withDateTimeOffset(this._dateTime.minusWeeks(weeks), this._offset);
      };

      _proto.minusDays = function minusDays(days) {
        return this._withDateTimeOffset(this._dateTime.minusDays(days), this._offset);
      };

      _proto.minusHours = function minusHours(hours) {
        return this._withDateTimeOffset(this._dateTime.minusHours(hours), this._offset);
      };

      _proto.minusMinutes = function minusMinutes(minutes) {
        return this._withDateTimeOffset(this._dateTime.minusMinutes(minutes), this._offset);
      };

      _proto.minusSeconds = function minusSeconds(seconds) {
        return this._withDateTimeOffset(this._dateTime.minusSeconds(seconds), this._offset);
      };

      _proto.minusNanos = function minusNanos(nanos) {
        return this._withDateTimeOffset(this._dateTime.minusNanos(nanos), this._offset);
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        requireInstance(other, OffsetDateTime, 'other');

        if (this.offset().equals(other.offset())) {
          return this.toLocalDateTime().compareTo(other.toLocalDateTime());
        }

        var cmp = MathUtil.compareNumbers(this.toEpochSecond(), other.toEpochSecond());

        if (cmp === 0) {
          cmp = this.toLocalTime().nano() - other.toLocalTime().nano();

          if (cmp === 0) {
            cmp = this.toLocalDateTime().compareTo(other.toLocalDateTime());
          }
        }

        return cmp;
      };

      _proto.isAfter = function isAfter(other) {
        requireNonNull(other, 'other');
        var thisEpochSec = this.toEpochSecond();
        var otherEpochSec = other.toEpochSecond();
        return thisEpochSec > otherEpochSec || thisEpochSec === otherEpochSec && this.toLocalTime().nano() > other.toLocalTime().nano();
      };

      _proto.isBefore = function isBefore(other) {
        requireNonNull(other, 'other');
        var thisEpochSec = this.toEpochSecond();
        var otherEpochSec = other.toEpochSecond();
        return thisEpochSec < otherEpochSec || thisEpochSec === otherEpochSec && this.toLocalTime().nano() < other.toLocalTime().nano();
      };

      _proto.isEqual = function isEqual(other) {
        requireNonNull(other, 'other');
        return this.toEpochSecond() === other.toEpochSecond() && this.toLocalTime().nano() === other.toLocalTime().nano();
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof OffsetDateTime) {
          return this._dateTime.equals(other._dateTime) && this._offset.equals(other._offset);
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return this._dateTime.hashCode() ^ this._offset.hashCode();
      };

      _proto.toString = function toString() {
        return this._dateTime.toString() + this._offset.toString();
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      _proto.format = function format(formatter) {
        requireNonNull(formatter, 'formatter');
        return formatter.format(this);
      };

      return OffsetDateTime;
    }(DefaultInterfaceTemporal);
    function _init$h() {
      OffsetDateTime.MIN = LocalDateTime.MIN.atOffset(ZoneOffset.MAX);
      OffsetDateTime.MAX = LocalDateTime.MAX.atOffset(ZoneOffset.MIN);
      OffsetDateTime.FROM = createTemporalQuery('OffsetDateTime.FROM', function (temporal) {
        return OffsetDateTime.from(temporal);
      });
    }

    var DAYS_PER_CYCLE = 146097;
    var DAYS_0000_TO_1970 = DAYS_PER_CYCLE * 5 - (30 * 365 + 7);
    var LocalDate = function (_ChronoLocalDate) {
      _inheritsLoose(LocalDate, _ChronoLocalDate);

      LocalDate.now = function now(clockOrZone) {
        var clock;

        if (clockOrZone == null) {
          clock = Clock.systemDefaultZone();
        } else if (clockOrZone instanceof ZoneId) {
          clock = Clock.system(clockOrZone);
        } else {
          clock = clockOrZone;
        }

        return LocalDate.ofInstant(clock.instant(), clock.zone());
      };

      LocalDate.ofInstant = function ofInstant(instant, zone) {
        if (zone === void 0) {
          zone = ZoneId.systemDefault();
        }

        requireNonNull(instant, 'instant');
        var offset = zone.rules().offset(instant);
        var epochSec = instant.epochSecond() + offset.totalSeconds();
        var epochDay = MathUtil.floorDiv(epochSec, LocalTime.SECONDS_PER_DAY);
        return LocalDate.ofEpochDay(epochDay);
      };

      LocalDate.of = function of(year, month, dayOfMonth) {
        return new LocalDate(year, month, dayOfMonth);
      };

      LocalDate.ofYearDay = function ofYearDay(year, dayOfYear) {
        ChronoField.YEAR.checkValidValue(year);
        var leap = IsoChronology.isLeapYear(year);

        if (dayOfYear === 366 && leap === false) {
          assert(false, 'Invalid date \'DayOfYear 366\' as \'' + year + '\' is not a leap year', DateTimeException);
        }

        var moy = Month.of(Math.floor((dayOfYear - 1) / 31 + 1));
        var monthEnd = moy.firstDayOfYear(leap) + moy.length(leap) - 1;

        if (dayOfYear > monthEnd) {
          moy = moy.plus(1);
        }

        var dom = dayOfYear - moy.firstDayOfYear(leap) + 1;
        return new LocalDate(year, moy.value(), dom);
      };

      LocalDate.ofEpochDay = function ofEpochDay(epochDay) {
        if (epochDay === void 0) {
          epochDay = 0;
        }

        var adjust, adjustCycles, doyEst, yearEst, zeroDay;
        zeroDay = epochDay + DAYS_0000_TO_1970;
        zeroDay -= 60;
        adjust = 0;

        if (zeroDay < 0) {
          adjustCycles = MathUtil.intDiv(zeroDay + 1, DAYS_PER_CYCLE) - 1;
          adjust = adjustCycles * 400;
          zeroDay += -adjustCycles * DAYS_PER_CYCLE;
        }

        yearEst = MathUtil.intDiv(400 * zeroDay + 591, DAYS_PER_CYCLE);
        doyEst = zeroDay - (365 * yearEst + MathUtil.intDiv(yearEst, 4) - MathUtil.intDiv(yearEst, 100) + MathUtil.intDiv(yearEst, 400));

        if (doyEst < 0) {
          yearEst--;
          doyEst = zeroDay - (365 * yearEst + MathUtil.intDiv(yearEst, 4) - MathUtil.intDiv(yearEst, 100) + MathUtil.intDiv(yearEst, 400));
        }

        yearEst += adjust;
        var marchDoy0 = doyEst;
        var marchMonth0 = MathUtil.intDiv(marchDoy0 * 5 + 2, 153);
        var month = (marchMonth0 + 2) % 12 + 1;
        var dom = marchDoy0 - MathUtil.intDiv(marchMonth0 * 306 + 5, 10) + 1;
        yearEst += MathUtil.intDiv(marchMonth0, 10);
        var year = yearEst;
        return new LocalDate(year, month, dom);
      };

      LocalDate.from = function from(temporal) {
        requireNonNull(temporal, 'temporal');
        var date = temporal.query(TemporalQueries.localDate());

        if (date == null) {
          throw new DateTimeException("Unable to obtain LocalDate from TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
        }

        return date;
      };

      LocalDate.parse = function parse(text, formatter) {
        if (formatter === void 0) {
          formatter = DateTimeFormatter.ISO_LOCAL_DATE;
        }

        assert(formatter != null, 'formatter', NullPointerException);
        return formatter.parse(text, LocalDate.FROM);
      };

      LocalDate._resolvePreviousValid = function _resolvePreviousValid(year, month, day) {
        switch (month) {
          case 2:
            day = Math.min(day, IsoChronology.isLeapYear(year) ? 29 : 28);
            break;

          case 4:
          case 6:
          case 9:
          case 11:
            day = Math.min(day, 30);
            break;
        }

        return LocalDate.of(year, month, day);
      };

      function LocalDate(year, month, dayOfMonth) {
        var _this;

        _this = _ChronoLocalDate.call(this) || this;
        requireNonNull(year, 'year');
        requireNonNull(month, 'month');
        requireNonNull(dayOfMonth, 'dayOfMonth');

        if (month instanceof Month) {
          month = month.value();
        }

        _this._year = MathUtil.safeToInt(year);
        _this._month = MathUtil.safeToInt(month);
        _this._day = MathUtil.safeToInt(dayOfMonth);

        LocalDate._validate(_this._year, _this._month, _this._day);

        return _this;
      }

      LocalDate._validate = function _validate(year, month, dayOfMonth) {
        var dom;
        ChronoField.YEAR.checkValidValue(year);
        ChronoField.MONTH_OF_YEAR.checkValidValue(month);
        ChronoField.DAY_OF_MONTH.checkValidValue(dayOfMonth);

        if (dayOfMonth > 28) {
          dom = 31;

          switch (month) {
            case 2:
              dom = IsoChronology.isLeapYear(year) ? 29 : 28;
              break;

            case 4:
            case 6:
            case 9:
            case 11:
              dom = 30;
          }

          if (dayOfMonth > dom) {
            if (dayOfMonth === 29) {
              assert(false, 'Invalid date \'February 29\' as \'' + year + '\' is not a leap year', DateTimeException);
            } else {
              assert(false, 'Invalid date \'' + year + '\' \'' + month + '\' \'' + dayOfMonth + '\'', DateTimeException);
            }
          }
        }
      };

      var _proto = LocalDate.prototype;

      _proto.isSupported = function isSupported(field) {
        return _ChronoLocalDate.prototype.isSupported.call(this, field);
      };

      _proto.range = function range(field) {
        if (field instanceof ChronoField) {
          if (field.isDateBased()) {
            switch (field) {
              case ChronoField.DAY_OF_MONTH:
                return ValueRange.of(1, this.lengthOfMonth());

              case ChronoField.DAY_OF_YEAR:
                return ValueRange.of(1, this.lengthOfYear());

              case ChronoField.ALIGNED_WEEK_OF_MONTH:
                return ValueRange.of(1, this.month() === Month.FEBRUARY && this.isLeapYear() === false ? 4 : 5);

              case ChronoField.YEAR_OF_ERA:
                return this._year <= 0 ? ValueRange.of(1, Year.MAX_VALUE + 1) : ValueRange.of(1, Year.MAX_VALUE);
            }

            return field.range();
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.rangeRefinedBy(this);
      };

      _proto.get = function get(field) {
        return this.getLong(field);
      };

      _proto.getLong = function getLong(field) {
        assert(field != null, '', NullPointerException);

        if (field instanceof ChronoField) {
          return this._get0(field);
        }

        return field.getFrom(this);
      };

      _proto._get0 = function _get0(field) {
        switch (field) {
          case ChronoField.DAY_OF_WEEK:
            return this.dayOfWeek().value();

          case ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH:
            return MathUtil.intMod(this._day - 1, 7) + 1;

          case ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR:
            return MathUtil.intMod(this.dayOfYear() - 1, 7) + 1;

          case ChronoField.DAY_OF_MONTH:
            return this._day;

          case ChronoField.DAY_OF_YEAR:
            return this.dayOfYear();

          case ChronoField.EPOCH_DAY:
            return this.toEpochDay();

          case ChronoField.ALIGNED_WEEK_OF_MONTH:
            return MathUtil.intDiv(this._day - 1, 7) + 1;

          case ChronoField.ALIGNED_WEEK_OF_YEAR:
            return MathUtil.intDiv(this.dayOfYear() - 1, 7) + 1;

          case ChronoField.MONTH_OF_YEAR:
            return this._month;

          case ChronoField.PROLEPTIC_MONTH:
            return this._prolepticMonth();

          case ChronoField.YEAR_OF_ERA:
            return this._year >= 1 ? this._year : 1 - this._year;

          case ChronoField.YEAR:
            return this._year;

          case ChronoField.ERA:
            return this._year >= 1 ? 1 : 0;
        }

        throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
      };

      _proto._prolepticMonth = function _prolepticMonth() {
        return this._year * 12 + (this._month - 1);
      };

      _proto.chronology = function chronology() {
        return IsoChronology.INSTANCE;
      };

      _proto.year = function year() {
        return this._year;
      };

      _proto.monthValue = function monthValue() {
        return this._month;
      };

      _proto.month = function month() {
        return Month.of(this._month);
      };

      _proto.dayOfMonth = function dayOfMonth() {
        return this._day;
      };

      _proto.dayOfYear = function dayOfYear() {
        return this.month().firstDayOfYear(this.isLeapYear()) + this._day - 1;
      };

      _proto.dayOfWeek = function dayOfWeek() {
        var dow0 = MathUtil.floorMod(this.toEpochDay() + 3, 7);
        return DayOfWeek.of(dow0 + 1);
      };

      _proto.isLeapYear = function isLeapYear() {
        return IsoChronology.isLeapYear(this._year);
      };

      _proto.lengthOfMonth = function lengthOfMonth() {
        switch (this._month) {
          case 2:
            return this.isLeapYear() ? 29 : 28;

          case 4:
          case 6:
          case 9:
          case 11:
            return 30;

          default:
            return 31;
        }
      };

      _proto.lengthOfYear = function lengthOfYear() {
        return this.isLeapYear() ? 366 : 365;
      };

      _proto.withAdjuster = function withAdjuster(adjuster) {
        requireNonNull(adjuster, 'adjuster');

        if (adjuster instanceof LocalDate) {
          return adjuster;
        }

        assert(typeof adjuster.adjustInto === 'function', 'adjuster', IllegalArgumentException);
        return adjuster.adjustInto(this);
      };

      _proto.withFieldValue = function withFieldValue(field, newValue) {
        assert(field != null, 'field', NullPointerException);

        if (field instanceof ChronoField) {
          var f = field;
          f.checkValidValue(newValue);

          switch (f) {
            case ChronoField.DAY_OF_WEEK:
              return this.plusDays(newValue - this.dayOfWeek().value());

            case ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH:
              return this.plusDays(newValue - this.getLong(ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH));

            case ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR:
              return this.plusDays(newValue - this.getLong(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR));

            case ChronoField.DAY_OF_MONTH:
              return this.withDayOfMonth(newValue);

            case ChronoField.DAY_OF_YEAR:
              return this.withDayOfYear(newValue);

            case ChronoField.EPOCH_DAY:
              return LocalDate.ofEpochDay(newValue);

            case ChronoField.ALIGNED_WEEK_OF_MONTH:
              return this.plusWeeks(newValue - this.getLong(ChronoField.ALIGNED_WEEK_OF_MONTH));

            case ChronoField.ALIGNED_WEEK_OF_YEAR:
              return this.plusWeeks(newValue - this.getLong(ChronoField.ALIGNED_WEEK_OF_YEAR));

            case ChronoField.MONTH_OF_YEAR:
              return this.withMonth(newValue);

            case ChronoField.PROLEPTIC_MONTH:
              return this.plusMonths(newValue - this.getLong(ChronoField.PROLEPTIC_MONTH));

            case ChronoField.YEAR_OF_ERA:
              return this.withYear(this._year >= 1 ? newValue : 1 - newValue);

            case ChronoField.YEAR:
              return this.withYear(newValue);

            case ChronoField.ERA:
              return this.getLong(ChronoField.ERA) === newValue ? this : this.withYear(1 - this._year);
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.adjustInto(this, newValue);
      };

      _proto.withYear = function withYear(year) {
        if (this._year === year) {
          return this;
        }

        ChronoField.YEAR.checkValidValue(year);
        return LocalDate._resolvePreviousValid(year, this._month, this._day);
      };

      _proto.withMonth = function withMonth(month) {
        var m = month instanceof Month ? month.value() : month;

        if (this._month === m) {
          return this;
        }

        ChronoField.MONTH_OF_YEAR.checkValidValue(m);
        return LocalDate._resolvePreviousValid(this._year, m, this._day);
      };

      _proto.withDayOfMonth = function withDayOfMonth(dayOfMonth) {
        if (this._day === dayOfMonth) {
          return this;
        }

        return LocalDate.of(this._year, this._month, dayOfMonth);
      };

      _proto.withDayOfYear = function withDayOfYear(dayOfYear) {
        if (this.dayOfYear() === dayOfYear) {
          return this;
        }

        return LocalDate.ofYearDay(this._year, dayOfYear);
      };

      _proto.plusAmount = function plusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.addTo(this);
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        requireNonNull(amountToAdd, 'amountToAdd');
        requireNonNull(unit, 'unit');

        if (unit instanceof ChronoUnit) {
          switch (unit) {
            case ChronoUnit.DAYS:
              return this.plusDays(amountToAdd);

            case ChronoUnit.WEEKS:
              return this.plusWeeks(amountToAdd);

            case ChronoUnit.MONTHS:
              return this.plusMonths(amountToAdd);

            case ChronoUnit.YEARS:
              return this.plusYears(amountToAdd);

            case ChronoUnit.DECADES:
              return this.plusYears(MathUtil.safeMultiply(amountToAdd, 10));

            case ChronoUnit.CENTURIES:
              return this.plusYears(MathUtil.safeMultiply(amountToAdd, 100));

            case ChronoUnit.MILLENNIA:
              return this.plusYears(MathUtil.safeMultiply(amountToAdd, 1000));

            case ChronoUnit.ERAS:
              return this.with(ChronoField.ERA, MathUtil.safeAdd(this.getLong(ChronoField.ERA), amountToAdd));
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.addTo(this, amountToAdd);
      };

      _proto.plusYears = function plusYears(yearsToAdd) {
        if (yearsToAdd === 0) {
          return this;
        }

        var newYear = ChronoField.YEAR.checkValidIntValue(this._year + yearsToAdd);
        return LocalDate._resolvePreviousValid(newYear, this._month, this._day);
      };

      _proto.plusMonths = function plusMonths(monthsToAdd) {
        if (monthsToAdd === 0) {
          return this;
        }

        var monthCount = this._year * 12 + (this._month - 1);
        var calcMonths = monthCount + monthsToAdd;
        var newYear = ChronoField.YEAR.checkValidIntValue(MathUtil.floorDiv(calcMonths, 12));
        var newMonth = MathUtil.floorMod(calcMonths, 12) + 1;
        return LocalDate._resolvePreviousValid(newYear, newMonth, this._day);
      };

      _proto.plusWeeks = function plusWeeks(weeksToAdd) {
        return this.plusDays(MathUtil.safeMultiply(weeksToAdd, 7));
      };

      _proto.plusDays = function plusDays(daysToAdd) {
        if (daysToAdd === 0) {
          return this;
        }

        var mjDay = MathUtil.safeAdd(this.toEpochDay(), daysToAdd);
        return LocalDate.ofEpochDay(mjDay);
      };

      _proto.minusAmount = function minusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.subtractFrom(this);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        requireNonNull(amountToSubtract, 'amountToSubtract');
        requireNonNull(unit, 'unit');
        return this.plusAmountUnit(-1 * amountToSubtract, unit);
      };

      _proto.minusYears = function minusYears(yearsToSubtract) {
        return this.plusYears(yearsToSubtract * -1);
      };

      _proto.minusMonths = function minusMonths(monthsToSubtract) {
        return this.plusMonths(monthsToSubtract * -1);
      };

      _proto.minusWeeks = function minusWeeks(weeksToSubtract) {
        return this.plusWeeks(weeksToSubtract * -1);
      };

      _proto.minusDays = function minusDays(daysToSubtract) {
        return this.plusDays(daysToSubtract * -1);
      };

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query');

        if (_query === TemporalQueries.localDate()) {
          return this;
        }

        return _ChronoLocalDate.prototype.query.call(this, _query);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        return _ChronoLocalDate.prototype.adjustInto.call(this, temporal);
      };

      _proto.until = function until(p1, p2) {
        if (arguments.length < 2) {
          return this.until1(p1);
        } else {
          return this.until2(p1, p2);
        }
      };

      _proto.until2 = function until2(endExclusive, unit) {
        var end = LocalDate.from(endExclusive);

        if (unit instanceof ChronoUnit) {
          switch (unit) {
            case ChronoUnit.DAYS:
              return this.daysUntil(end);

            case ChronoUnit.WEEKS:
              return MathUtil.intDiv(this.daysUntil(end), 7);

            case ChronoUnit.MONTHS:
              return this._monthsUntil(end);

            case ChronoUnit.YEARS:
              return MathUtil.intDiv(this._monthsUntil(end), 12);

            case ChronoUnit.DECADES:
              return MathUtil.intDiv(this._monthsUntil(end), 120);

            case ChronoUnit.CENTURIES:
              return MathUtil.intDiv(this._monthsUntil(end), 1200);

            case ChronoUnit.MILLENNIA:
              return MathUtil.intDiv(this._monthsUntil(end), 12000);

            case ChronoUnit.ERAS:
              return end.getLong(ChronoField.ERA) - this.getLong(ChronoField.ERA);
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.between(this, end);
      };

      _proto.daysUntil = function daysUntil(end) {
        return end.toEpochDay() - this.toEpochDay();
      };

      _proto._monthsUntil = function _monthsUntil(end) {
        var packed1 = this._prolepticMonth() * 32 + this.dayOfMonth();
        var packed2 = end._prolepticMonth() * 32 + end.dayOfMonth();
        return MathUtil.intDiv(packed2 - packed1, 32);
      };

      _proto.until1 = function until1(endDate) {
        var end = LocalDate.from(endDate);

        var totalMonths = end._prolepticMonth() - this._prolepticMonth();

        var days = end._day - this._day;

        if (totalMonths > 0 && days < 0) {
          totalMonths--;
          var calcDate = this.plusMonths(totalMonths);
          days = end.toEpochDay() - calcDate.toEpochDay();
        } else if (totalMonths < 0 && days > 0) {
          totalMonths++;
          days -= end.lengthOfMonth();
        }

        var years = MathUtil.intDiv(totalMonths, 12);
        var months = MathUtil.intMod(totalMonths, 12);
        return Period.of(years, months, days);
      };

      _proto.atTime = function atTime() {
        if (arguments.length === 1) {
          return this.atTime1.apply(this, arguments);
        } else {
          return this.atTime4.apply(this, arguments);
        }
      };

      _proto.atTime1 = function atTime1(time) {
        requireNonNull(time, 'time');

        if (time instanceof LocalTime) {
          return LocalDateTime.of(this, time);
        } else if (time instanceof OffsetTime) {
          return this._atTimeOffsetTime(time);
        } else {
          throw new IllegalArgumentException('time must be an instance of LocalTime or OffsetTime' + (time && time.constructor && time.constructor.name ? ', but is ' + time.constructor.name : ''));
        }
      };

      _proto.atTime4 = function atTime4(hour, minute, second, nanoOfSecond) {
        if (second === void 0) {
          second = 0;
        }

        if (nanoOfSecond === void 0) {
          nanoOfSecond = 0;
        }

        return this.atTime1(LocalTime.of(hour, minute, second, nanoOfSecond));
      };

      _proto._atTimeOffsetTime = function _atTimeOffsetTime(time) {
        return OffsetDateTime.of(LocalDateTime.of(this, time.toLocalTime()), time.offset());
      };

      _proto.atStartOfDay = function atStartOfDay(zone) {
        if (zone != null) {
          return this.atStartOfDayWithZone(zone);
        } else {
          return LocalDateTime.of(this, LocalTime.MIDNIGHT);
        }
      };

      _proto.atStartOfDayWithZone = function atStartOfDayWithZone(zone) {
        requireNonNull(zone, 'zone');
        var ldt = this.atTime(LocalTime.MIDNIGHT);

        if (zone instanceof ZoneOffset === false) {
          var trans = zone.rules().transition(ldt);

          if (trans != null && trans.isGap()) {
            ldt = trans.dateTimeAfter();
          }
        }

        return ZonedDateTime.of(ldt, zone);
      };

      _proto.toEpochDay = function toEpochDay() {
        var y = this._year;
        var m = this._month;
        var total = 0;
        total += 365 * y;

        if (y >= 0) {
          total += MathUtil.intDiv(y + 3, 4) - MathUtil.intDiv(y + 99, 100) + MathUtil.intDiv(y + 399, 400);
        } else {
          total -= MathUtil.intDiv(y, -4) - MathUtil.intDiv(y, -100) + MathUtil.intDiv(y, -400);
        }

        total += MathUtil.intDiv(367 * m - 362, 12);
        total += this.dayOfMonth() - 1;

        if (m > 2) {
          total--;

          if (!IsoChronology.isLeapYear(y)) {
            total--;
          }
        }

        return total - DAYS_0000_TO_1970;
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        requireInstance(other, LocalDate, 'other');
        return this._compareTo0(other);
      };

      _proto._compareTo0 = function _compareTo0(otherDate) {
        var cmp = this._year - otherDate._year;

        if (cmp === 0) {
          cmp = this._month - otherDate._month;

          if (cmp === 0) {
            cmp = this._day - otherDate._day;
          }
        }

        return cmp;
      };

      _proto.isAfter = function isAfter(other) {
        return this.compareTo(other) > 0;
      };

      _proto.isBefore = function isBefore(other) {
        return this.compareTo(other) < 0;
      };

      _proto.isEqual = function isEqual(other) {
        return this.compareTo(other) === 0;
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof LocalDate) {
          return this._compareTo0(other) === 0;
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        var yearValue = this._year;
        var monthValue = this._month;
        var dayValue = this._day;
        return MathUtil.hash(yearValue & 0xFFFFF800 ^ (yearValue << 11) + (monthValue << 6) + dayValue);
      };

      _proto.toString = function toString() {
        var dayString, monthString, yearString;
        var yearValue = this._year;
        var monthValue = this._month;
        var dayValue = this._day;
        var absYear = Math.abs(yearValue);

        if (absYear < 1000) {
          if (yearValue < 0) {
            yearString = '-' + ('' + (yearValue - 10000)).slice(-4);
          } else {
            yearString = ('' + (yearValue + 10000)).slice(-4);
          }
        } else {
          if (yearValue > 9999) {
            yearString = '+' + yearValue;
          } else {
            yearString = '' + yearValue;
          }
        }

        if (monthValue < 10) {
          monthString = '-0' + monthValue;
        } else {
          monthString = '-' + monthValue;
        }

        if (dayValue < 10) {
          dayString = '-0' + dayValue;
        } else {
          dayString = '-' + dayValue;
        }

        return yearString + monthString + dayString;
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      _proto.format = function format(formatter) {
        requireNonNull(formatter, 'formatter');
        requireInstance(formatter, DateTimeFormatter, 'formatter');
        return _ChronoLocalDate.prototype.format.call(this, formatter);
      };

      return LocalDate;
    }(ChronoLocalDate);
    function _init$i() {
      LocalDate.MIN = LocalDate.of(YearConstants.MIN_VALUE, 1, 1);
      LocalDate.MAX = LocalDate.of(YearConstants.MAX_VALUE, 12, 31);
      LocalDate.EPOCH_0 = LocalDate.ofEpochDay(0);
      LocalDate.FROM = createTemporalQuery('LocalDate.FROM', function (temporal) {
        return LocalDate.from(temporal);
      });
    }

    var ChronoLocalDateTime = function (_DefaultInterfaceTemp) {
      _inheritsLoose(ChronoLocalDateTime, _DefaultInterfaceTemp);

      function ChronoLocalDateTime() {
        return _DefaultInterfaceTemp.apply(this, arguments) || this;
      }

      var _proto = ChronoLocalDateTime.prototype;

      _proto.chronology = function chronology() {
        return this.toLocalDate().chronology();
      };

      _proto.query = function query(_query) {
        if (_query === TemporalQueries.chronology()) {
          return this.chronology();
        } else if (_query === TemporalQueries.precision()) {
          return ChronoUnit.NANOS;
        } else if (_query === TemporalQueries.localDate()) {
          return LocalDate.ofEpochDay(this.toLocalDate().toEpochDay());
        } else if (_query === TemporalQueries.localTime()) {
          return this.toLocalTime();
        } else if (_query === TemporalQueries.zone() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.offset()) {
          return null;
        }

        return _DefaultInterfaceTemp.prototype.query.call(this, _query);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        return temporal.with(ChronoField.EPOCH_DAY, this.toLocalDate().toEpochDay()).with(ChronoField.NANO_OF_DAY, this.toLocalTime().toNanoOfDay());
      };

      _proto.toInstant = function toInstant(offset) {
        requireInstance(offset, ZoneOffset, 'zoneId');
        return Instant.ofEpochSecond(this.toEpochSecond(offset), this.toLocalTime().nano());
      };

      _proto.toEpochSecond = function toEpochSecond(offset) {
        requireNonNull(offset, 'offset');
        var epochDay = this.toLocalDate().toEpochDay();
        var secs = epochDay * 86400 + this.toLocalTime().toSecondOfDay();
        secs -= offset.totalSeconds();
        return MathUtil.safeToInt(secs);
      };

      return ChronoLocalDateTime;
    }(DefaultInterfaceTemporal);

    var LocalDateTime = function (_ChronoLocalDateTime) {
      _inheritsLoose(LocalDateTime, _ChronoLocalDateTime);

      LocalDateTime.now = function now(clockOrZone) {
        if (clockOrZone == null) {
          return LocalDateTime._now(Clock.systemDefaultZone());
        } else if (clockOrZone instanceof Clock) {
          return LocalDateTime._now(clockOrZone);
        } else {
          return LocalDateTime._now(Clock.system(clockOrZone));
        }
      };

      LocalDateTime._now = function _now(clock) {
        requireNonNull(clock, 'clock');
        return LocalDateTime.ofInstant(clock.instant(), clock.zone());
      };

      LocalDateTime._ofEpochMillis = function _ofEpochMillis(epochMilli, offset) {
        var localSecond = MathUtil.floorDiv(epochMilli, 1000) + offset.totalSeconds();
        var localEpochDay = MathUtil.floorDiv(localSecond, LocalTime.SECONDS_PER_DAY);
        var secsOfDay = MathUtil.floorMod(localSecond, LocalTime.SECONDS_PER_DAY);
        var nanoOfSecond = MathUtil.floorMod(epochMilli, 1000) * 1000000;
        var date = LocalDate.ofEpochDay(localEpochDay);
        var time = LocalTime.ofSecondOfDay(secsOfDay, nanoOfSecond);
        return new LocalDateTime(date, time);
      };

      LocalDateTime.of = function of() {
        if (arguments.length <= 2) {
          return LocalDateTime.ofDateAndTime.apply(this, arguments);
        } else {
          return LocalDateTime.ofNumbers.apply(this, arguments);
        }
      };

      LocalDateTime.ofNumbers = function ofNumbers(year, month, dayOfMonth, hour, minute, second, nanoOfSecond) {
        if (hour === void 0) {
          hour = 0;
        }

        if (minute === void 0) {
          minute = 0;
        }

        if (second === void 0) {
          second = 0;
        }

        if (nanoOfSecond === void 0) {
          nanoOfSecond = 0;
        }

        var date = LocalDate.of(year, month, dayOfMonth);
        var time = LocalTime.of(hour, minute, second, nanoOfSecond);
        return new LocalDateTime(date, time);
      };

      LocalDateTime.ofDateAndTime = function ofDateAndTime(date, time) {
        requireNonNull(date, 'date');
        requireNonNull(time, 'time');
        return new LocalDateTime(date, time);
      };

      LocalDateTime.ofInstant = function ofInstant(instant, zone) {
        if (zone === void 0) {
          zone = ZoneId.systemDefault();
        }

        requireNonNull(instant, 'instant');
        requireInstance(instant, Instant, 'instant');
        requireNonNull(zone, 'zone');
        var offset = zone.rules().offset(instant);
        return LocalDateTime.ofEpochSecond(instant.epochSecond(), instant.nano(), offset);
      };

      LocalDateTime.ofEpochSecond = function ofEpochSecond(epochSecond, nanoOfSecond, offset) {
        if (epochSecond === void 0) {
          epochSecond = 0;
        }

        if (nanoOfSecond === void 0) {
          nanoOfSecond = 0;
        }

        if (arguments.length === 2 && nanoOfSecond instanceof ZoneOffset) {
          offset = nanoOfSecond;
          nanoOfSecond = 0;
        }

        requireNonNull(offset, 'offset');
        var localSecond = epochSecond + offset.totalSeconds();
        var localEpochDay = MathUtil.floorDiv(localSecond, LocalTime.SECONDS_PER_DAY);
        var secsOfDay = MathUtil.floorMod(localSecond, LocalTime.SECONDS_PER_DAY);
        var date = LocalDate.ofEpochDay(localEpochDay);
        var time = LocalTime.ofSecondOfDay(secsOfDay, nanoOfSecond);
        return new LocalDateTime(date, time);
      };

      LocalDateTime.from = function from(temporal) {
        requireNonNull(temporal, 'temporal');

        if (temporal instanceof LocalDateTime) {
          return temporal;
        } else if (temporal instanceof ZonedDateTime) {
          return temporal.toLocalDateTime();
        }

        try {
          var date = LocalDate.from(temporal);
          var time = LocalTime.from(temporal);
          return new LocalDateTime(date, time);
        } catch (ex) {
          throw new DateTimeException("Unable to obtain LocalDateTime TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
        }
      };

      LocalDateTime.parse = function parse(text, formatter) {
        if (formatter === void 0) {
          formatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
        }

        requireNonNull(formatter, 'formatter');
        return formatter.parse(text, LocalDateTime.FROM);
      };

      function LocalDateTime(date, time) {
        var _this;

        _this = _ChronoLocalDateTime.call(this) || this;
        requireInstance(date, LocalDate, 'date');
        requireInstance(time, LocalTime, 'time');
        _this._date = date;
        _this._time = time;
        return _this;
      }

      var _proto = LocalDateTime.prototype;

      _proto._withDateTime = function _withDateTime(newDate, newTime) {
        if (this._date.equals(newDate) && this._time.equals(newTime)) {
          return this;
        }

        return new LocalDateTime(newDate, newTime);
      };

      _proto.isSupported = function isSupported(fieldOrUnit) {
        if (fieldOrUnit instanceof ChronoField) {
          return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();
        } else if (fieldOrUnit instanceof ChronoUnit) {
          return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();
        }

        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
      };

      _proto.range = function range(field) {
        if (field instanceof ChronoField) {
          return field.isTimeBased() ? this._time.range(field) : this._date.range(field);
        }

        return field.rangeRefinedBy(this);
      };

      _proto.get = function get(field) {
        if (field instanceof ChronoField) {
          return field.isTimeBased() ? this._time.get(field) : this._date.get(field);
        }

        return _ChronoLocalDateTime.prototype.get.call(this, field);
      };

      _proto.getLong = function getLong(field) {
        requireNonNull(field, 'field');

        if (field instanceof ChronoField) {
          return field.isTimeBased() ? this._time.getLong(field) : this._date.getLong(field);
        }

        return field.getFrom(this);
      };

      _proto.year = function year() {
        return this._date.year();
      };

      _proto.monthValue = function monthValue() {
        return this._date.monthValue();
      };

      _proto.month = function month() {
        return this._date.month();
      };

      _proto.dayOfMonth = function dayOfMonth() {
        return this._date.dayOfMonth();
      };

      _proto.dayOfYear = function dayOfYear() {
        return this._date.dayOfYear();
      };

      _proto.dayOfWeek = function dayOfWeek() {
        return this._date.dayOfWeek();
      };

      _proto.hour = function hour() {
        return this._time.hour();
      };

      _proto.minute = function minute() {
        return this._time.minute();
      };

      _proto.second = function second() {
        return this._time.second();
      };

      _proto.nano = function nano() {
        return this._time.nano();
      };

      _proto.withAdjuster = function withAdjuster(adjuster) {
        requireNonNull(adjuster, 'adjuster');

        if (adjuster instanceof LocalDate) {
          return this._withDateTime(adjuster, this._time);
        } else if (adjuster instanceof LocalTime) {
          return this._withDateTime(this._date, adjuster);
        } else if (adjuster instanceof LocalDateTime) {
          return adjuster;
        }

        assert(typeof adjuster.adjustInto === 'function', 'adjuster', IllegalArgumentException);
        return adjuster.adjustInto(this);
      };

      _proto.withFieldValue = function withFieldValue(field, newValue) {
        requireNonNull(field, 'field');

        if (field instanceof ChronoField) {
          if (field.isTimeBased()) {
            return this._withDateTime(this._date, this._time.with(field, newValue));
          } else {
            return this._withDateTime(this._date.with(field, newValue), this._time);
          }
        }

        return field.adjustInto(this, newValue);
      };

      _proto.withYear = function withYear(year) {
        return this._withDateTime(this._date.withYear(year), this._time);
      };

      _proto.withMonth = function withMonth(month) {
        return this._withDateTime(this._date.withMonth(month), this._time);
      };

      _proto.withDayOfMonth = function withDayOfMonth(dayOfMonth) {
        return this._withDateTime(this._date.withDayOfMonth(dayOfMonth), this._time);
      };

      _proto.withDayOfYear = function withDayOfYear(dayOfYear) {
        return this._withDateTime(this._date.withDayOfYear(dayOfYear), this._time);
      };

      _proto.withHour = function withHour(hour) {
        var newTime = this._time.withHour(hour);

        return this._withDateTime(this._date, newTime);
      };

      _proto.withMinute = function withMinute(minute) {
        var newTime = this._time.withMinute(minute);

        return this._withDateTime(this._date, newTime);
      };

      _proto.withSecond = function withSecond(second) {
        var newTime = this._time.withSecond(second);

        return this._withDateTime(this._date, newTime);
      };

      _proto.withNano = function withNano(nanoOfSecond) {
        var newTime = this._time.withNano(nanoOfSecond);

        return this._withDateTime(this._date, newTime);
      };

      _proto.truncatedTo = function truncatedTo(unit) {
        return this._withDateTime(this._date, this._time.truncatedTo(unit));
      };

      _proto.plusAmount = function plusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.addTo(this);
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        requireNonNull(unit, 'unit');

        if (unit instanceof ChronoUnit) {
          switch (unit) {
            case ChronoUnit.NANOS:
              return this.plusNanos(amountToAdd);

            case ChronoUnit.MICROS:
              return this.plusDays(MathUtil.intDiv(amountToAdd, LocalTime.MICROS_PER_DAY)).plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MICROS_PER_DAY) * 1000);

            case ChronoUnit.MILLIS:
              return this.plusDays(MathUtil.intDiv(amountToAdd, LocalTime.MILLIS_PER_DAY)).plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MILLIS_PER_DAY) * 1000000);

            case ChronoUnit.SECONDS:
              return this.plusSeconds(amountToAdd);

            case ChronoUnit.MINUTES:
              return this.plusMinutes(amountToAdd);

            case ChronoUnit.HOURS:
              return this.plusHours(amountToAdd);

            case ChronoUnit.HALF_DAYS:
              return this.plusDays(MathUtil.intDiv(amountToAdd, 256)).plusHours(MathUtil.intMod(amountToAdd, 256) * 12);
          }

          return this._withDateTime(this._date.plus(amountToAdd, unit), this._time);
        }

        return unit.addTo(this, amountToAdd);
      };

      _proto.plusYears = function plusYears(years) {
        var newDate = this._date.plusYears(years);

        return this._withDateTime(newDate, this._time);
      };

      _proto.plusMonths = function plusMonths(months) {
        var newDate = this._date.plusMonths(months);

        return this._withDateTime(newDate, this._time);
      };

      _proto.plusWeeks = function plusWeeks(weeks) {
        var newDate = this._date.plusWeeks(weeks);

        return this._withDateTime(newDate, this._time);
      };

      _proto.plusDays = function plusDays(days) {
        var newDate = this._date.plusDays(days);

        return this._withDateTime(newDate, this._time);
      };

      _proto.plusHours = function plusHours(hours) {
        return this._plusWithOverflow(this._date, hours, 0, 0, 0, 1);
      };

      _proto.plusMinutes = function plusMinutes(minutes) {
        return this._plusWithOverflow(this._date, 0, minutes, 0, 0, 1);
      };

      _proto.plusSeconds = function plusSeconds(seconds) {
        return this._plusWithOverflow(this._date, 0, 0, seconds, 0, 1);
      };

      _proto.plusNanos = function plusNanos(nanos) {
        return this._plusWithOverflow(this._date, 0, 0, 0, nanos, 1);
      };

      _proto.minusAmount = function minusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.subtractFrom(this);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        requireNonNull(unit, 'unit');
        return this.plusAmountUnit(-1 * amountToSubtract, unit);
      };

      _proto.minusYears = function minusYears(years) {
        return this.plusYears(-1 * years);
      };

      _proto.minusMonths = function minusMonths(months) {
        return this.plusMonths(-1 * months);
      };

      _proto.minusWeeks = function minusWeeks(weeks) {
        return this.plusWeeks(-1 * weeks);
      };

      _proto.minusDays = function minusDays(days) {
        return this.plusDays(-1 * days);
      };

      _proto.minusHours = function minusHours(hours) {
        return this._plusWithOverflow(this._date, hours, 0, 0, 0, -1);
      };

      _proto.minusMinutes = function minusMinutes(minutes) {
        return this._plusWithOverflow(this._date, 0, minutes, 0, 0, -1);
      };

      _proto.minusSeconds = function minusSeconds(seconds) {
        return this._plusWithOverflow(this._date, 0, 0, seconds, 0, -1);
      };

      _proto.minusNanos = function minusNanos(nanos) {
        return this._plusWithOverflow(this._date, 0, 0, 0, nanos, -1);
      };

      _proto._plusWithOverflow = function _plusWithOverflow(newDate, hours, minutes, seconds, nanos, sign) {
        if (hours === 0 && minutes === 0 && seconds === 0 && nanos === 0) {
          return this._withDateTime(newDate, this._time);
        }

        var totDays = MathUtil.intDiv(nanos, LocalTime.NANOS_PER_DAY) + MathUtil.intDiv(seconds, LocalTime.SECONDS_PER_DAY) + MathUtil.intDiv(minutes, LocalTime.MINUTES_PER_DAY) + MathUtil.intDiv(hours, LocalTime.HOURS_PER_DAY);
        totDays *= sign;
        var totNanos = MathUtil.intMod(nanos, LocalTime.NANOS_PER_DAY) + MathUtil.intMod(seconds, LocalTime.SECONDS_PER_DAY) * LocalTime.NANOS_PER_SECOND + MathUtil.intMod(minutes, LocalTime.MINUTES_PER_DAY) * LocalTime.NANOS_PER_MINUTE + MathUtil.intMod(hours, LocalTime.HOURS_PER_DAY) * LocalTime.NANOS_PER_HOUR;

        var curNoD = this._time.toNanoOfDay();

        totNanos = totNanos * sign + curNoD;
        totDays += MathUtil.floorDiv(totNanos, LocalTime.NANOS_PER_DAY);
        var newNoD = MathUtil.floorMod(totNanos, LocalTime.NANOS_PER_DAY);
        var newTime = newNoD === curNoD ? this._time : LocalTime.ofNanoOfDay(newNoD);
        return this._withDateTime(newDate.plusDays(totDays), newTime);
      };

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query');

        if (_query === TemporalQueries.localDate()) {
          return this.toLocalDate();
        }

        return _ChronoLocalDateTime.prototype.query.call(this, _query);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        return _ChronoLocalDateTime.prototype.adjustInto.call(this, temporal);
      };

      _proto.until = function until(endExclusive, unit) {
        requireNonNull(endExclusive, 'endExclusive');
        requireNonNull(unit, 'unit');
        var end = LocalDateTime.from(endExclusive);

        if (unit instanceof ChronoUnit) {
          if (unit.isTimeBased()) {
            var daysUntil = this._date.daysUntil(end._date);

            var timeUntil = end._time.toNanoOfDay() - this._time.toNanoOfDay();

            if (daysUntil > 0 && timeUntil < 0) {
              daysUntil--;
              timeUntil += LocalTime.NANOS_PER_DAY;
            } else if (daysUntil < 0 && timeUntil > 0) {
              daysUntil++;
              timeUntil -= LocalTime.NANOS_PER_DAY;
            }

            var amount = daysUntil;

            switch (unit) {
              case ChronoUnit.NANOS:
                amount = MathUtil.safeMultiply(amount, LocalTime.NANOS_PER_DAY);
                return MathUtil.safeAdd(amount, timeUntil);

              case ChronoUnit.MICROS:
                amount = MathUtil.safeMultiply(amount, LocalTime.MICROS_PER_DAY);
                return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, 1000));

              case ChronoUnit.MILLIS:
                amount = MathUtil.safeMultiply(amount, LocalTime.MILLIS_PER_DAY);
                return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, 1000000));

              case ChronoUnit.SECONDS:
                amount = MathUtil.safeMultiply(amount, LocalTime.SECONDS_PER_DAY);
                return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_SECOND));

              case ChronoUnit.MINUTES:
                amount = MathUtil.safeMultiply(amount, LocalTime.MINUTES_PER_DAY);
                return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_MINUTE));

              case ChronoUnit.HOURS:
                amount = MathUtil.safeMultiply(amount, LocalTime.HOURS_PER_DAY);
                return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_HOUR));

              case ChronoUnit.HALF_DAYS:
                amount = MathUtil.safeMultiply(amount, 2);
                return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_HOUR * 12));
            }

            throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
          }

          var endDate = end._date;
          var endTime = end._time;

          if (endDate.isAfter(this._date) && endTime.isBefore(this._time)) {
            endDate = endDate.minusDays(1);
          } else if (endDate.isBefore(this._date) && endTime.isAfter(this._time)) {
            endDate = endDate.plusDays(1);
          }

          return this._date.until(endDate, unit);
        }

        return unit.between(this, end);
      };

      _proto.atOffset = function atOffset(offset) {
        return OffsetDateTime.of(this, offset);
      };

      _proto.atZone = function atZone(zone) {
        return ZonedDateTime.of(this, zone);
      };

      _proto.toLocalDate = function toLocalDate() {
        return this._date;
      };

      _proto.toLocalTime = function toLocalTime() {
        return this._time;
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        requireInstance(other, LocalDateTime, 'other');
        return this._compareTo0(other);
      };

      _proto._compareTo0 = function _compareTo0(other) {
        var cmp = this._date.compareTo(other.toLocalDate());

        if (cmp === 0) {
          cmp = this._time.compareTo(other.toLocalTime());
        }

        return cmp;
      };

      _proto.isAfter = function isAfter(other) {
        return this.compareTo(other) > 0;
      };

      _proto.isBefore = function isBefore(other) {
        return this.compareTo(other) < 0;
      };

      _proto.isEqual = function isEqual(other) {
        return this.compareTo(other) === 0;
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof LocalDateTime) {
          return this._date.equals(other._date) && this._time.equals(other._time);
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return this._date.hashCode() ^ this._time.hashCode();
      };

      _proto.toString = function toString() {
        return this._date.toString() + 'T' + this._time.toString();
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      _proto.format = function format(formatter) {
        requireNonNull(formatter, 'formatter');
        return formatter.format(this);
      };

      return LocalDateTime;
    }(ChronoLocalDateTime);
    function _init$j() {
      LocalDateTime.MIN = LocalDateTime.of(LocalDate.MIN, LocalTime.MIN);
      LocalDateTime.MAX = LocalDateTime.of(LocalDate.MAX, LocalTime.MAX);
      LocalDateTime.FROM = createTemporalQuery('LocalDateTime.FROM', function (temporal) {
        return LocalDateTime.from(temporal);
      });
    }

    var LocalTime = function (_Temporal) {
      _inheritsLoose(LocalTime, _Temporal);

      LocalTime.now = function now(clockOrZone) {
        if (clockOrZone == null) {
          return LocalTime._now(Clock.systemDefaultZone());
        } else if (clockOrZone instanceof Clock) {
          return LocalTime._now(clockOrZone);
        } else {
          return LocalTime._now(Clock.system(clockOrZone));
        }
      };

      LocalTime._now = function _now(clock) {
        if (clock === void 0) {
          clock = Clock.systemDefaultZone();
        }

        requireNonNull(clock, 'clock');
        return LocalTime.ofInstant(clock.instant(), clock.zone());
      };

      LocalTime.ofInstant = function ofInstant(instant, zone) {
        if (zone === void 0) {
          zone = ZoneId.systemDefault();
        }

        var offset = zone.rules().offset(instant);
        var secsOfDay = MathUtil.intMod(instant.epochSecond(), LocalTime.SECONDS_PER_DAY);
        secsOfDay = MathUtil.intMod(secsOfDay + offset.totalSeconds(), LocalTime.SECONDS_PER_DAY);

        if (secsOfDay < 0) {
          secsOfDay += LocalTime.SECONDS_PER_DAY;
        }

        return LocalTime.ofSecondOfDay(secsOfDay, instant.nano());
      };

      LocalTime.of = function of(hour, minute, second, nanoOfSecond) {
        return new LocalTime(hour, minute, second, nanoOfSecond);
      };

      LocalTime.ofSecondOfDay = function ofSecondOfDay(secondOfDay, nanoOfSecond) {
        if (secondOfDay === void 0) {
          secondOfDay = 0;
        }

        if (nanoOfSecond === void 0) {
          nanoOfSecond = 0;
        }

        ChronoField.SECOND_OF_DAY.checkValidValue(secondOfDay);
        ChronoField.NANO_OF_SECOND.checkValidValue(nanoOfSecond);
        var hours = MathUtil.intDiv(secondOfDay, LocalTime.SECONDS_PER_HOUR);
        secondOfDay -= hours * LocalTime.SECONDS_PER_HOUR;
        var minutes = MathUtil.intDiv(secondOfDay, LocalTime.SECONDS_PER_MINUTE);
        secondOfDay -= minutes * LocalTime.SECONDS_PER_MINUTE;
        return new LocalTime(hours, minutes, secondOfDay, nanoOfSecond);
      };

      LocalTime.ofNanoOfDay = function ofNanoOfDay(nanoOfDay) {
        if (nanoOfDay === void 0) {
          nanoOfDay = 0;
        }

        ChronoField.NANO_OF_DAY.checkValidValue(nanoOfDay);
        var hours = MathUtil.intDiv(nanoOfDay, LocalTime.NANOS_PER_HOUR);
        nanoOfDay -= hours * LocalTime.NANOS_PER_HOUR;
        var minutes = MathUtil.intDiv(nanoOfDay, LocalTime.NANOS_PER_MINUTE);
        nanoOfDay -= minutes * LocalTime.NANOS_PER_MINUTE;
        var seconds = MathUtil.intDiv(nanoOfDay, LocalTime.NANOS_PER_SECOND);
        nanoOfDay -= seconds * LocalTime.NANOS_PER_SECOND;
        return new LocalTime(hours, minutes, seconds, nanoOfDay);
      };

      LocalTime.from = function from(temporal) {
        requireNonNull(temporal, 'temporal');
        var time = temporal.query(TemporalQueries.localTime());

        if (time == null) {
          throw new DateTimeException("Unable to obtain LocalTime TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
        }

        return time;
      };

      LocalTime.parse = function parse(text, formatter) {
        if (formatter === void 0) {
          formatter = DateTimeFormatter.ISO_LOCAL_TIME;
        }

        requireNonNull(formatter, 'formatter');
        return formatter.parse(text, LocalTime.FROM);
      };

      function LocalTime(hour, minute, second, nanoOfSecond) {
        var _this;

        if (hour === void 0) {
          hour = 0;
        }

        if (minute === void 0) {
          minute = 0;
        }

        if (second === void 0) {
          second = 0;
        }

        if (nanoOfSecond === void 0) {
          nanoOfSecond = 0;
        }

        _this = _Temporal.call(this) || this;

        var _hour = MathUtil.safeToInt(hour);

        var _minute = MathUtil.safeToInt(minute);

        var _second = MathUtil.safeToInt(second);

        var _nanoOfSecond = MathUtil.safeToInt(nanoOfSecond);

        LocalTime._validate(_hour, _minute, _second, _nanoOfSecond);

        if (_minute === 0 && _second === 0 && _nanoOfSecond === 0) {
          if (!LocalTime.HOURS[_hour]) {
            _this._hour = _hour;
            _this._minute = _minute;
            _this._second = _second;
            _this._nano = _nanoOfSecond;
            LocalTime.HOURS[_hour] = _assertThisInitialized(_this);
          }

          return LocalTime.HOURS[_hour] || _assertThisInitialized(_this);
        }

        _this._hour = _hour;
        _this._minute = _minute;
        _this._second = _second;
        _this._nano = _nanoOfSecond;
        return _this;
      }

      LocalTime._validate = function _validate(hour, minute, second, nanoOfSecond) {
        ChronoField.HOUR_OF_DAY.checkValidValue(hour);
        ChronoField.MINUTE_OF_HOUR.checkValidValue(minute);
        ChronoField.SECOND_OF_MINUTE.checkValidValue(second);
        ChronoField.NANO_OF_SECOND.checkValidValue(nanoOfSecond);
      };

      var _proto = LocalTime.prototype;

      _proto.isSupported = function isSupported(fieldOrUnit) {
        if (fieldOrUnit instanceof ChronoField) {
          return fieldOrUnit.isTimeBased();
        } else if (fieldOrUnit instanceof ChronoUnit) {
          return fieldOrUnit.isTimeBased();
        }

        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
      };

      _proto.range = function range(field) {
        requireNonNull(field);
        return _Temporal.prototype.range.call(this, field);
      };

      _proto.get = function get(field) {
        return this.getLong(field);
      };

      _proto.getLong = function getLong(field) {
        requireNonNull(field, 'field');

        if (field instanceof ChronoField) {
          return this._get0(field);
        }

        return field.getFrom(this);
      };

      _proto._get0 = function _get0(field) {
        switch (field) {
          case ChronoField.NANO_OF_SECOND:
            return this._nano;

          case ChronoField.NANO_OF_DAY:
            return this.toNanoOfDay();

          case ChronoField.MICRO_OF_SECOND:
            return MathUtil.intDiv(this._nano, 1000);

          case ChronoField.MICRO_OF_DAY:
            return MathUtil.intDiv(this.toNanoOfDay(), 1000);

          case ChronoField.MILLI_OF_SECOND:
            return MathUtil.intDiv(this._nano, 1000000);

          case ChronoField.MILLI_OF_DAY:
            return MathUtil.intDiv(this.toNanoOfDay(), 1000000);

          case ChronoField.SECOND_OF_MINUTE:
            return this._second;

          case ChronoField.SECOND_OF_DAY:
            return this.toSecondOfDay();

          case ChronoField.MINUTE_OF_HOUR:
            return this._minute;

          case ChronoField.MINUTE_OF_DAY:
            return this._hour * 60 + this._minute;

          case ChronoField.HOUR_OF_AMPM:
            return MathUtil.intMod(this._hour, 12);

          case ChronoField.CLOCK_HOUR_OF_AMPM:
            {
              var ham = MathUtil.intMod(this._hour, 12);
              return ham % 12 === 0 ? 12 : ham;
            }

          case ChronoField.HOUR_OF_DAY:
            return this._hour;

          case ChronoField.CLOCK_HOUR_OF_DAY:
            return this._hour === 0 ? 24 : this._hour;

          case ChronoField.AMPM_OF_DAY:
            return MathUtil.intDiv(this._hour, 12);
        }

        throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
      };

      _proto.hour = function hour() {
        return this._hour;
      };

      _proto.minute = function minute() {
        return this._minute;
      };

      _proto.second = function second() {
        return this._second;
      };

      _proto.nano = function nano() {
        return this._nano;
      };

      _proto.withAdjuster = function withAdjuster(adjuster) {
        requireNonNull(adjuster, 'adjuster');

        if (adjuster instanceof LocalTime) {
          return adjuster;
        }

        assert(typeof adjuster.adjustInto === 'function', 'adjuster', IllegalArgumentException);
        return adjuster.adjustInto(this);
      };

      _proto.withFieldValue = function withFieldValue(field, newValue) {
        requireNonNull(field, 'field');
        requireInstance(field, TemporalField, 'field');

        if (field instanceof ChronoField) {
          field.checkValidValue(newValue);

          switch (field) {
            case ChronoField.NANO_OF_SECOND:
              return this.withNano(newValue);

            case ChronoField.NANO_OF_DAY:
              return LocalTime.ofNanoOfDay(newValue);

            case ChronoField.MICRO_OF_SECOND:
              return this.withNano(newValue * 1000);

            case ChronoField.MICRO_OF_DAY:
              return LocalTime.ofNanoOfDay(newValue * 1000);

            case ChronoField.MILLI_OF_SECOND:
              return this.withNano(newValue * 1000000);

            case ChronoField.MILLI_OF_DAY:
              return LocalTime.ofNanoOfDay(newValue * 1000000);

            case ChronoField.SECOND_OF_MINUTE:
              return this.withSecond(newValue);

            case ChronoField.SECOND_OF_DAY:
              return this.plusSeconds(newValue - this.toSecondOfDay());

            case ChronoField.MINUTE_OF_HOUR:
              return this.withMinute(newValue);

            case ChronoField.MINUTE_OF_DAY:
              return this.plusMinutes(newValue - (this._hour * 60 + this._minute));

            case ChronoField.HOUR_OF_AMPM:
              return this.plusHours(newValue - MathUtil.intMod(this._hour, 12));

            case ChronoField.CLOCK_HOUR_OF_AMPM:
              return this.plusHours((newValue === 12 ? 0 : newValue) - MathUtil.intMod(this._hour, 12));

            case ChronoField.HOUR_OF_DAY:
              return this.withHour(newValue);

            case ChronoField.CLOCK_HOUR_OF_DAY:
              return this.withHour(newValue === 24 ? 0 : newValue);

            case ChronoField.AMPM_OF_DAY:
              return this.plusHours((newValue - MathUtil.intDiv(this._hour, 12)) * 12);
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.adjustInto(this, newValue);
      };

      _proto.withHour = function withHour(hour) {
        if (hour === void 0) {
          hour = 0;
        }

        if (this._hour === hour) {
          return this;
        }

        return new LocalTime(hour, this._minute, this._second, this._nano);
      };

      _proto.withMinute = function withMinute(minute) {
        if (minute === void 0) {
          minute = 0;
        }

        if (this._minute === minute) {
          return this;
        }

        return new LocalTime(this._hour, minute, this._second, this._nano);
      };

      _proto.withSecond = function withSecond(second) {
        if (second === void 0) {
          second = 0;
        }

        if (this._second === second) {
          return this;
        }

        return new LocalTime(this._hour, this._minute, second, this._nano);
      };

      _proto.withNano = function withNano(nanoOfSecond) {
        if (nanoOfSecond === void 0) {
          nanoOfSecond = 0;
        }

        if (this._nano === nanoOfSecond) {
          return this;
        }

        return new LocalTime(this._hour, this._minute, this._second, nanoOfSecond);
      };

      _proto.truncatedTo = function truncatedTo(unit) {
        requireNonNull(unit, 'unit');

        if (unit === ChronoUnit.NANOS) {
          return this;
        }

        var unitDur = unit.duration();

        if (unitDur.seconds() > LocalTime.SECONDS_PER_DAY) {
          throw new DateTimeException('Unit is too large to be used for truncation');
        }

        var dur = unitDur.toNanos();

        if (MathUtil.intMod(LocalTime.NANOS_PER_DAY, dur) !== 0) {
          throw new DateTimeException('Unit must divide into a standard day without remainder');
        }

        var nod = this.toNanoOfDay();
        return LocalTime.ofNanoOfDay(MathUtil.intDiv(nod, dur) * dur);
      };

      _proto.plusAmount = function plusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.addTo(this);
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        requireNonNull(unit, 'unit');

        if (unit instanceof ChronoUnit) {
          switch (unit) {
            case ChronoUnit.NANOS:
              return this.plusNanos(amountToAdd);

            case ChronoUnit.MICROS:
              return this.plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MICROS_PER_DAY) * 1000);

            case ChronoUnit.MILLIS:
              return this.plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MILLIS_PER_DAY) * 1000000);

            case ChronoUnit.SECONDS:
              return this.plusSeconds(amountToAdd);

            case ChronoUnit.MINUTES:
              return this.plusMinutes(amountToAdd);

            case ChronoUnit.HOURS:
              return this.plusHours(amountToAdd);

            case ChronoUnit.HALF_DAYS:
              return this.plusHours(MathUtil.intMod(amountToAdd, 2) * 12);
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.addTo(this, amountToAdd);
      };

      _proto.plusHours = function plusHours(hoursToAdd) {
        if (hoursToAdd === 0) {
          return this;
        }

        var newHour = MathUtil.intMod(MathUtil.intMod(hoursToAdd, LocalTime.HOURS_PER_DAY) + this._hour + LocalTime.HOURS_PER_DAY, LocalTime.HOURS_PER_DAY);
        return new LocalTime(newHour, this._minute, this._second, this._nano);
      };

      _proto.plusMinutes = function plusMinutes(minutesToAdd) {
        if (minutesToAdd === 0) {
          return this;
        }

        var mofd = this._hour * LocalTime.MINUTES_PER_HOUR + this._minute;
        var newMofd = MathUtil.intMod(MathUtil.intMod(minutesToAdd, LocalTime.MINUTES_PER_DAY) + mofd + LocalTime.MINUTES_PER_DAY, LocalTime.MINUTES_PER_DAY);

        if (mofd === newMofd) {
          return this;
        }

        var newHour = MathUtil.intDiv(newMofd, LocalTime.MINUTES_PER_HOUR);
        var newMinute = MathUtil.intMod(newMofd, LocalTime.MINUTES_PER_HOUR);
        return new LocalTime(newHour, newMinute, this._second, this._nano);
      };

      _proto.plusSeconds = function plusSeconds(secondsToAdd) {
        if (secondsToAdd === 0) {
          return this;
        }

        var sofd = this._hour * LocalTime.SECONDS_PER_HOUR + this._minute * LocalTime.SECONDS_PER_MINUTE + this._second;
        var newSofd = MathUtil.intMod(MathUtil.intMod(secondsToAdd, LocalTime.SECONDS_PER_DAY) + sofd + LocalTime.SECONDS_PER_DAY, LocalTime.SECONDS_PER_DAY);

        if (sofd === newSofd) {
          return this;
        }

        var newHour = MathUtil.intDiv(newSofd, LocalTime.SECONDS_PER_HOUR);
        var newMinute = MathUtil.intMod(MathUtil.intDiv(newSofd, LocalTime.SECONDS_PER_MINUTE), LocalTime.MINUTES_PER_HOUR);
        var newSecond = MathUtil.intMod(newSofd, LocalTime.SECONDS_PER_MINUTE);
        return new LocalTime(newHour, newMinute, newSecond, this._nano);
      };

      _proto.plusNanos = function plusNanos(nanosToAdd) {
        if (nanosToAdd === 0) {
          return this;
        }

        var nofd = this.toNanoOfDay();
        var newNofd = MathUtil.intMod(MathUtil.intMod(nanosToAdd, LocalTime.NANOS_PER_DAY) + nofd + LocalTime.NANOS_PER_DAY, LocalTime.NANOS_PER_DAY);

        if (nofd === newNofd) {
          return this;
        }

        var newHour = MathUtil.intDiv(newNofd, LocalTime.NANOS_PER_HOUR);
        var newMinute = MathUtil.intMod(MathUtil.intDiv(newNofd, LocalTime.NANOS_PER_MINUTE), LocalTime.MINUTES_PER_HOUR);
        var newSecond = MathUtil.intMod(MathUtil.intDiv(newNofd, LocalTime.NANOS_PER_SECOND), LocalTime.SECONDS_PER_MINUTE);
        var newNano = MathUtil.intMod(newNofd, LocalTime.NANOS_PER_SECOND);
        return new LocalTime(newHour, newMinute, newSecond, newNano);
      };

      _proto.minusAmount = function minusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.subtractFrom(this);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        requireNonNull(unit, 'unit');
        return this.plusAmountUnit(-1 * amountToSubtract, unit);
      };

      _proto.minusHours = function minusHours(hoursToSubtract) {
        return this.plusHours(-1 * MathUtil.intMod(hoursToSubtract, LocalTime.HOURS_PER_DAY));
      };

      _proto.minusMinutes = function minusMinutes(minutesToSubtract) {
        return this.plusMinutes(-1 * MathUtil.intMod(minutesToSubtract, LocalTime.MINUTES_PER_DAY));
      };

      _proto.minusSeconds = function minusSeconds(secondsToSubtract) {
        return this.plusSeconds(-1 * MathUtil.intMod(secondsToSubtract, LocalTime.SECONDS_PER_DAY));
      };

      _proto.minusNanos = function minusNanos(nanosToSubtract) {
        return this.plusNanos(-1 * MathUtil.intMod(nanosToSubtract, LocalTime.NANOS_PER_DAY));
      };

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query');

        if (_query === TemporalQueries.precision()) {
          return ChronoUnit.NANOS;
        } else if (_query === TemporalQueries.localTime()) {
          return this;
        }

        if (_query === TemporalQueries.chronology() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.zone() || _query === TemporalQueries.offset() || _query === TemporalQueries.localDate()) {
          return null;
        }

        return _query.queryFrom(this);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        return temporal.with(LocalTime.NANO_OF_DAY, this.toNanoOfDay());
      };

      _proto.until = function until(endExclusive, unit) {
        requireNonNull(endExclusive, 'endExclusive');
        requireNonNull(unit, 'unit');
        var end = LocalTime.from(endExclusive);

        if (unit instanceof ChronoUnit) {
          var nanosUntil = end.toNanoOfDay() - this.toNanoOfDay();

          switch (unit) {
            case ChronoUnit.NANOS:
              return nanosUntil;

            case ChronoUnit.MICROS:
              return MathUtil.intDiv(nanosUntil, 1000);

            case ChronoUnit.MILLIS:
              return MathUtil.intDiv(nanosUntil, 1000000);

            case ChronoUnit.SECONDS:
              return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_SECOND);

            case ChronoUnit.MINUTES:
              return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_MINUTE);

            case ChronoUnit.HOURS:
              return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_HOUR);

            case ChronoUnit.HALF_DAYS:
              return MathUtil.intDiv(nanosUntil, 12 * LocalTime.NANOS_PER_HOUR);
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.between(this, end);
      };

      _proto.atDate = function atDate(date) {
        return LocalDateTime.of(date, this);
      };

      _proto.toSecondOfDay = function toSecondOfDay() {
        var total = this._hour * LocalTime.SECONDS_PER_HOUR;
        total += this._minute * LocalTime.SECONDS_PER_MINUTE;
        total += this._second;
        return total;
      };

      _proto.toNanoOfDay = function toNanoOfDay() {
        var total = this._hour * LocalTime.NANOS_PER_HOUR;
        total += this._minute * LocalTime.NANOS_PER_MINUTE;
        total += this._second * LocalTime.NANOS_PER_SECOND;
        total += this._nano;
        return total;
      };

      _proto.compareTo = function compareTo(other) {
        requireNonNull(other, 'other');
        requireInstance(other, LocalTime, 'other');
        var cmp = MathUtil.compareNumbers(this._hour, other._hour);

        if (cmp === 0) {
          cmp = MathUtil.compareNumbers(this._minute, other._minute);

          if (cmp === 0) {
            cmp = MathUtil.compareNumbers(this._second, other._second);

            if (cmp === 0) {
              cmp = MathUtil.compareNumbers(this._nano, other._nano);
            }
          }
        }

        return cmp;
      };

      _proto.isAfter = function isAfter(other) {
        return this.compareTo(other) > 0;
      };

      _proto.isBefore = function isBefore(other) {
        return this.compareTo(other) < 0;
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof LocalTime) {
          return this._hour === other._hour && this._minute === other._minute && this._second === other._second && this._nano === other._nano;
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        var nod = this.toNanoOfDay();
        return MathUtil.hash(nod);
      };

      _proto.toString = function toString() {
        var buf = '';
        var hourValue = this._hour;
        var minuteValue = this._minute;
        var secondValue = this._second;
        var nanoValue = this._nano;
        buf += hourValue < 10 ? '0' : '';
        buf += hourValue;
        buf += minuteValue < 10 ? ':0' : ':';
        buf += minuteValue;

        if (secondValue > 0 || nanoValue > 0) {
          buf += secondValue < 10 ? ':0' : ':';
          buf += secondValue;

          if (nanoValue > 0) {
            buf += '.';

            if (MathUtil.intMod(nanoValue, 1000000) === 0) {
              buf += ('' + (MathUtil.intDiv(nanoValue, 1000000) + 1000)).substring(1);
            } else if (MathUtil.intMod(nanoValue, 1000) === 0) {
              buf += ('' + (MathUtil.intDiv(nanoValue, 1000) + 1000000)).substring(1);
            } else {
              buf += ('' + (nanoValue + 1000000000)).substring(1);
            }
          }
        }

        return buf;
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      _proto.format = function format(formatter) {
        requireNonNull(formatter, 'formatter');
        return formatter.format(this);
      };

      return LocalTime;
    }(Temporal);
    function _init$k() {
      LocalTime.HOURS = [];

      for (var hour = 0; hour < 24; hour++) {
        LocalTime.of(hour, 0, 0, 0);
      }

      LocalTime.MIN = LocalTime.HOURS[0];
      LocalTime.MAX = new LocalTime(23, 59, 59, 999999999);
      LocalTime.MIDNIGHT = LocalTime.HOURS[0];
      LocalTime.NOON = LocalTime.HOURS[12];
      LocalTime.FROM = createTemporalQuery('LocalTime.FROM', function (temporal) {
        return LocalTime.from(temporal);
      });
    }
    LocalTime.HOURS_PER_DAY = 24;
    LocalTime.MINUTES_PER_HOUR = 60;
    LocalTime.MINUTES_PER_DAY = LocalTime.MINUTES_PER_HOUR * LocalTime.HOURS_PER_DAY;
    LocalTime.SECONDS_PER_MINUTE = 60;
    LocalTime.SECONDS_PER_HOUR = LocalTime.SECONDS_PER_MINUTE * LocalTime.MINUTES_PER_HOUR;
    LocalTime.SECONDS_PER_DAY = LocalTime.SECONDS_PER_HOUR * LocalTime.HOURS_PER_DAY;
    LocalTime.MILLIS_PER_DAY = LocalTime.SECONDS_PER_DAY * 1000;
    LocalTime.MICROS_PER_DAY = LocalTime.SECONDS_PER_DAY * 1000000;
    LocalTime.NANOS_PER_SECOND = 1000000000;
    LocalTime.NANOS_PER_MINUTE = LocalTime.NANOS_PER_SECOND * LocalTime.SECONDS_PER_MINUTE;
    LocalTime.NANOS_PER_HOUR = LocalTime.NANOS_PER_MINUTE * LocalTime.MINUTES_PER_HOUR;
    LocalTime.NANOS_PER_DAY = LocalTime.NANOS_PER_HOUR * LocalTime.HOURS_PER_DAY;

    var NANOS_PER_MILLI = 1000000;
    var Instant = function (_Temporal) {
      _inheritsLoose(Instant, _Temporal);

      Instant.now = function now(clock) {
        if (clock === void 0) {
          clock = Clock.systemUTC();
        }

        return clock.instant();
      };

      Instant.ofEpochSecond = function ofEpochSecond(epochSecond, nanoAdjustment) {
        if (nanoAdjustment === void 0) {
          nanoAdjustment = 0;
        }

        var secs = epochSecond + MathUtil.floorDiv(nanoAdjustment, LocalTime.NANOS_PER_SECOND);
        var nos = MathUtil.floorMod(nanoAdjustment, LocalTime.NANOS_PER_SECOND);
        return Instant._create(secs, nos);
      };

      Instant.ofEpochMilli = function ofEpochMilli(epochMilli) {
        var secs = MathUtil.floorDiv(epochMilli, 1000);
        var mos = MathUtil.floorMod(epochMilli, 1000);
        return Instant._create(secs, mos * 1000000);
      };

      Instant.from = function from(temporal) {
        try {
          var instantSecs = temporal.getLong(ChronoField.INSTANT_SECONDS);
          var nanoOfSecond = temporal.get(ChronoField.NANO_OF_SECOND);
          return Instant.ofEpochSecond(instantSecs, nanoOfSecond);
        } catch (ex) {
          throw new DateTimeException('Unable to obtain Instant from TemporalAccessor: ' + temporal + ', type ' + typeof temporal, ex);
        }
      };

      Instant.parse = function parse(text) {
        return DateTimeFormatter.ISO_INSTANT.parse(text, Instant.FROM);
      };

      Instant._create = function _create(seconds, nanoOfSecond) {
        if (seconds === 0 && nanoOfSecond === 0) {
          return Instant.EPOCH;
        }

        return new Instant(seconds, nanoOfSecond);
      };

      Instant._validate = function _validate(seconds, nanoOfSecond) {
        if (seconds < Instant.MIN_SECONDS || seconds > Instant.MAX_SECONDS) {
          throw new DateTimeException('Instant exceeds minimum or maximum instant');
        }

        if (nanoOfSecond < 0 || nanoOfSecond > LocalTime.NANOS_PER_SECOND) {
          throw new DateTimeException('Instant exceeds minimum or maximum instant');
        }
      };

      function Instant(seconds, nanoOfSecond) {
        var _this;

        _this = _Temporal.call(this) || this;

        Instant._validate(seconds, nanoOfSecond);

        _this._seconds = MathUtil.safeToInt(seconds);
        _this._nanos = MathUtil.safeToInt(nanoOfSecond);
        return _this;
      }

      var _proto = Instant.prototype;

      _proto.isSupported = function isSupported(fieldOrUnit) {
        if (fieldOrUnit instanceof ChronoField) {
          return fieldOrUnit === ChronoField.INSTANT_SECONDS || fieldOrUnit === ChronoField.NANO_OF_SECOND || fieldOrUnit === ChronoField.MICRO_OF_SECOND || fieldOrUnit === ChronoField.MILLI_OF_SECOND;
        }

        if (fieldOrUnit instanceof ChronoUnit) {
          return fieldOrUnit.isTimeBased() || fieldOrUnit === ChronoUnit.DAYS;
        }

        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
      };

      _proto.range = function range(field) {
        return _Temporal.prototype.range.call(this, field);
      };

      _proto.get = function get(field) {
        return this.getLong(field);
      };

      _proto.getLong = function getLong(field) {
        if (field instanceof ChronoField) {
          switch (field) {
            case ChronoField.NANO_OF_SECOND:
              return this._nanos;

            case ChronoField.MICRO_OF_SECOND:
              return MathUtil.intDiv(this._nanos, 1000);

            case ChronoField.MILLI_OF_SECOND:
              return MathUtil.intDiv(this._nanos, NANOS_PER_MILLI);

            case ChronoField.INSTANT_SECONDS:
              return this._seconds;
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.getFrom(this);
      };

      _proto.epochSecond = function epochSecond() {
        return this._seconds;
      };

      _proto.nano = function nano() {
        return this._nanos;
      };

      _proto.withAdjuster = function withAdjuster(adjuster) {
        requireNonNull(adjuster, 'adjuster');
        return adjuster.adjustInto(this);
      };

      _proto.withFieldValue = function withFieldValue(field, newValue) {
        requireNonNull(field, 'field');

        if (field instanceof ChronoField) {
          field.checkValidValue(newValue);

          switch (field) {
            case ChronoField.MILLI_OF_SECOND:
              {
                var nval = newValue * NANOS_PER_MILLI;
                return nval !== this._nanos ? Instant._create(this._seconds, nval) : this;
              }

            case ChronoField.MICRO_OF_SECOND:
              {
                var _nval = newValue * 1000;

                return _nval !== this._nanos ? Instant._create(this._seconds, _nval) : this;
              }

            case ChronoField.NANO_OF_SECOND:
              return newValue !== this._nanos ? Instant._create(this._seconds, newValue) : this;

            case ChronoField.INSTANT_SECONDS:
              return newValue !== this._seconds ? Instant._create(newValue, this._nanos) : this;
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.adjustInto(this, newValue);
      };

      _proto.truncatedTo = function truncatedTo(unit) {
        requireNonNull(unit, 'unit');

        if (unit === ChronoUnit.NANOS) {
          return this;
        }

        var unitDur = unit.duration();

        if (unitDur.seconds() > LocalTime.SECONDS_PER_DAY) {
          throw new DateTimeException('Unit is too large to be used for truncation');
        }

        var dur = unitDur.toNanos();

        if (MathUtil.intMod(LocalTime.NANOS_PER_DAY, dur) !== 0) {
          throw new DateTimeException('Unit must divide into a standard day without remainder');
        }

        var nod = MathUtil.intMod(this._seconds, LocalTime.SECONDS_PER_DAY) * LocalTime.NANOS_PER_SECOND + this._nanos;

        var result = MathUtil.intDiv(nod, dur) * dur;
        return this.plusNanos(result - nod);
      };

      _proto.plusAmount = function plusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.addTo(this);
      };

      _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
        requireNonNull(amountToAdd, 'amountToAdd');
        requireNonNull(unit, 'unit');
        requireInstance(unit, TemporalUnit);

        if (unit instanceof ChronoUnit) {
          switch (unit) {
            case ChronoUnit.NANOS:
              return this.plusNanos(amountToAdd);

            case ChronoUnit.MICROS:
              return this._plus(MathUtil.intDiv(amountToAdd, 1000000), MathUtil.intMod(amountToAdd, 1000000) * 1000);

            case ChronoUnit.MILLIS:
              return this.plusMillis(amountToAdd);

            case ChronoUnit.SECONDS:
              return this.plusSeconds(amountToAdd);

            case ChronoUnit.MINUTES:
              return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_MINUTE));

            case ChronoUnit.HOURS:
              return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_HOUR));

            case ChronoUnit.HALF_DAYS:
              return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_DAY / 2));

            case ChronoUnit.DAYS:
              return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_DAY));
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.addTo(this, amountToAdd);
      };

      _proto.plusSeconds = function plusSeconds(secondsToAdd) {
        return this._plus(secondsToAdd, 0);
      };

      _proto.plusMillis = function plusMillis(millisToAdd) {
        return this._plus(MathUtil.intDiv(millisToAdd, 1000), MathUtil.intMod(millisToAdd, 1000) * NANOS_PER_MILLI);
      };

      _proto.plusNanos = function plusNanos(nanosToAdd) {
        return this._plus(0, nanosToAdd);
      };

      _proto._plus = function _plus(secondsToAdd, nanosToAdd) {
        if (secondsToAdd === 0 && nanosToAdd === 0) {
          return this;
        }

        var epochSec = this._seconds + secondsToAdd;
        epochSec = epochSec + MathUtil.intDiv(nanosToAdd, LocalTime.NANOS_PER_SECOND);
        var nanoAdjustment = this._nanos + nanosToAdd % LocalTime.NANOS_PER_SECOND;
        return Instant.ofEpochSecond(epochSec, nanoAdjustment);
      };

      _proto.minusAmount = function minusAmount(amount) {
        requireNonNull(amount, 'amount');
        return amount.subtractFrom(this);
      };

      _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
        return this.plusAmountUnit(-1 * amountToSubtract, unit);
      };

      _proto.minusSeconds = function minusSeconds(secondsToSubtract) {
        return this.plusSeconds(secondsToSubtract * -1);
      };

      _proto.minusMillis = function minusMillis(millisToSubtract) {
        return this.plusMillis(-1 * millisToSubtract);
      };

      _proto.minusNanos = function minusNanos(nanosToSubtract) {
        return this.plusNanos(-1 * nanosToSubtract);
      };

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query');

        if (_query === TemporalQueries.precision()) {
          return ChronoUnit.NANOS;
        }

        if (_query === TemporalQueries.localDate() || _query === TemporalQueries.localTime() || _query === TemporalQueries.chronology() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.zone() || _query === TemporalQueries.offset()) {
          return null;
        }

        return _query.queryFrom(this);
      };

      _proto.adjustInto = function adjustInto(temporal) {
        requireNonNull(temporal, 'temporal');
        return temporal.with(ChronoField.INSTANT_SECONDS, this._seconds).with(ChronoField.NANO_OF_SECOND, this._nanos);
      };

      _proto.until = function until(endExclusive, unit) {
        requireNonNull(endExclusive, 'endExclusive');
        requireNonNull(unit, 'unit');
        var end = Instant.from(endExclusive);

        if (unit instanceof ChronoUnit) {
          switch (unit) {
            case ChronoUnit.NANOS:
              return this._nanosUntil(end);

            case ChronoUnit.MICROS:
              return MathUtil.intDiv(this._nanosUntil(end), 1000);

            case ChronoUnit.MILLIS:
              return MathUtil.safeSubtract(end.toEpochMilli(), this.toEpochMilli());

            case ChronoUnit.SECONDS:
              return this._secondsUntil(end);

            case ChronoUnit.MINUTES:
              return MathUtil.intDiv(this._secondsUntil(end), LocalTime.SECONDS_PER_MINUTE);

            case ChronoUnit.HOURS:
              return MathUtil.intDiv(this._secondsUntil(end), LocalTime.SECONDS_PER_HOUR);

            case ChronoUnit.HALF_DAYS:
              return MathUtil.intDiv(this._secondsUntil(end), 12 * LocalTime.SECONDS_PER_HOUR);

            case ChronoUnit.DAYS:
              return MathUtil.intDiv(this._secondsUntil(end), LocalTime.SECONDS_PER_DAY);
          }

          throw new UnsupportedTemporalTypeException('Unsupported unit: ' + unit);
        }

        return unit.between(this, end);
      };

      _proto._nanosUntil = function _nanosUntil(end) {
        var secsDiff = MathUtil.safeSubtract(end.epochSecond(), this.epochSecond());
        var totalNanos = MathUtil.safeMultiply(secsDiff, LocalTime.NANOS_PER_SECOND);
        return MathUtil.safeAdd(totalNanos, end.nano() - this.nano());
      };

      _proto._secondsUntil = function _secondsUntil(end) {
        var secsDiff = MathUtil.safeSubtract(end.epochSecond(), this.epochSecond());
        var nanosDiff = end.nano() - this.nano();

        if (secsDiff > 0 && nanosDiff < 0) {
          secsDiff--;
        } else if (secsDiff < 0 && nanosDiff > 0) {
          secsDiff++;
        }

        return secsDiff;
      };

      _proto.atOffset = function atOffset(offset) {
        return OffsetDateTime.ofInstant(this, offset);
      };

      _proto.atZone = function atZone(zone) {
        return ZonedDateTime.ofInstant(this, zone);
      };

      _proto.toEpochMilli = function toEpochMilli() {
        var millis = MathUtil.safeMultiply(this._seconds, 1000);
        return millis + MathUtil.intDiv(this._nanos, NANOS_PER_MILLI);
      };

      _proto.compareTo = function compareTo(otherInstant) {
        requireNonNull(otherInstant, 'otherInstant');
        requireInstance(otherInstant, Instant, 'otherInstant');
        var cmp = MathUtil.compareNumbers(this._seconds, otherInstant._seconds);

        if (cmp !== 0) {
          return cmp;
        }

        return this._nanos - otherInstant._nanos;
      };

      _proto.isAfter = function isAfter(otherInstant) {
        return this.compareTo(otherInstant) > 0;
      };

      _proto.isBefore = function isBefore(otherInstant) {
        return this.compareTo(otherInstant) < 0;
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        if (other instanceof Instant) {
          return this.epochSecond() === other.epochSecond() && this.nano() === other.nano();
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return MathUtil.hashCode(this._seconds, this._nanos);
      };

      _proto.toString = function toString() {
        return DateTimeFormatter.ISO_INSTANT.format(this);
      };

      _proto.toJSON = function toJSON() {
        return this.toString();
      };

      return Instant;
    }(Temporal);
    function _init$l() {
      Instant.MIN_SECONDS = -31619119219200;
      Instant.MAX_SECONDS = 31494816403199;
      Instant.EPOCH = new Instant(0, 0);
      Instant.MIN = Instant.ofEpochSecond(Instant.MIN_SECONDS, 0);
      Instant.MAX = Instant.ofEpochSecond(Instant.MAX_SECONDS, 999999999);
      Instant.FROM = createTemporalQuery('Instant.FROM', function (temporal) {
        return Instant.from(temporal);
      });
    }

    var Clock = function () {
      function Clock() {}

      Clock.systemUTC = function systemUTC() {
        return new SystemClock(ZoneOffset.UTC);
      };

      Clock.systemDefaultZone = function systemDefaultZone() {
        return new SystemClock(ZoneId.systemDefault());
      };

      Clock.system = function system(zone) {
        return new SystemClock(zone);
      };

      Clock.fixed = function fixed(fixedInstant, zoneId) {
        return new FixedClock(fixedInstant, zoneId);
      };

      Clock.offset = function offset(baseClock, duration) {
        return new OffsetClock(baseClock, duration);
      };

      var _proto = Clock.prototype;

      _proto.millis = function millis() {
        abstractMethodFail('Clock.millis');
      };

      _proto.instant = function instant() {
        abstractMethodFail('Clock.instant');
      };

      _proto.zone = function zone() {
        abstractMethodFail('Clock.zone');
      };

      _proto.withZone = function withZone() {
        abstractMethodFail('Clock.withZone');
      };

      return Clock;
    }();

    var SystemClock = function (_Clock) {
      _inheritsLoose(SystemClock, _Clock);

      function SystemClock(zone) {
        var _this;

        requireNonNull(zone, 'zone');
        _this = _Clock.call(this) || this;
        _this._zone = zone;
        return _this;
      }

      var _proto2 = SystemClock.prototype;

      _proto2.zone = function zone() {
        return this._zone;
      };

      _proto2.millis = function millis() {
        return new Date().getTime();
      };

      _proto2.instant = function instant() {
        return Instant.ofEpochMilli(this.millis());
      };

      _proto2.equals = function equals(obj) {
        if (obj instanceof SystemClock) {
          return this._zone.equals(obj._zone);
        }

        return false;
      };

      _proto2.withZone = function withZone(zone) {
        if (zone.equals(this._zone)) {
          return this;
        }

        return new SystemClock(zone);
      };

      _proto2.toString = function toString() {
        return 'SystemClock[' + this._zone.toString() + ']';
      };

      return SystemClock;
    }(Clock);

    var FixedClock = function (_Clock2) {
      _inheritsLoose(FixedClock, _Clock2);

      function FixedClock(fixedInstant, zoneId) {
        var _this2;

        _this2 = _Clock2.call(this) || this;
        _this2._instant = fixedInstant;
        _this2._zoneId = zoneId;
        return _this2;
      }

      var _proto3 = FixedClock.prototype;

      _proto3.instant = function instant() {
        return this._instant;
      };

      _proto3.millis = function millis() {
        return this._instant.toEpochMilli();
      };

      _proto3.zone = function zone() {
        return this._zoneId;
      };

      _proto3.toString = function toString() {
        return 'FixedClock[]';
      };

      _proto3.equals = function equals(obj) {
        if (obj instanceof FixedClock) {
          return this._instant.equals(obj._instant) && this._zoneId.equals(obj._zoneId);
        }

        return false;
      };

      _proto3.withZone = function withZone(zone) {
        if (zone.equals(this._zoneId)) {
          return this;
        }

        return new FixedClock(this._instant, zone);
      };

      return FixedClock;
    }(Clock);

    var OffsetClock = function (_Clock3) {
      _inheritsLoose(OffsetClock, _Clock3);

      function OffsetClock(baseClock, offset) {
        var _this3;

        _this3 = _Clock3.call(this) || this;
        _this3._baseClock = baseClock;
        _this3._offset = offset;
        return _this3;
      }

      var _proto4 = OffsetClock.prototype;

      _proto4.zone = function zone() {
        return this._baseClock.zone();
      };

      _proto4.withZone = function withZone(zone) {
        if (zone.equals(this._baseClock.zone())) {
          return this;
        }

        return new OffsetClock(this._baseClock.withZone(zone), this._offset);
      };

      _proto4.millis = function millis() {
        return this._baseClock.millis() + this._offset.toMillis();
      };

      _proto4.instant = function instant() {
        return this._baseClock.instant().plus(this._offset);
      };

      _proto4.equals = function equals(obj) {
        if (obj instanceof OffsetClock) {
          return this._baseClock.equals(obj._baseClock) && this._offset.equals(obj._offset);
        }

        return false;
      };

      _proto4.toString = function toString() {
        return 'OffsetClock[' + this._baseClock + ',' + this._offset + ']';
      };

      return OffsetClock;
    }(Clock);

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var ZoneOffsetTransition = function () {
      ZoneOffsetTransition.of = function of(transition, offsetBefore, offsetAfter) {
        return new ZoneOffsetTransition(transition, offsetBefore, offsetAfter);
      };

      function ZoneOffsetTransition(transition, offsetBefore, offsetAfter) {
        requireNonNull(transition, 'transition');
        requireNonNull(offsetBefore, 'offsetBefore');
        requireNonNull(offsetAfter, 'offsetAfter');

        if (offsetBefore.equals(offsetAfter)) {
          throw new IllegalArgumentException('Offsets must not be equal');
        }

        if (transition.nano() !== 0) {
          throw new IllegalArgumentException('Nano-of-second must be zero');
        }

        if (transition instanceof LocalDateTime) {
          this._transition = transition;
        } else {
          this._transition = LocalDateTime.ofEpochSecond(transition, 0, offsetBefore);
        }

        this._offsetBefore = offsetBefore;
        this._offsetAfter = offsetAfter;
      }

      var _proto = ZoneOffsetTransition.prototype;

      _proto.instant = function instant() {
        return this._transition.toInstant(this._offsetBefore);
      };

      _proto.toEpochSecond = function toEpochSecond() {
        return this._transition.toEpochSecond(this._offsetBefore);
      };

      _proto.dateTimeBefore = function dateTimeBefore() {
        return this._transition;
      };

      _proto.dateTimeAfter = function dateTimeAfter() {
        return this._transition.plusSeconds(this.durationSeconds());
      };

      _proto.offsetBefore = function offsetBefore() {
        return this._offsetBefore;
      };

      _proto.offsetAfter = function offsetAfter() {
        return this._offsetAfter;
      };

      _proto.duration = function duration() {
        return Duration.ofSeconds(this.durationSeconds());
      };

      _proto.durationSeconds = function durationSeconds() {
        return this._offsetAfter.totalSeconds() - this._offsetBefore.totalSeconds();
      };

      _proto.isGap = function isGap() {
        return this._offsetAfter.totalSeconds() > this._offsetBefore.totalSeconds();
      };

      _proto.isOverlap = function isOverlap() {
        return this._offsetAfter.totalSeconds() < this._offsetBefore.totalSeconds();
      };

      _proto.isValidOffset = function isValidOffset(offset) {
        return this.isGap() ? false : this._offsetBefore.equals(offset) || this._offsetAfter.equals(offset);
      };

      _proto.validOffsets = function validOffsets() {
        if (this.isGap()) {
          return [];
        } else {
          return [this._offsetBefore, this._offsetAfter];
        }
      };

      _proto.compareTo = function compareTo(transition) {
        return this.instant().compareTo(transition.instant());
      };

      _proto.equals = function equals(other) {
        if (other === this) {
          return true;
        }

        if (other instanceof ZoneOffsetTransition) {
          var d = other;
          return this._transition.equals(d._transition) && this._offsetBefore.equals(d.offsetBefore()) && this._offsetAfter.equals(d.offsetAfter());
        }

        return false;
      };

      _proto.hashCode = function hashCode() {
        return this._transition.hashCode() ^ this._offsetBefore.hashCode() ^ this._offsetAfter.hashCode() >>> 16;
      };

      _proto.toString = function toString() {
        return 'Transition[' + (this.isGap() ? 'Gap' : 'Overlap') + ' at ' + this._transition.toString() + this._offsetBefore.toString() + ' to ' + this._offsetAfter + ']';
      };

      return ZoneOffsetTransition;
    }();

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    function _init$m() {
      TemporalQueries.ZONE_ID = createTemporalQuery('ZONE_ID', function (temporal) {
        return temporal.query(TemporalQueries.ZONE_ID);
      });
      TemporalQueries.CHRONO = createTemporalQuery('CHRONO', function (temporal) {
        return temporal.query(TemporalQueries.CHRONO);
      });
      TemporalQueries.PRECISION = createTemporalQuery('PRECISION', function (temporal) {
        return temporal.query(TemporalQueries.PRECISION);
      });
      TemporalQueries.OFFSET = createTemporalQuery('OFFSET', function (temporal) {
        if (temporal.isSupported(ChronoField.OFFSET_SECONDS)) {
          return ZoneOffset.ofTotalSeconds(temporal.get(ChronoField.OFFSET_SECONDS));
        }

        return null;
      });
      TemporalQueries.ZONE = createTemporalQuery('ZONE', function (temporal) {
        var zone = temporal.query(TemporalQueries.ZONE_ID);
        return zone != null ? zone : temporal.query(TemporalQueries.OFFSET);
      });
      TemporalQueries.LOCAL_DATE = createTemporalQuery('LOCAL_DATE', function (temporal) {
        if (temporal.isSupported(ChronoField.EPOCH_DAY)) {
          return LocalDate.ofEpochDay(temporal.getLong(ChronoField.EPOCH_DAY));
        }

        return null;
      });
      TemporalQueries.LOCAL_TIME = createTemporalQuery('LOCAL_TIME', function (temporal) {
        if (temporal.isSupported(ChronoField.NANO_OF_DAY)) {
          return LocalTime.ofNanoOfDay(temporal.getLong(ChronoField.NANO_OF_DAY));
        }

        return null;
      });
    }

    var SystemDefaultZoneRules = function (_ZoneRules) {
      _inheritsLoose(SystemDefaultZoneRules, _ZoneRules);

      function SystemDefaultZoneRules() {
        return _ZoneRules.apply(this, arguments) || this;
      }

      var _proto = SystemDefaultZoneRules.prototype;

      _proto.isFixedOffset = function isFixedOffset() {
        return false;
      };

      _proto.offsetOfInstant = function offsetOfInstant(instant) {
        var offsetInMinutes = new Date(instant.toEpochMilli()).getTimezoneOffset();
        return ZoneOffset.ofTotalMinutes(offsetInMinutes * -1);
      };

      _proto.offsetOfEpochMilli = function offsetOfEpochMilli(epochMilli) {
        var offsetInMinutes = new Date(epochMilli).getTimezoneOffset();
        return ZoneOffset.ofTotalMinutes(offsetInMinutes * -1);
      };

      _proto.offsetOfLocalDateTime = function offsetOfLocalDateTime(localDateTime) {
        var epochMilli = localDateTime.toEpochSecond(ZoneOffset.UTC) * 1000;
        var offsetInMinutesBeforePossibleTransition = new Date(epochMilli).getTimezoneOffset();
        var epochMilliSystemZone = epochMilli + offsetInMinutesBeforePossibleTransition * 60000;
        var offsetInMinutesAfterPossibleTransition = new Date(epochMilliSystemZone).getTimezoneOffset();
        return ZoneOffset.ofTotalMinutes(offsetInMinutesAfterPossibleTransition * -1);
      };

      _proto.validOffsets = function validOffsets(localDateTime) {
        return [this.offsetOfLocalDateTime(localDateTime)];
      };

      _proto.transition = function transition() {
        return null;
      };

      _proto.standardOffset = function standardOffset(instant) {
        return this.offsetOfInstant(instant);
      };

      _proto.daylightSavings = function daylightSavings() {
        this._throwNotSupported();
      };

      _proto.isDaylightSavings = function isDaylightSavings() {
        this._throwNotSupported();
      };

      _proto.isValidOffset = function isValidOffset(dateTime, offset) {
        return this.offsetOfLocalDateTime(dateTime).equals(offset);
      };

      _proto.nextTransition = function nextTransition() {
        this._throwNotSupported();
      };

      _proto.previousTransition = function previousTransition() {
        this._throwNotSupported();
      };

      _proto.transitions = function transitions() {
        this._throwNotSupported();
      };

      _proto.transitionRules = function transitionRules() {
        this._throwNotSupported();
      };

      _proto._throwNotSupported = function _throwNotSupported() {
        throw new DateTimeException('not supported operation');
      };

      _proto.equals = function equals(other) {
        if (this === other || other instanceof SystemDefaultZoneRules) {
          return true;
        } else {
          return false;
        }
      };

      _proto.toString = function toString() {
        return 'SYSTEM';
      };

      return SystemDefaultZoneRules;
    }(ZoneRules);

    var SystemDefaultZoneId = function (_ZoneId) {
      _inheritsLoose(SystemDefaultZoneId, _ZoneId);

      function SystemDefaultZoneId() {
        var _this;

        _this = _ZoneId.call(this) || this;
        _this._rules = new SystemDefaultZoneRules();
        return _this;
      }

      var _proto = SystemDefaultZoneId.prototype;

      _proto.rules = function rules() {
        return this._rules;
      };

      _proto.equals = function equals(other) {
        if (this === other) {
          return true;
        }

        return false;
      };

      _proto.id = function id() {
        return 'SYSTEM';
      };

      return SystemDefaultZoneId;
    }(ZoneId);

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var ZoneIdFactory = function () {
      function ZoneIdFactory() {}

      ZoneIdFactory.systemDefault = function systemDefault() {
        return SYSTEM_DEFAULT_ZONE_ID_INSTANCE;
      };

      ZoneIdFactory.getAvailableZoneIds = function getAvailableZoneIds() {
        return ZoneRulesProvider.getAvailableZoneIds();
      };

      ZoneIdFactory.of = function of(zoneId) {
        requireNonNull(zoneId, 'zoneId');

        if (zoneId === 'Z') {
          return ZoneOffset.UTC;
        }

        if (zoneId.length === 1) {
          throw new DateTimeException('Invalid zone: ' + zoneId);
        }

        if (StringUtil.startsWith(zoneId, '+') || StringUtil.startsWith(zoneId, '-')) {
          return ZoneOffset.of(zoneId);
        }

        if (zoneId === 'UTC' || zoneId === 'GMT' || zoneId === 'GMT0' || zoneId === 'UT') {
          return new ZoneRegion(zoneId, ZoneOffset.UTC.rules());
        }

        if (StringUtil.startsWith(zoneId, 'UTC+') || StringUtil.startsWith(zoneId, 'GMT+') || StringUtil.startsWith(zoneId, 'UTC-') || StringUtil.startsWith(zoneId, 'GMT-')) {
          var offset = ZoneOffset.of(zoneId.substring(3));

          if (offset.totalSeconds() === 0) {
            return new ZoneRegion(zoneId.substring(0, 3), offset.rules());
          }

          return new ZoneRegion(zoneId.substring(0, 3) + offset.id(), offset.rules());
        }

        if (StringUtil.startsWith(zoneId, 'UT+') || StringUtil.startsWith(zoneId, 'UT-')) {
          var _offset = ZoneOffset.of(zoneId.substring(2));

          if (_offset.totalSeconds() === 0) {
            return new ZoneRegion('UT', _offset.rules());
          }

          return new ZoneRegion('UT' + _offset.id(), _offset.rules());
        }

        if (zoneId === 'SYSTEM') {
          return ZoneId.systemDefault();
        }

        return ZoneRegion.ofId(zoneId);
      };

      ZoneIdFactory.ofOffset = function ofOffset(prefix, offset) {
        requireNonNull(prefix, 'prefix');
        requireNonNull(offset, 'offset');

        if (prefix.length === 0) {
          return offset;
        }

        if (prefix === 'GMT' || prefix === 'UTC' || prefix === 'UT') {
          if (offset.totalSeconds() === 0) {
            return new ZoneRegion(prefix, offset.rules());
          }

          return new ZoneRegion(prefix + offset.id(), offset.rules());
        }

        throw new IllegalArgumentException('Invalid prefix, must be GMT, UTC or UT: ' + prefix);
      };

      ZoneIdFactory.from = function from(temporal) {
        requireNonNull(temporal, 'temporal');
        var obj = temporal.query(TemporalQueries.zone());

        if (obj == null) {
          throw new DateTimeException('Unable to obtain ZoneId from TemporalAccessor: ' + temporal + ', type ' + (temporal.constructor != null ? temporal.constructor.name : ''));
        }

        return obj;
      };

      return ZoneIdFactory;
    }();
    var SYSTEM_DEFAULT_ZONE_ID_INSTANCE = null;
    function _init$n() {
      SYSTEM_DEFAULT_ZONE_ID_INSTANCE = new SystemDefaultZoneId();
      ZoneId.systemDefault = ZoneIdFactory.systemDefault;
      ZoneId.getAvailableZoneIds = ZoneIdFactory.getAvailableZoneIds;
      ZoneId.of = ZoneIdFactory.of;
      ZoneId.ofOffset = ZoneIdFactory.ofOffset;
      ZoneId.from = ZoneIdFactory.from;
      ZoneOffset.from = ZoneIdFactory.from;
      ZoneId.SYSTEM = SYSTEM_DEFAULT_ZONE_ID_INSTANCE;
      ZoneId.UTC = ZoneOffset.ofTotalSeconds(0);
    }

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var isInit = false;

    function init() {
      if (isInit) {
        return;
      }

      isInit = true;
      _init$1();
      _init();
      _init$2();
      _init$3();
      _init$k();
      _init$8();
      _init$m();
      _init$4();
      _init$l();
      _init$i();
      _init$j();
      _init$d();
      _init$5();
      _init$c();
      _init$b();
      _init$6();
      _init$7();
      _init$g();
      _init$n();
      _init$e();
      _init$a();
      _init$9();
      _init$h();
      _init$f();
    }

    init();

    /*
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */

    var ToNativeJsConverter = function () {
      function ToNativeJsConverter(temporal, zone) {
        var zonedDateTime;

        if (temporal instanceof LocalDate) {
          zone = zone == null ? ZoneId.systemDefault() : zone;
          zonedDateTime = temporal.atStartOfDay(zone);
        } else if (temporal instanceof LocalDateTime) {
          zone = zone == null ? ZoneId.systemDefault() : zone;
          zonedDateTime = temporal.atZone(zone);
        } else if (temporal instanceof ZonedDateTime) {
          if (zone == null) {
            zonedDateTime = temporal;
          } else {
            zonedDateTime = temporal.withZoneSameInstant(zone);
          }
        } else {
          throw new IllegalArgumentException('unsupported instance for convert operation:' + temporal);
        }

        this.instant = zonedDateTime.toInstant();
      }

      var _proto = ToNativeJsConverter.prototype;

      _proto.toDate = function toDate() {
        return new Date(this.instant.toEpochMilli());
      };

      _proto.toEpochMilli = function toEpochMilli() {
        return this.instant.toEpochMilli();
      };

      return ToNativeJsConverter;
    }();

    function convert(temporal, zone) {
      return new ToNativeJsConverter(temporal, zone);
    }

    var NativeJsTemporal = function (_TemporalAccessor) {
      _inheritsLoose(NativeJsTemporal, _TemporalAccessor);

      function NativeJsTemporal(date, zone) {
        var _this;

        if (zone === void 0) {
          zone = ZoneId.systemDefault();
        }

        _this = _TemporalAccessor.call(this) || this;
        _this._zone = zone;

        if (date instanceof Date) {
          _this._epochMilli = date.getTime();
          return _assertThisInitialized(_this);
        } else if (typeof date.toDate === 'function' && date.toDate() instanceof Date) {
          _this._epochMilli = date.toDate().getTime();
          return _assertThisInitialized(_this);
        }

        assert(false, 'date must be either a javascript date or a moment');
        return _this;
      }

      var _proto = NativeJsTemporal.prototype;

      _proto.query = function query(_query) {
        requireNonNull(_query, 'query');

        if (_query === TemporalQueries.localDate()) {
          return LocalDate.ofInstant(Instant.ofEpochMilli(this._epochMilli), this._zone);
        } else if (_query === TemporalQueries.localTime()) {
          return LocalTime.ofInstant(Instant.ofEpochMilli(this._epochMilli), this._zone);
        } else if (_query === TemporalQueries.zone()) {
          return this._zone;
        }

        return _TemporalAccessor.prototype.query.call(this, _query);
      };

      _proto.get = function get(field) {
        return this.getLong(field);
      };

      _proto.getLong = function getLong(field) {
        requireNonNull(field, 'field');

        if (field instanceof ChronoField) {
          switch (field) {
            case ChronoField.NANO_OF_SECOND:
              return MathUtil.floorMod(this._epochMilli, 1000) * 1000000;

            case ChronoField.INSTANT_SECONDS:
              return MathUtil.floorDiv(this._epochMilli, 1000);
          }

          throw new UnsupportedTemporalTypeException('Unsupported field: ' + field);
        }

        return field.getFrom(this);
      };

      _proto.isSupported = function isSupported(field) {
        return field === ChronoField.INSTANT_SECONDS || field === ChronoField.NANO_OF_SECOND;
      };

      return NativeJsTemporal;
    }(TemporalAccessor);

    function nativeJs(date, zone) {
      return new NativeJsTemporal(date, zone);
    }

    function bindUse(jsJoda) {
      var used = [];
      return function use(fn) {
        if (!~used.indexOf(fn)) {
          fn(jsJoda);
          used.push(fn);
        }

        return jsJoda;
      };
    }

    /**
     * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
     * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
     */
    var _ = {
      assert: assert$1,
      DateTimeBuilder: DateTimeBuilder,
      DateTimeParseContext: DateTimeParseContext,
      DateTimePrintContext: DateTimePrintContext,
      MathUtil: MathUtil,
      StringUtil: StringUtil,
      StringBuilder: StringBuilder
    };
    var jsJodaExports = {
      _: _,
      convert: convert,
      nativeJs: nativeJs,
      ArithmeticException: ArithmeticException,
      DateTimeException: DateTimeException,
      DateTimeParseException: DateTimeParseException,
      IllegalArgumentException: IllegalArgumentException,
      IllegalStateException: IllegalStateException,
      UnsupportedTemporalTypeException: UnsupportedTemporalTypeException,
      NullPointerException: NullPointerException,
      Clock: Clock,
      DayOfWeek: DayOfWeek,
      Duration: Duration,
      Instant: Instant,
      LocalDate: LocalDate,
      LocalTime: LocalTime,
      LocalDateTime: LocalDateTime,
      OffsetTime: OffsetTime,
      OffsetDateTime: OffsetDateTime,
      Month: Month,
      MonthDay: MonthDay,
      Period: Period,
      Year: Year,
      YearConstants: YearConstants,
      YearMonth: YearMonth,
      ZonedDateTime: ZonedDateTime,
      ZoneOffset: ZoneOffset,
      ZoneId: ZoneId,
      ZoneRegion: ZoneRegion,
      ZoneOffsetTransition: ZoneOffsetTransition,
      ZoneRules: ZoneRules,
      ZoneRulesProvider: ZoneRulesProvider,
      ChronoLocalDate: ChronoLocalDate,
      ChronoLocalDateTime: ChronoLocalDateTime,
      ChronoZonedDateTime: ChronoZonedDateTime,
      IsoChronology: IsoChronology,
      ChronoField: ChronoField,
      ChronoUnit: ChronoUnit,
      IsoFields: IsoFields,
      Temporal: Temporal,
      TemporalAccessor: TemporalAccessor,
      TemporalAdjuster: TemporalAdjuster,
      TemporalAdjusters: TemporalAdjusters,
      TemporalAmount: TemporalAmount,
      TemporalField: TemporalField,
      TemporalQueries: TemporalQueries,
      TemporalQuery: TemporalQuery,
      TemporalUnit: TemporalUnit,
      ValueRange: ValueRange,
      DateTimeFormatter: DateTimeFormatter,
      DateTimeFormatterBuilder: DateTimeFormatterBuilder,
      DecimalStyle: DecimalStyle,
      ResolverStyle: ResolverStyle,
      SignStyle: SignStyle,
      TextStyle: TextStyle
    };
    var use = bindUse(jsJodaExports);
    jsJodaExports.use = use;

    exports.ArithmeticException = ArithmeticException;
    exports.ChronoField = ChronoField;
    exports.ChronoLocalDate = ChronoLocalDate;
    exports.ChronoLocalDateTime = ChronoLocalDateTime;
    exports.ChronoUnit = ChronoUnit;
    exports.ChronoZonedDateTime = ChronoZonedDateTime;
    exports.Clock = Clock;
    exports.DateTimeException = DateTimeException;
    exports.DateTimeFormatter = DateTimeFormatter;
    exports.DateTimeFormatterBuilder = DateTimeFormatterBuilder;
    exports.DateTimeParseException = DateTimeParseException;
    exports.DayOfWeek = DayOfWeek;
    exports.DecimalStyle = DecimalStyle;
    exports.Duration = Duration;
    exports.IllegalArgumentException = IllegalArgumentException;
    exports.IllegalStateException = IllegalStateException;
    exports.Instant = Instant;
    exports.IsoChronology = IsoChronology;
    exports.IsoFields = IsoFields;
    exports.LocalDate = LocalDate;
    exports.LocalDateTime = LocalDateTime;
    exports.LocalTime = LocalTime;
    exports.Month = Month;
    exports.MonthDay = MonthDay;
    exports.NullPointerException = NullPointerException;
    exports.OffsetDateTime = OffsetDateTime;
    exports.OffsetTime = OffsetTime;
    exports.Period = Period;
    exports.ResolverStyle = ResolverStyle;
    exports.SignStyle = SignStyle;
    exports.Temporal = Temporal;
    exports.TemporalAccessor = TemporalAccessor;
    exports.TemporalAdjuster = TemporalAdjuster;
    exports.TemporalAdjusters = TemporalAdjusters;
    exports.TemporalAmount = TemporalAmount;
    exports.TemporalField = TemporalField;
    exports.TemporalQueries = TemporalQueries;
    exports.TemporalQuery = TemporalQuery;
    exports.TemporalUnit = TemporalUnit;
    exports.TextStyle = TextStyle;
    exports.UnsupportedTemporalTypeException = UnsupportedTemporalTypeException;
    exports.ValueRange = ValueRange;
    exports.Year = Year;
    exports.YearConstants = YearConstants;
    exports.YearMonth = YearMonth;
    exports.ZoneId = ZoneId;
    exports.ZoneOffset = ZoneOffset;
    exports.ZoneOffsetTransition = ZoneOffsetTransition;
    exports.ZoneRegion = ZoneRegion;
    exports.ZoneRules = ZoneRules;
    exports.ZoneRulesProvider = ZoneRulesProvider;
    exports.ZonedDateTime = ZonedDateTime;
    exports._ = _;
    exports.convert = convert;
    exports.nativeJs = nativeJs;
    exports.use = use;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=js-joda.js.map


/***/ }),

/***/ 935:
/***/ ((module, exports, __nccwpck_require__) => {

"use strict";
/**
 * @author Toru Nagashima <https://github.com/mysticatea>
 * See LICENSE file in root directory for full license.
 */


Object.defineProperty(exports, "__esModule", ({ value: true }));

var eventTargetShim = __nccwpck_require__(900);

/**
 * The signal class.
 * @see https://dom.spec.whatwg.org/#abortsignal
 */
class AbortSignal extends eventTargetShim.EventTarget {
    /**
     * AbortSignal cannot be constructed directly.
     */
    constructor() {
        super();
        throw new TypeError("AbortSignal cannot be constructed directly");
    }
    /**
     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.
     */
    get aborted() {
        const aborted = abortedFlags.get(this);
        if (typeof aborted !== "boolean") {
            throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? "null" : typeof this}`);
        }
        return aborted;
    }
}
eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");
/**
 * Create an AbortSignal object.
 */
function createAbortSignal() {
    const signal = Object.create(AbortSignal.prototype);
    eventTargetShim.EventTarget.call(signal);
    abortedFlags.set(signal, false);
    return signal;
}
/**
 * Abort a given signal.
 */
function abortSignal(signal) {
    if (abortedFlags.get(signal) !== false) {
        return;
    }
    abortedFlags.set(signal, true);
    signal.dispatchEvent({ type: "abort" });
}
/**
 * Aborted flag for each instances.
 */
const abortedFlags = new WeakMap();
// Properties should be enumerable.
Object.defineProperties(AbortSignal.prototype, {
    aborted: { enumerable: true },
});
// `toString()` should return `"[object AbortSignal]"`
if (typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol") {
    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {
        configurable: true,
        value: "AbortSignal",
    });
}

/**
 * The AbortController.
 * @see https://dom.spec.whatwg.org/#abortcontroller
 */
class AbortController {
    /**
     * Initialize this controller.
     */
    constructor() {
        signals.set(this, createAbortSignal());
    }
    /**
     * Returns the `AbortSignal` object associated with this object.
     */
    get signal() {
        return getSignal(this);
    }
    /**
     * Abort and signal to any observers that the associated activity is to be aborted.
     */
    abort() {
        abortSignal(getSignal(this));
    }
}
/**
 * Associated signals.
 */
const signals = new WeakMap();
/**
 * Get the associated signal of a given controller.
 */
function getSignal(controller) {
    const signal = signals.get(controller);
    if (signal == null) {
        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? "null" : typeof controller}`);
    }
    return signal;
}
// Properties should be enumerable.
Object.defineProperties(AbortController.prototype, {
    signal: { enumerable: true },
    abort: { enumerable: true },
});
if (typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol") {
    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {
        configurable: true,
        value: "AbortController",
    });
}

exports.AbortController = AbortController;
exports.AbortSignal = AbortSignal;
exports.default = AbortController;

module.exports = AbortController
module.exports.AbortController = module.exports.default = AbortController
module.exports.AbortSignal = AbortSignal
//# sourceMappingURL=abort-controller.js.map


/***/ }),

/***/ 978:
/***/ ((module) => {

"use strict";


function Queue(options) {
  if (!(this instanceof Queue)) {
    return new Queue(options);
  }

  options = options || {};
  this.concurrency = options.concurrency || Infinity;
  this.pending = 0;
  this.jobs = [];
  this.cbs = [];
  this._done = done.bind(this);
}

var arrayAddMethods = [
  'push',
  'unshift',
  'splice'
];

arrayAddMethods.forEach(function(method) {
  Queue.prototype[method] = function() {
    var methodResult = Array.prototype[method].apply(this.jobs, arguments);
    this._run();
    return methodResult;
  };
});

Object.defineProperty(Queue.prototype, 'length', {
  get: function() {
    return this.pending + this.jobs.length;
  }
});

Queue.prototype._run = function() {
  if (this.pending === this.concurrency) {
    return;
  }
  if (this.jobs.length) {
    var job = this.jobs.shift();
    this.pending++;
    job(this._done);
    this._run();
  }

  if (this.pending === 0) {
    while (this.cbs.length !== 0) {
      var cb = this.cbs.pop();
      process.nextTick(cb);
    }
  }
};

Queue.prototype.onDone = function(cb) {
  if (typeof cb === 'function') {
    this.cbs.push(cb);
    this._run();
  }
};

function done() {
  this.pending--;
  this._run();
}

module.exports = Queue;


/***/ }),

/***/ 900:
/***/ ((module, exports) => {

"use strict";
/**
 * @author Toru Nagashima <https://github.com/mysticatea>
 * @copyright 2015 Toru Nagashima. All rights reserved.
 * See LICENSE file in root directory for full license.
 */


Object.defineProperty(exports, "__esModule", ({ value: true }));

/**
 * @typedef {object} PrivateData
 * @property {EventTarget} eventTarget The event target.
 * @property {{type:string}} event The original event object.
 * @property {number} eventPhase The current event phase.
 * @property {EventTarget|null} currentTarget The current event target.
 * @property {boolean} canceled The flag to prevent default.
 * @property {boolean} stopped The flag to stop propagation.
 * @property {boolean} immediateStopped The flag to stop propagation immediately.
 * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.
 * @property {number} timeStamp The unix time.
 * @private
 */

/**
 * Private data for event wrappers.
 * @type {WeakMap<Event, PrivateData>}
 * @private
 */
const privateData = new WeakMap();

/**
 * Cache for wrapper classes.
 * @type {WeakMap<Object, Function>}
 * @private
 */
const wrappers = new WeakMap();

/**
 * Get private data.
 * @param {Event} event The event object to get private data.
 * @returns {PrivateData} The private data of the event.
 * @private
 */
function pd(event) {
    const retv = privateData.get(event);
    console.assert(
        retv != null,
        "'this' is expected an Event object, but got",
        event
    );
    return retv
}

/**
 * https://dom.spec.whatwg.org/#set-the-canceled-flag
 * @param data {PrivateData} private data.
 */
function setCancelFlag(data) {
    if (data.passiveListener != null) {
        if (
            typeof console !== "undefined" &&
            typeof console.error === "function"
        ) {
            console.error(
                "Unable to preventDefault inside passive event listener invocation.",
                data.passiveListener
            );
        }
        return
    }
    if (!data.event.cancelable) {
        return
    }

    data.canceled = true;
    if (typeof data.event.preventDefault === "function") {
        data.event.preventDefault();
    }
}

/**
 * @see https://dom.spec.whatwg.org/#interface-event
 * @private
 */
/**
 * The event wrapper.
 * @constructor
 * @param {EventTarget} eventTarget The event target of this dispatching.
 * @param {Event|{type:string}} event The original event to wrap.
 */
function Event(eventTarget, event) {
    privateData.set(this, {
        eventTarget,
        event,
        eventPhase: 2,
        currentTarget: eventTarget,
        canceled: false,
        stopped: false,
        immediateStopped: false,
        passiveListener: null,
        timeStamp: event.timeStamp || Date.now(),
    });

    // https://heycam.github.io/webidl/#Unforgeable
    Object.defineProperty(this, "isTrusted", { value: false, enumerable: true });

    // Define accessors
    const keys = Object.keys(event);
    for (let i = 0; i < keys.length; ++i) {
        const key = keys[i];
        if (!(key in this)) {
            Object.defineProperty(this, key, defineRedirectDescriptor(key));
        }
    }
}

// Should be enumerable, but class methods are not enumerable.
Event.prototype = {
    /**
     * The type of this event.
     * @type {string}
     */
    get type() {
        return pd(this).event.type
    },

    /**
     * The target of this event.
     * @type {EventTarget}
     */
    get target() {
        return pd(this).eventTarget
    },

    /**
     * The target of this event.
     * @type {EventTarget}
     */
    get currentTarget() {
        return pd(this).currentTarget
    },

    /**
     * @returns {EventTarget[]} The composed path of this event.
     */
    composedPath() {
        const currentTarget = pd(this).currentTarget;
        if (currentTarget == null) {
            return []
        }
        return [currentTarget]
    },

    /**
     * Constant of NONE.
     * @type {number}
     */
    get NONE() {
        return 0
    },

    /**
     * Constant of CAPTURING_PHASE.
     * @type {number}
     */
    get CAPTURING_PHASE() {
        return 1
    },

    /**
     * Constant of AT_TARGET.
     * @type {number}
     */
    get AT_TARGET() {
        return 2
    },

    /**
     * Constant of BUBBLING_PHASE.
     * @type {number}
     */
    get BUBBLING_PHASE() {
        return 3
    },

    /**
     * The target of this event.
     * @type {number}
     */
    get eventPhase() {
        return pd(this).eventPhase
    },

    /**
     * Stop event bubbling.
     * @returns {void}
     */
    stopPropagation() {
        const data = pd(this);

        data.stopped = true;
        if (typeof data.event.stopPropagation === "function") {
            data.event.stopPropagation();
        }
    },

    /**
     * Stop event bubbling.
     * @returns {void}
     */
    stopImmediatePropagation() {
        const data = pd(this);

        data.stopped = true;
        data.immediateStopped = true;
        if (typeof data.event.stopImmediatePropagation === "function") {
            data.event.stopImmediatePropagation();
        }
    },

    /**
     * The flag to be bubbling.
     * @type {boolean}
     */
    get bubbles() {
        return Boolean(pd(this).event.bubbles)
    },

    /**
     * The flag to be cancelable.
     * @type {boolean}
     */
    get cancelable() {
        return Boolean(pd(this).event.cancelable)
    },

    /**
     * Cancel this event.
     * @returns {void}
     */
    preventDefault() {
        setCancelFlag(pd(this));
    },

    /**
     * The flag to indicate cancellation state.
     * @type {boolean}
     */
    get defaultPrevented() {
        return pd(this).canceled
    },

    /**
     * The flag to be composed.
     * @type {boolean}
     */
    get composed() {
        return Boolean(pd(this).event.composed)
    },

    /**
     * The unix time of this event.
     * @type {number}
     */
    get timeStamp() {
        return pd(this).timeStamp
    },

    /**
     * The target of this event.
     * @type {EventTarget}
     * @deprecated
     */
    get srcElement() {
        return pd(this).eventTarget
    },

    /**
     * The flag to stop event bubbling.
     * @type {boolean}
     * @deprecated
     */
    get cancelBubble() {
        return pd(this).stopped
    },
    set cancelBubble(value) {
        if (!value) {
            return
        }
        const data = pd(this);

        data.stopped = true;
        if (typeof data.event.cancelBubble === "boolean") {
            data.event.cancelBubble = true;
        }
    },

    /**
     * The flag to indicate cancellation state.
     * @type {boolean}
     * @deprecated
     */
    get returnValue() {
        return !pd(this).canceled
    },
    set returnValue(value) {
        if (!value) {
            setCancelFlag(pd(this));
        }
    },

    /**
     * Initialize this event object. But do nothing under event dispatching.
     * @param {string} type The event type.
     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.
     * @param {boolean} [cancelable=false] The flag to be possible to cancel.
     * @deprecated
     */
    initEvent() {
        // Do nothing.
    },
};

// `constructor` is not enumerable.
Object.defineProperty(Event.prototype, "constructor", {
    value: Event,
    configurable: true,
    writable: true,
});

// Ensure `event instanceof window.Event` is `true`.
if (typeof window !== "undefined" && typeof window.Event !== "undefined") {
    Object.setPrototypeOf(Event.prototype, window.Event.prototype);

    // Make association for wrappers.
    wrappers.set(window.Event.prototype, Event);
}

/**
 * Get the property descriptor to redirect a given property.
 * @param {string} key Property name to define property descriptor.
 * @returns {PropertyDescriptor} The property descriptor to redirect the property.
 * @private
 */
function defineRedirectDescriptor(key) {
    return {
        get() {
            return pd(this).event[key]
        },
        set(value) {
            pd(this).event[key] = value;
        },
        configurable: true,
        enumerable: true,
    }
}

/**
 * Get the property descriptor to call a given method property.
 * @param {string} key Property name to define property descriptor.
 * @returns {PropertyDescriptor} The property descriptor to call the method property.
 * @private
 */
function defineCallDescriptor(key) {
    return {
        value() {
            const event = pd(this).event;
            return event[key].apply(event, arguments)
        },
        configurable: true,
        enumerable: true,
    }
}

/**
 * Define new wrapper class.
 * @param {Function} BaseEvent The base wrapper class.
 * @param {Object} proto The prototype of the original event.
 * @returns {Function} The defined wrapper class.
 * @private
 */
function defineWrapper(BaseEvent, proto) {
    const keys = Object.keys(proto);
    if (keys.length === 0) {
        return BaseEvent
    }

    /** CustomEvent */
    function CustomEvent(eventTarget, event) {
        BaseEvent.call(this, eventTarget, event);
    }

    CustomEvent.prototype = Object.create(BaseEvent.prototype, {
        constructor: { value: CustomEvent, configurable: true, writable: true },
    });

    // Define accessors.
    for (let i = 0; i < keys.length; ++i) {
        const key = keys[i];
        if (!(key in BaseEvent.prototype)) {
            const descriptor = Object.getOwnPropertyDescriptor(proto, key);
            const isFunc = typeof descriptor.value === "function";
            Object.defineProperty(
                CustomEvent.prototype,
                key,
                isFunc
                    ? defineCallDescriptor(key)
                    : defineRedirectDescriptor(key)
            );
        }
    }

    return CustomEvent
}

/**
 * Get the wrapper class of a given prototype.
 * @param {Object} proto The prototype of the original event to get its wrapper.
 * @returns {Function} The wrapper class.
 * @private
 */
function getWrapper(proto) {
    if (proto == null || proto === Object.prototype) {
        return Event
    }

    let wrapper = wrappers.get(proto);
    if (wrapper == null) {
        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
        wrappers.set(proto, wrapper);
    }
    return wrapper
}

/**
 * Wrap a given event to management a dispatching.
 * @param {EventTarget} eventTarget The event target of this dispatching.
 * @param {Object} event The event to wrap.
 * @returns {Event} The wrapper instance.
 * @private
 */
function wrapEvent(eventTarget, event) {
    const Wrapper = getWrapper(Object.getPrototypeOf(event));
    return new Wrapper(eventTarget, event)
}

/**
 * Get the immediateStopped flag of a given event.
 * @param {Event} event The event to get.
 * @returns {boolean} The flag to stop propagation immediately.
 * @private
 */
function isStopped(event) {
    return pd(event).immediateStopped
}

/**
 * Set the current event phase of a given event.
 * @param {Event} event The event to set current target.
 * @param {number} eventPhase New event phase.
 * @returns {void}
 * @private
 */
function setEventPhase(event, eventPhase) {
    pd(event).eventPhase = eventPhase;
}

/**
 * Set the current target of a given event.
 * @param {Event} event The event to set current target.
 * @param {EventTarget|null} currentTarget New current target.
 * @returns {void}
 * @private
 */
function setCurrentTarget(event, currentTarget) {
    pd(event).currentTarget = currentTarget;
}

/**
 * Set a passive listener of a given event.
 * @param {Event} event The event to set current target.
 * @param {Function|null} passiveListener New passive listener.
 * @returns {void}
 * @private
 */
function setPassiveListener(event, passiveListener) {
    pd(event).passiveListener = passiveListener;
}

/**
 * @typedef {object} ListenerNode
 * @property {Function} listener
 * @property {1|2|3} listenerType
 * @property {boolean} passive
 * @property {boolean} once
 * @property {ListenerNode|null} next
 * @private
 */

/**
 * @type {WeakMap<object, Map<string, ListenerNode>>}
 * @private
 */
const listenersMap = new WeakMap();

// Listener types
const CAPTURE = 1;
const BUBBLE = 2;
const ATTRIBUTE = 3;

/**
 * Check whether a given value is an object or not.
 * @param {any} x The value to check.
 * @returns {boolean} `true` if the value is an object.
 */
function isObject(x) {
    return x !== null && typeof x === "object" //eslint-disable-line no-restricted-syntax
}

/**
 * Get listeners.
 * @param {EventTarget} eventTarget The event target to get.
 * @returns {Map<string, ListenerNode>} The listeners.
 * @private
 */
function getListeners(eventTarget) {
    const listeners = listenersMap.get(eventTarget);
    if (listeners == null) {
        throw new TypeError(
            "'this' is expected an EventTarget object, but got another value."
        )
    }
    return listeners
}

/**
 * Get the property descriptor for the event attribute of a given event.
 * @param {string} eventName The event name to get property descriptor.
 * @returns {PropertyDescriptor} The property descriptor.
 * @private
 */
function defineEventAttributeDescriptor(eventName) {
    return {
        get() {
            const listeners = getListeners(this);
            let node = listeners.get(eventName);
            while (node != null) {
                if (node.listenerType === ATTRIBUTE) {
                    return node.listener
                }
                node = node.next;
            }
            return null
        },

        set(listener) {
            if (typeof listener !== "function" && !isObject(listener)) {
                listener = null; // eslint-disable-line no-param-reassign
            }
            const listeners = getListeners(this);

            // Traverse to the tail while removing old value.
            let prev = null;
            let node = listeners.get(eventName);
            while (node != null) {
                if (node.listenerType === ATTRIBUTE) {
                    // Remove old value.
                    if (prev !== null) {
                        prev.next = node.next;
                    } else if (node.next !== null) {
                        listeners.set(eventName, node.next);
                    } else {
                        listeners.delete(eventName);
                    }
                } else {
                    prev = node;
                }

                node = node.next;
            }

            // Add new value.
            if (listener !== null) {
                const newNode = {
                    listener,
                    listenerType: ATTRIBUTE,
                    passive: false,
                    once: false,
                    next: null,
                };
                if (prev === null) {
                    listeners.set(eventName, newNode);
                } else {
                    prev.next = newNode;
                }
            }
        },
        configurable: true,
        enumerable: true,
    }
}

/**
 * Define an event attribute (e.g. `eventTarget.onclick`).
 * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.
 * @param {string} eventName The event name to define.
 * @returns {void}
 */
function defineEventAttribute(eventTargetPrototype, eventName) {
    Object.defineProperty(
        eventTargetPrototype,
        `on${eventName}`,
        defineEventAttributeDescriptor(eventName)
    );
}

/**
 * Define a custom EventTarget with event attributes.
 * @param {string[]} eventNames Event names for event attributes.
 * @returns {EventTarget} The custom EventTarget.
 * @private
 */
function defineCustomEventTarget(eventNames) {
    /** CustomEventTarget */
    function CustomEventTarget() {
        EventTarget.call(this);
    }

    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
        constructor: {
            value: CustomEventTarget,
            configurable: true,
            writable: true,
        },
    });

    for (let i = 0; i < eventNames.length; ++i) {
        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
    }

    return CustomEventTarget
}

/**
 * EventTarget.
 *
 * - This is constructor if no arguments.
 * - This is a function which returns a CustomEventTarget constructor if there are arguments.
 *
 * For example:
 *
 *     class A extends EventTarget {}
 *     class B extends EventTarget("message") {}
 *     class C extends EventTarget("message", "error") {}
 *     class D extends EventTarget(["message", "error"]) {}
 */
function EventTarget() {
    /*eslint-disable consistent-return */
    if (this instanceof EventTarget) {
        listenersMap.set(this, new Map());
        return
    }
    if (arguments.length === 1 && Array.isArray(arguments[0])) {
        return defineCustomEventTarget(arguments[0])
    }
    if (arguments.length > 0) {
        const types = new Array(arguments.length);
        for (let i = 0; i < arguments.length; ++i) {
            types[i] = arguments[i];
        }
        return defineCustomEventTarget(types)
    }
    throw new TypeError("Cannot call a class as a function")
    /*eslint-enable consistent-return */
}

// Should be enumerable, but class methods are not enumerable.
EventTarget.prototype = {
    /**
     * Add a given listener to this event target.
     * @param {string} eventName The event name to add.
     * @param {Function} listener The listener to add.
     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.
     * @returns {void}
     */
    addEventListener(eventName, listener, options) {
        if (listener == null) {
            return
        }
        if (typeof listener !== "function" && !isObject(listener)) {
            throw new TypeError("'listener' should be a function or an object.")
        }

        const listeners = getListeners(this);
        const optionsIsObj = isObject(options);
        const capture = optionsIsObj
            ? Boolean(options.capture)
            : Boolean(options);
        const listenerType = capture ? CAPTURE : BUBBLE;
        const newNode = {
            listener,
            listenerType,
            passive: optionsIsObj && Boolean(options.passive),
            once: optionsIsObj && Boolean(options.once),
            next: null,
        };

        // Set it as the first node if the first node is null.
        let node = listeners.get(eventName);
        if (node === undefined) {
            listeners.set(eventName, newNode);
            return
        }

        // Traverse to the tail while checking duplication..
        let prev = null;
        while (node != null) {
            if (
                node.listener === listener &&
                node.listenerType === listenerType
            ) {
                // Should ignore duplication.
                return
            }
            prev = node;
            node = node.next;
        }

        // Add it.
        prev.next = newNode;
    },

    /**
     * Remove a given listener from this event target.
     * @param {string} eventName The event name to remove.
     * @param {Function} listener The listener to remove.
     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.
     * @returns {void}
     */
    removeEventListener(eventName, listener, options) {
        if (listener == null) {
            return
        }

        const listeners = getListeners(this);
        const capture = isObject(options)
            ? Boolean(options.capture)
            : Boolean(options);
        const listenerType = capture ? CAPTURE : BUBBLE;

        let prev = null;
        let node = listeners.get(eventName);
        while (node != null) {
            if (
                node.listener === listener &&
                node.listenerType === listenerType
            ) {
                if (prev !== null) {
                    prev.next = node.next;
                } else if (node.next !== null) {
                    listeners.set(eventName, node.next);
                } else {
                    listeners.delete(eventName);
                }
                return
            }

            prev = node;
            node = node.next;
        }
    },

    /**
     * Dispatch a given event.
     * @param {Event|{type:string}} event The event to dispatch.
     * @returns {boolean} `false` if canceled.
     */
    dispatchEvent(event) {
        if (event == null || typeof event.type !== "string") {
            throw new TypeError('"event.type" should be a string.')
        }

        // If listeners aren't registered, terminate.
        const listeners = getListeners(this);
        const eventName = event.type;
        let node = listeners.get(eventName);
        if (node == null) {
            return true
        }

        // Since we cannot rewrite several properties, so wrap object.
        const wrappedEvent = wrapEvent(this, event);

        // This doesn't process capturing phase and bubbling phase.
        // This isn't participating in a tree.
        let prev = null;
        while (node != null) {
            // Remove this listener if it's once
            if (node.once) {
                if (prev !== null) {
                    prev.next = node.next;
                } else if (node.next !== null) {
                    listeners.set(eventName, node.next);
                } else {
                    listeners.delete(eventName);
                }
            } else {
                prev = node;
            }

            // Call this listener
            setPassiveListener(
                wrappedEvent,
                node.passive ? node.listener : null
            );
            if (typeof node.listener === "function") {
                try {
                    node.listener.call(this, wrappedEvent);
                } catch (err) {
                    if (
                        typeof console !== "undefined" &&
                        typeof console.error === "function"
                    ) {
                        console.error(err);
                    }
                }
            } else if (
                node.listenerType !== ATTRIBUTE &&
                typeof node.listener.handleEvent === "function"
            ) {
                node.listener.handleEvent(wrappedEvent);
            }

            // Break if `event.stopImmediatePropagation` was called.
            if (isStopped(wrappedEvent)) {
                break
            }

            node = node.next;
        }
        setPassiveListener(wrappedEvent, null);
        setEventPhase(wrappedEvent, 0);
        setCurrentTarget(wrappedEvent, null);

        return !wrappedEvent.defaultPrevented
    },
};

// `constructor` is not enumerable.
Object.defineProperty(EventTarget.prototype, "constructor", {
    value: EventTarget,
    configurable: true,
    writable: true,
});

// Ensure `eventTarget instanceof window.EventTarget` is `true`.
if (
    typeof window !== "undefined" &&
    typeof window.EventTarget !== "undefined"
) {
    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
}

exports.defineEventAttribute = defineEventAttribute;
exports.EventTarget = EventTarget;
exports.default = EventTarget;

module.exports = EventTarget
module.exports.EventTarget = module.exports.default = EventTarget
module.exports.defineEventAttribute = defineEventAttribute
//# sourceMappingURL=event-target-shim.js.map


/***/ }),

/***/ 534:
/***/ ((module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Stream = _interopDefault(__nccwpck_require__(413));
var http = _interopDefault(__nccwpck_require__(605));
var Url = _interopDefault(__nccwpck_require__(835));
var https = _interopDefault(__nccwpck_require__(211));
var zlib = _interopDefault(__nccwpck_require__(761));

// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = Stream.Readable;

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = __nccwpck_require__(431).convert;
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = Stream.PassThrough;

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof Stream) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof Stream) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof Stream)) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof Stream && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof Stream) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = http.STATUS_CODES;

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = Url.parse;
const format_url = Url.format;

const streamDestructionSupported = 'destroy' in Stream.Readable.prototype;

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parse_url(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parse_url(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parse_url(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = Stream.PassThrough;
const resolve_url = Url.resolve;

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch(url, opts) {

	// allow custom promise
	if (!fetch.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch.Promise;

	// wrap http.request into fetch
	return new fetch.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? https : http).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof Stream.Readable) {
				request.body.destroy(error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
			finalize();
		});

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				const locationURL = location === null ? null : resolve_url(request.url, location);

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout
						};

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib.Z_SYNC_FLUSH,
				finishFlush: zlib.Z_SYNC_FLUSH
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib.createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib.createInflate());
					} else {
						body = body.pipe(zlib.createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {
				body = body.pipe(zlib.createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch.Promise = global.Promise;

module.exports = exports = fetch;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.default = exports;
exports.Headers = Headers;
exports.Request = Request;
exports.Response = Response;
exports.FetchError = FetchError;


/***/ }),

/***/ 963:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const WebSocket = __nccwpck_require__(189);

WebSocket.Server = __nccwpck_require__(800);
WebSocket.Receiver = __nccwpck_require__(278);
WebSocket.Sender = __nccwpck_require__(902);

module.exports = WebSocket;


/***/ }),

/***/ 92:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { EMPTY_BUFFER } = __nccwpck_require__(879);

/**
 * Merges an array of buffers into a new buffer.
 *
 * @param {Buffer[]} list The array of buffers to concat
 * @param {Number} totalLength The total length of buffers in the list
 * @return {Buffer} The resulting buffer
 * @public
 */
function concat(list, totalLength) {
  if (list.length === 0) return EMPTY_BUFFER;
  if (list.length === 1) return list[0];

  const target = Buffer.allocUnsafe(totalLength);
  var offset = 0;

  for (var i = 0; i < list.length; i++) {
    const buf = list[i];
    buf.copy(target, offset);
    offset += buf.length;
  }

  return target;
}

/**
 * Masks a buffer using the given mask.
 *
 * @param {Buffer} source The buffer to mask
 * @param {Buffer} mask The mask to use
 * @param {Buffer} output The buffer where to store the result
 * @param {Number} offset The offset at which to start writing
 * @param {Number} length The number of bytes to mask.
 * @public
 */
function _mask(source, mask, output, offset, length) {
  for (var i = 0; i < length; i++) {
    output[offset + i] = source[i] ^ mask[i & 3];
  }
}

/**
 * Unmasks a buffer using the given mask.
 *
 * @param {Buffer} buffer The buffer to unmask
 * @param {Buffer} mask The mask to use
 * @public
 */
function _unmask(buffer, mask) {
  // Required until https://github.com/nodejs/node/issues/9006 is resolved.
  const length = buffer.length;
  for (var i = 0; i < length; i++) {
    buffer[i] ^= mask[i & 3];
  }
}

/**
 * Converts a buffer to an `ArrayBuffer`.
 *
 * @param {Buffer} buf The buffer to convert
 * @return {ArrayBuffer} Converted buffer
 * @public
 */
function toArrayBuffer(buf) {
  if (buf.byteLength === buf.buffer.byteLength) {
    return buf.buffer;
  }

  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
}

/**
 * Converts `data` to a `Buffer`.
 *
 * @param {*} data The data to convert
 * @return {Buffer} The buffer
 * @throws {TypeError}
 * @public
 */
function toBuffer(data) {
  toBuffer.readOnly = true;

  if (Buffer.isBuffer(data)) return data;

  var buf;

  if (data instanceof ArrayBuffer) {
    buf = Buffer.from(data);
  } else if (ArrayBuffer.isView(data)) {
    buf = viewToBuffer(data);
  } else {
    buf = Buffer.from(data);
    toBuffer.readOnly = false;
  }

  return buf;
}

/**
 * Converts an `ArrayBuffer` view into a buffer.
 *
 * @param {(DataView|TypedArray)} view The view to convert
 * @return {Buffer} Converted view
 * @private
 */
function viewToBuffer(view) {
  const buf = Buffer.from(view.buffer);

  if (view.byteLength !== view.buffer.byteLength) {
    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);
  }

  return buf;
}

try {
  const bufferUtil = __nccwpck_require__(412);
  const bu = bufferUtil.BufferUtil || bufferUtil;

  module.exports = {
    concat,
    mask(source, mask, output, offset, length) {
      if (length < 48) _mask(source, mask, output, offset, length);
      else bu.mask(source, mask, output, offset, length);
    },
    toArrayBuffer,
    toBuffer,
    unmask(buffer, mask) {
      if (buffer.length < 32) _unmask(buffer, mask);
      else bu.unmask(buffer, mask);
    }
  };
} catch (e) /* istanbul ignore next */ {
  module.exports = {
    concat,
    mask: _mask,
    toArrayBuffer,
    toBuffer,
    unmask: _unmask
  };
}


/***/ }),

/***/ 879:
/***/ ((module) => {

"use strict";


module.exports = {
  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],
  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
  kStatusCode: Symbol('status-code'),
  kWebSocket: Symbol('websocket'),
  EMPTY_BUFFER: Buffer.alloc(0),
  NOOP: () => {}
};


/***/ }),

/***/ 839:
/***/ ((module) => {

"use strict";


/**
 * Class representing an event.
 *
 * @private
 */
class Event {
  /**
   * Create a new `Event`.
   *
   * @param {String} type The name of the event
   * @param {Object} target A reference to the target to which the event was dispatched
   */
  constructor(type, target) {
    this.target = target;
    this.type = type;
  }
}

/**
 * Class representing a message event.
 *
 * @extends Event
 * @private
 */
class MessageEvent extends Event {
  /**
   * Create a new `MessageEvent`.
   *
   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data
   * @param {WebSocket} target A reference to the target to which the event was dispatched
   */
  constructor(data, target) {
    super('message', target);

    this.data = data;
  }
}

/**
 * Class representing a close event.
 *
 * @extends Event
 * @private
 */
class CloseEvent extends Event {
  /**
   * Create a new `CloseEvent`.
   *
   * @param {Number} code The status code explaining why the connection is being closed
   * @param {String} reason A human-readable string explaining why the connection is closing
   * @param {WebSocket} target A reference to the target to which the event was dispatched
   */
  constructor(code, reason, target) {
    super('close', target);

    this.wasClean = target._closeFrameReceived && target._closeFrameSent;
    this.reason = reason;
    this.code = code;
  }
}

/**
 * Class representing an open event.
 *
 * @extends Event
 * @private
 */
class OpenEvent extends Event {
  /**
   * Create a new `OpenEvent`.
   *
   * @param {WebSocket} target A reference to the target to which the event was dispatched
   */
  constructor(target) {
    super('open', target);
  }
}

/**
 * Class representing an error event.
 *
 * @extends Event
 * @private
 */
class ErrorEvent extends Event {
  /**
   * Create a new `ErrorEvent`.
   *
   * @param {Object} error The error that generated this event
   * @param {WebSocket} target A reference to the target to which the event was dispatched
   */
  constructor(error, target) {
    super('error', target);

    this.message = error.message;
    this.error = error;
  }
}

/**
 * This provides methods for emulating the `EventTarget` interface. It's not
 * meant to be used directly.
 *
 * @mixin
 */
const EventTarget = {
  /**
   * Register an event listener.
   *
   * @param {String} method A string representing the event type to listen for
   * @param {Function} listener The listener to add
   * @public
   */
  addEventListener(method, listener) {
    if (typeof listener !== 'function') return;

    function onMessage(data) {
      listener.call(this, new MessageEvent(data, this));
    }

    function onClose(code, message) {
      listener.call(this, new CloseEvent(code, message, this));
    }

    function onError(error) {
      listener.call(this, new ErrorEvent(error, this));
    }

    function onOpen() {
      listener.call(this, new OpenEvent(this));
    }

    if (method === 'message') {
      onMessage._listener = listener;
      this.on(method, onMessage);
    } else if (method === 'close') {
      onClose._listener = listener;
      this.on(method, onClose);
    } else if (method === 'error') {
      onError._listener = listener;
      this.on(method, onError);
    } else if (method === 'open') {
      onOpen._listener = listener;
      this.on(method, onOpen);
    } else {
      this.on(method, listener);
    }
  },

  /**
   * Remove an event listener.
   *
   * @param {String} method A string representing the event type to remove
   * @param {Function} listener The listener to remove
   * @public
   */
  removeEventListener(method, listener) {
    const listeners = this.listeners(method);

    for (var i = 0; i < listeners.length; i++) {
      if (listeners[i] === listener || listeners[i]._listener === listener) {
        this.removeListener(method, listeners[i]);
      }
    }
  }
};

module.exports = EventTarget;


/***/ }),

/***/ 997:
/***/ ((module) => {

"use strict";


//
// Allowed token characters:
//
// '!', '#', '$', '%', '&', ''', '*', '+', '-',
// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'
//
// tokenChars[32] === 0 // ' '
// tokenChars[33] === 1 // '!'
// tokenChars[34] === 0 // '"'
// ...
//
// prettier-ignore
const tokenChars = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31
  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127
];

/**
 * Adds an offer to the map of extension offers or a parameter to the map of
 * parameters.
 *
 * @param {Object} dest The map of extension offers or parameters
 * @param {String} name The extension or parameter name
 * @param {(Object|Boolean|String)} elem The extension parameters or the
 *     parameter value
 * @private
 */
function push(dest, name, elem) {
  if (Object.prototype.hasOwnProperty.call(dest, name)) dest[name].push(elem);
  else dest[name] = [elem];
}

/**
 * Parses the `Sec-WebSocket-Extensions` header into an object.
 *
 * @param {String} header The field value of the header
 * @return {Object} The parsed object
 * @public
 */
function parse(header) {
  const offers = {};

  if (header === undefined || header === '') return offers;

  var params = {};
  var mustUnescape = false;
  var isEscaping = false;
  var inQuotes = false;
  var extensionName;
  var paramName;
  var start = -1;
  var end = -1;

  for (var i = 0; i < header.length; i++) {
    const code = header.charCodeAt(i);

    if (extensionName === undefined) {
      if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (code === 0x20 /* ' ' */ || code === 0x09 /* '\t' */) {
        if (end === -1 && start !== -1) end = i;
      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        const name = header.slice(start, end);
        if (code === 0x2c) {
          push(offers, name, params);
          params = {};
        } else {
          extensionName = name;
        }

        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    } else if (paramName === undefined) {
      if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (code === 0x20 || code === 0x09) {
        if (end === -1 && start !== -1) end = i;
      } else if (code === 0x3b || code === 0x2c) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        push(params, header.slice(start, end), true);
        if (code === 0x2c) {
          push(offers, extensionName, params);
          params = {};
          extensionName = undefined;
        }

        start = end = -1;
      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {
        paramName = header.slice(start, i);
        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    } else {
      //
      // The value of a quoted-string after unescaping must conform to the
      // token ABNF, so only token characters are valid.
      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1
      //
      if (isEscaping) {
        if (tokenChars[code] !== 1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }
        if (start === -1) start = i;
        else if (!mustUnescape) mustUnescape = true;
        isEscaping = false;
      } else if (inQuotes) {
        if (tokenChars[code] === 1) {
          if (start === -1) start = i;
        } else if (code === 0x22 /* '"' */ && start !== -1) {
          inQuotes = false;
          end = i;
        } else if (code === 0x5c /* '\' */) {
          isEscaping = true;
        } else {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }
      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {
        inQuotes = true;
      } else if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {
        if (end === -1) end = i;
      } else if (code === 0x3b || code === 0x2c) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        var value = header.slice(start, end);
        if (mustUnescape) {
          value = value.replace(/\\/g, '');
          mustUnescape = false;
        }
        push(params, paramName, value);
        if (code === 0x2c) {
          push(offers, extensionName, params);
          params = {};
          extensionName = undefined;
        }

        paramName = undefined;
        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    }
  }

  if (start === -1 || inQuotes) {
    throw new SyntaxError('Unexpected end of input');
  }

  if (end === -1) end = i;
  const token = header.slice(start, end);
  if (extensionName === undefined) {
    push(offers, token, {});
  } else {
    if (paramName === undefined) {
      push(params, token, true);
    } else if (mustUnescape) {
      push(params, paramName, token.replace(/\\/g, ''));
    } else {
      push(params, paramName, token);
    }
    push(offers, extensionName, params);
  }

  return offers;
}

/**
 * Builds the `Sec-WebSocket-Extensions` header field value.
 *
 * @param {Object} extensions The map of extensions and parameters to format
 * @return {String} A string representing the given object
 * @public
 */
function format(extensions) {
  return Object.keys(extensions)
    .map((extension) => {
      var configurations = extensions[extension];
      if (!Array.isArray(configurations)) configurations = [configurations];
      return configurations
        .map((params) => {
          return [extension]
            .concat(
              Object.keys(params).map((k) => {
                var values = params[k];
                if (!Array.isArray(values)) values = [values];
                return values
                  .map((v) => (v === true ? k : `${k}=${v}`))
                  .join('; ');
              })
            )
            .join('; ');
        })
        .join(', ');
    })
    .join(', ');
}

module.exports = { format, parse };


/***/ }),

/***/ 841:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const Limiter = __nccwpck_require__(978);
const zlib = __nccwpck_require__(761);

const bufferUtil = __nccwpck_require__(92);
const { kStatusCode, NOOP } = __nccwpck_require__(879);

const TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);
const EMPTY_BLOCK = Buffer.from([0x00]);

const kPerMessageDeflate = Symbol('permessage-deflate');
const kTotalLength = Symbol('total-length');
const kCallback = Symbol('callback');
const kBuffers = Symbol('buffers');
const kError = Symbol('error');

//
// We limit zlib concurrency, which prevents severe memory fragmentation
// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913
// and https://github.com/websockets/ws/issues/1202
//
// Intentionally global; it's the global thread pool that's an issue.
//
let zlibLimiter;

/**
 * permessage-deflate implementation.
 */
class PerMessageDeflate {
  /**
   * Creates a PerMessageDeflate instance.
   *
   * @param {Object} options Configuration options
   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling
   *     of server context takeover
   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge
   *     disabling of client context takeover
   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the
   *     use of a custom server window size
   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support
   *     for, or request, a custom client window size
   * @param {Object} options.zlibDeflateOptions Options to pass to zlib on deflate
   * @param {Object} options.zlibInflateOptions Options to pass to zlib on inflate
   * @param {Number} options.threshold Size (in bytes) below which messages
   *     should not be compressed
   * @param {Number} options.concurrencyLimit The number of concurrent calls to
   *     zlib
   * @param {Boolean} isServer Create the instance in either server or client
   *     mode
   * @param {Number} maxPayload The maximum allowed message length
   */
  constructor(options, isServer, maxPayload) {
    this._maxPayload = maxPayload | 0;
    this._options = options || {};
    this._threshold =
      this._options.threshold !== undefined ? this._options.threshold : 1024;
    this._isServer = !!isServer;
    this._deflate = null;
    this._inflate = null;

    this.params = null;

    if (!zlibLimiter) {
      const concurrency =
        this._options.concurrencyLimit !== undefined
          ? this._options.concurrencyLimit
          : 10;
      zlibLimiter = new Limiter({ concurrency });
    }
  }

  /**
   * @type {String}
   */
  static get extensionName() {
    return 'permessage-deflate';
  }

  /**
   * Create an extension negotiation offer.
   *
   * @return {Object} Extension parameters
   * @public
   */
  offer() {
    const params = {};

    if (this._options.serverNoContextTakeover) {
      params.server_no_context_takeover = true;
    }
    if (this._options.clientNoContextTakeover) {
      params.client_no_context_takeover = true;
    }
    if (this._options.serverMaxWindowBits) {
      params.server_max_window_bits = this._options.serverMaxWindowBits;
    }
    if (this._options.clientMaxWindowBits) {
      params.client_max_window_bits = this._options.clientMaxWindowBits;
    } else if (this._options.clientMaxWindowBits == null) {
      params.client_max_window_bits = true;
    }

    return params;
  }

  /**
   * Accept an extension negotiation offer/response.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Object} Accepted configuration
   * @public
   */
  accept(configurations) {
    configurations = this.normalizeParams(configurations);

    this.params = this._isServer
      ? this.acceptAsServer(configurations)
      : this.acceptAsClient(configurations);

    return this.params;
  }

  /**
   * Releases all resources used by the extension.
   *
   * @public
   */
  cleanup() {
    if (this._inflate) {
      this._inflate.close();
      this._inflate = null;
    }

    if (this._deflate) {
      this._deflate.close();
      this._deflate = null;
    }
  }

  /**
   *  Accept an extension negotiation offer.
   *
   * @param {Array} offers The extension negotiation offers
   * @return {Object} Accepted configuration
   * @private
   */
  acceptAsServer(offers) {
    const opts = this._options;
    const accepted = offers.find((params) => {
      if (
        (opts.serverNoContextTakeover === false &&
          params.server_no_context_takeover) ||
        (params.server_max_window_bits &&
          (opts.serverMaxWindowBits === false ||
            (typeof opts.serverMaxWindowBits === 'number' &&
              opts.serverMaxWindowBits > params.server_max_window_bits))) ||
        (typeof opts.clientMaxWindowBits === 'number' &&
          !params.client_max_window_bits)
      ) {
        return false;
      }

      return true;
    });

    if (!accepted) {
      throw new Error('None of the extension offers can be accepted');
    }

    if (opts.serverNoContextTakeover) {
      accepted.server_no_context_takeover = true;
    }
    if (opts.clientNoContextTakeover) {
      accepted.client_no_context_takeover = true;
    }
    if (typeof opts.serverMaxWindowBits === 'number') {
      accepted.server_max_window_bits = opts.serverMaxWindowBits;
    }
    if (typeof opts.clientMaxWindowBits === 'number') {
      accepted.client_max_window_bits = opts.clientMaxWindowBits;
    } else if (
      accepted.client_max_window_bits === true ||
      opts.clientMaxWindowBits === false
    ) {
      delete accepted.client_max_window_bits;
    }

    return accepted;
  }

  /**
   * Accept the extension negotiation response.
   *
   * @param {Array} response The extension negotiation response
   * @return {Object} Accepted configuration
   * @private
   */
  acceptAsClient(response) {
    const params = response[0];

    if (
      this._options.clientNoContextTakeover === false &&
      params.client_no_context_takeover
    ) {
      throw new Error('Unexpected parameter "client_no_context_takeover"');
    }

    if (!params.client_max_window_bits) {
      if (typeof this._options.clientMaxWindowBits === 'number') {
        params.client_max_window_bits = this._options.clientMaxWindowBits;
      }
    } else if (
      this._options.clientMaxWindowBits === false ||
      (typeof this._options.clientMaxWindowBits === 'number' &&
        params.client_max_window_bits > this._options.clientMaxWindowBits)
    ) {
      throw new Error(
        'Unexpected or invalid parameter "client_max_window_bits"'
      );
    }

    return params;
  }

  /**
   * Normalize parameters.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Array} The offers/response with normalized parameters
   * @private
   */
  normalizeParams(configurations) {
    configurations.forEach((params) => {
      Object.keys(params).forEach((key) => {
        var value = params[key];

        if (value.length > 1) {
          throw new Error(`Parameter "${key}" must have only a single value`);
        }

        value = value[0];

        if (key === 'client_max_window_bits') {
          if (value !== true) {
            const num = +value;
            if (!Number.isInteger(num) || num < 8 || num > 15) {
              throw new TypeError(
                `Invalid value for parameter "${key}": ${value}`
              );
            }
            value = num;
          } else if (!this._isServer) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
        } else if (key === 'server_max_window_bits') {
          const num = +value;
          if (!Number.isInteger(num) || num < 8 || num > 15) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
          value = num;
        } else if (
          key === 'client_no_context_takeover' ||
          key === 'server_no_context_takeover'
        ) {
          if (value !== true) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
        } else {
          throw new Error(`Unknown parameter "${key}"`);
        }

        params[key] = value;
      });
    });

    return configurations;
  }

  /**
   * Decompress data. Concurrency limited by async-limiter.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */
  decompress(data, fin, callback) {
    zlibLimiter.push((done) => {
      this._decompress(data, fin, (err, result) => {
        done();
        callback(err, result);
      });
    });
  }

  /**
   * Compress data. Concurrency limited by async-limiter.
   *
   * @param {Buffer} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */
  compress(data, fin, callback) {
    zlibLimiter.push((done) => {
      this._compress(data, fin, (err, result) => {
        done();
        callback(err, result);
      });
    });
  }

  /**
   * Decompress data.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */
  _decompress(data, fin, callback) {
    const endpoint = this._isServer ? 'client' : 'server';

    if (!this._inflate) {
      const key = `${endpoint}_max_window_bits`;
      const windowBits =
        typeof this.params[key] !== 'number'
          ? zlib.Z_DEFAULT_WINDOWBITS
          : this.params[key];

      this._inflate = zlib.createInflateRaw(
        Object.assign({}, this._options.zlibInflateOptions, { windowBits })
      );
      this._inflate[kPerMessageDeflate] = this;
      this._inflate[kTotalLength] = 0;
      this._inflate[kBuffers] = [];
      this._inflate.on('error', inflateOnError);
      this._inflate.on('data', inflateOnData);
    }

    this._inflate[kCallback] = callback;

    this._inflate.write(data);
    if (fin) this._inflate.write(TRAILER);

    this._inflate.flush(() => {
      const err = this._inflate[kError];

      if (err) {
        this._inflate.close();
        this._inflate = null;
        callback(err);
        return;
      }

      const data = bufferUtil.concat(
        this._inflate[kBuffers],
        this._inflate[kTotalLength]
      );

      if (fin && this.params[`${endpoint}_no_context_takeover`]) {
        this._inflate.close();
        this._inflate = null;
      } else {
        this._inflate[kTotalLength] = 0;
        this._inflate[kBuffers] = [];
      }

      callback(null, data);
    });
  }

  /**
   * Compress data.
   *
   * @param {Buffer} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */
  _compress(data, fin, callback) {
    if (!data || data.length === 0) {
      process.nextTick(callback, null, EMPTY_BLOCK);
      return;
    }

    const endpoint = this._isServer ? 'server' : 'client';

    if (!this._deflate) {
      const key = `${endpoint}_max_window_bits`;
      const windowBits =
        typeof this.params[key] !== 'number'
          ? zlib.Z_DEFAULT_WINDOWBITS
          : this.params[key];

      this._deflate = zlib.createDeflateRaw(
        Object.assign({}, this._options.zlibDeflateOptions, { windowBits })
      );

      this._deflate[kTotalLength] = 0;
      this._deflate[kBuffers] = [];

      //
      // An `'error'` event is emitted, only on Node.js < 10.0.0, if the
      // `zlib.DeflateRaw` instance is closed while data is being processed.
      // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong
      // time due to an abnormal WebSocket closure.
      //
      this._deflate.on('error', NOOP);
      this._deflate.on('data', deflateOnData);
    }

    this._deflate.write(data);
    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {
      if (!this._deflate) {
        //
        // This `if` statement is only needed for Node.js < 10.0.0 because as of
        // commit https://github.com/nodejs/node/commit/5e3f5164, the flush
        // callback is no longer called if the deflate stream is closed while
        // data is being processed.
        //
        return;
      }

      var data = bufferUtil.concat(
        this._deflate[kBuffers],
        this._deflate[kTotalLength]
      );

      if (fin) data = data.slice(0, data.length - 4);

      if (fin && this.params[`${endpoint}_no_context_takeover`]) {
        this._deflate.close();
        this._deflate = null;
      } else {
        this._deflate[kTotalLength] = 0;
        this._deflate[kBuffers] = [];
      }

      callback(null, data);
    });
  }
}

module.exports = PerMessageDeflate;

/**
 * The listener of the `zlib.DeflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function deflateOnData(chunk) {
  this[kBuffers].push(chunk);
  this[kTotalLength] += chunk.length;
}

/**
 * The listener of the `zlib.InflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function inflateOnData(chunk) {
  this[kTotalLength] += chunk.length;

  if (
    this[kPerMessageDeflate]._maxPayload < 1 ||
    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload
  ) {
    this[kBuffers].push(chunk);
    return;
  }

  this[kError] = new RangeError('Max payload size exceeded');
  this[kError][kStatusCode] = 1009;
  this.removeListener('data', inflateOnData);
  this.reset();
}

/**
 * The listener of the `zlib.InflateRaw` stream `'error'` event.
 *
 * @param {Error} err The emitted error
 * @private
 */
function inflateOnError(err) {
  //
  // There is no need to call `Zlib#close()` as the handle is automatically
  // closed when an error is emitted.
  //
  this[kPerMessageDeflate]._inflate = null;
  err[kStatusCode] = 1007;
  this[kCallback](err);
}


/***/ }),

/***/ 278:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { Writable } = __nccwpck_require__(413);

const PerMessageDeflate = __nccwpck_require__(841);
const {
  BINARY_TYPES,
  EMPTY_BUFFER,
  kStatusCode,
  kWebSocket
} = __nccwpck_require__(879);
const { concat, toArrayBuffer, unmask } = __nccwpck_require__(92);
const { isValidStatusCode, isValidUTF8 } = __nccwpck_require__(279);

const GET_INFO = 0;
const GET_PAYLOAD_LENGTH_16 = 1;
const GET_PAYLOAD_LENGTH_64 = 2;
const GET_MASK = 3;
const GET_DATA = 4;
const INFLATING = 5;

/**
 * HyBi Receiver implementation.
 *
 * @extends stream.Writable
 */
class Receiver extends Writable {
  /**
   * Creates a Receiver instance.
   *
   * @param {String} binaryType The type for binary data
   * @param {Object} extensions An object containing the negotiated extensions
   * @param {Number} maxPayload The maximum allowed message length
   */
  constructor(binaryType, extensions, maxPayload) {
    super();

    this._binaryType = binaryType || BINARY_TYPES[0];
    this[kWebSocket] = undefined;
    this._extensions = extensions || {};
    this._maxPayload = maxPayload | 0;

    this._bufferedBytes = 0;
    this._buffers = [];

    this._compressed = false;
    this._payloadLength = 0;
    this._mask = undefined;
    this._fragmented = 0;
    this._masked = false;
    this._fin = false;
    this._opcode = 0;

    this._totalPayloadLength = 0;
    this._messageLength = 0;
    this._fragments = [];

    this._state = GET_INFO;
    this._loop = false;
  }

  /**
   * Implements `Writable.prototype._write()`.
   *
   * @param {Buffer} chunk The chunk of data to write
   * @param {String} encoding The character encoding of `chunk`
   * @param {Function} cb Callback
   */
  _write(chunk, encoding, cb) {
    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();

    this._bufferedBytes += chunk.length;
    this._buffers.push(chunk);
    this.startLoop(cb);
  }

  /**
   * Consumes `n` bytes from the buffered data.
   *
   * @param {Number} n The number of bytes to consume
   * @return {Buffer} The consumed bytes
   * @private
   */
  consume(n) {
    this._bufferedBytes -= n;

    if (n === this._buffers[0].length) return this._buffers.shift();

    if (n < this._buffers[0].length) {
      const buf = this._buffers[0];
      this._buffers[0] = buf.slice(n);
      return buf.slice(0, n);
    }

    const dst = Buffer.allocUnsafe(n);

    do {
      const buf = this._buffers[0];

      if (n >= buf.length) {
        this._buffers.shift().copy(dst, dst.length - n);
      } else {
        buf.copy(dst, dst.length - n, 0, n);
        this._buffers[0] = buf.slice(n);
      }

      n -= buf.length;
    } while (n > 0);

    return dst;
  }

  /**
   * Starts the parsing loop.
   *
   * @param {Function} cb Callback
   * @private
   */
  startLoop(cb) {
    var err;
    this._loop = true;

    do {
      switch (this._state) {
        case GET_INFO:
          err = this.getInfo();
          break;
        case GET_PAYLOAD_LENGTH_16:
          err = this.getPayloadLength16();
          break;
        case GET_PAYLOAD_LENGTH_64:
          err = this.getPayloadLength64();
          break;
        case GET_MASK:
          this.getMask();
          break;
        case GET_DATA:
          err = this.getData(cb);
          break;
        default:
          // `INFLATING`
          this._loop = false;
          return;
      }
    } while (this._loop);

    cb(err);
  }

  /**
   * Reads the first two bytes of a frame.
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getInfo() {
    if (this._bufferedBytes < 2) {
      this._loop = false;
      return;
    }

    const buf = this.consume(2);

    if ((buf[0] & 0x30) !== 0x00) {
      this._loop = false;
      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002);
    }

    const compressed = (buf[0] & 0x40) === 0x40;

    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {
      this._loop = false;
      return error(RangeError, 'RSV1 must be clear', true, 1002);
    }

    this._fin = (buf[0] & 0x80) === 0x80;
    this._opcode = buf[0] & 0x0f;
    this._payloadLength = buf[1] & 0x7f;

    if (this._opcode === 0x00) {
      if (compressed) {
        this._loop = false;
        return error(RangeError, 'RSV1 must be clear', true, 1002);
      }

      if (!this._fragmented) {
        this._loop = false;
        return error(RangeError, 'invalid opcode 0', true, 1002);
      }

      this._opcode = this._fragmented;
    } else if (this._opcode === 0x01 || this._opcode === 0x02) {
      if (this._fragmented) {
        this._loop = false;
        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);
      }

      this._compressed = compressed;
    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {
      if (!this._fin) {
        this._loop = false;
        return error(RangeError, 'FIN must be set', true, 1002);
      }

      if (compressed) {
        this._loop = false;
        return error(RangeError, 'RSV1 must be clear', true, 1002);
      }

      if (this._payloadLength > 0x7d) {
        this._loop = false;
        return error(
          RangeError,
          `invalid payload length ${this._payloadLength}`,
          true,
          1002
        );
      }
    } else {
      this._loop = false;
      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);
    }

    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;
    this._masked = (buf[1] & 0x80) === 0x80;

    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;
    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;
    else return this.haveLength();
  }

  /**
   * Gets extended payload length (7+16).
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getPayloadLength16() {
    if (this._bufferedBytes < 2) {
      this._loop = false;
      return;
    }

    this._payloadLength = this.consume(2).readUInt16BE(0);
    return this.haveLength();
  }

  /**
   * Gets extended payload length (7+64).
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getPayloadLength64() {
    if (this._bufferedBytes < 8) {
      this._loop = false;
      return;
    }

    const buf = this.consume(8);
    const num = buf.readUInt32BE(0);

    //
    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned
    // if payload length is greater than this number.
    //
    if (num > Math.pow(2, 53 - 32) - 1) {
      this._loop = false;
      return error(
        RangeError,
        'Unsupported WebSocket frame: payload length > 2^53 - 1',
        false,
        1009
      );
    }

    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);
    return this.haveLength();
  }

  /**
   * Payload length has been read.
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  haveLength() {
    if (this._payloadLength && this._opcode < 0x08) {
      this._totalPayloadLength += this._payloadLength;
      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {
        this._loop = false;
        return error(RangeError, 'Max payload size exceeded', false, 1009);
      }
    }

    if (this._masked) this._state = GET_MASK;
    else this._state = GET_DATA;
  }

  /**
   * Reads mask bytes.
   *
   * @private
   */
  getMask() {
    if (this._bufferedBytes < 4) {
      this._loop = false;
      return;
    }

    this._mask = this.consume(4);
    this._state = GET_DATA;
  }

  /**
   * Reads data bytes.
   *
   * @param {Function} cb Callback
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */
  getData(cb) {
    var data = EMPTY_BUFFER;

    if (this._payloadLength) {
      if (this._bufferedBytes < this._payloadLength) {
        this._loop = false;
        return;
      }

      data = this.consume(this._payloadLength);
      if (this._masked) unmask(data, this._mask);
    }

    if (this._opcode > 0x07) return this.controlMessage(data);

    if (this._compressed) {
      this._state = INFLATING;
      this.decompress(data, cb);
      return;
    }

    if (data.length) {
      //
      // This message is not compressed so its lenght is the sum of the payload
      // length of all fragments.
      //
      this._messageLength = this._totalPayloadLength;
      this._fragments.push(data);
    }

    return this.dataMessage();
  }

  /**
   * Decompresses data.
   *
   * @param {Buffer} data Compressed data
   * @param {Function} cb Callback
   * @private
   */
  decompress(data, cb) {
    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];

    perMessageDeflate.decompress(data, this._fin, (err, buf) => {
      if (err) return cb(err);

      if (buf.length) {
        this._messageLength += buf.length;
        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {
          return cb(
            error(RangeError, 'Max payload size exceeded', false, 1009)
          );
        }

        this._fragments.push(buf);
      }

      const er = this.dataMessage();
      if (er) return cb(er);

      this.startLoop(cb);
    });
  }

  /**
   * Handles a data message.
   *
   * @return {(Error|undefined)} A possible error
   * @private
   */
  dataMessage() {
    if (this._fin) {
      const messageLength = this._messageLength;
      const fragments = this._fragments;

      this._totalPayloadLength = 0;
      this._messageLength = 0;
      this._fragmented = 0;
      this._fragments = [];

      if (this._opcode === 2) {
        var data;

        if (this._binaryType === 'nodebuffer') {
          data = concat(fragments, messageLength);
        } else if (this._binaryType === 'arraybuffer') {
          data = toArrayBuffer(concat(fragments, messageLength));
        } else {
          data = fragments;
        }

        this.emit('message', data);
      } else {
        const buf = concat(fragments, messageLength);

        if (!isValidUTF8(buf)) {
          this._loop = false;
          return error(Error, 'invalid UTF-8 sequence', true, 1007);
        }

        this.emit('message', buf.toString());
      }
    }

    this._state = GET_INFO;
  }

  /**
   * Handles a control message.
   *
   * @param {Buffer} data Data to handle
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */
  controlMessage(data) {
    if (this._opcode === 0x08) {
      this._loop = false;

      if (data.length === 0) {
        this.emit('conclude', 1005, '');
        this.end();
      } else if (data.length === 1) {
        return error(RangeError, 'invalid payload length 1', true, 1002);
      } else {
        const code = data.readUInt16BE(0);

        if (!isValidStatusCode(code)) {
          return error(RangeError, `invalid status code ${code}`, true, 1002);
        }

        const buf = data.slice(2);

        if (!isValidUTF8(buf)) {
          return error(Error, 'invalid UTF-8 sequence', true, 1007);
        }

        this.emit('conclude', code, buf.toString());
        this.end();
      }
    } else if (this._opcode === 0x09) {
      this.emit('ping', data);
    } else {
      this.emit('pong', data);
    }

    this._state = GET_INFO;
  }
}

module.exports = Receiver;

/**
 * Builds an error object.
 *
 * @param {(Error|RangeError)} ErrorCtor The error constructor
 * @param {String} message The error message
 * @param {Boolean} prefix Specifies whether or not to add a default prefix to
 *     `message`
 * @param {Number} statusCode The status code
 * @return {(Error|RangeError)} The error
 * @private
 */
function error(ErrorCtor, message, prefix, statusCode) {
  const err = new ErrorCtor(
    prefix ? `Invalid WebSocket frame: ${message}` : message
  );

  Error.captureStackTrace(err, error);
  err[kStatusCode] = statusCode;
  return err;
}


/***/ }),

/***/ 902:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { randomBytes } = __nccwpck_require__(417);

const PerMessageDeflate = __nccwpck_require__(841);
const { EMPTY_BUFFER } = __nccwpck_require__(879);
const { isValidStatusCode } = __nccwpck_require__(279);
const { mask: applyMask, toBuffer } = __nccwpck_require__(92);

/**
 * HyBi Sender implementation.
 */
class Sender {
  /**
   * Creates a Sender instance.
   *
   * @param {net.Socket} socket The connection socket
   * @param {Object} extensions An object containing the negotiated extensions
   */
  constructor(socket, extensions) {
    this._extensions = extensions || {};
    this._socket = socket;

    this._firstFragment = true;
    this._compress = false;

    this._bufferedBytes = 0;
    this._deflating = false;
    this._queue = [];
  }

  /**
   * Frames a piece of data according to the HyBi WebSocket protocol.
   *
   * @param {Buffer} data The data to frame
   * @param {Object} options Options object
   * @param {Number} options.opcode The opcode
   * @param {Boolean} options.readOnly Specifies whether `data` can be modified
   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit
   * @param {Boolean} options.mask Specifies whether or not to mask `data`
   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit
   * @return {Buffer[]} The framed data as a list of `Buffer` instances
   * @public
   */
  static frame(data, options) {
    const merge = options.mask && options.readOnly;
    var offset = options.mask ? 6 : 2;
    var payloadLength = data.length;

    if (data.length >= 65536) {
      offset += 8;
      payloadLength = 127;
    } else if (data.length > 125) {
      offset += 2;
      payloadLength = 126;
    }

    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);

    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;
    if (options.rsv1) target[0] |= 0x40;

    target[1] = payloadLength;

    if (payloadLength === 126) {
      target.writeUInt16BE(data.length, 2);
    } else if (payloadLength === 127) {
      target.writeUInt32BE(0, 2);
      target.writeUInt32BE(data.length, 6);
    }

    if (!options.mask) return [target, data];

    const mask = randomBytes(4);

    target[1] |= 0x80;
    target[offset - 4] = mask[0];
    target[offset - 3] = mask[1];
    target[offset - 2] = mask[2];
    target[offset - 1] = mask[3];

    if (merge) {
      applyMask(data, mask, target, offset, data.length);
      return [target];
    }

    applyMask(data, mask, data, 0, data.length);
    return [target, data];
  }

  /**
   * Sends a close message to the other peer.
   *
   * @param {(Number|undefined)} code The status code component of the body
   * @param {String} data The message component of the body
   * @param {Boolean} mask Specifies whether or not to mask the message
   * @param {Function} cb Callback
   * @public
   */
  close(code, data, mask, cb) {
    var buf;

    if (code === undefined) {
      buf = EMPTY_BUFFER;
    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {
      throw new TypeError('First argument must be a valid error code number');
    } else if (data === undefined || data === '') {
      buf = Buffer.allocUnsafe(2);
      buf.writeUInt16BE(code, 0);
    } else {
      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));
      buf.writeUInt16BE(code, 0);
      buf.write(data, 2);
    }

    if (this._deflating) {
      this.enqueue([this.doClose, buf, mask, cb]);
    } else {
      this.doClose(buf, mask, cb);
    }
  }

  /**
   * Frames and sends a close message.
   *
   * @param {Buffer} data The message to send
   * @param {Boolean} mask Specifies whether or not to mask `data`
   * @param {Function} cb Callback
   * @private
   */
  doClose(data, mask, cb) {
    this.sendFrame(
      Sender.frame(data, {
        fin: true,
        rsv1: false,
        opcode: 0x08,
        mask,
        readOnly: false
      }),
      cb
    );
  }

  /**
   * Sends a ping message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} mask Specifies whether or not to mask `data`
   * @param {Function} cb Callback
   * @public
   */
  ping(data, mask, cb) {
    const buf = toBuffer(data);

    if (this._deflating) {
      this.enqueue([this.doPing, buf, mask, toBuffer.readOnly, cb]);
    } else {
      this.doPing(buf, mask, toBuffer.readOnly, cb);
    }
  }

  /**
   * Frames and sends a ping message.
   *
   * @param {*} data The message to send
   * @param {Boolean} mask Specifies whether or not to mask `data`
   * @param {Boolean} readOnly Specifies whether `data` can be modified
   * @param {Function} cb Callback
   * @private
   */
  doPing(data, mask, readOnly, cb) {
    this.sendFrame(
      Sender.frame(data, {
        fin: true,
        rsv1: false,
        opcode: 0x09,
        mask,
        readOnly
      }),
      cb
    );
  }

  /**
   * Sends a pong message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} mask Specifies whether or not to mask `data`
   * @param {Function} cb Callback
   * @public
   */
  pong(data, mask, cb) {
    const buf = toBuffer(data);

    if (this._deflating) {
      this.enqueue([this.doPong, buf, mask, toBuffer.readOnly, cb]);
    } else {
      this.doPong(buf, mask, toBuffer.readOnly, cb);
    }
  }

  /**
   * Frames and sends a pong message.
   *
   * @param {*} data The message to send
   * @param {Boolean} mask Specifies whether or not to mask `data`
   * @param {Boolean} readOnly Specifies whether `data` can be modified
   * @param {Function} cb Callback
   * @private
   */
  doPong(data, mask, readOnly, cb) {
    this.sendFrame(
      Sender.frame(data, {
        fin: true,
        rsv1: false,
        opcode: 0x0a,
        mask,
        readOnly
      }),
      cb
    );
  }

  /**
   * Sends a data message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Object} options Options object
   * @param {Boolean} options.compress Specifies whether or not to compress `data`
   * @param {Boolean} options.binary Specifies whether `data` is binary or text
   * @param {Boolean} options.fin Specifies whether the fragment is the last one
   * @param {Boolean} options.mask Specifies whether or not to mask `data`
   * @param {Function} cb Callback
   * @public
   */
  send(data, options, cb) {
    const buf = toBuffer(data);
    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
    var opcode = options.binary ? 2 : 1;
    var rsv1 = options.compress;

    if (this._firstFragment) {
      this._firstFragment = false;
      if (rsv1 && perMessageDeflate) {
        rsv1 = buf.length >= perMessageDeflate._threshold;
      }
      this._compress = rsv1;
    } else {
      rsv1 = false;
      opcode = 0;
    }

    if (options.fin) this._firstFragment = true;

    if (perMessageDeflate) {
      const opts = {
        fin: options.fin,
        rsv1,
        opcode,
        mask: options.mask,
        readOnly: toBuffer.readOnly
      };

      if (this._deflating) {
        this.enqueue([this.dispatch, buf, this._compress, opts, cb]);
      } else {
        this.dispatch(buf, this._compress, opts, cb);
      }
    } else {
      this.sendFrame(
        Sender.frame(buf, {
          fin: options.fin,
          rsv1: false,
          opcode,
          mask: options.mask,
          readOnly: toBuffer.readOnly
        }),
        cb
      );
    }
  }

  /**
   * Dispatches a data message.
   *
   * @param {Buffer} data The message to send
   * @param {Boolean} compress Specifies whether or not to compress `data`
   * @param {Object} options Options object
   * @param {Number} options.opcode The opcode
   * @param {Boolean} options.readOnly Specifies whether `data` can be modified
   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit
   * @param {Boolean} options.mask Specifies whether or not to mask `data`
   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit
   * @param {Function} cb Callback
   * @private
   */
  dispatch(data, compress, options, cb) {
    if (!compress) {
      this.sendFrame(Sender.frame(data, options), cb);
      return;
    }

    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];

    this._deflating = true;
    perMessageDeflate.compress(data, options.fin, (_, buf) => {
      this._deflating = false;
      options.readOnly = false;
      this.sendFrame(Sender.frame(buf, options), cb);
      this.dequeue();
    });
  }

  /**
   * Executes queued send operations.
   *
   * @private
   */
  dequeue() {
    while (!this._deflating && this._queue.length) {
      const params = this._queue.shift();

      this._bufferedBytes -= params[1].length;
      params[0].apply(this, params.slice(1));
    }
  }

  /**
   * Enqueues a send operation.
   *
   * @param {Array} params Send operation parameters.
   * @private
   */
  enqueue(params) {
    this._bufferedBytes += params[1].length;
    this._queue.push(params);
  }

  /**
   * Sends a frame.
   *
   * @param {Buffer[]} list The frame to send
   * @param {Function} cb Callback
   * @private
   */
  sendFrame(list, cb) {
    if (list.length === 2) {
      this._socket.cork();
      this._socket.write(list[0]);
      this._socket.write(list[1], cb);
      this._socket.uncork();
    } else {
      this._socket.write(list[0], cb);
    }
  }
}

module.exports = Sender;


/***/ }),

/***/ 279:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


try {
  const isValidUTF8 = __nccwpck_require__(275);

  exports.isValidUTF8 =
    typeof isValidUTF8 === 'object'
      ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0
      : isValidUTF8;
} catch (e) /* istanbul ignore next */ {
  exports.isValidUTF8 = () => true;
}

/**
 * Checks if a status code is allowed in a close frame.
 *
 * @param {Number} code The status code
 * @return {Boolean} `true` if the status code is valid, else `false`
 * @public
 */
exports.isValidStatusCode = (code) => {
  return (
    (code >= 1000 &&
      code <= 1013 &&
      code !== 1004 &&
      code !== 1005 &&
      code !== 1006) ||
    (code >= 3000 && code <= 4999)
  );
};


/***/ }),

/***/ 800:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const EventEmitter = __nccwpck_require__(614);
const crypto = __nccwpck_require__(417);
const http = __nccwpck_require__(605);

const PerMessageDeflate = __nccwpck_require__(841);
const extension = __nccwpck_require__(997);
const WebSocket = __nccwpck_require__(189);
const { GUID } = __nccwpck_require__(879);

const keyRegex = /^[+/0-9A-Za-z]{22}==$/;

/**
 * Class representing a WebSocket server.
 *
 * @extends EventEmitter
 */
class WebSocketServer extends EventEmitter {
  /**
   * Create a `WebSocketServer` instance.
   *
   * @param {Object} options Configuration options
   * @param {Number} options.backlog The maximum length of the queue of pending
   *     connections
   * @param {Boolean} options.clientTracking Specifies whether or not to track
   *     clients
   * @param {Function} options.handleProtocols An hook to handle protocols
   * @param {String} options.host The hostname where to bind the server
   * @param {Number} options.maxPayload The maximum allowed message size
   * @param {Boolean} options.noServer Enable no server mode
   * @param {String} options.path Accept only connections matching this path
   * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable
   *     permessage-deflate
   * @param {Number} options.port The port where to bind the server
   * @param {http.Server} options.server A pre-created HTTP/S server to use
   * @param {Function} options.verifyClient An hook to reject connections
   * @param {Function} callback A listener for the `listening` event
   */
  constructor(options, callback) {
    super();

    options = Object.assign(
      {
        maxPayload: 100 * 1024 * 1024,
        perMessageDeflate: false,
        handleProtocols: null,
        clientTracking: true,
        verifyClient: null,
        noServer: false,
        backlog: null, // use default (511 as implemented in net.js)
        server: null,
        host: null,
        path: null,
        port: null
      },
      options
    );

    if (options.port == null && !options.server && !options.noServer) {
      throw new TypeError(
        'One of the "port", "server", or "noServer" options must be specified'
      );
    }

    if (options.port != null) {
      this._server = http.createServer((req, res) => {
        const body = http.STATUS_CODES[426];

        res.writeHead(426, {
          'Content-Length': body.length,
          'Content-Type': 'text/plain'
        });
        res.end(body);
      });
      this._server.listen(
        options.port,
        options.host,
        options.backlog,
        callback
      );
    } else if (options.server) {
      this._server = options.server;
    }

    if (this._server) {
      this._removeListeners = addListeners(this._server, {
        listening: this.emit.bind(this, 'listening'),
        error: this.emit.bind(this, 'error'),
        upgrade: (req, socket, head) => {
          this.handleUpgrade(req, socket, head, (ws) => {
            this.emit('connection', ws, req);
          });
        }
      });
    }

    if (options.perMessageDeflate === true) options.perMessageDeflate = {};
    if (options.clientTracking) this.clients = new Set();
    this.options = options;
  }

  /**
   * Returns the bound address, the address family name, and port of the server
   * as reported by the operating system if listening on an IP socket.
   * If the server is listening on a pipe or UNIX domain socket, the name is
   * returned as a string.
   *
   * @return {(Object|String|null)} The address of the server
   * @public
   */
  address() {
    if (this.options.noServer) {
      throw new Error('The server is operating in "noServer" mode');
    }

    if (!this._server) return null;
    return this._server.address();
  }

  /**
   * Close the server.
   *
   * @param {Function} cb Callback
   * @public
   */
  close(cb) {
    if (cb) this.once('close', cb);

    //
    // Terminate all associated clients.
    //
    if (this.clients) {
      for (const client of this.clients) client.terminate();
    }

    const server = this._server;

    if (server) {
      this._removeListeners();
      this._removeListeners = this._server = null;

      //
      // Close the http server if it was internally created.
      //
      if (this.options.port != null) {
        server.close(() => this.emit('close'));
        return;
      }
    }

    process.nextTick(emitClose, this);
  }

  /**
   * See if a given request should be handled by this server instance.
   *
   * @param {http.IncomingMessage} req Request object to inspect
   * @return {Boolean} `true` if the request is valid, else `false`
   * @public
   */
  shouldHandle(req) {
    if (this.options.path) {
      const index = req.url.indexOf('?');
      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;

      if (pathname !== this.options.path) return false;
    }

    return true;
  }

  /**
   * Handle a HTTP Upgrade request.
   *
   * @param {http.IncomingMessage} req The request object
   * @param {net.Socket} socket The network socket between the server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Function} cb Callback
   * @public
   */
  handleUpgrade(req, socket, head, cb) {
    socket.on('error', socketOnError);

    const key =
      req.headers['sec-websocket-key'] !== undefined
        ? req.headers['sec-websocket-key'].trim()
        : false;
    const version = +req.headers['sec-websocket-version'];
    const extensions = {};

    if (
      req.method !== 'GET' ||
      req.headers.upgrade.toLowerCase() !== 'websocket' ||
      !key ||
      !keyRegex.test(key) ||
      (version !== 8 && version !== 13) ||
      !this.shouldHandle(req)
    ) {
      return abortHandshake(socket, 400);
    }

    if (this.options.perMessageDeflate) {
      const perMessageDeflate = new PerMessageDeflate(
        this.options.perMessageDeflate,
        true,
        this.options.maxPayload
      );

      try {
        const offers = extension.parse(req.headers['sec-websocket-extensions']);

        if (offers[PerMessageDeflate.extensionName]) {
          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);
          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;
        }
      } catch (err) {
        return abortHandshake(socket, 400);
      }
    }

    //
    // Optionally call external client verification handler.
    //
    if (this.options.verifyClient) {
      const info = {
        origin:
          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],
        secure: !!(req.connection.authorized || req.connection.encrypted),
        req
      };

      if (this.options.verifyClient.length === 2) {
        this.options.verifyClient(info, (verified, code, message, headers) => {
          if (!verified) {
            return abortHandshake(socket, code || 401, message, headers);
          }

          this.completeUpgrade(key, extensions, req, socket, head, cb);
        });
        return;
      }

      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);
    }

    this.completeUpgrade(key, extensions, req, socket, head, cb);
  }

  /**
   * Upgrade the connection to WebSocket.
   *
   * @param {String} key The value of the `Sec-WebSocket-Key` header
   * @param {Object} extensions The accepted extensions
   * @param {http.IncomingMessage} req The request object
   * @param {net.Socket} socket The network socket between the server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Function} cb Callback
   * @private
   */
  completeUpgrade(key, extensions, req, socket, head, cb) {
    //
    // Destroy the socket if the client has already sent a FIN packet.
    //
    if (!socket.readable || !socket.writable) return socket.destroy();

    const digest = crypto
      .createHash('sha1')
      .update(key + GUID)
      .digest('base64');

    const headers = [
      'HTTP/1.1 101 Switching Protocols',
      'Upgrade: websocket',
      'Connection: Upgrade',
      `Sec-WebSocket-Accept: ${digest}`
    ];

    const ws = new WebSocket(null);
    var protocol = req.headers['sec-websocket-protocol'];

    if (protocol) {
      protocol = protocol.trim().split(/ *, */);

      //
      // Optionally call external protocol selection handler.
      //
      if (this.options.handleProtocols) {
        protocol = this.options.handleProtocols(protocol, req);
      } else {
        protocol = protocol[0];
      }

      if (protocol) {
        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);
        ws.protocol = protocol;
      }
    }

    if (extensions[PerMessageDeflate.extensionName]) {
      const params = extensions[PerMessageDeflate.extensionName].params;
      const value = extension.format({
        [PerMessageDeflate.extensionName]: [params]
      });
      headers.push(`Sec-WebSocket-Extensions: ${value}`);
      ws._extensions = extensions;
    }

    //
    // Allow external modification/inspection of handshake headers.
    //
    this.emit('headers', headers, req);

    socket.write(headers.concat('\r\n').join('\r\n'));
    socket.removeListener('error', socketOnError);

    ws.setSocket(socket, head, this.options.maxPayload);

    if (this.clients) {
      this.clients.add(ws);
      ws.on('close', () => this.clients.delete(ws));
    }

    cb(ws);
  }
}

module.exports = WebSocketServer;

/**
 * Add event listeners on an `EventEmitter` using a map of <event, listener>
 * pairs.
 *
 * @param {EventEmitter} server The event emitter
 * @param {Object.<String, Function>} map The listeners to add
 * @return {Function} A function that will remove the added listeners when called
 * @private
 */
function addListeners(server, map) {
  for (const event of Object.keys(map)) server.on(event, map[event]);

  return function removeListeners() {
    for (const event of Object.keys(map)) {
      server.removeListener(event, map[event]);
    }
  };
}

/**
 * Emit a `'close'` event on an `EventEmitter`.
 *
 * @param {EventEmitter} server The event emitter
 * @private
 */
function emitClose(server) {
  server.emit('close');
}

/**
 * Handle premature socket errors.
 *
 * @private
 */
function socketOnError() {
  this.destroy();
}

/**
 * Close the connection when preconditions are not fulfilled.
 *
 * @param {net.Socket} socket The socket of the upgrade request
 * @param {Number} code The HTTP response status code
 * @param {String} [message] The HTTP response body
 * @param {Object} [headers] Additional HTTP response headers
 * @private
 */
function abortHandshake(socket, code, message, headers) {
  if (socket.writable) {
    message = message || http.STATUS_CODES[code];
    headers = Object.assign(
      {
        Connection: 'close',
        'Content-type': 'text/html',
        'Content-Length': Buffer.byteLength(message)
      },
      headers
    );

    socket.write(
      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\r\n` +
        Object.keys(headers)
          .map((h) => `${h}: ${headers[h]}`)
          .join('\r\n') +
        '\r\n\r\n' +
        message
    );
  }

  socket.removeListener('error', socketOnError);
  socket.destroy();
}


/***/ }),

/***/ 189:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const EventEmitter = __nccwpck_require__(614);
const crypto = __nccwpck_require__(417);
const https = __nccwpck_require__(211);
const http = __nccwpck_require__(605);
const net = __nccwpck_require__(631);
const tls = __nccwpck_require__(16);
const url = __nccwpck_require__(835);

const PerMessageDeflate = __nccwpck_require__(841);
const EventTarget = __nccwpck_require__(839);
const extension = __nccwpck_require__(997);
const Receiver = __nccwpck_require__(278);
const Sender = __nccwpck_require__(902);
const {
  BINARY_TYPES,
  EMPTY_BUFFER,
  GUID,
  kStatusCode,
  kWebSocket,
  NOOP
} = __nccwpck_require__(879);

const readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];
const protocolVersions = [8, 13];
const closeTimeout = 30 * 1000;

/**
 * Class representing a WebSocket.
 *
 * @extends EventEmitter
 */
class WebSocket extends EventEmitter {
  /**
   * Create a new `WebSocket`.
   *
   * @param {(String|url.Url|url.URL)} address The URL to which to connect
   * @param {(String|String[])} protocols The subprotocols
   * @param {Object} options Connection options
   */
  constructor(address, protocols, options) {
    super();

    this.readyState = WebSocket.CONNECTING;
    this.protocol = '';

    this._binaryType = BINARY_TYPES[0];
    this._closeFrameReceived = false;
    this._closeFrameSent = false;
    this._closeMessage = '';
    this._closeTimer = null;
    this._closeCode = 1006;
    this._extensions = {};
    this._receiver = null;
    this._sender = null;
    this._socket = null;

    if (address !== null) {
      this._isServer = false;
      this._redirects = 0;

      if (Array.isArray(protocols)) {
        protocols = protocols.join(', ');
      } else if (typeof protocols === 'object' && protocols !== null) {
        options = protocols;
        protocols = undefined;
      }

      initAsClient(this, address, protocols, options);
    } else {
      this._isServer = true;
    }
  }

  get CONNECTING() {
    return WebSocket.CONNECTING;
  }
  get CLOSING() {
    return WebSocket.CLOSING;
  }
  get CLOSED() {
    return WebSocket.CLOSED;
  }
  get OPEN() {
    return WebSocket.OPEN;
  }

  /**
   * This deviates from the WHATWG interface since ws doesn't support the
   * required default "blob" type (instead we define a custom "nodebuffer"
   * type).
   *
   * @type {String}
   */
  get binaryType() {
    return this._binaryType;
  }

  set binaryType(type) {
    if (!BINARY_TYPES.includes(type)) return;

    this._binaryType = type;

    //
    // Allow to change `binaryType` on the fly.
    //
    if (this._receiver) this._receiver._binaryType = type;
  }

  /**
   * @type {Number}
   */
  get bufferedAmount() {
    if (!this._socket) return 0;

    //
    // `socket.bufferSize` is `undefined` if the socket is closed.
    //
    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;
  }

  /**
   * @type {String}
   */
  get extensions() {
    return Object.keys(this._extensions).join();
  }

  /**
   * Set up the socket and the internal resources.
   *
   * @param {net.Socket} socket The network socket between the server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Number} maxPayload The maximum allowed message size
   * @private
   */
  setSocket(socket, head, maxPayload) {
    const receiver = new Receiver(
      this._binaryType,
      this._extensions,
      maxPayload
    );

    this._sender = new Sender(socket, this._extensions);
    this._receiver = receiver;
    this._socket = socket;

    receiver[kWebSocket] = this;
    socket[kWebSocket] = this;

    receiver.on('conclude', receiverOnConclude);
    receiver.on('drain', receiverOnDrain);
    receiver.on('error', receiverOnError);
    receiver.on('message', receiverOnMessage);
    receiver.on('ping', receiverOnPing);
    receiver.on('pong', receiverOnPong);

    socket.setTimeout(0);
    socket.setNoDelay();

    if (head.length > 0) socket.unshift(head);

    socket.on('close', socketOnClose);
    socket.on('data', socketOnData);
    socket.on('end', socketOnEnd);
    socket.on('error', socketOnError);

    this.readyState = WebSocket.OPEN;
    this.emit('open');
  }

  /**
   * Emit the `'close'` event.
   *
   * @private
   */
  emitClose() {
    this.readyState = WebSocket.CLOSED;

    if (!this._socket) {
      this.emit('close', this._closeCode, this._closeMessage);
      return;
    }

    if (this._extensions[PerMessageDeflate.extensionName]) {
      this._extensions[PerMessageDeflate.extensionName].cleanup();
    }

    this._receiver.removeAllListeners();
    this.emit('close', this._closeCode, this._closeMessage);
  }

  /**
   * Start a closing handshake.
   *
   *          +----------+   +-----------+   +----------+
   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -
   *    |     +----------+   +-----------+   +----------+     |
   *          +----------+   +-----------+         |
   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING
   *          +----------+   +-----------+   |
   *    |           |                        |   +---+        |
   *                +------------------------+-->|fin| - - - -
   *    |         +---+                      |   +---+
   *     - - - - -|fin|<---------------------+
   *              +---+
   *
   * @param {Number} code Status code explaining why the connection is closing
   * @param {String} data A string explaining why the connection is closing
   * @public
   */
  close(code, data) {
    if (this.readyState === WebSocket.CLOSED) return;
    if (this.readyState === WebSocket.CONNECTING) {
      const msg = 'WebSocket was closed before the connection was established';
      return abortHandshake(this, this._req, msg);
    }

    if (this.readyState === WebSocket.CLOSING) {
      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();
      return;
    }

    this.readyState = WebSocket.CLOSING;
    this._sender.close(code, data, !this._isServer, (err) => {
      //
      // This error is handled by the `'error'` listener on the socket. We only
      // want to know if the close frame has been sent here.
      //
      if (err) return;

      this._closeFrameSent = true;
      if (this._closeFrameReceived) this._socket.end();
    });

    //
    // Specify a timeout for the closing handshake to complete.
    //
    this._closeTimer = setTimeout(
      this._socket.destroy.bind(this._socket),
      closeTimeout
    );
  }

  /**
   * Send a ping.
   *
   * @param {*} data The data to send
   * @param {Boolean} mask Indicates whether or not to mask `data`
   * @param {Function} cb Callback which is executed when the ping is sent
   * @public
   */
  ping(data, mask, cb) {
    if (typeof data === 'function') {
      cb = data;
      data = mask = undefined;
    } else if (typeof mask === 'function') {
      cb = mask;
      mask = undefined;
    }

    if (this.readyState !== WebSocket.OPEN) {
      const err = new Error(
        `WebSocket is not open: readyState ${this.readyState} ` +
          `(${readyStates[this.readyState]})`
      );

      if (cb) return cb(err);
      throw err;
    }

    if (typeof data === 'number') data = data.toString();
    if (mask === undefined) mask = !this._isServer;
    this._sender.ping(data || EMPTY_BUFFER, mask, cb);
  }

  /**
   * Send a pong.
   *
   * @param {*} data The data to send
   * @param {Boolean} mask Indicates whether or not to mask `data`
   * @param {Function} cb Callback which is executed when the pong is sent
   * @public
   */
  pong(data, mask, cb) {
    if (typeof data === 'function') {
      cb = data;
      data = mask = undefined;
    } else if (typeof mask === 'function') {
      cb = mask;
      mask = undefined;
    }

    if (this.readyState !== WebSocket.OPEN) {
      const err = new Error(
        `WebSocket is not open: readyState ${this.readyState} ` +
          `(${readyStates[this.readyState]})`
      );

      if (cb) return cb(err);
      throw err;
    }

    if (typeof data === 'number') data = data.toString();
    if (mask === undefined) mask = !this._isServer;
    this._sender.pong(data || EMPTY_BUFFER, mask, cb);
  }

  /**
   * Send a data message.
   *
   * @param {*} data The message to send
   * @param {Object} options Options object
   * @param {Boolean} options.compress Specifies whether or not to compress `data`
   * @param {Boolean} options.binary Specifies whether `data` is binary or text
   * @param {Boolean} options.fin Specifies whether the fragment is the last one
   * @param {Boolean} options.mask Specifies whether or not to mask `data`
   * @param {Function} cb Callback which is executed when data is written out
   * @public
   */
  send(data, options, cb) {
    if (typeof options === 'function') {
      cb = options;
      options = {};
    }

    if (this.readyState !== WebSocket.OPEN) {
      const err = new Error(
        `WebSocket is not open: readyState ${this.readyState} ` +
          `(${readyStates[this.readyState]})`
      );

      if (cb) return cb(err);
      throw err;
    }

    if (typeof data === 'number') data = data.toString();

    const opts = Object.assign(
      {
        binary: typeof data !== 'string',
        mask: !this._isServer,
        compress: true,
        fin: true
      },
      options
    );

    if (!this._extensions[PerMessageDeflate.extensionName]) {
      opts.compress = false;
    }

    this._sender.send(data || EMPTY_BUFFER, opts, cb);
  }

  /**
   * Forcibly close the connection.
   *
   * @public
   */
  terminate() {
    if (this.readyState === WebSocket.CLOSED) return;
    if (this.readyState === WebSocket.CONNECTING) {
      const msg = 'WebSocket was closed before the connection was established';
      return abortHandshake(this, this._req, msg);
    }

    if (this._socket) {
      this.readyState = WebSocket.CLOSING;
      this._socket.destroy();
    }
  }
}

readyStates.forEach((readyState, i) => {
  WebSocket[readyState] = i;
});

//
// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.
// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface
//
['open', 'error', 'close', 'message'].forEach((method) => {
  Object.defineProperty(WebSocket.prototype, `on${method}`, {
    /**
     * Return the listener of the event.
     *
     * @return {(Function|undefined)} The event listener or `undefined`
     * @public
     */
    get() {
      const listeners = this.listeners(method);
      for (var i = 0; i < listeners.length; i++) {
        if (listeners[i]._listener) return listeners[i]._listener;
      }

      return undefined;
    },
    /**
     * Add a listener for the event.
     *
     * @param {Function} listener The listener to add
     * @public
     */
    set(listener) {
      const listeners = this.listeners(method);
      for (var i = 0; i < listeners.length; i++) {
        //
        // Remove only the listeners added via `addEventListener`.
        //
        if (listeners[i]._listener) this.removeListener(method, listeners[i]);
      }
      this.addEventListener(method, listener);
    }
  });
});

WebSocket.prototype.addEventListener = EventTarget.addEventListener;
WebSocket.prototype.removeEventListener = EventTarget.removeEventListener;

module.exports = WebSocket;

/**
 * Initialize a WebSocket client.
 *
 * @param {WebSocket} websocket The client to initialize
 * @param {(String|url.Url|url.URL)} address The URL to which to connect
 * @param {String} protocols The subprotocols
 * @param {Object} options Connection options
 * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable
 *     permessage-deflate
 * @param {Number} options.handshakeTimeout Timeout in milliseconds for the
 *     handshake request
 * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version`
 *     header
 * @param {String} options.origin Value of the `Origin` or
 *     `Sec-WebSocket-Origin` header
 * @param {Number} options.maxPayload The maximum allowed message size
 * @param {Boolean} options.followRedirects Whether or not to follow redirects
 * @param {Number} options.maxRedirects The maximum number of redirects allowed
 * @private
 */
function initAsClient(websocket, address, protocols, options) {
  const opts = Object.assign(
    {
      protocolVersion: protocolVersions[1],
      maxPayload: 100 * 1024 * 1024,
      perMessageDeflate: true,
      followRedirects: false,
      maxRedirects: 10
    },
    options,
    {
      createConnection: undefined,
      socketPath: undefined,
      hostname: undefined,
      protocol: undefined,
      timeout: undefined,
      method: undefined,
      auth: undefined,
      host: undefined,
      path: undefined,
      port: undefined
    }
  );

  if (!protocolVersions.includes(opts.protocolVersion)) {
    throw new RangeError(
      `Unsupported protocol version: ${opts.protocolVersion} ` +
        `(supported versions: ${protocolVersions.join(', ')})`
    );
  }

  var parsedUrl;

  if (typeof address === 'object' && address.href !== undefined) {
    parsedUrl = address;
    websocket.url = address.href;
  } else {
    //
    // The WHATWG URL constructor is not available on Node.js < 6.13.0
    //
    parsedUrl = url.URL ? new url.URL(address) : url.parse(address);
    websocket.url = address;
  }

  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';

  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {
    throw new Error(`Invalid URL: ${websocket.url}`);
  }

  const isSecure =
    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';
  const defaultPort = isSecure ? 443 : 80;
  const key = crypto.randomBytes(16).toString('base64');
  const get = isSecure ? https.get : http.get;
  const path = parsedUrl.search
    ? `${parsedUrl.pathname || '/'}${parsedUrl.search}`
    : parsedUrl.pathname || '/';
  var perMessageDeflate;

  opts.createConnection = isSecure ? tlsConnect : netConnect;
  opts.defaultPort = opts.defaultPort || defaultPort;
  opts.port = parsedUrl.port || defaultPort;
  opts.host = parsedUrl.hostname.startsWith('[')
    ? parsedUrl.hostname.slice(1, -1)
    : parsedUrl.hostname;
  opts.headers = Object.assign(
    {
      'Sec-WebSocket-Version': opts.protocolVersion,
      'Sec-WebSocket-Key': key,
      Connection: 'Upgrade',
      Upgrade: 'websocket'
    },
    opts.headers
  );
  opts.path = path;
  opts.timeout = opts.handshakeTimeout;

  if (opts.perMessageDeflate) {
    perMessageDeflate = new PerMessageDeflate(
      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},
      false,
      opts.maxPayload
    );
    opts.headers['Sec-WebSocket-Extensions'] = extension.format({
      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()
    });
  }
  if (protocols) {
    opts.headers['Sec-WebSocket-Protocol'] = protocols;
  }
  if (opts.origin) {
    if (opts.protocolVersion < 13) {
      opts.headers['Sec-WebSocket-Origin'] = opts.origin;
    } else {
      opts.headers.Origin = opts.origin;
    }
  }
  if (parsedUrl.auth) {
    opts.auth = parsedUrl.auth;
  } else if (parsedUrl.username || parsedUrl.password) {
    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;
  }

  if (isUnixSocket) {
    const parts = path.split(':');

    opts.socketPath = parts[0];
    opts.path = parts[1];
  }

  var req = (websocket._req = get(opts));

  if (opts.timeout) {
    req.on('timeout', () => {
      abortHandshake(websocket, req, 'Opening handshake has timed out');
    });
  }

  req.on('error', (err) => {
    if (websocket._req.aborted) return;

    req = websocket._req = null;
    websocket.readyState = WebSocket.CLOSING;
    websocket.emit('error', err);
    websocket.emitClose();
  });

  req.on('response', (res) => {
    const location = res.headers.location;
    const statusCode = res.statusCode;

    if (
      location &&
      opts.followRedirects &&
      statusCode >= 300 &&
      statusCode < 400
    ) {
      if (++websocket._redirects > opts.maxRedirects) {
        abortHandshake(websocket, req, 'Maximum redirects exceeded');
        return;
      }

      req.abort();

      const addr = url.URL
        ? new url.URL(location, address)
        : url.resolve(address, location);

      initAsClient(websocket, addr, protocols, options);
    } else if (!websocket.emit('unexpected-response', req, res)) {
      abortHandshake(
        websocket,
        req,
        `Unexpected server response: ${res.statusCode}`
      );
    }
  });

  req.on('upgrade', (res, socket, head) => {
    websocket.emit('upgrade', res);

    //
    // The user may have closed the connection from a listener of the `upgrade`
    // event.
    //
    if (websocket.readyState !== WebSocket.CONNECTING) return;

    req = websocket._req = null;

    const digest = crypto
      .createHash('sha1')
      .update(key + GUID)
      .digest('base64');

    if (res.headers['sec-websocket-accept'] !== digest) {
      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');
      return;
    }

    const serverProt = res.headers['sec-websocket-protocol'];
    const protList = (protocols || '').split(/, */);
    var protError;

    if (!protocols && serverProt) {
      protError = 'Server sent a subprotocol but none was requested';
    } else if (protocols && !serverProt) {
      protError = 'Server sent no subprotocol';
    } else if (serverProt && !protList.includes(serverProt)) {
      protError = 'Server sent an invalid subprotocol';
    }

    if (protError) {
      abortHandshake(websocket, socket, protError);
      return;
    }

    if (serverProt) websocket.protocol = serverProt;

    if (perMessageDeflate) {
      try {
        const extensions = extension.parse(
          res.headers['sec-websocket-extensions']
        );

        if (extensions[PerMessageDeflate.extensionName]) {
          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);
          websocket._extensions[
            PerMessageDeflate.extensionName
          ] = perMessageDeflate;
        }
      } catch (err) {
        abortHandshake(
          websocket,
          socket,
          'Invalid Sec-WebSocket-Extensions header'
        );
        return;
      }
    }

    websocket.setSocket(socket, head, opts.maxPayload);
  });
}

/**
 * Create a `net.Socket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {net.Socket} The newly created socket used to start the connection
 * @private
 */
function netConnect(options) {
  //
  // Override `options.path` only if `options` is a copy of the original options
  // object. This is always true on Node.js >= 8 but not on Node.js 6 where
  // `options.socketPath` might be `undefined` even if the `socketPath` option
  // was originally set.
  //
  if (options.protocolVersion) options.path = options.socketPath;
  return net.connect(options);
}

/**
 * Create a `tls.TLSSocket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {tls.TLSSocket} The newly created socket used to start the connection
 * @private
 */
function tlsConnect(options) {
  options.path = undefined;
  options.servername = options.servername || options.host;
  return tls.connect(options);
}

/**
 * Abort the handshake and emit an error.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {(http.ClientRequest|net.Socket)} stream The request to abort or the
 *     socket to destroy
 * @param {String} message The error message
 * @private
 */
function abortHandshake(websocket, stream, message) {
  websocket.readyState = WebSocket.CLOSING;

  const err = new Error(message);
  Error.captureStackTrace(err, abortHandshake);

  if (stream.setHeader) {
    stream.abort();
    stream.once('abort', websocket.emitClose.bind(websocket));
    websocket.emit('error', err);
  } else {
    stream.destroy(err);
    stream.once('error', websocket.emit.bind(websocket, 'error'));
    stream.once('close', websocket.emitClose.bind(websocket));
  }
}

/**
 * The listener of the `Receiver` `'conclude'` event.
 *
 * @param {Number} code The status code
 * @param {String} reason The reason for closing
 * @private
 */
function receiverOnConclude(code, reason) {
  const websocket = this[kWebSocket];

  websocket._socket.removeListener('data', socketOnData);
  websocket._socket.resume();

  websocket._closeFrameReceived = true;
  websocket._closeMessage = reason;
  websocket._closeCode = code;

  if (code === 1005) websocket.close();
  else websocket.close(code, reason);
}

/**
 * The listener of the `Receiver` `'drain'` event.
 *
 * @private
 */
function receiverOnDrain() {
  this[kWebSocket]._socket.resume();
}

/**
 * The listener of the `Receiver` `'error'` event.
 *
 * @param {(RangeError|Error)} err The emitted error
 * @private
 */
function receiverOnError(err) {
  const websocket = this[kWebSocket];

  websocket._socket.removeListener('data', socketOnData);

  websocket.readyState = WebSocket.CLOSING;
  websocket._closeCode = err[kStatusCode];
  websocket.emit('error', err);
  websocket._socket.destroy();
}

/**
 * The listener of the `Receiver` `'finish'` event.
 *
 * @private
 */
function receiverOnFinish() {
  this[kWebSocket].emitClose();
}

/**
 * The listener of the `Receiver` `'message'` event.
 *
 * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message
 * @private
 */
function receiverOnMessage(data) {
  this[kWebSocket].emit('message', data);
}

/**
 * The listener of the `Receiver` `'ping'` event.
 *
 * @param {Buffer} data The data included in the ping frame
 * @private
 */
function receiverOnPing(data) {
  const websocket = this[kWebSocket];

  websocket.pong(data, !websocket._isServer, NOOP);
  websocket.emit('ping', data);
}

/**
 * The listener of the `Receiver` `'pong'` event.
 *
 * @param {Buffer} data The data included in the pong frame
 * @private
 */
function receiverOnPong(data) {
  this[kWebSocket].emit('pong', data);
}

/**
 * The listener of the `net.Socket` `'close'` event.
 *
 * @private
 */
function socketOnClose() {
  const websocket = this[kWebSocket];

  this.removeListener('close', socketOnClose);
  this.removeListener('end', socketOnEnd);

  websocket.readyState = WebSocket.CLOSING;

  //
  // The close frame might not have been received or the `'end'` event emitted,
  // for example, if the socket was destroyed due to an error. Ensure that the
  // `receiver` stream is closed after writing any remaining buffered data to
  // it. If the readable side of the socket is in flowing mode then there is no
  // buffered data as everything has been already written and `readable.read()`
  // will return `null`. If instead, the socket is paused, any possible buffered
  // data will be read as a single chunk and emitted synchronously in a single
  // `'data'` event.
  //
  websocket._socket.read();
  websocket._receiver.end();

  this.removeListener('data', socketOnData);
  this[kWebSocket] = undefined;

  clearTimeout(websocket._closeTimer);

  if (
    websocket._receiver._writableState.finished ||
    websocket._receiver._writableState.errorEmitted
  ) {
    websocket.emitClose();
  } else {
    websocket._receiver.on('error', receiverOnFinish);
    websocket._receiver.on('finish', receiverOnFinish);
  }
}

/**
 * The listener of the `net.Socket` `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function socketOnData(chunk) {
  if (!this[kWebSocket]._receiver.write(chunk)) {
    this.pause();
  }
}

/**
 * The listener of the `net.Socket` `'end'` event.
 *
 * @private
 */
function socketOnEnd() {
  const websocket = this[kWebSocket];

  websocket.readyState = WebSocket.CLOSING;
  websocket._receiver.end();
  this.end();
}

/**
 * The listener of the `net.Socket` `'error'` event.
 *
 * @private
 */
function socketOnError() {
  const websocket = this[kWebSocket];

  this.removeListener('error', socketOnError);
  this.on('error', NOOP);

  websocket.readyState = WebSocket.CLOSING;
  this.destroy();
}


/***/ }),

/***/ 412:
/***/ ((module) => {

module.exports = eval("require")("bufferutil");


/***/ }),

/***/ 431:
/***/ ((module) => {

module.exports = eval("require")("encoding");


/***/ }),

/***/ 275:
/***/ ((module) => {

module.exports = eval("require")("utf-8-validate");


/***/ }),

/***/ 417:
/***/ ((module) => {

"use strict";
module.exports = require("crypto");;

/***/ }),

/***/ 614:
/***/ ((module) => {

"use strict";
module.exports = require("events");;

/***/ }),

/***/ 747:
/***/ ((module) => {

"use strict";
module.exports = require("fs");;

/***/ }),

/***/ 605:
/***/ ((module) => {

"use strict";
module.exports = require("http");;

/***/ }),

/***/ 211:
/***/ ((module) => {

"use strict";
module.exports = require("https");;

/***/ }),

/***/ 631:
/***/ ((module) => {

"use strict";
module.exports = require("net");;

/***/ }),

/***/ 87:
/***/ ((module) => {

"use strict";
module.exports = require("os");;

/***/ }),

/***/ 622:
/***/ ((module) => {

"use strict";
module.exports = require("path");;

/***/ }),

/***/ 765:
/***/ ((module) => {

"use strict";
module.exports = require("process");;

/***/ }),

/***/ 413:
/***/ ((module) => {

"use strict";
module.exports = require("stream");;

/***/ }),

/***/ 16:
/***/ ((module) => {

"use strict";
module.exports = require("tls");;

/***/ }),

/***/ 867:
/***/ ((module) => {

"use strict";
module.exports = require("tty");;

/***/ }),

/***/ 835:
/***/ ((module) => {

"use strict";
module.exports = require("url");;

/***/ }),

/***/ 761:
/***/ ((module) => {

"use strict";
module.exports = require("zlib");;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + "/";/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __nccwpck_require__(212);
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;